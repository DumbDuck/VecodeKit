
package com.dumbduck.pictures;

import android.graphics.*;
import com.vecodekit.GraphicsPicture;

public class PictureAprilFool extends GraphicsPicture
{
    public PictureAprilFool()
    {
        super(new RectF(-794.15f, -943.9f, 1430.25f, 416.05f));
    }
    
    private static void def_path_0(Path path)
    {
        path.reset();
        path.moveTo(369.844f, 43.6411f);
        path.quadTo(368.294f, 41.4411f, 368.844f, 40.0911f);
        path.lineTo(365.394f, 39.6411f);
        path.lineTo(363.994f, 39.3911f);
        path.quadTo(363.994f, 42.4411f, 356.644f, 46.2911f);
        path.lineTo(364.594f, 48.6411f);
        path.lineTo(363.094f, 51.7911f);
        path.quadTo(367.494f, 49.8411f, 372.294f, 47.1911f);
        path.lineTo(369.844f, 43.6411f);
        path.close();
        path.moveTo(365.149f, 42.3521f);
        path.lineTo(365.899f, 42.2521f);
        path.lineTo(366.799f, 42.3521f);
        path.quadTo(366.799f, 43.5021f, 367.249f, 44.1521f);
        path.quadTo(366.999f, 44.8521f, 364.949f, 45.1021f);
        path.lineTo(364.949f, 44.4021f);
        path.quadTo(364.949f, 43.5021f, 365.099f, 42.8521f);
        path.lineTo(365.149f, 42.3521f);
        path.close();
        path.moveTo(361.466f, 45.1142f);
        path.lineTo(361.916f, 44.6642f);
        path.quadTo(363.416f, 43.7142f, 363.966f, 43.7142f);
        path.lineTo(363.966f, 44.1642f);
        path.quadTo(363.998f, 44.884f, 361.466f, 45.1142f);
        path.close();
        path.moveTo(364.596f, 48.5668f);
        path.lineTo(364.296f, 48.3168f);
        path.quadTo(363.996f, 48.1668f, 364.696f, 48.3168f);
        path.lineTo(364.596f, 48.5668f);
        path.close();
        path.moveTo(378.177f, 69.973f);
        path.quadTo(373.827f, 68.123f, 367.827f, 70.723f);
        path.quadTo(362.477f, 73.023f, 358.677f, 77.773f);
        path.lineTo(358.927f, 73.523f);
        path.lineTo(358.427f, 68.973f);
        path.quadTo(357.877f, 65.123f, 357.777f, 63.523f);
        path.quadTo(350.977f, 60.523f, 344.877f, 70.873f);
        path.quadTo(342.677f, 74.623f, 341.177f, 79.123f);
        path.quadTo(339.827f, 83.123f, 339.827f, 85.023f);
        path.lineTo(340.027f, 86.573f);
        path.lineTo(339.977f, 86.623f);
        path.lineTo(338.477f, 84.673f);
        path.quadTo(335.527f, 80.773f, 333.227f, 79.173f);
        path.lineTo(336.827f, 79.523f);
        path.quadTo(332.027f, 76.573f, 329.127f, 76.973f);
        path.quadTo(325.077f, 77.523f, 325.077f, 84.473f);
        path.lineTo(325.127f, 85.823f);
        path.lineTo(321.427f, 86.073f);
        path.quadTo(321.377f, 73.423f, 313.877f, 74.873f);
        path.quadTo(310.777f, 75.423f, 307.627f, 78.423f);
        path.quadTo(304.427f, 81.423f, 302.527f, 85.623f);
        path.quadTo(302.627f, 84.173f, 301.277f, 83.373f);
        path.quadTo(298.727f, 81.923f, 288.977f, 81.923f);
        path.quadTo(283.877f, 81.923f, 281.427f, 86.523f);
        path.quadTo(279.777f, 89.573f, 279.777f, 92.373f);
        path.lineTo(279.827f, 93.623f);
        path.quadTo(278.327f, 93.073f, 277.077f, 92.873f);
        path.quadTo(273.427f, 92.173f, 258.577f, 92.523f);
        path.quadTo(253.227f, 91.423f, 244.577f, 94.4731f);
        path.quadTo(236.827f, 97.173f, 228.427f, 102.523f);
        path.quadTo(220.327f, 107.623f, 214.777f, 113.123f);
        path.quadTo(208.977f, 118.873f, 208.377f, 122.673f);
        path.quadTo(218.827f, 109.123f, 229.427f, 102.723f);
        path.quadTo(244.177f, 93.923f, 265.277f, 93.923f);
        path.lineTo(273.977f, 94.523f);
        path.lineTo(279.927f, 94.923f);
        path.quadTo(280.227f, 97.323f, 281.127f, 98.973f);
        path.lineTo(282.077f, 98.723f);
        path.lineTo(280.827f, 94.973f);
        path.lineTo(282.977f, 95.073f);
        path.lineTo(280.527f, 93.923f);
        path.quadTo(279.877f, 91.423f, 280.227f, 89.723f);
        path.quadTo(281.277f, 84.223f, 293.027f, 84.223f);
        path.quadTo(298.927f, 84.223f, 301.377f, 87.673f);
        path.quadTo(302.777f, 89.623f, 302.777f, 91.823f);
        path.lineTo(302.577f, 94.923f);
        path.quadTo(302.927f, 96.623f, 305.527f, 98.523f);
        path.lineTo(306.477f, 98.123f);
        path.lineTo(306.677f, 96.323f);
        path.quadTo(306.677f, 95.173f, 305.677f, 90.973f);
        path.quadTo(304.627f, 86.773f, 304.627f, 85.623f);
        path.quadTo(304.627f, 84.173f, 307.427f, 81.473f);
        path.quadTo(311.177f, 77.773f, 316.827f, 77.773f);
        path.quadTo(318.327f, 77.773f, 318.827f, 80.273f);
        path.quadTo(319.127f, 81.673f, 319.127f, 84.473f);
        path.lineTo(318.827f, 88.423f);
        path.quadTo(318.627f, 91.123f, 318.877f, 92.773f);
        path.lineTo(320.727f, 92.773f);
        path.quadTo(321.127f, 91.923f, 321.377f, 90.373f);
        path.lineTo(321.627f, 87.923f);
        path.lineTo(325.327f, 87.823f);
        path.lineTo(325.327f, 87.923f);
        path.lineTo(325.827f, 87.773f);
        path.lineTo(329.227f, 87.673f);
        path.quadTo(332.427f, 87.673f, 333.877f, 92.273f);
        path.quadTo(334.777f, 95.173f, 334.777f, 98.123f);
        path.quadTo(334.777f, 101.973f, 333.277f, 104.423f);
        path.quadTo(330.477f, 109.023f, 322.577f, 110.473f);
        path.lineTo(323.277f, 111.173f);
        path.lineTo(325.777f, 111.623f);
        path.lineTo(328.677f, 111.373f);
        path.quadTo(328.027f, 115.923f, 327.427f, 118.073f);
        path.quadTo(325.977f, 122.923f, 323.627f, 122.923f);
        path.quadTo(319.927f, 122.923f, 319.227f, 118.223f);
        path.lineTo(318.877f, 112.573f);
        path.lineTo(317.727f, 112.573f);
        path.quadTo(317.077f, 113.323f, 316.527f, 115.773f);
        path.lineTo(315.427f, 120.173f);
        path.quadTo(314.177f, 123.823f, 311.427f, 125.073f);
        path.quadTo(306.277f, 117.023f, 298.677f, 108.023f);
        path.quadTo(302.027f, 106.773f, 305.077f, 106.123f);
        path.quadTo(301.877f, 106.023f, 297.977f, 107.273f);
        path.lineTo(294.927f, 103.823f);
        path.lineTo(294.927f, 104.023f);
        path.lineTo(297.577f, 107.373f);
        path.quadTo(296.177f, 107.823f, 294.677f, 108.423f);
        path.lineTo(294.027f, 108.423f);
        path.lineTo(294.227f, 108.573f);
        path.quadTo(288.927f, 110.823f, 282.477f, 114.973f);
        path.lineTo(282.077f, 115.273f);
        path.quadTo(278.777f, 111.923f, 275.277f, 109.273f);
        path.quadTo(265.227f, 101.773f, 258.927f, 105.323f);
        path.quadTo(251.427f, 109.523f, 251.427f, 128.423f);
        path.lineTo(252.477f, 133.973f);
        path.lineTo(253.727f, 138.923f);
        path.quadTo(250.527f, 142.373f, 250.777f, 144.773f);
        path.lineTo(251.677f, 144.523f);
        path.quadTo(252.327f, 142.723f, 254.277f, 140.573f);
        path.lineTo(255.427f, 143.773f);
        path.lineTo(254.777f, 141.423f);
        path.lineTo(254.527f, 140.323f);
        path.lineTo(256.927f, 138.073f);
        path.lineTo(257.927f, 141.573f);
        path.quadTo(259.427f, 146.173f, 261.377f, 149.773f);
        path.quadTo(252.827f, 151.073f, 246.977f, 157.823f);
        path.quadTo(242.077f, 153.023f, 236.027f, 149.723f);
        path.quadTo(226.027f, 144.173f, 219.277f, 146.173f);
        path.quadTo(211.627f, 148.373f, 211.627f, 159.723f);
        path.lineTo(212.127f, 166.023f);
        path.quadTo(212.627f, 169.623f, 213.527f, 172.973f);
        path.quadTo(209.827f, 168.723f, 207.127f, 164.023f);
        path.quadTo(203.827f, 158.373f, 202.177f, 152.273f);
        path.lineTo(201.977f, 150.623f);
        path.quadTo(203.327f, 140.173f, 207.627f, 131.273f);
        path.quadTo(215.527f, 114.823f, 233.927f, 101.973f);
        path.quadTo(214.727f, 112.273f, 206.277f, 129.923f);
        path.quadTo(202.827f, 137.123f, 201.277f, 145.573f);
        path.lineTo(201.027f, 143.873f);
        path.quadTo(201.027f, 140.623f, 202.627f, 134.173f);
        path.quadTo(201.277f, 135.923f, 200.477f, 142.123f);
        path.lineTo(200.477f, 142.273f);
        path.quadTo(200.327f, 140.523f, 200.327f, 138.773f);
        path.lineTo(200.677f, 131.723f);
        path.lineTo(200.827f, 122.223f);
        path.lineTo(200.127f, 122.223f);
        path.quadTo(200.127f, 125.523f, 199.627f, 131.923f);
        path.lineTo(199.127f, 139.023f);
        path.quadTo(199.127f, 143.973f, 199.977f, 148.623f);
        path.lineTo(199.877f, 152.223f);
        path.lineTo(200.177f, 153.773f);
        path.quadTo(199.877f, 157.173f, 199.877f, 160.773f);
        path.lineTo(200.077f, 167.423f);
        path.quadTo(193.977f, 166.723f, 190.227f, 169.423f);
        path.quadTo(185.977f, 172.423f, 185.977f, 177.323f);
        path.quadTo(185.977f, 185.123f, 182.677f, 188.923f);
        path.quadTo(180.877f, 190.973f, 180.377f, 191.973f);
        path.quadTo(179.327f, 194.123f, 179.327f, 197.723f);
        path.lineTo(185.977f, 209.373f);
        path.quadTo(193.527f, 220.573f, 198.527f, 220.723f);
        path.quadTo(202.427f, 223.473f, 207.227f, 223.973f);
        path.quadTo(204.027f, 222.673f, 201.027f, 220.473f);
        path.quadTo(203.177f, 219.923f, 205.327f, 218.373f);
        path.quadTo(208.027f, 216.523f, 209.077f, 214.773f);
        path.lineTo(206.177f, 217.123f);
        path.quadTo(203.777f, 218.573f, 199.077f, 218.823f);
        path.lineTo(197.277f, 217.173f);
        path.quadTo(192.427f, 212.423f, 192.427f, 209.073f);
        path.quadTo(192.577f, 207.873f, 193.327f, 206.673f);
        path.quadTo(194.827f, 204.373f, 197.977f, 204.373f);
        path.quadTo(198.927f, 204.373f, 200.827f, 205.623f);
        path.quadTo(202.577f, 206.823f, 204.227f, 207.273f);
        path.lineTo(208.877f, 209.923f);
        path.quadTo(218.777f, 215.773f, 221.277f, 218.423f);
        path.quadTo(222.227f, 218.223f, 222.227f, 217.523f);
        path.quadTo(219.427f, 214.023f, 209.627f, 207.823f);
        path.quadTo(198.927f, 201.073f, 195.627f, 202.073f);
        path.lineTo(195.627f, 202.923f);
        path.lineTo(193.827f, 203.173f);
        path.quadTo(190.577f, 204.223f, 190.577f, 208.873f);
        path.quadTo(190.577f, 212.473f, 194.727f, 217.273f);
        path.lineTo(196.227f, 218.823f);
        path.quadTo(193.877f, 218.273f, 190.877f, 213.623f);
        path.quadTo(187.827f, 208.873f, 187.827f, 207.023f);
        path.lineTo(190.577f, 203.773f);
        path.quadTo(193.327f, 200.523f, 193.327f, 198.623f);
        path.quadTo(193.327f, 197.223f, 193.127f, 197.073f);
        path.lineTo(192.877f, 197.273f);
        path.lineTo(190.577f, 197.023f);
        path.quadTo(188.777f, 198.023f, 187.377f, 199.823f);
        path.quadTo(186.277f, 201.323f, 185.777f, 202.773f);
        path.quadTo(181.377f, 200.873f, 181.377f, 195.273f);
        path.quadTo(181.377f, 194.123f, 183.427f, 190.473f);
        path.quadTo(186.027f, 185.973f, 188.727f, 185.973f);
        path.quadTo(189.727f, 185.973f, 190.777f, 187.823f);
        path.quadTo(193.127f, 189.673f, 200.577f, 189.673f);
        path.quadTo(201.577f, 189.673f, 202.927f, 187.823f);
        path.quadTo(204.027f, 186.323f, 204.277f, 185.173f);
        path.quadTo(208.377f, 192.873f, 216.777f, 197.773f);
        path.quadTo(231.177f, 218.073f, 254.277f, 220.573f);
        path.lineTo(255.227f, 222.273f);
        path.quadTo(254.277f, 222.473f, 253.427f, 223.273f);
        path.lineTo(253.077f, 223.573f);
        path.quadTo(251.877f, 224.173f, 250.577f, 224.923f);
        path.lineTo(249.177f, 225.773f);
        path.lineTo(248.677f, 225.023f);
        path.quadTo(244.577f, 219.823f, 234.627f, 219.373f);
        path.lineTo(233.927f, 219.823f);
        path.quadTo(243.527f, 222.473f, 246.877f, 225.823f);
        path.lineTo(247.677f, 226.673f);
        path.lineTo(244.577f, 228.973f);
        path.lineTo(244.227f, 228.473f);
        path.quadTo(241.677f, 225.023f, 239.327f, 223.723f);
        path.lineTo(239.477f, 223.473f);
        path.lineTo(239.127f, 223.623f);
        path.quadTo(237.627f, 222.923f, 236.277f, 223.023f);
        path.quadTo(234.527f, 221.423f, 232.377f, 220.423f);
        path.quadTo(229.527f, 216.223f, 225.427f, 214.073f);
        path.lineTo(225.227f, 214.323f);
        path.quadTo(224.977f, 214.473f, 224.977f, 214.773f);
        path.quadTo(227.877f, 216.373f, 230.077f, 219.523f);
        path.lineTo(226.577f, 218.873f);
        path.quadTo(229.027f, 219.723f, 231.027f, 221.073f);
        path.quadTo(232.877f, 224.123f, 234.227f, 228.523f);
        path.lineTo(234.727f, 230.223f);
        path.quadTo(229.877f, 226.723f, 224.727f, 226.273f);
        path.quadTo(231.477f, 228.823f, 235.277f, 232.523f);
        path.quadTo(236.477f, 237.873f, 236.477f, 243.073f);
        path.quadTo(236.477f, 247.123f, 235.027f, 249.823f);
        path.lineTo(229.577f, 258.023f);
        path.lineTo(231.877f, 258.473f);
        path.quadTo(236.827f, 255.873f, 237.977f, 250.923f);
        path.lineTo(238.277f, 247.073f);
        path.lineTo(240.627f, 247.573f);
        path.lineTo(240.627f, 248.523f);
        path.lineTo(240.227f, 249.423f);
        path.lineTo(236.027f, 255.273f);
        path.lineTo(238.327f, 255.723f);
        path.quadTo(242.127f, 251.573f, 242.677f, 249.973f);
        path.lineTo(242.927f, 247.123f);
        path.quadTo(245.527f, 246.023f, 247.377f, 243.523f);
        path.lineTo(247.527f, 244.223f);
        path.lineTo(247.977f, 243.773f);
        path.lineTo(248.127f, 242.473f);
        path.lineTo(249.077f, 240.723f);
        path.quadTo(251.227f, 236.373f, 251.227f, 232.723f);
        path.quadTo(251.227f, 229.723f, 250.077f, 227.273f);
        path.quadTo(250.977f, 226.773f, 251.977f, 226.223f);
        path.quadTo(254.327f, 224.923f, 256.177f, 223.973f);
        path.lineTo(256.227f, 223.973f);
        path.lineTo(261.377f, 232.373f);
        path.lineTo(275.827f, 254.623f);
        path.quadTo(284.527f, 267.923f, 289.427f, 276.423f);
        path.lineTo(290.327f, 276.223f);
        path.quadTo(285.577f, 267.623f, 276.977f, 254.573f);
        path.lineTo(262.377f, 232.323f);
        path.lineTo(257.727f, 225.023f);
        path.quadTo(260.627f, 228.573f, 266.877f, 228.573f);
        path.quadTo(271.977f, 228.573f, 275.427f, 223.723f);
        path.lineTo(276.877f, 221.373f);
        path.lineTo(276.977f, 221.473f);
        path.lineTo(276.527f, 222.123f);
        path.quadTo(277.077f, 222.623f, 277.877f, 225.173f);
        path.quadTo(278.627f, 226.423f, 280.377f, 226.973f);
        path.quadTo(284.527f, 233.323f, 288.277f, 235.823f);
        path.quadTo(288.377f, 241.273f, 305.727f, 268.223f);
        path.lineTo(318.777f, 288.023f);
        path.lineTo(317.027f, 288.423f);
        path.lineTo(319.227f, 288.623f);
        path.lineTo(324.877f, 296.673f);
        path.lineTo(325.077f, 296.223f);
        path.lineTo(320.327f, 288.423f);
        path.lineTo(326.877f, 286.923f);
        path.lineTo(331.777f, 293.223f);
        path.quadTo(332.677f, 293.023f, 332.677f, 292.323f);
        path.lineTo(328.377f, 286.673f);
        path.lineTo(330.327f, 286.273f);
        path.lineTo(332.477f, 286.573f);
        path.quadTo(342.427f, 285.873f, 349.527f, 282.773f);
        path.quadTo(370.377f, 280.923f, 388.377f, 269.473f);
        path.lineTo(390.227f, 269.523f);
        path.quadTo(391.627f, 269.523f, 391.877f, 269.123f);
        path.lineTo(392.527f, 268.173f);
        path.quadTo(392.377f, 267.923f, 390.877f, 267.773f);
        path.lineTo(393.377f, 266.073f);
        path.lineTo(393.527f, 266.023f);
        path.lineTo(394.377f, 265.823f);
        path.lineTo(395.327f, 265.373f);
        path.lineTo(395.177f, 265.273f);
        path.lineTo(396.677f, 264.223f);
        path.lineTo(398.977f, 263.523f);
        path.quadTo(398.827f, 263.123f, 397.827f, 262.773f);
        path.lineTo(404.077f, 257.973f);
        path.lineTo(407.227f, 255.573f);
        path.lineTo(406.927f, 256.073f);
        path.quadTo(406.327f, 257.073f, 405.177f, 257.573f);
        path.quadTo(405.427f, 258.273f, 407.027f, 258.273f);
        path.lineTo(407.777f, 257.673f);
        path.quadTo(408.177f, 257.223f, 408.177f, 255.823f);
        path.lineTo(408.177f, 254.873f);
        path.quadTo(413.927f, 250.623f, 417.377f, 248.823f);
        path.quadTo(417.277f, 248.523f, 416.177f, 248.173f);
        path.lineTo(415.077f, 247.873f);
        path.quadTo(410.627f, 249.973f, 404.427f, 255.023f);
        path.lineTo(404.277f, 254.823f);
        path.lineTo(409.127f, 249.273f);
        path.lineTo(412.527f, 244.923f);
        path.lineTo(413.727f, 245.373f);
        path.quadTo(414.627f, 245.123f, 414.627f, 244.423f);
        path.lineTo(413.827f, 243.773f);
        path.lineTo(413.877f, 243.673f);
        path.lineTo(413.727f, 243.273f);
        path.lineTo(413.677f, 243.223f);
        path.lineTo(414.427f, 241.923f);
        path.lineTo(413.227f, 242.823f);
        path.quadTo(411.577f, 241.473f, 407.877f, 240.923f);
        path.lineTo(404.477f, 239.523f);
        path.quadTo(395.677f, 236.173f, 393.477f, 236.173f);
        path.lineTo(393.227f, 236.623f);
        path.quadTo(394.177f, 237.423f, 398.277f, 239.173f);
        path.lineTo(396.127f, 240.023f);
        path.quadTo(393.127f, 239.623f, 391.827f, 239.023f);
        path.lineTo(393.277f, 235.473f);
        path.quadTo(395.077f, 230.873f, 395.077f, 229.323f);
        path.lineTo(395.077f, 228.873f);
        path.lineTo(395.427f, 228.123f);
        path.quadTo(400.527f, 218.023f, 402.227f, 214.023f);
        path.quadTo(407.177f, 224.673f, 410.427f, 232.773f);
        path.lineTo(410.477f, 234.073f);
        path.lineTo(410.827f, 233.773f);
        path.lineTo(411.627f, 235.923f);
        path.lineTo(410.927f, 233.673f);
        path.lineTo(410.977f, 233.623f);
        path.lineTo(410.977f, 229.523f);
        path.quadTo(415.177f, 239.373f, 418.327f, 247.873f);
        path.lineTo(419.027f, 247.873f);
        path.lineTo(419.177f, 247.473f);
        path.lineTo(419.227f, 245.823f);
        path.quadTo(419.227f, 241.923f, 408.877f, 220.523f);
        path.lineTo(407.277f, 215.923f);
        path.quadTo(405.277f, 210.723f, 402.477f, 207.623f);
        path.quadTo(397.677f, 198.123f, 394.627f, 192.673f);
        path.quadTo(392.727f, 189.223f, 388.027f, 179.173f);
        path.quadTo(384.077f, 170.673f, 381.277f, 166.423f);
        path.lineTo(374.577f, 152.823f);
        path.quadTo(370.377f, 144.623f, 367.477f, 142.473f);
        path.lineTo(373.877f, 155.123f);
        path.lineTo(372.977f, 155.373f);
        path.lineTo(393.427f, 196.023f);
        path.lineTo(402.127f, 213.873f);
        path.quadTo(397.377f, 220.873f, 394.127f, 226.323f);
        path.quadTo(388.777f, 235.223f, 387.877f, 240.223f);
        path.lineTo(387.727f, 240.073f);
        path.lineTo(387.827f, 240.323f);
        path.lineTo(387.827f, 240.473f);
        path.lineTo(376.827f, 240.973f);
        path.quadTo(375.577f, 238.023f, 373.177f, 234.373f);
        path.lineTo(373.277f, 233.973f);
        path.lineTo(373.427f, 233.723f);
        path.lineTo(374.127f, 233.873f);
        path.lineTo(373.577f, 233.423f);
        path.quadTo(375.327f, 229.373f, 375.677f, 226.723f);
        path.lineTo(375.727f, 226.273f);
        path.lineTo(375.727f, 225.323f);
        path.quadTo(374.077f, 226.973f, 371.877f, 232.023f);
        path.lineTo(370.577f, 230.873f);
        path.lineTo(369.027f, 228.873f);
        path.quadTo(369.827f, 228.273f, 370.777f, 227.623f);
        path.quadTo(377.127f, 222.973f, 377.127f, 220.573f);
        path.quadTo(377.127f, 219.173f, 376.877f, 219.223f);
        path.lineTo(376.677f, 219.573f);
        path.lineTo(370.377f, 225.123f);
        path.lineTo(367.577f, 227.173f);
        path.lineTo(365.577f, 224.873f);
        path.lineTo(351.627f, 210.723f);
        path.lineTo(352.227f, 209.873f);
        path.quadTo(353.677f, 207.773f, 353.777f, 204.823f);
        path.lineTo(353.627f, 201.173f);
        path.quadTo(351.527f, 202.023f, 351.677f, 204.523f);
        path.lineTo(351.577f, 207.773f);
        path.lineTo(351.527f, 207.723f);
        path.lineTo(351.127f, 207.623f);
        path.lineTo(349.977f, 208.973f);
        path.lineTo(346.977f, 205.873f);
        path.lineTo(346.977f, 205.473f);
        path.lineTo(347.177f, 204.473f);
        path.lineTo(346.977f, 201.273f);
        path.lineTo(346.977f, 199.573f);
        path.quadTo(347.377f, 190.673f, 341.327f, 177.823f);
        path.quadTo(336.077f, 167.773f, 332.977f, 161.223f);
        path.quadTo(333.027f, 158.123f, 333.727f, 153.273f);
        path.lineTo(337.177f, 144.123f);
        path.quadTo(340.127f, 145.173f, 344.627f, 145.223f);
        path.quadTo(347.827f, 146.373f, 351.577f, 146.373f);
        path.quadTo(352.927f, 146.373f, 355.177f, 143.773f);
        path.quadTo(357.327f, 141.173f, 357.327f, 139.723f);
        path.lineTo(354.827f, 142.473f);
        path.quadTo(352.927f, 144.323f, 350.427f, 144.323f);
        path.lineTo(346.677f, 143.973f);
        path.lineTo(348.127f, 142.473f);
        path.lineTo(345.277f, 143.623f);
        path.quadTo(341.627f, 142.573f, 338.777f, 139.923f);
        path.lineTo(341.727f, 131.923f);
        path.quadTo(345.077f, 134.223f, 349.477f, 135.273f);
        path.quadTo(353.677f, 137.173f, 359.877f, 137.173f);
        path.quadTo(365.527f, 137.173f, 369.577f, 132.373f);
        path.quadTo(372.727f, 128.573f, 372.727f, 125.773f);
        path.lineTo(372.727f, 124.723f);
        path.quadTo(374.977f, 123.873f, 377.627f, 120.373f);
        path.lineTo(377.977f, 119.923f);
        path.lineTo(380.777f, 118.823f);
        path.lineTo(381.127f, 119.473f);
        path.quadTo(376.177f, 122.923f, 375.027f, 124.523f);
        path.lineTo(378.277f, 125.223f);
        path.quadTo(380.527f, 124.523f, 382.827f, 122.673f);
        path.quadTo(392.177f, 140.023f, 402.277f, 161.273f);
        path.lineTo(419.077f, 197.373f);
        path.lineTo(424.727f, 211.923f);
        path.quadTo(433.877f, 235.573f, 440.427f, 250.673f);
        path.lineTo(441.127f, 250.673f);
        path.lineTo(441.527f, 248.773f);
        path.lineTo(441.777f, 246.123f);
        path.quadTo(441.777f, 242.223f, 415.077f, 182.523f);
        path.lineTo(398.177f, 145.573f);
        path.quadTo(403.727f, 158.323f, 409.427f, 172.623f);
        path.lineTo(418.227f, 195.173f);
        path.lineTo(402.677f, 161.723f);
        path.quadTo(391.977f, 138.473f, 383.327f, 122.223f);
        path.lineTo(385.077f, 120.523f);
        path.quadTo(388.377f, 116.873f, 388.377f, 114.473f);
        path.lineTo(388.227f, 111.923f);
        path.lineTo(387.727f, 110.023f);
        path.lineTo(381.377f, 110.573f);
        path.lineTo(380.427f, 108.773f);
        path.lineTo(381.427f, 107.873f);
        path.quadTo(383.927f, 106.073f, 387.377f, 101.823f);
        path.quadTo(392.077f, 96.073f, 392.077f, 94.223f);
        path.lineTo(391.827f, 91.973f);
        path.lineTo(391.827f, 89.973f);
        path.lineTo(391.377f, 88.823f);
        path.lineTo(389.927f, 88.773f);
        path.quadTo(389.027f, 88.123f, 387.777f, 87.823f);
        path.quadTo(384.127f, 87.023f, 378.427f, 89.473f);
        path.lineTo(377.027f, 90.123f);
        path.quadTo(378.427f, 86.723f, 379.327f, 82.773f);
        path.lineTo(380.127f, 78.473f);
        path.lineTo(379.977f, 76.023f);
        path.lineTo(380.077f, 76.173f);
        path.quadTo(381.477f, 78.973f, 381.477f, 81.723f);
        path.quadTo(381.477f, 83.023f, 381.127f, 84.173f);
        path.lineTo(380.577f, 85.873f);
        path.lineTo(381.277f, 85.873f);
        path.quadTo(382.877f, 81.973f, 382.877f, 78.273f);
        path.quadTo(382.872f, 71.9986f, 378.177f, 69.973f);
        path.close();
        path.moveTo(372.284f, 71.3541f);
        path.quadTo(375.484f, 71.3541f, 377.584f, 73.0541f);
        path.lineTo(377.884f, 73.7041f);
        path.quadTo(378.284f, 75.0041f, 378.284f, 78.1041f);
        path.quadTo(378.284f, 85.3041f, 375.284f, 90.3041f);
        path.lineTo(374.584f, 91.4041f);
        path.quadTo(371.534f, 93.2041f, 368.984f, 95.5041f);
        path.quadTo(367.184f, 97.1041f, 366.184f, 98.5541f);
        path.quadTo(363.434f, 99.9541f, 360.084f, 101.004f);
        path.quadTo(360.534f, 102.404f, 363.084f, 102.404f);
        path.lineTo(364.684f, 102.304f);
        path.quadTo(364.684f, 104.454f, 364.934f, 103.554f);
        path.lineTo(365.634f, 103.554f);
        path.quadTo(365.734f, 102.754f, 366.034f, 102.054f);
        path.quadTo(370.234f, 100.954f, 373.484f, 96.5541f);
        path.lineTo(379.434f, 107.104f);
        path.lineTo(376.434f, 109.404f);
        path.lineTo(359.384f, 108.854f);
        path.lineTo(374.684f, 110.504f);
        path.quadTo(372.534f, 111.754f, 370.434f, 112.304f);
        path.quadTo(371.134f, 113.004f, 373.234f, 113.004f);
        path.quadTo(374.934f, 112.454f, 376.684f, 111.454f);
        path.lineTo(376.884f, 111.904f);
        path.lineTo(376.434f, 111.854f);
        path.lineTo(376.184f, 112.104f);
        path.quadTo(375.984f, 112.254f, 375.984f, 112.554f);
        path.lineTo(376.184f, 112.604f);
        path.lineTo(372.984f, 114.854f);
        path.quadTo(373.234f, 115.504f, 374.584f, 115.754f);
        path.quadTo(375.484f, 115.354f, 377.234f, 114.754f);
        path.lineTo(378.284f, 114.304f);
        path.lineTo(378.784f, 115.204f);
        path.lineTo(378.584f, 115.804f);
        path.quadTo(378.084f, 117.604f, 377.234f, 118.904f);
        path.lineTo(375.034f, 119.904f);
        path.lineTo(376.184f, 120.054f);
        path.quadTo(374.684f, 121.504f, 372.234f, 122.454f);
        path.lineTo(372.084f, 121.954f);
        path.lineTo(371.134f, 121.954f);
        path.lineTo(371.234f, 122.854f);
        path.lineTo(366.784f, 123.804f);
        path.quadTo(366.784f, 124.304f, 368.184f, 124.654f);
        path.lineTo(371.384f, 124.954f);
        path.quadTo(371.284f, 127.254f, 370.184f, 129.054f);
        path.quadTo(367.384f, 133.654f, 358.384f, 134.754f);
        path.lineTo(359.084f, 133.954f);
        path.lineTo(359.184f, 133.854f);
        path.lineTo(353.184f, 134.154f);
        path.lineTo(349.584f, 134.004f);
        path.lineTo(347.784f, 132.104f);
        path.quadTo(346.034f, 129.804f, 345.384f, 127.704f);
        path.lineTo(344.684f, 127.954f);
        path.lineTo(344.584f, 128.754f);
        path.quadTo(344.434f, 129.404f, 344.434f, 130.704f);
        path.quadTo(344.434f, 131.804f, 346.584f, 133.454f);
        path.quadTo(343.884f, 132.804f, 341.884f, 131.554f);
        path.lineTo(342.584f, 129.554f);
        path.lineTo(341.334f, 131.154f);
        path.quadTo(339.584f, 130.004f, 338.334f, 128.304f);
        path.quadTo(339.134f, 124.954f, 339.834f, 123.104f);
        path.quadTo(338.684f, 124.854f, 337.684f, 127.354f);
        path.lineTo(337.584f, 127.254f);
        path.quadTo(335.934f, 124.604f, 335.334f, 119.404f);
        path.lineTo(335.634f, 119.204f);
        path.lineTo(335.484f, 119.004f);
        path.lineTo(335.234f, 118.504f);
        path.quadTo(332.634f, 117.804f, 332.284f, 117.554f);
        path.quadTo(332.034f, 117.254f, 332.034f, 115.604f);
        path.quadTo(332.034f, 114.454f, 332.934f, 112.404f);
        path.quadTo(333.834f, 110.304f, 333.834f, 109.154f);
        path.lineTo(333.834f, 108.454f);
        path.quadTo(334.934f, 107.204f, 335.734f, 105.454f);
        path.quadTo(337.084f, 102.304f, 337.084f, 97.8041f);
        path.quadTo(337.084f, 93.0041f, 334.984f, 90.0041f);
        path.quadTo(332.284f, 86.1041f, 326.384f, 85.8041f);
        path.lineTo(326.584f, 83.5541f);
        path.quadTo(326.834f, 81.1541f, 327.434f, 79.4041f);
        path.lineTo(332.334f, 79.2041f);
        path.quadTo(335.584f, 82.0541f, 338.334f, 86.3541f);
        path.lineTo(339.684f, 88.6541f);
        path.lineTo(339.584f, 90.0541f);
        path.quadTo(339.584f, 93.9041f, 340.084f, 100.804f);
        path.lineTo(340.784f, 100.804f);
        path.quadTo(340.934f, 96.3041f, 341.334f, 92.5041f);
        path.lineTo(341.934f, 95.0541f);
        path.lineTo(342.584f, 95.0541f);
        path.lineTo(342.934f, 94.6041f);
        path.lineTo(343.084f, 92.9541f);
        path.quadTo(343.084f, 91.8041f, 342.084f, 89.9541f);
        path.lineTo(341.834f, 88.8041f);
        path.quadTo(342.434f, 84.9541f, 343.334f, 81.9541f);
        path.quadTo(346.584f, 71.3541f, 354.784f, 65.3541f);
        path.lineTo(354.434f, 64.9041f);
        path.lineTo(354.684f, 64.9041f);
        path.quadTo(356.134f, 64.9041f, 356.334f, 65.2541f);
        path.lineTo(356.184f, 65.5541f);
        path.lineTo(356.734f, 69.9041f);
        path.lineTo(357.084f, 73.8541f);
        path.quadTo(357.084f, 77.4541f, 356.134f, 81.4541f);
        path.quadTo(354.034f, 85.3041f, 353.184f, 89.7041f);
        path.lineTo(352.034f, 91.8041f);
        path.lineTo(352.934f, 91.5541f);
        path.lineTo(352.734f, 95.0541f);
        path.lineTo(352.784f, 96.7041f);
        path.lineTo(352.934f, 97.1041f);
        path.lineTo(353.884f, 96.9041f);
        path.quadTo(354.384f, 92.8041f, 355.184f, 89.4041f);
        path.quadTo(356.434f, 87.5041f, 357.384f, 84.0541f);
        path.lineTo(358.234f, 80.3541f);
        path.quadTo(361.834f, 73.5041f, 368.084f, 71.8541f);
        path.quadTo(366.184f, 73.0541f, 363.984f, 74.8041f);
        path.quadTo(366.284f, 74.6041f, 369.084f, 72.7041f);
        path.quadTo(370.384f, 71.8041f, 371.634f, 71.3541f);
        path.lineTo(372.284f, 71.3541f);
        path.close();
        path.moveTo(420.989f, 82.0802f);
        path.lineTo(421.339f, 81.7302f);
        path.lineTo(420.539f, 78.9802f);
        path.quadTo(420.039f, 78.4802f, 416.939f, 78.4802f);
        path.lineTo(416.239f, 78.9302f);
        path.lineTo(418.039f, 79.2802f);
        path.quadTo(419.739f, 79.4802f, 419.739f, 80.7802f);
        path.lineTo(419.689f, 82.4302f);
        path.lineTo(420.639f, 82.6302f);
        path.lineTo(420.989f, 82.0802f);
        path.close();
        path.moveTo(418.549f, 99.9878f);
        path.quadTo(418.549f, 97.0378f, 416.799f, 95.1378f);
        path.quadTo(415.099f, 93.2878f, 412.799f, 93.3878f);
        path.lineTo(411.199f, 93.6878f);
        path.lineTo(412.749f, 94.0378f);
        path.quadTo(414.499f, 94.6378f, 415.799f, 96.2378f);
        path.quadTo(417.199f, 97.9378f, 417.199f, 99.7878f);
        path.quadTo(417.199f, 102.038f, 416.249f, 103.588f);
        path.quadTo(414.449f, 106.838f, 409.299f, 106.838f);
        path.lineTo(407.999f, 106.588f);
        path.lineTo(408.449f, 106.338f);
        path.lineTo(408.199f, 97.3878f);
        path.lineTo(408.249f, 96.7378f);
        path.quadTo(407.049f, 99.1878f, 407.049f, 102.988f);
        path.lineTo(407.249f, 105.788f);
        path.quadTo(407.749f, 107.688f, 409.599f, 108.438f);
        path.quadTo(415.549f, 105.988f, 417.249f, 104.188f);
        path.quadTo(418.549f, 102.75f, 418.549f, 99.9878f);
        path.close();
        path.moveTo(388.903f, 90.9649f);
        path.quadTo(390.053f, 92.3649f, 390.203f, 93.6649f);
        path.quadTo(389.153f, 96.8649f, 383.803f, 102.715f);
        path.lineTo(379.503f, 107.015f);
        path.lineTo(373.803f, 96.1149f);
        path.quadTo(375.153f, 94.1149f, 376.353f, 91.5649f);
        path.quadTo(381.053f, 89.5149f, 387.203f, 89.5149f);
        path.quadTo(387.706f, 89.5379f, 388.903f, 90.9649f);
        path.close();
        path.moveTo(381.261f, 110.576f);
        path.lineTo(381.161f, 110.626f);
        path.lineTo(378.961f, 109.926f);
        path.lineTo(380.311f, 108.826f);
        path.lineTo(381.261f, 110.576f);
        path.close();
        path.moveTo(383.563f, 111.635f);
        path.lineTo(386.763f, 111.635f);
        path.lineTo(386.763f, 112.335f);
        path.lineTo(386.213f, 114.185f);
        path.quadTo(384.863f, 114.785f, 381.113f, 116.785f);
        path.lineTo(380.563f, 117.135f);
        path.lineTo(380.213f, 116.485f);
        path.quadTo(380.813f, 115.285f, 380.813f, 114.485f);
        path.lineTo(380.713f, 112.885f);
        path.quadTo(381.363f, 112.485f, 382.063f, 112.035f);
        path.quadTo(384.363f, 112.635f, 385.863f, 113.285f);
        path.lineTo(385.463f, 112.935f);
        path.quadTo(384.668f, 112.233f, 383.563f, 111.635f);
        path.close();
        path.moveTo(369.338f, 96.6272f);
        path.lineTo(370.888f, 95.1272f);
        path.quadTo(371.838f, 94.2272f, 372.938f, 93.4772f);
        path.quadTo(371.363f, 95.1541f, 369.338f, 96.6272f);
        path.close();
        path.moveTo(377.164f, 111.128f);
        path.lineTo(377.364f, 110.978f);
        path.lineTo(378.964f, 111.328f);
        path.quadTo(378.214f, 111.528f, 377.564f, 111.878f);
        path.lineTo(377.164f, 111.128f);
        path.close();
        path.moveTo(360.499f, 119.046f);
        path.lineTo(361.949f, 116.696f);
        path.quadTo(360.949f, 116.696f, 359.099f, 118.446f);
        path.lineTo(357.349f, 120.396f);
        path.quadTo(357.599f, 121.096f, 358.949f, 121.346f);
        path.lineTo(360.499f, 119.046f);
        path.close();
        path.moveTo(360.315f, 131.43f);
        path.quadTo(359.965f, 131.93f, 360.065f, 132.63f);
        path.lineTo(360.065f, 132.73f);
        path.lineTo(361.015f, 131.43f);
        path.lineTo(360.315f, 131.43f);
        path.close();
        path.moveTo(390.698f, 121.532f);
        path.lineTo(389.448f, 119.282f);
        path.quadTo(389.548f, 121.182f, 389.798f, 121.782f);
        path.lineTo(390.698f, 121.532f);
        path.close();
        path.moveTo(378.821f, 113.982f);
        path.lineTo(379.171f, 113.782f);
        path.lineTo(379.021f, 114.382f);
        path.lineTo(378.821f, 113.982f);
        path.close();
        path.moveTo(379.834f, 117.159f);
        path.lineTo(379.984f, 117.409f);
        path.lineTo(379.584f, 117.659f);
        path.lineTo(379.834f, 117.159f);
        path.close();
        path.moveTo(381.675f, 119.046f);
        path.lineTo(381.625f, 119.096f);
        path.lineTo(381.375f, 118.546f);
        path.lineTo(383.125f, 117.696f);
        path.lineTo(384.225f, 116.996f);
        path.lineTo(381.675f, 119.046f);
        path.close();
        path.moveTo(361.006f, 166.646f);
        path.lineTo(361.606f, 167.746f);
        path.quadTo(362.056f, 168.296f, 363.506f, 168.296f);
        path.quadTo(368.256f, 166.546f, 369.506f, 163.896f);
        path.quadTo(367.556f, 160.896f, 366.456f, 160.896f);
        path.lineTo(361.006f, 161.596f);
        path.lineTo(361.006f, 166.646f);
        path.close();
        path.moveTo(364.55f, 166.278f);
        path.lineTo(362.8f, 166.428f);
        path.quadTo(361.4f, 166.428f, 361.7f, 166.178f);
        path.lineTo(362.35f, 165.978f);
        path.lineTo(362.35f, 163.178f);
        path.lineTo(367.8f, 162.928f);
        path.lineTo(367.85f, 163.728f);
        path.quadTo(367.85f, 164.328f, 368.35f, 164.828f);
        path.lineTo(367.55f, 165.628f);
        path.lineTo(367.45f, 165.978f);
        path.lineTo(364.55f, 166.278f);
        path.close();
        path.moveTo(366.53f, 179.306f);
        path.lineTo(365.83f, 179.306f);
        path.lineTo(365.63f, 191.556f);
        path.quadTo(365.63f, 197.356f, 365.98f, 198.506f);
        path.quadTo(366.38f, 199.906f, 370.43f, 206.206f);
        path.quadTo(367.38f, 200.856f, 367.03f, 192.756f);
        path.quadTo(367.174f, 183.817f, 366.53f, 179.306f);
        path.close();
        path.moveTo(397.327f, 200.344f);
        path.quadTo(403.977f, 213.744f, 409.177f, 225.394f);
        path.quadTo(409.977f, 228.794f, 410.377f, 232.044f);
        path.quadTo(405.199f, 217.193f, 397.327f, 200.344f);
        path.close();
        path.moveTo(373.389f, 182.805f);
        path.quadTo(373.239f, 184.555f, 373.239f, 189.755f);
        path.quadTo(373.239f, 190.855f, 373.689f, 194.255f);
        path.lineTo(374.139f, 199.105f);
        path.lineTo(375.039f, 198.855f);
        path.lineTo(374.939f, 188.055f);
        path.quadTo(374.989f, 181.255f, 375.739f, 177.455f);
        path.quadTo(373.895f, 178.339f, 373.389f, 182.805f);
        path.close();
        path.moveTo(377.808f, 218.205f);
        path.quadTo(378.258f, 218.855f, 378.258f, 219.555f);
        path.lineTo(391.808f, 219.555f);
        path.quadTo(395.258f, 218.555f, 399.658f, 216.105f);
        path.lineTo(389.008f, 216.505f);
        path.quadTo(382.458f, 216.686f, 377.808f, 218.205f);
        path.close();
        path.moveTo(393.23f, 223.269f);
        path.lineTo(382.18f, 223.269f);
        path.quadTo(381.48f, 223.269f, 381.28f, 223.719f);
        path.quadTo(381.63f, 224.319f, 383.23f, 224.919f);
        path.quadTo(384.93f, 225.569f, 386.58f, 225.569f);
        path.lineTo(390.53f, 225.019f);
        path.quadTo(392.78f, 224.519f, 393.48f, 223.969f);
        path.lineTo(393.23f, 223.269f);
        path.close();
        path.moveTo(387.798f, 240.67f);
        path.lineTo(387.748f, 242.02f);
        path.lineTo(387.748f, 242.42f);
        path.lineTo(384.248f, 243.17f);
        path.quadTo(386.598f, 241.92f, 387.748f, 240.97f);
        path.lineTo(381.698f, 243.52f);
        path.lineTo(377.798f, 243.87f);
        path.lineTo(377.148f, 241.77f);
        path.lineTo(387.798f, 240.67f);
        path.close();
        path.moveTo(378.821f, 245.596f);
        path.lineTo(380.121f, 245.596f);
        path.lineTo(387.921f, 243.496f);
        path.lineTo(388.371f, 243.546f);
        path.lineTo(388.471f, 243.346f);
        path.lineTo(389.421f, 243.096f);
        path.lineTo(392.371f, 247.896f);
        path.lineTo(377.971f, 247.896f);
        path.lineTo(378.021f, 246.296f);
        path.lineTo(378.021f, 245.946f);
        path.lineTo(378.821f, 245.596f);
        path.close();
        path.moveTo(389.685f, 240.624f);
        path.lineTo(389.535f, 241.074f);
        path.lineTo(389.585f, 241.624f);
        path.lineTo(389.235f, 241.324f);
        path.lineTo(389.535f, 240.574f);
        path.lineTo(389.685f, 240.624f);
        path.close();
        path.moveTo(391.527f, 241.407f);
        path.lineTo(390.977f, 240.707f);
        path.lineTo(391.527f, 239.657f);
        path.lineTo(394.127f, 240.657f);
        path.lineTo(391.527f, 241.407f);
        path.close();
        path.moveTo(396.683f, 247.898f);
        path.lineTo(395.483f, 247.898f);
        path.lineTo(395.083f, 247.248f);
        path.lineTo(392.133f, 242.348f);
        path.lineTo(395.933f, 241.248f);
        path.lineTo(397.883f, 241.848f);
        path.quadTo(404.283f, 243.648f, 410.133f, 243.948f);
        path.lineTo(411.383f, 244.448f);
        path.lineTo(410.583f, 245.148f);
        path.lineTo(407.083f, 246.748f);
        path.lineTo(407.033f, 246.548f);
        path.lineTo(406.333f, 246.548f);
        path.lineTo(406.333f, 247.098f);
        path.lineTo(400.533f, 249.748f);
        path.quadTo(398.283f, 247.248f, 396.933f, 246.298f);
        path.lineTo(395.983f, 246.548f);
        path.lineTo(397.033f, 247.998f);
        path.lineTo(396.683f, 247.898f);
        path.close();
        path.moveTo(370.857f, 234.364f);
        path.lineTo(370.657f, 234.864f);
        path.lineTo(370.307f, 235.464f);
        path.quadTo(367.757f, 239.714f, 366.357f, 242.964f);
        path.lineTo(362.607f, 242.414f);
        path.lineTo(362.807f, 241.914f);
        path.lineTo(361.707f, 242.214f);
        path.lineTo(361.207f, 242.114f);
        path.lineTo(361.657f, 242.264f);
        path.quadTo(359.157f, 243.214f, 356.857f, 246.314f);
        path.lineTo(359.907f, 235.664f);
        path.lineTo(360.757f, 235.664f);
        path.quadTo(363.107f, 235.664f, 363.507f, 233.864f);
        path.lineTo(363.507f, 232.164f);
        path.lineTo(367.107f, 230.114f);
        path.quadTo(369.154f, 232.154f, 370.857f, 234.364f);
        path.close();
        path.moveTo(362.387f, 226.261f);
        path.lineTo(362.837f, 226.261f);
        path.lineTo(365.587f, 228.611f);
        path.lineTo(363.487f, 229.861f);
        path.lineTo(363.237f, 228.311f);
        path.lineTo(362.387f, 226.261f);
        path.close();
        path.moveTo(361.19f, 231.233f);
        path.lineTo(361.69f, 229.333f);
        path.lineTo(361.69f, 230.983f);
        path.lineTo(361.19f, 231.233f);
        path.close();
        path.moveTo(360.821f, 232.568f);
        path.lineTo(361.671f, 232.918f);
        path.lineTo(361.671f, 233.368f);
        path.lineTo(360.571f, 233.418f);
        path.lineTo(360.821f, 232.568f);
        path.close();
        path.moveTo(367.589f, 247.944f);
        path.lineTo(369.089f, 248.394f);
        path.quadTo(372.689f, 247.894f, 376.789f, 246.394f);
        path.lineTo(376.989f, 247.894f);
        path.lineTo(374.589f, 247.894f);
        path.lineTo(373.889f, 248.394f);
        path.lineTo(373.939f, 249.144f);
        path.quadTo(374.089f, 249.544f, 375.489f, 249.694f);
        path.quadTo(378.689f, 250.194f, 393.889f, 250.194f);
        path.lineTo(393.889f, 250.244f);
        path.lineTo(395.289f, 252.294f);
        path.quadTo(393.889f, 252.894f, 392.439f, 253.594f);
        path.lineTo(386.789f, 256.294f);
        path.lineTo(384.989f, 255.494f);
        path.quadTo(382.589f, 254.344f, 382.189f, 254.344f);
        path.lineTo(381.989f, 255.094f);
        path.lineTo(381.989f, 255.494f);
        path.quadTo(383.289f, 255.844f, 385.089f, 257.144f);
        path.lineTo(378.289f, 260.444f);
        path.lineTo(375.039f, 257.994f);
        path.quadTo(373.389f, 256.644f, 372.589f, 256.494f);
        path.lineTo(371.139f, 254.594f);
        path.lineTo(371.039f, 254.644f);
        path.lineTo(370.389f, 253.294f);
        path.lineTo(367.589f, 247.944f);
        path.close();
        path.moveTo(365.103f, 244.261f);
        path.lineTo(365.703f, 244.461f);
        path.lineTo(365.553f, 244.961f);
        path.quadTo(360.153f, 248.661f, 356.053f, 252.461f);
        path.lineTo(354.353f, 254.161f);
        path.lineTo(355.703f, 250.011f);
        path.lineTo(357.503f, 248.111f);
        path.quadTo(361.103f, 244.561f, 362.403f, 242.611f);
        path.lineTo(365.103f, 244.261f);
        path.close();
        path.moveTo(371.363f, 241.683f);
        path.lineTo(371.363f, 242.383f);
        path.lineTo(375.413f, 241.983f);
        path.lineTo(376.163f, 243.983f);
        path.lineTo(375.163f, 243.983f);
        path.lineTo(370.663f, 243.583f);
        path.lineTo(370.663f, 243.283f);
        path.lineTo(370.413f, 241.733f);
        path.lineTo(370.213f, 241.933f);
        path.lineTo(369.163f, 242.583f);
        path.lineTo(372.213f, 236.283f);
        path.lineTo(373.313f, 238.033f);
        path.lineTo(375.063f, 241.183f);
        path.lineTo(371.363f, 241.683f);
        path.close();
        path.moveTo(369.752f, 245.182f);
        path.lineTo(376.602f, 245.582f);
        path.quadTo(371.552f, 247.282f, 367.802f, 247.282f);
        path.lineTo(369.752f, 245.182f);
        path.close();
        path.moveTo(372.192f, 259.637f);
        path.lineTo(371.142f, 258.937f);
        path.quadTo(370.942f, 259.437f, 370.942f, 260.787f);
        path.lineTo(372.792f, 262.037f);
        path.lineTo(373.692f, 262.837f);
        path.lineTo(369.292f, 265.187f);
        path.quadTo(365.342f, 267.437f, 361.042f, 271.587f);
        path.lineTo(355.692f, 276.587f);
        path.lineTo(354.792f, 276.687f);
        path.quadTo(354.792f, 276.837f, 355.292f, 276.937f);
        path.lineTo(353.942f, 278.137f);
        path.quadTo(351.842f, 279.837f, 349.492f, 281.187f);
        path.lineTo(331.792f, 282.187f);
        path.quadTo(331.792f, 282.687f, 335.742f, 282.937f);
        path.lineTo(341.442f, 283.137f);
        path.lineTo(344.292f, 283.087f);
        path.lineTo(339.292f, 284.087f);
        path.lineTo(327.992f, 286.187f);
        path.lineTo(323.392f, 279.237f);
        path.lineTo(324.792f, 277.887f);
        path.lineTo(326.942f, 275.537f);
        path.lineTo(324.192f, 277.787f);
        path.lineTo(322.992f, 278.637f);
        path.lineTo(321.592f, 276.437f);
        path.lineTo(322.042f, 275.637f);
        path.lineTo(322.892f, 273.937f);
        path.quadTo(323.842f, 275.187f, 325.092f, 275.537f);
        path.quadTo(325.092f, 274.287f, 323.692f, 271.787f);
        path.lineTo(321.642f, 268.637f);
        path.quadTo(324.842f, 270.537f, 327.192f, 270.887f);
        path.lineTo(327.192f, 270.937f);
        path.lineTo(327.892f, 270.937f);
        path.lineTo(328.092f, 270.937f);
        path.lineTo(327.992f, 270.887f);
        path.lineTo(329.992f, 268.187f);
        path.quadTo(331.392f, 266.287f, 331.792f, 265.887f);
        path.lineTo(331.792f, 268.537f);
        path.quadTo(331.042f, 268.787f, 330.892f, 269.087f);
        path.lineTo(331.792f, 269.087f);
        path.lineTo(331.792f, 271.637f);
        path.lineTo(330.392f, 271.137f);
        path.lineTo(329.892f, 271.437f);
        path.quadTo(329.742f, 271.687f, 329.742f, 273.237f);
        path.quadTo(329.742f, 274.537f, 330.192f, 275.987f);
        path.lineTo(330.642f, 278.087f);
        path.lineTo(329.042f, 278.287f);
        path.quadTo(329.042f, 276.437f, 328.592f, 275.737f);
        path.lineTo(328.142f, 276.187f);
        path.lineTo(328.092f, 277.837f);
        path.lineTo(328.592f, 278.187f);
        path.quadTo(329.592f, 278.537f, 331.342f, 279.687f);
        path.lineTo(332.042f, 278.987f);
        path.lineTo(331.642f, 275.587f);
        path.lineTo(331.092f, 272.287f);
        path.lineTo(332.542f, 273.287f);
        path.quadTo(333.292f, 273.687f, 334.342f, 273.687f);
        path.lineTo(334.092f, 272.987f);
        path.quadTo(333.592f, 272.487f, 332.442f, 271.887f);
        path.lineTo(332.342f, 271.837f);
        path.lineTo(332.492f, 271.837f);
        path.lineTo(332.642f, 270.637f);
        path.quadTo(333.292f, 271.187f, 336.842f, 271.387f);
        path.lineTo(337.892f, 270.837f);
        path.quadTo(338.442f, 270.337f, 338.442f, 268.837f);
        path.lineTo(338.242f, 267.287f);
        path.lineTo(337.992f, 267.487f);
        path.lineTo(333.492f, 268.037f);
        path.lineTo(332.692f, 268.187f);
        path.lineTo(332.492f, 264.937f);
        path.lineTo(330.392f, 264.737f);
        path.lineTo(328.742f, 267.437f);
        path.quadTo(327.542f, 269.587f, 327.292f, 270.537f);
        path.lineTo(323.692f, 268.337f);
        path.quadTo(321.242f, 266.787f, 320.742f, 266.787f);
        path.lineTo(321.842f, 271.737f);
        path.quadTo(322.192f, 272.837f, 322.692f, 273.587f);
        path.lineTo(321.042f, 275.487f);
        path.quadTo(316.592f, 268.287f, 311.592f, 259.137f);
        path.quadTo(312.342f, 258.187f, 313.492f, 257.237f);
        path.quadTo(317.542f, 253.887f, 323.042f, 253.887f);
        path.quadTo(324.642f, 253.887f, 327.892f, 255.287f);
        path.quadTo(331.092f, 256.637f, 333.192f, 256.637f);
        path.lineTo(336.392f, 256.187f);
        path.quadTo(334.742f, 256.137f, 330.092f, 254.287f);
        path.quadTo(325.592f, 252.537f, 321.192f, 252.537f);
        path.quadTo(317.342f, 252.537f, 313.692f, 255.437f);
        path.quadTo(311.992f, 256.737f, 311.042f, 258.137f);
        path.quadTo(303.092f, 243.937f, 296.642f, 235.087f);
        path.quadTo(298.492f, 231.787f, 299.092f, 224.187f);
        path.quadTo(305.942f, 228.337f, 316.142f, 228.337f);
        path.quadTo(324.692f, 228.337f, 331.042f, 225.037f);
        path.quadTo(334.942f, 222.937f, 337.092f, 220.287f);
        path.quadTo(334.642f, 220.837f, 333.092f, 221.987f);
        path.lineTo(331.592f, 223.087f);
        path.quadTo(334.742f, 220.737f, 336.742f, 217.937f);
        path.quadTo(341.292f, 217.337f, 345.242f, 215.287f);
        path.quadTo(347.242f, 214.237f, 348.742f, 213.037f);
        path.lineTo(351.142f, 211.237f);
        path.lineTo(352.942f, 213.037f);
        path.quadTo(358.092f, 218.737f, 358.942f, 221.687f);
        path.lineTo(358.042f, 221.887f);
        path.quadTo(347.892f, 218.887f, 347.892f, 225.437f);
        path.lineTo(348.192f, 227.087f);
        path.quadTo(348.742f, 229.037f, 349.792f, 230.637f);
        path.quadTo(352.442f, 234.637f, 357.842f, 235.537f);
        path.quadTo(356.242f, 239.387f, 354.492f, 244.937f);
        path.quadTo(350.642f, 256.887f, 350.642f, 259.637f);
        path.quadTo(350.642f, 261.087f, 350.892f, 261.237f);
        path.lineTo(351.142f, 261.037f);
        path.lineTo(352.042f, 260.787f);
        path.lineTo(352.592f, 259.387f);
        path.lineTo(358.442f, 254.937f);
        path.quadTo(357.342f, 257.037f, 357.342f, 258.137f);
        path.quadTo(357.342f, 260.437f, 357.592f, 259.187f);
        path.lineTo(358.242f, 259.187f);
        path.quadTo(359.642f, 257.137f, 362.192f, 252.137f);
        path.lineTo(366.642f, 248.387f);
        path.lineTo(369.292f, 253.687f);
        path.lineTo(372.192f, 259.637f);
        path.close();
        path.moveTo(370.443f, 265.851f);
        path.lineTo(374.743f, 263.501f);
        path.lineTo(375.143f, 263.751f);
        path.lineTo(375.293f, 264.101f);
        path.quadTo(377.443f, 268.001f, 380.443f, 270.201f);
        path.quadTo(371.393f, 273.851f, 359.493f, 275.901f);
        path.lineTo(363.193f, 272.251f);
        path.quadTo(367.266f, 268.061f, 370.443f, 265.851f);
        path.close();
        path.moveTo(375.599f, 260.88f);
        path.lineTo(375.499f, 260.83f);
        path.lineTo(375.349f, 260.63f);
        path.lineTo(375.599f, 260.88f);
        path.close();
        path.moveTo(391.895f, 255.632f);
        path.lineTo(396.295f, 253.682f);
        path.lineTo(397.445f, 255.332f);
        path.lineTo(389.745f, 256.582f);
        path.lineTo(391.895f, 255.632f);
        path.close();
        path.moveTo(378.683f, 264.977f);
        path.quadTo(382.333f, 266.777f, 387.383f, 266.777f);
        path.lineTo(387.683f, 266.777f);
        path.lineTo(385.933f, 267.677f);
        path.lineTo(382.433f, 267.927f);
        path.quadTo(382.833f, 268.527f, 382.883f, 269.177f);
        path.lineTo(381.483f, 269.777f);
        path.lineTo(377.933f, 264.777f);
        path.lineTo(378.683f, 264.977f);
        path.close();
        path.moveTo(396.498f, 260.557f);
        path.lineTo(393.398f, 263.107f);
        path.quadTo(385.448f, 264.407f, 379.598f, 261.207f);
        path.lineTo(386.798f, 257.857f);
        path.quadTo(389.448f, 258.707f, 393.948f, 258.707f);
        path.quadTo(395.348f, 258.707f, 397.398f, 256.957f);
        path.lineTo(398.198f, 256.257f);
        path.lineTo(399.398f, 257.707f);
        path.lineTo(396.498f, 260.557f);
        path.close();
        path.moveTo(400.273f, 240.026f);
        path.lineTo(401.223f, 240.426f);
        path.lineTo(399.223f, 240.326f);
        path.lineTo(400.273f, 240.026f);
        path.close();
        path.moveTo(407.225f, 248.68f);
        path.lineTo(407.225f, 248.08f);
        path.lineTo(408.625f, 247.18f);
        path.lineTo(407.225f, 248.68f);
        path.close();
        path.moveTo(405.613f, 250.568f);
        path.lineTo(403.363f, 253.268f);
        path.lineTo(401.663f, 251.068f);
        path.lineTo(406.313f, 248.568f);
        path.lineTo(406.313f, 249.668f);
        path.lineTo(405.613f, 250.568f);
        path.close();
        path.moveTo(398.064f, 249.371f);
        path.lineTo(398.914f, 250.521f);
        path.lineTo(397.414f, 251.221f);
        path.lineTo(396.664f, 249.971f);
        path.lineTo(397.614f, 249.621f);
        path.lineTo(398.064f, 249.371f);
        path.close();
        path.moveTo(398.386f, 252.686f);
        path.lineTo(400.036f, 251.936f);
        path.lineTo(402.286f, 254.536f);
        path.lineTo(400.236f, 256.786f);
        path.lineTo(399.436f, 255.086f);
        path.lineTo(399.436f, 255.036f);
        path.lineTo(399.686f, 255.286f);
        path.lineTo(399.686f, 254.586f);
        path.lineTo(398.386f, 252.686f);
        path.close();
        path.moveTo(403.081f, 256.092f);
        path.lineTo(403.631f, 255.492f);
        path.lineTo(403.831f, 255.492f);
        path.lineTo(403.081f, 256.092f);
        path.close();
        path.moveTo(429.137f, 260.327f);
        path.quadTo(426.487f, 262.377f, 422.287f, 268.377f);
        path.quadTo(416.237f, 276.877f, 412.787f, 281.027f);
        path.lineTo(413.487f, 281.027f);
        path.quadTo(420.337f, 276.777f, 423.887f, 270.677f);
        path.quadTo(425.869f, 267.233f, 429.137f, 260.327f);
        path.close();
        path.moveTo(365.379f, 277.821f);
        path.lineTo(366.479f, 277.821f);
        path.quadTo(361.029f, 279.371f, 354.979f, 280.371f);
        path.lineTo(358.229f, 278.721f);
        path.lineTo(354.179f, 280.321f);
        path.lineTo(356.529f, 278.571f);
        path.lineTo(357.979f, 277.421f);
        path.lineTo(359.229f, 277.471f);
        path.lineTo(365.379f, 277.821f);
        path.close();
        path.moveTo(377.532f, 297.063f);
        path.quadTo(403.282f, 286.863f, 410.732f, 277.813f);
        path.quadTo(388.932f, 289.013f, 377.082f, 294.313f);
        path.quadTo(350.782f, 305.913f, 329.932f, 310.513f);
        path.lineTo(332.232f, 310.713f);
        path.quadTo(354.745f, 306.086f, 377.532f, 297.063f);
        path.close();
        path.moveTo(325.789f, 42.3521f);
        path.quadTo(326.739f, 41.8521f, 326.739f, 41.4021f);
        path.lineTo(329.739f, 41.2021f);
        path.lineTo(329.739f, 41.4021f);
        path.quadTo(328.939f, 43.3521f, 327.439f, 44.8521f);
        path.lineTo(325.789f, 42.3521f);
        path.close();
        path.moveTo(330.623f, 40.0504f);
        path.quadTo(327.973f, 41.2004f, 325.573f, 39.8504f);
        path.quadTo(322.723f, 38.1504f, 322.123f, 38.2004f);
        path.quadTo(321.723f, 39.0504f, 319.073f, 41.8503f);
        path.lineTo(314.073f, 46.9503f);
        path.quadTo(315.523f, 47.7003f, 319.223f, 49.2503f);
        path.quadTo(322.173f, 50.5003f, 322.573f, 50.8503f);
        path.quadTo(321.173f, 53.6003f, 319.573f, 55.0003f);
        path.quadTo(320.423f, 55.2503f, 321.573f, 54.6003f);
        path.lineTo(323.273f, 53.4003f);
        path.quadTo(323.273f, 56.1503f, 323.473f, 57.5003f);
        path.lineTo(324.173f, 57.5003f);
        path.lineTo(324.573f, 54.0503f);
        path.lineTo(324.873f, 50.6003f);
        path.quadTo(329.473f, 50.1503f, 329.923f, 49.7003f);
        path.quadTo(327.123f, 46.9003f, 328.673f, 45.1503f);
        path.lineTo(330.223f, 43.6003f);
        path.quadTo(331.073f, 42.6003f, 331.073f, 41.4003f);
        path.lineTo(330.873f, 39.8503f);
        path.lineTo(330.623f, 40.0504f);
        path.close();
        path.moveTo(323.579f, 42.8124f);
        path.lineTo(324.179f, 42.5624f);
        path.quadTo(325.229f, 43.2624f, 326.129f, 44.6124f);
        path.quadTo(326.929f, 45.7624f, 326.929f, 46.3624f);
        path.lineTo(323.729f, 48.7624f);
        path.quadTo(323.479f, 46.5624f, 323.479f, 44.2624f);
        path.lineTo(323.579f, 42.8124f);
        path.close();
        path.moveTo(322.244f, 46.9095f);
        path.quadTo(321.944f, 48.4095f, 321.194f, 49.0095f);
        path.quadTo(320.844f, 48.7595f, 319.044f, 48.0595f);
        path.lineTo(316.394f, 46.9595f);
        path.lineTo(318.444f, 46.7095f);
        path.quadTo(319.844f, 45.3095f, 322.594f, 43.5095f);
        path.lineTo(322.594f, 43.9595f);
        path.lineTo(322.244f, 46.9095f);
        path.close();
        path.moveTo(343.512f, 75.8655f);
        path.lineTo(343.912f, 74.6655f);
        path.quadTo(344.862f, 72.3155f, 346.012f, 70.5155f);
        path.quadTo(344.812f, 72.6655f, 343.612f, 75.5155f);
        path.lineTo(343.512f, 75.8655f);
        path.close();
        path.moveTo(345.814f, 86.5456f);
        path.lineTo(342.814f, 83.9956f);
        path.lineTo(343.514f, 85.2456f);
        path.quadTo(344.264f, 86.5956f, 345.114f, 87.0456f);
        path.lineTo(345.814f, 86.5456f);
        path.close();
        path.moveTo(262.261f, 119.0f);
        path.lineTo(259.861f, 119.5f);
        path.lineTo(259.461f, 119.65f);
        path.lineTo(256.961f, 119.65f);
        path.lineTo(256.961f, 118.3f);
        path.lineTo(261.061f, 118.45f);
        path.quadTo(261.892f, 118.632f, 262.261f, 119.0f);
        path.close();
        path.moveTo(258.716f, 122.729f);
        path.lineTo(259.266f, 122.679f);
        path.lineTo(259.216f, 124.829f);
        path.quadTo(259.066f, 126.229f, 258.316f, 126.829f);
        path.lineTo(258.116f, 126.379f);
        path.lineTo(257.916f, 126.079f);
        path.lineTo(257.866f, 124.629f);
        path.lineTo(257.916f, 123.129f);
        path.lineTo(258.116f, 122.929f);
        path.lineTo(258.716f, 122.729f);
        path.close();
        path.moveTo(252.824f, 132.58f);
        path.lineTo(252.824f, 123.63f);
        path.lineTo(253.974f, 123.63f);
        path.lineTo(255.274f, 128.88f);
        path.quadTo(255.724f, 132.78f, 256.524f, 136.38f);
        path.lineTo(254.174f, 138.53f);
        path.lineTo(252.824f, 132.58f);
        path.close();
        path.moveTo(266.404f, 128.207f);
        path.lineTo(266.204f, 128.107f);
        path.lineTo(268.104f, 126.807f);
        path.lineTo(269.004f, 127.557f);
        path.lineTo(267.304f, 128.607f);
        path.lineTo(266.404f, 128.207f);
        path.close();
        path.moveTo(262.721f, 127.286f);
        path.quadTo(264.271f, 127.486f, 265.721f, 127.986f);
        path.lineTo(264.571f, 129.136f);
        path.quadTo(265.221f, 128.736f, 266.121f, 128.186f);
        path.lineTo(267.221f, 128.686f);
        path.lineTo(264.171f, 130.636f);
        path.lineTo(263.471f, 131.186f);
        path.quadTo(262.951f, 129.22f, 262.721f, 127.286f);
        path.close();
        path.moveTo(259.038f, 127.747f);
        path.lineTo(260.188f, 127.547f);
        path.lineTo(261.588f, 132.447f);
        path.lineTo(259.988f, 133.647f);
        path.quadTo(258.838f, 130.197f, 258.838f, 129.497f);
        path.quadTo(258.838f, 128.147f, 258.938f, 127.997f);
        path.lineTo(259.038f, 127.747f);
        path.close();
        path.moveTo(263.918f, 132.903f);
        path.lineTo(264.368f, 132.553f);
        path.lineTo(268.768f, 129.703f);
        path.quadTo(272.068f, 132.203f, 274.218f, 137.203f);
        path.quadTo(276.968f, 143.653f, 276.968f, 150.503f);
        path.lineTo(276.918f, 152.803f);
        path.lineTo(276.868f, 153.203f);
        path.lineTo(274.618f, 151.703f);
        path.quadTo(270.018f, 146.553f, 267.018f, 140.703f);
        path.quadTo(265.023f, 136.816f, 263.918f, 132.903f);
        path.close();
        path.moveTo(260.327f, 115.87f);
        path.quadTo(257.577f, 115.22f, 256.127f, 116.42f);
        path.quadTo(257.227f, 107.32f, 262.327f, 106.07f);
        path.quadTo(267.827f, 104.72f, 276.527f, 112.77f);
        path.lineTo(280.227f, 116.47f);
        path.quadTo(275.527f, 119.57f, 271.627f, 122.82f);
        path.quadTo(265.115f, 117.021f, 260.327f, 115.87f);
        path.close();
        path.moveTo(265.805f, 127.885f);
        path.quadTo(262.455f, 126.035f, 261.555f, 123.135f);
        path.quadTo(263.705f, 123.485f, 267.505f, 126.335f);
        path.lineTo(265.805f, 127.885f);
        path.close();
        path.moveTo(281.227f, 117.573f);
        path.lineTo(283.127f, 119.723f);
        path.quadTo(278.277f, 122.123f, 273.727f, 124.773f);
        path.lineTo(272.827f, 123.923f);
        path.lineTo(272.627f, 123.673f);
        path.lineTo(281.227f, 117.573f);
        path.close();
        path.moveTo(269.35f, 129.358f);
        path.lineTo(270.3f, 128.708f);
        path.lineTo(271.45f, 130.008f);
        path.lineTo(269.35f, 129.358f);
        path.close();
        path.moveTo(273.539f, 126.596f);
        path.lineTo(273.739f, 126.546f);
        path.quadTo(277.039f, 128.346f, 279.589f, 131.846f);
        path.lineTo(282.989f, 137.446f);
        path.lineTo(282.739f, 137.446f);
        path.lineTo(278.189f, 131.746f);
        path.lineTo(273.539f, 126.596f);
        path.close();
        path.moveTo(274.782f, 125.813f);
        path.lineTo(283.232f, 119.863f);
        path.quadTo(287.232f, 124.813f, 290.782f, 130.913f);
        path.quadTo(297.232f, 142.063f, 297.232f, 149.163f);
        path.lineTo(297.532f, 151.513f);
        path.quadTo(297.682f, 154.363f, 296.782f, 156.713f);
        path.quadTo(294.232f, 163.813f, 283.982f, 164.313f);
        path.lineTo(283.632f, 162.963f);
        path.quadTo(288.082f, 162.713f, 289.932f, 160.863f);
        path.lineTo(290.082f, 160.763f);
        path.quadTo(294.032f, 160.213f, 295.232f, 158.013f);
        path.quadTo(296.032f, 156.513f, 295.882f, 153.963f);
        path.quadTo(294.632f, 154.663f, 294.232f, 155.613f);
        path.lineTo(293.732f, 157.213f);
        path.quadTo(293.232f, 158.163f, 291.032f, 158.563f);
        path.lineTo(291.032f, 158.113f);
        path.quadTo(291.032f, 149.763f, 285.382f, 139.763f);
        path.quadTo(280.997f, 132.12f, 274.782f, 125.813f);
        path.close();
        path.moveTo(234.41f, 92.7603f);
        path.lineTo(234.41f, 92.2603f);
        path.quadTo(229.26f, 86.1103f, 214.71f, 74.9603f);
        path.quadTo(197.71f, 61.9603f, 192.56f, 57.5103f);
        path.quadTo(192.36f, 54.5603f, 192.66f, 52.2103f);
        path.quadTo(189.91f, 53.8103f, 189.81f, 57.6603f);
        path.quadTo(189.81f, 59.6103f, 190.36f, 61.4603f);
        path.quadTo(190.36f, 63.1603f, 195.71f, 90.8103f);
        path.quadTo(201.31f, 119.61f, 201.96f, 127.71f);
        path.quadTo(203.16f, 127.41f, 203.56f, 126.11f);
        path.quadTo(204.06f, 124.46f, 204.46f, 124.06f);
        path.quadTo(202.36f, 118.41f, 200.66f, 107.46f);
        path.quadTo(200.21f, 104.76f, 198.16f, 88.8103f);
        path.quadTo(197.86f, 86.2103f, 194.36f, 70.1603f);
        path.quadTo(192.96f, 63.6603f, 192.61f, 58.7103f);
        path.quadTo(201.01f, 68.5103f, 216.91f, 81.1603f);
        path.quadTo(231.76f, 92.9603f, 232.91f, 92.9603f);
        path.quadTo(235.238f, 92.9905f, 234.41f, 92.7603f);
        path.close();
        path.moveTo(237.172f, 153.757f);
        path.lineTo(237.872f, 153.757f);
        path.quadTo(242.172f, 156.457f, 245.622f, 159.457f);
        path.lineTo(244.472f, 161.107f);
        path.quadTo(241.315f, 157.577f, 237.172f, 153.757f);
        path.close();
        path.moveTo(213.372f, 156.473f);
        path.quadTo(213.472f, 153.623f, 214.422f, 151.823f);
        path.quadTo(217.372f, 146.323f, 228.172f, 149.823f);
        path.quadTo(219.722f, 150.923f, 216.722f, 153.223f);
        path.quadTo(214.622f, 154.773f, 214.622f, 157.773f);
        path.lineTo(214.772f, 159.973f);
        path.lineTo(215.072f, 160.723f);
        path.quadTo(214.172f, 162.473f, 214.172f, 165.573f);
        path.lineTo(216.272f, 174.923f);
        path.lineTo(216.722f, 176.423f);
        path.lineTo(216.422f, 176.073f);
        path.quadTo(213.472f, 167.823f, 213.472f, 160.073f);
        path.lineTo(213.372f, 156.473f);
        path.close();
        path.moveTo(216.502f, 155.828f);
        path.quadTo(218.452f, 151.928f, 225.202f, 151.928f);
        path.quadTo(236.302f, 151.928f, 244.002f, 161.928f);
        path.quadTo(240.752f, 167.378f, 240.102f, 174.528f);
        path.quadTo(236.102f, 168.978f, 230.952f, 164.578f);
        path.quadTo(224.052f, 158.628f, 219.402f, 158.428f);
        path.quadTo(217.052f, 158.278f, 215.752f, 159.678f);
        path.quadTo(215.812f, 157.071f, 216.502f, 155.828f);
        path.close();
        path.moveTo(226.123f, 163.194f);
        path.lineTo(221.773f, 166.094f);
        path.lineTo(221.923f, 166.094f);
        path.lineTo(222.423f, 166.194f);
        path.quadTo(222.423f, 172.694f, 224.523f, 181.394f);
        path.lineTo(224.273f, 181.394f);
        path.quadTo(220.723f, 178.494f, 219.723f, 176.544f);
        path.quadTo(218.973f, 175.094f, 218.973f, 172.044f);
        path.quadTo(218.973f, 170.394f, 219.473f, 169.044f);
        path.lineTo(220.573f, 166.894f);
        path.lineTo(216.923f, 169.444f);
        path.quadTo(214.573f, 165.394f, 214.723f, 163.694f);
        path.quadTo(215.029f, 160.57f, 226.123f, 163.194f);
        path.close();
        path.moveTo(214.108f, 175.163f);
        path.lineTo(215.758f, 179.763f);
        path.quadTo(221.358f, 193.063f, 232.758f, 197.513f);
        path.quadTo(236.558f, 200.013f, 241.058f, 200.013f);
        path.lineTo(243.658f, 199.763f);
        path.lineTo(245.208f, 203.313f);
        path.lineTo(245.158f, 204.263f);
        path.lineTo(238.658f, 204.213f);
        path.quadTo(232.108f, 204.013f, 229.808f, 203.213f);
        path.lineTo(228.958f, 203.363f);
        path.lineTo(228.658f, 203.463f);
        path.quadTo(229.458f, 203.963f, 234.908f, 204.913f);
        path.lineTo(242.008f, 205.763f);
        path.lineTo(245.008f, 205.313f);
        path.lineTo(244.958f, 206.463f);
        path.lineTo(245.058f, 207.513f);
        path.lineTo(244.308f, 206.913f);
        path.lineTo(244.308f, 207.613f);
        path.lineTo(244.908f, 209.213f);
        path.quadTo(244.758f, 209.713f, 244.758f, 210.363f);
        path.quadTo(244.758f, 211.013f, 245.008f, 211.663f);
        path.lineTo(244.958f, 211.863f);
        path.quadTo(244.908f, 214.013f, 246.008f, 214.863f);
        path.quadTo(247.258f, 215.813f, 251.858f, 216.413f);
        path.lineTo(252.908f, 218.263f);
        path.quadTo(233.958f, 215.513f, 221.308f, 200.013f);
        path.lineTo(223.558f, 200.913f);
        path.lineTo(223.808f, 200.463f);
        path.lineTo(220.558f, 199.063f);
        path.quadTo(214.808f, 191.763f, 210.458f, 181.813f);
        path.quadTo(208.258f, 176.713f, 206.458f, 171.213f);
        path.lineTo(210.108f, 170.613f);
        path.quadTo(211.945f, 172.953f, 214.108f, 175.163f);
        path.close();
        path.moveTo(217.147f, 178.063f);
        path.lineTo(217.347f, 178.213f);
        path.quadTo(219.547f, 184.563f, 221.997f, 184.563f);
        path.lineTo(222.797f, 184.563f);
        path.lineTo(222.947f, 184.963f);
        path.quadTo(225.297f, 189.363f, 226.847f, 191.563f);
        path.lineTo(228.097f, 193.213f);
        path.quadTo(221.747f, 188.763f, 217.847f, 179.763f);
        path.lineTo(217.147f, 178.063f);
        path.close();
        path.moveTo(225.709f, 173.552f);
        path.lineTo(225.409f, 166.402f);
        path.quadTo(233.909f, 166.302f, 238.959f, 175.602f);
        path.lineTo(239.909f, 177.552f);
        path.lineTo(239.909f, 178.202f);
        path.lineTo(239.759f, 180.602f);
        path.quadTo(239.909f, 183.252f, 241.059f, 185.452f);
        path.lineTo(242.609f, 187.702f);
        path.lineTo(242.659f, 188.952f);
        path.lineTo(242.659f, 190.552f);
        path.quadTo(242.309f, 191.152f, 241.259f, 191.502f);
        path.lineTo(240.359f, 188.502f);
        path.lineTo(239.709f, 188.702f);
        path.lineTo(240.609f, 191.652f);
        path.lineTo(237.159f, 191.952f);
        path.quadTo(231.059f, 191.952f, 228.259f, 186.302f);
        path.lineTo(232.759f, 188.952f);
        path.lineTo(233.009f, 188.502f);
        path.quadTo(230.309f, 186.952f, 227.809f, 185.302f);
        path.quadTo(227.159f, 183.802f, 226.759f, 181.952f);
        path.quadTo(225.985f, 178.661f, 225.709f, 173.552f);
        path.close();
        path.moveTo(247.115f, 166.6f);
        path.lineTo(247.265f, 166.9f);
        path.lineTo(248.865f, 169.95f);
        path.quadTo(247.515f, 173.45f, 247.515f, 177.2f);
        path.quadTo(247.515f, 180.5f, 249.115f, 184.1f);
        path.lineTo(248.915f, 184.1f);
        path.lineTo(245.315f, 178.2f);
        path.quadTo(244.965f, 177.5f, 244.965f, 173.75f);
        path.quadTo(244.998f, 170.375f, 247.115f, 166.6f);
        path.close();
        path.moveTo(242.236f, 175.163f);
        path.lineTo(242.236f, 174.913f);
        path.quadTo(242.486f, 177.213f, 243.436f, 179.513f);
        path.lineTo(242.536f, 178.063f);
        path.lineTo(241.936f, 177.113f);
        path.quadTo(241.959f, 176.129f, 242.236f, 175.163f);
        path.close();
        path.moveTo(277.452f, 138.335f);
        path.quadTo(278.802f, 139.335f, 280.602f, 145.285f);
        path.quadTo(282.252f, 150.635f, 282.252f, 152.135f);
        path.lineTo(282.052f, 154.935f);
        path.lineTo(279.052f, 155.135f);
        path.lineTo(278.602f, 154.685f);
        path.lineTo(278.602f, 154.435f);
        path.quadTo(279.002f, 145.085f, 277.452f, 138.585f);
        path.lineTo(277.452f, 138.335f);
        path.close();
        path.moveTo(271.33f, 153.664f);
        path.lineTo(269.53f, 152.114f);
        path.lineTo(269.98f, 152.164f);
        path.lineTo(271.33f, 153.664f);
        path.close();
        path.moveTo(268.199f, 149.659f);
        path.lineTo(267.049f, 149.509f);
        path.lineTo(264.649f, 145.009f);
        path.quadTo(262.349f, 140.459f, 260.549f, 135.259f);
        path.lineTo(262.099f, 134.109f);
        path.quadTo(264.449f, 142.209f, 265.899f, 145.259f);
        path.quadTo(266.956f, 147.68f, 268.199f, 149.659f);
        path.close();
        path.moveTo(281.135f, 157.623f);
        path.quadTo(283.135f, 157.323f, 283.935f, 155.823f);
        path.quadTo(284.585f, 154.623f, 284.585f, 152.023f);
        path.quadTo(284.585f, 150.523f, 283.835f, 147.523f);
        path.lineTo(282.535f, 142.923f);
        path.quadTo(283.535f, 144.223f, 285.085f, 147.723f);
        path.quadTo(286.885f, 151.623f, 286.885f, 153.273f);
        path.quadTo(286.935f, 154.973f, 285.985f, 156.523f);
        path.quadTo(285.085f, 157.873f, 283.635f, 158.623f);
        path.lineTo(281.585f, 158.323f);
        path.lineTo(281.135f, 157.623f);
        path.close();
        path.moveTo(255.678f, 153.849f);
        path.quadTo(253.278f, 155.749f, 252.828f, 155.849f);
        path.lineTo(253.078f, 155.399f);
        path.quadTo(257.428f, 150.999f, 258.828f, 150.999f);
        path.lineTo(255.678f, 153.849f);
        path.close();
        path.moveTo(262.905f, 152.329f);
        path.quadTo(264.305f, 154.479f, 265.955f, 156.179f);
        path.quadTo(257.355f, 157.329f, 252.355f, 163.779f);
        path.lineTo(252.355f, 163.829f);
        path.lineTo(250.605f, 161.679f);
        path.quadTo(255.355f, 156.079f, 262.255f, 152.379f);
        path.lineTo(262.905f, 152.329f);
        path.close();
        path.moveTo(253.744f, 165.726f);
        path.lineTo(253.994f, 165.426f);
        path.quadTo(258.144f, 160.876f, 263.644f, 158.876f);
        path.quadTo(265.894f, 158.026f, 267.744f, 157.876f);
        path.quadTo(271.644f, 161.126f, 276.494f, 162.326f);
        path.lineTo(277.144f, 164.026f);
        path.quadTo(269.744f, 162.976f, 264.694f, 159.026f);
        path.quadTo(270.194f, 164.576f, 277.544f, 165.976f);
        path.lineTo(277.694f, 168.726f);
        path.lineTo(277.644f, 171.226f);
        path.quadTo(277.444f, 174.376f, 276.344f, 177.076f);
        path.quadTo(272.844f, 185.526f, 262.294f, 185.526f);
        path.lineTo(260.444f, 184.326f);
        path.lineTo(260.444f, 184.126f);
        path.quadTo(260.419f, 175.163f, 253.744f, 165.726f);
        path.close();
        path.moveTo(249.417f, 163.102f);
        path.lineTo(251.317f, 165.252f);
        path.lineTo(249.717f, 167.902f);
        path.lineTo(247.867f, 165.252f);
        path.quadTo(248.542f, 164.206f, 249.417f, 163.102f);
        path.close();
        path.moveTo(249.969f, 172.401f);
        path.lineTo(251.769f, 177.401f);
        path.quadTo(249.619f, 175.501f, 249.619f, 175.151f);
        path.quadTo(249.601f, 173.782f, 249.969f, 172.401f);
        path.close();
        path.moveTo(254.665f, 179.812f);
        path.quadTo(253.965f, 174.962f, 250.915f, 169.812f);
        path.lineTo(252.665f, 167.012f);
        path.lineTo(254.265f, 169.362f);
        path.quadTo(258.215f, 175.862f, 258.565f, 182.862f);
        path.lineTo(255.815f, 180.712f);
        path.lineTo(254.665f, 179.812f);
        path.close();
        path.moveTo(249.371f, 177.464f);
        path.quadTo(250.621f, 178.164f, 252.571f, 180.364f);
        path.lineTo(253.071f, 182.764f);
        path.lineTo(252.371f, 184.764f);
        path.quadTo(250.721f, 183.614f, 250.171f, 182.114f);
        path.quadTo(250.071f, 178.664f, 249.371f, 177.664f);
        path.lineTo(249.371f, 177.464f);
        path.close();
        path.moveTo(279.984f, 166.324f);
        path.lineTo(280.184f, 166.324f);
        path.quadTo(280.684f, 169.524f, 279.984f, 174.224f);
        path.lineTo(279.984f, 166.324f);
        path.close();
        path.moveTo(284.588f, 170.329f);
        path.lineTo(284.388f, 166.379f);
        path.quadTo(295.138f, 165.779f, 298.238f, 158.129f);
        path.quadTo(299.238f, 155.479f, 299.288f, 152.129f);
        path.lineTo(299.088f, 148.779f);
        path.quadTo(299.088f, 139.979f, 291.638f, 127.879f);
        path.quadTo(287.638f, 121.329f, 283.038f, 116.329f);
        path.quadTo(289.488f, 112.079f, 295.138f, 109.579f);
        path.lineTo(298.538f, 113.179f);
        path.quadTo(298.388f, 114.429f, 298.388f, 115.629f);
        path.lineTo(298.388f, 117.729f);
        path.lineTo(298.588f, 119.629f);
        path.quadTo(296.888f, 119.179f, 294.938f, 119.029f);
        path.quadTo(297.038f, 119.779f, 298.938f, 120.779f);
        path.lineTo(299.338f, 121.929f);
        path.quadTo(301.338f, 126.729f, 307.038f, 127.729f);
        path.lineTo(309.338f, 131.229f);
        path.quadTo(310.588f, 133.629f, 312.888f, 139.079f);
        path.lineTo(315.438f, 144.929f);
        path.quadTo(314.888f, 149.279f, 313.538f, 154.379f);
        path.quadTo(312.388f, 158.729f, 310.888f, 162.879f);
        path.lineTo(310.738f, 162.479f);
        path.lineTo(308.538f, 155.379f);
        path.lineTo(307.838f, 155.579f);
        path.lineTo(310.138f, 164.779f);
        path.quadTo(308.088f, 169.879f, 305.388f, 174.679f);
        path.quadTo(302.988f, 179.029f, 300.138f, 182.879f);
        path.quadTo(298.188f, 182.479f, 298.188f, 184.929f);
        path.lineTo(298.238f, 185.379f);
        path.lineTo(296.338f, 187.579f);
        path.lineTo(292.588f, 190.429f);
        path.quadTo(284.588f, 196.379f, 276.638f, 201.629f);
        path.lineTo(277.688f, 198.879f);
        path.lineTo(277.588f, 197.729f);
        path.quadTo(278.388f, 196.779f, 278.388f, 195.979f);
        path.lineTo(278.388f, 195.829f);
        path.quadTo(284.888f, 191.229f, 290.638f, 183.429f);
        path.lineTo(291.888f, 181.679f);
        path.lineTo(283.188f, 189.129f);
        path.quadTo(269.388f, 200.029f, 261.338f, 200.029f);
        path.lineTo(259.488f, 199.679f);
        path.lineTo(259.038f, 199.579f);
        path.lineTo(259.038f, 200.029f);
        path.lineTo(261.238f, 200.779f);
        path.lineTo(264.138f, 201.179f);
        path.quadTo(268.288f, 201.179f, 272.738f, 199.179f);
        path.quadTo(268.888f, 201.979f, 266.888f, 202.579f);
        path.quadTo(260.138f, 204.779f, 249.238f, 206.679f);
        path.lineTo(247.738f, 206.979f);
        path.lineTo(246.738f, 204.879f);
        path.lineTo(246.738f, 204.829f);
        path.lineTo(247.088f, 204.629f);
        path.lineTo(246.838f, 204.179f);
        path.lineTo(246.738f, 204.179f);
        path.lineTo(246.838f, 203.229f);
        path.lineTo(245.888f, 203.179f);
        path.lineTo(244.388f, 199.779f);
        path.lineTo(245.688f, 199.779f);
        path.quadTo(254.988f, 199.779f, 258.588f, 192.429f);
        path.quadTo(273.938f, 192.129f, 280.688f, 182.129f);
        path.quadTo(284.588f, 176.268f, 284.588f, 170.329f);
        path.close();
        path.moveTo(346.274f, 111.174f);
        path.lineTo(345.574f, 111.174f);
        path.quadTo(345.374f, 111.874f, 345.374f, 114.274f);
        path.quadTo(345.374f, 116.674f, 345.574f, 117.374f);
        path.lineTo(346.274f, 117.374f);
        path.quadTo(346.965f, 114.305f, 346.274f, 111.174f);
        path.close();
        path.moveTo(330.116f, 110.944f);
        path.lineTo(331.416f, 110.394f);
        path.lineTo(331.216f, 110.894f);
        path.quadTo(330.616f, 112.844f, 330.616f, 115.444f);
        path.lineTo(330.666f, 117.594f);
        path.quadTo(331.266f, 119.494f, 334.066f, 119.494f);
        path.lineTo(334.416f, 119.494f);
        path.lineTo(334.416f, 119.544f);
        path.quadTo(334.316f, 120.194f, 334.316f, 121.544f);
        path.quadTo(334.316f, 122.344f, 335.116f, 124.244f);
        path.quadTo(336.016f, 126.194f, 337.416f, 127.944f);
        path.quadTo(336.116f, 131.044f, 335.066f, 135.244f);
        path.lineTo(334.966f, 135.094f);
        path.lineTo(333.216f, 131.544f);
        path.lineTo(333.366f, 130.544f);
        path.quadTo(333.166f, 130.644f, 332.916f, 130.894f);
        path.quadTo(330.966f, 126.094f, 331.516f, 121.994f);
        path.lineTo(330.316f, 121.944f);
        path.lineTo(329.716f, 121.994f);
        path.lineTo(329.716f, 127.994f);
        path.lineTo(332.066f, 132.994f);
        path.quadTo(331.766f, 134.094f, 331.766f, 135.344f);
        path.lineTo(331.616f, 137.044f);
        path.quadTo(331.616f, 138.894f, 332.466f, 140.444f);
        path.lineTo(333.616f, 141.944f);
        path.quadTo(332.766f, 146.294f, 332.316f, 150.344f);
        path.lineTo(330.366f, 156.094f);
        path.quadTo(329.866f, 156.144f, 329.716f, 156.294f);
        path.lineTo(330.066f, 157.144f);
        path.lineTo(329.366f, 159.444f);
        path.quadTo(328.516f, 157.994f, 327.066f, 156.494f);
        path.quadTo(325.266f, 154.544f, 323.166f, 153.644f);
        path.quadTo(322.116f, 147.594f, 319.766f, 141.644f);
        path.lineTo(317.116f, 135.294f);
        path.quadTo(315.266f, 131.294f, 312.716f, 127.144f);
        path.lineTo(315.166f, 124.694f);
        path.lineTo(318.166f, 120.394f);
        path.quadTo(319.016f, 122.644f, 319.866f, 123.644f);
        path.quadTo(321.516f, 125.444f, 324.416f, 125.444f);
        path.quadTo(328.766f, 124.294f, 328.766f, 121.794f);
        path.quadTo(328.766f, 120.644f, 329.616f, 117.294f);
        path.lineTo(330.366f, 112.794f);
        path.lineTo(330.316f, 111.144f);
        path.lineTo(330.116f, 110.944f);
        path.close();
        path.moveTo(338.448f, 129.128f);
        path.lineTo(341.098f, 131.478f);
        path.quadTo(339.248f, 134.078f, 337.298f, 138.278f);
        path.lineTo(336.448f, 137.228f);
        path.quadTo(337.348f, 132.328f, 338.248f, 128.878f);
        path.lineTo(338.448f, 129.128f);
        path.close();
        path.moveTo(354.561f, 113.936f);
        path.quadTo(353.561f, 114.486f, 352.361f, 115.836f);
        path.quadTo(350.861f, 117.486f, 350.861f, 118.536f);
        path.quadTo(350.861f, 119.986f, 351.711f, 119.886f);
        path.lineTo(352.461f, 119.486f);
        path.quadTo(354.008f, 116.422f, 354.561f, 113.936f);
        path.close();
        path.moveTo(298.628f, 111.174f);
        path.lineTo(298.628f, 111.824f);
        path.lineTo(295.728f, 109.274f);
        path.quadTo(296.978f, 108.674f, 298.228f, 108.224f);
        path.quadTo(302.528f, 113.874f, 306.228f, 119.574f);
        path.quadTo(303.028f, 115.874f, 299.278f, 112.424f);
        path.lineTo(299.328f, 111.174f);
        path.lineTo(298.628f, 111.174f);
        path.close();
        path.moveTo(299.089f, 114.443f);
        path.lineTo(299.139f, 113.843f);
        path.quadTo(303.589f, 118.693f, 307.039f, 123.093f);
        path.lineTo(308.339f, 125.693f);
        path.quadTo(304.689f, 121.343f, 299.289f, 119.843f);
        path.lineTo(299.189f, 119.343f);
        path.quadTo(298.858f, 117.389f, 299.089f, 114.443f);
        path.close();
        path.moveTo(294.255f, 118.54f);
        path.lineTo(294.255f, 114.39f);
        path.lineTo(296.355f, 114.34f);
        path.quadTo(294.655f, 113.49f, 292.855f, 112.79f);
        path.lineTo(292.855f, 119.04f);
        path.quadTo(296.805f, 123.84f, 299.555f, 133.54f);
        path.quadTo(302.055f, 142.24f, 302.055f, 148.69f);
        path.quadTo(302.055f, 152.09f, 299.855f, 163.39f);
        path.lineTo(298.555f, 169.64f);
        path.lineTo(299.855f, 166.49f);
        path.quadTo(303.455f, 156.94f, 303.455f, 148.59f);
        path.quadTo(303.455f, 143.89f, 300.105f, 133.14f);
        path.quadTo(296.879f, 122.453f, 294.255f, 118.54f);
        path.close();
        path.moveTo(312.853f, 131.614f);
        path.lineTo(312.353f, 130.564f);
        path.lineTo(314.103f, 133.414f);
        path.lineTo(315.503f, 136.164f);
        path.quadTo(315.853f, 137.464f, 315.853f, 138.414f);
        path.lineTo(315.803f, 140.764f);
        path.lineTo(315.753f, 140.664f);
        path.quadTo(314.372f, 135.297f, 312.853f, 131.614f);
        path.close();
        path.moveTo(299.825f, 121.348f);
        path.quadTo(302.625f, 123.098f, 304.875f, 125.348f);
        path.quadTo(301.206f, 124.432f, 299.825f, 121.348f);
        path.close();
        path.moveTo(318.331f, 146.161f);
        path.lineTo(317.431f, 144.361f);
        path.lineTo(317.531f, 142.211f);
        path.lineTo(317.481f, 140.561f);
        path.quadTo(319.631f, 145.811f, 320.881f, 150.511f);
        path.lineTo(321.331f, 152.961f);
        path.lineTo(319.831f, 152.661f);
        path.lineTo(319.081f, 149.211f);
        path.lineTo(318.681f, 146.161f);
        path.lineTo(318.331f, 146.161f);
        path.close();
        path.moveTo(315.891f, 155.368f);
        path.lineTo(316.291f, 155.418f);
        path.quadTo(316.141f, 158.468f, 314.091f, 164.218f);
        path.lineTo(312.391f, 168.768f);
        path.lineTo(311.591f, 165.368f);
        path.quadTo(313.241f, 161.368f, 314.591f, 157.168f);
        path.quadTo(315.991f, 152.718f, 316.741f, 149.168f);
        path.lineTo(317.541f, 152.668f);
        path.lineTo(316.391f, 152.818f);
        path.lineTo(316.341f, 153.518f);
        path.lineTo(316.141f, 153.518f);
        path.lineTo(316.291f, 154.068f);
        path.lineTo(315.891f, 155.368f);
        path.close();
        path.moveTo(318.654f, 152.652f);
        path.lineTo(318.504f, 152.652f);
        path.lineTo(318.104f, 150.902f);
        path.lineTo(318.654f, 152.652f);
        path.close();
        path.moveTo(320.495f, 156.196f);
        path.lineTo(321.795f, 156.596f);
        path.quadTo(322.145f, 159.746f, 322.145f, 163.096f);
        path.lineTo(322.145f, 164.596f);
        path.lineTo(321.495f, 161.296f);
        path.lineTo(320.495f, 156.196f);
        path.close();
        path.moveTo(319.206f, 155.874f);
        path.lineTo(319.256f, 156.324f);
        path.quadTo(319.806f, 162.174f, 319.806f, 164.124f);
        path.lineTo(319.356f, 169.674f);
        path.lineTo(318.256f, 168.924f);
        path.lineTo(316.106f, 167.124f);
        path.lineTo(315.856f, 167.774f);
        path.quadTo(316.956f, 168.274f, 318.106f, 170.324f);
        path.lineTo(319.156f, 171.124f);
        path.lineTo(318.656f, 173.074f);
        path.lineTo(314.106f, 171.124f);
        path.quadTo(316.956f, 163.374f, 317.006f, 155.524f);
        path.lineTo(319.206f, 155.874f);
        path.close();
        path.moveTo(287.258f, 158.82f);
        path.lineTo(286.408f, 158.82f);
        path.lineTo(287.808f, 157.42f);
        path.quadTo(287.958f, 158.12f, 287.358f, 158.82f);
        path.lineTo(287.258f, 158.82f);
        path.close();
        path.moveTo(320.495f, 161.767f);
        path.lineTo(321.395f, 168.667f);
        path.lineTo(321.195f, 170.067f);
        path.lineTo(320.995f, 170.067f);
        path.lineTo(320.995f, 169.617f);
        path.lineTo(320.295f, 160.217f);
        path.lineTo(320.495f, 161.767f);
        path.close();
        path.moveTo(311.242f, 171.342f);
        path.lineTo(309.242f, 175.542f);
        path.quadTo(306.892f, 178.692f, 301.992f, 182.942f);
        path.lineTo(305.492f, 177.442f);
        path.quadTo(308.392f, 172.492f, 310.742f, 167.292f);
        path.lineTo(311.242f, 169.992f);
        path.lineTo(310.392f, 169.642f);
        path.lineTo(310.142f, 170.342f);
        path.lineTo(311.242f, 171.292f);
        path.lineTo(311.242f, 171.342f);
        path.close();
        path.moveTo(320.863f, 171.756f);
        path.lineTo(320.913f, 171.756f);
        path.lineTo(320.813f, 172.406f);
        path.lineTo(320.863f, 171.756f);
        path.close();
        path.moveTo(317.825f, 176.129f);
        path.lineTo(317.125f, 178.079f);
        path.quadTo(314.275f, 185.579f, 309.275f, 189.379f);
        path.lineTo(308.875f, 188.829f);
        path.quadTo(312.825f, 183.629f, 314.975f, 178.379f);
        path.quadTo(314.275f, 179.079f, 309.975f, 185.429f);
        path.lineTo(308.325f, 187.879f);
        path.lineTo(306.775f, 184.679f);
        path.quadTo(310.925f, 178.829f, 313.425f, 172.979f);
        path.lineTo(317.825f, 176.129f);
        path.close();
        path.moveTo(319.62f, 177.326f);
        path.lineTo(319.77f, 177.426f);
        path.lineTo(318.47f, 182.276f);
        path.quadTo(317.12f, 185.226f, 315.32f, 187.926f);
        path.quadTo(313.77f, 190.276f, 311.87f, 192.326f);
        path.lineTo(309.67f, 189.976f);
        path.quadTo(315.32f, 186.276f, 318.27f, 180.376f);
        path.lineTo(319.62f, 177.326f);
        path.close();
        path.moveTo(336.009f, 139.21f);
        path.lineTo(336.509f, 139.81f);
        path.lineTo(335.559f, 141.86f);
        path.lineTo(335.509f, 141.81f);
        path.lineTo(335.509f, 141.66f);
        path.lineTo(336.009f, 139.21f);
        path.close();
        path.moveTo(334.582f, 137.368f);
        path.lineTo(334.032f, 139.768f);
        path.quadTo(332.682f, 137.468f, 332.682f, 134.968f);
        path.lineTo(332.732f, 134.218f);
        path.lineTo(334.582f, 137.368f);
        path.close();
        path.moveTo(337.436f, 143.353f);
        path.lineTo(338.186f, 141.403f);
        path.quadTo(340.136f, 143.103f, 342.336f, 144.253f);
        path.quadTo(339.507f, 144.55f, 337.436f, 143.353f);
        path.close();
        path.moveTo(331.589f, 160.662f);
        path.lineTo(331.539f, 162.012f);
        path.quadTo(331.539f, 170.312f, 331.939f, 172.912f);
        path.lineTo(331.989f, 173.162f);
        path.lineTo(329.039f, 170.262f);
        path.quadTo(329.239f, 168.812f, 329.639f, 167.212f);
        path.quadTo(330.639f, 165.062f, 330.639f, 163.512f);
        path.lineTo(330.639f, 163.162f);
        path.lineTo(331.489f, 160.312f);
        path.lineTo(331.589f, 160.662f);
        path.close();
        path.moveTo(323.948f, 166.278f);
        path.lineTo(323.948f, 163.828f);
        path.lineTo(323.948f, 162.978f);
        path.lineTo(323.698f, 157.328f);
        path.quadTo(328.247f, 159.478f, 328.348f, 163.528f);
        path.lineTo(327.698f, 166.678f);
        path.lineTo(327.448f, 167.128f);
        path.quadTo(326.848f, 168.228f, 325.848f, 168.928f);
        path.lineTo(323.948f, 167.378f);
        path.lineTo(323.948f, 166.278f);
        path.close();
        path.moveTo(330.3f, 172.861f);
        path.lineTo(328.75f, 171.411f);
        path.lineTo(328.95f, 170.411f);
        path.lineTo(330.3f, 172.861f);
        path.close();
        path.moveTo(326.019f, 171.894f);
        path.lineTo(326.969f, 172.744f);
        path.lineTo(326.919f, 173.894f);
        path.lineTo(327.119f, 178.844f);
        path.lineTo(327.169f, 179.144f);
        path.lineTo(325.719f, 177.394f);
        path.lineTo(323.969f, 175.994f);
        path.lineTo(323.419f, 172.144f);
        path.lineTo(324.869f, 172.194f);
        path.lineTo(326.019f, 171.894f);
        path.close();
        path.moveTo(324.546f, 169.593f);
        path.lineTo(323.746f, 169.143f);
        path.lineTo(323.846f, 168.393f);
        path.lineTo(324.896f, 169.493f);
        path.lineTo(324.546f, 169.593f);
        path.close();
        path.moveTo(330.162f, 175.807f);
        path.lineTo(329.912f, 175.607f);
        path.lineTo(330.162f, 175.857f);
        path.lineTo(329.012f, 181.457f);
        path.lineTo(328.662f, 181.007f);
        path.quadTo(328.062f, 180.057f, 328.062f, 178.607f);
        path.quadTo(328.062f, 176.457f, 328.412f, 173.957f);
        path.lineTo(330.212f, 175.707f);
        path.lineTo(330.162f, 175.807f);
        path.close();
        path.moveTo(336.883f, 180.227f);
        path.lineTo(334.333f, 176.077f);
        path.lineTo(333.783f, 170.727f);
        path.lineTo(333.083f, 164.127f);
        path.quadTo(336.733f, 172.427f, 341.133f, 181.427f);
        path.quadTo(343.183f, 186.427f, 344.233f, 192.127f);
        path.quadTo(342.783f, 189.077f, 340.733f, 185.777f);
        path.lineTo(337.533f, 181.227f);
        path.lineTo(337.383f, 180.477f);
        path.lineTo(337.083f, 180.227f);
        path.lineTo(336.883f, 180.227f);
        path.close();
        path.moveTo(332.234f, 178.707f);
        path.lineTo(332.234f, 178.557f);
        path.quadTo(333.884f, 181.907f, 334.984f, 184.857f);
        path.lineTo(333.734f, 190.407f);
        path.quadTo(331.834f, 199.007f, 330.484f, 203.107f);
        path.quadTo(327.884f, 210.957f, 323.834f, 214.157f);
        path.lineTo(321.934f, 214.457f);
        path.quadTo(319.634f, 213.607f, 317.784f, 212.257f);
        path.quadTo(321.584f, 208.307f, 324.984f, 201.257f);
        path.quadTo(327.834f, 200.007f, 329.784f, 196.907f);
        path.quadTo(331.134f, 194.857f, 332.484f, 190.357f);
        path.quadTo(331.384f, 191.007f, 330.334f, 192.907f);
        path.lineTo(328.384f, 196.357f);
        path.quadTo(327.434f, 197.707f, 326.184f, 198.607f);
        path.lineTo(326.234f, 198.407f);
        path.quadTo(328.834f, 192.357f, 330.784f, 185.157f);
        path.quadTo(332.234f, 179.766f, 332.234f, 178.707f);
        path.close();
        path.moveTo(355.712f, 161.675f);
        path.lineTo(355.612f, 160.275f);
        path.lineTo(355.462f, 160.675f);
        path.lineTo(350.462f, 159.325f);
        path.lineTo(348.312f, 159.075f);
        path.quadTo(348.312f, 160.475f, 346.512f, 162.675f);
        path.quadTo(344.662f, 164.875f, 344.662f, 165.975f);
        path.lineTo(347.912f, 166.475f);
        path.quadTo(348.112f, 166.525f, 348.112f, 167.775f);
        path.quadTo(348.112f, 169.225f, 347.812f, 169.775f);
        path.lineTo(347.412f, 170.575f);
        path.quadTo(348.412f, 170.725f, 348.762f, 170.975f);
        path.lineTo(349.262f, 171.725f);
        path.quadTo(355.712f, 166.462f, 355.712f, 161.675f);
        path.close();
        path.moveTo(354.561f, 161.122f);
        path.quadTo(354.561f, 161.822f, 354.111f, 162.522f);
        path.lineTo(353.361f, 162.922f);
        path.lineTo(352.911f, 162.972f);
        path.lineTo(352.361f, 162.122f);
        path.lineTo(352.011f, 161.122f);
        path.lineTo(353.311f, 161.022f);
        path.lineTo(354.561f, 161.122f);
        path.close();
        path.moveTo(351.799f, 165.127f);
        path.lineTo(351.599f, 164.827f);
        path.lineTo(349.299f, 164.827f);
        path.lineTo(349.299f, 164.127f);
        path.quadTo(349.299f, 162.027f, 349.999f, 161.377f);
        path.quadTo(350.949f, 161.377f, 351.349f, 161.677f);
        path.quadTo(352.049f, 162.227f, 352.049f, 163.727f);
        path.quadTo(352.029f, 165.173f, 351.799f, 165.127f);
        path.close();
        path.moveTo(345.814f, 164.805f);
        path.lineTo(348.114f, 162.505f);
        path.lineTo(348.314f, 164.805f);
        path.lineTo(345.814f, 164.805f);
        path.close();
        path.moveTo(188.191f, 180.273f);
        path.quadTo(187.841f, 179.123f, 187.841f, 177.473f);
        path.quadTo(187.841f, 171.523f, 196.241f, 171.223f);
        path.lineTo(200.391f, 171.223f);
        path.quadTo(201.091f, 177.623f, 202.741f, 181.873f);
        path.quadTo(200.691f, 180.673f, 195.991f, 180.673f);
        path.quadTo(194.541f, 180.673f, 192.391f, 181.423f);
        path.lineTo(189.441f, 182.523f);
        path.quadTo(188.513f, 181.285f, 188.191f, 180.273f);
        path.close();
        path.moveTo(201.863f, 163.148f);
        path.lineTo(203.113f, 167.948f);
        path.lineTo(201.463f, 167.648f);
        path.quadTo(201.263f, 164.498f, 201.263f, 160.998f);
        path.lineTo(201.263f, 159.948f);
        path.lineTo(201.863f, 163.148f);
        path.close();
        path.moveTo(205.684f, 168.626f);
        path.quadTo(204.434f, 164.326f, 203.484f, 159.826f);
        path.lineTo(205.734f, 164.276f);
        path.quadTo(207.434f, 167.176f, 209.584f, 169.926f);
        path.quadTo(207.525f, 169.132f, 205.684f, 168.626f);
        path.close();
        path.moveTo(201.817f, 171.204f);
        path.lineTo(203.617f, 171.204f);
        path.lineTo(204.067f, 171.204f);
        path.quadTo(206.617f, 179.454f, 210.217f, 186.754f);
        path.quadTo(212.817f, 191.904f, 215.767f, 196.254f);
        path.quadTo(207.767f, 190.804f, 204.267f, 181.804f);
        path.quadTo(202.553f, 177.464f, 201.817f, 171.204f);
        path.close();
        path.moveTo(202.185f, 184.6f);
        path.lineTo(201.535f, 186.0f);
        path.quadTo(201.285f, 186.9f, 201.285f, 187.4f);
        path.lineTo(194.485f, 187.6f);
        path.quadTo(193.135f, 187.6f, 190.835f, 184.15f);
        path.quadTo(192.185f, 183.45f, 192.185f, 182.8f);
        path.quadTo(196.135f, 182.05f, 199.185f, 183.1f);
        path.quadTo(200.804f, 183.633f, 202.185f, 184.6f);
        path.close();
        path.moveTo(190.999f, 199.239f);
        path.lineTo(191.299f, 199.339f);
        path.lineTo(189.699f, 200.989f);
        path.lineTo(187.849f, 202.789f);
        path.lineTo(188.099f, 202.089f);
        path.lineTo(190.599f, 199.339f);
        path.lineTo(190.999f, 199.239f);
        path.close();
        path.moveTo(183.403f, 219.494f);
        path.quadTo(176.703f, 218.444f, 173.803f, 220.244f);
        path.quadTo(171.453f, 221.744f, 171.453f, 225.444f);
        path.lineTo(171.353f, 227.344f);
        path.quadTo(171.453f, 229.344f, 172.603f, 231.044f);
        path.quadTo(175.853f, 235.894f, 186.353f, 236.344f);
        path.quadTo(182.403f, 238.844f, 178.553f, 243.194f);
        path.quadTo(171.203f, 251.344f, 171.203f, 256.444f);
        path.quadTo(171.203f, 257.894f, 171.353f, 258.394f);
        path.lineTo(171.703f, 259.194f);
        path.lineTo(174.453f, 258.944f);
        path.lineTo(174.203f, 258.494f);
        path.quadTo(173.403f, 251.594f, 178.403f, 245.344f);
        path.quadTo(184.703f, 237.444f, 198.403f, 234.094f);
        path.quadTo(198.253f, 233.694f, 196.703f, 233.394f);
        path.lineTo(195.903f, 233.294f);
        path.lineTo(198.153f, 232.244f);
        path.lineTo(195.303f, 233.244f);
        path.lineTo(195.153f, 233.194f);
        path.quadTo(192.153f, 233.444f, 189.253f, 234.794f);
        path.quadTo(174.903f, 234.694f, 173.103f, 227.444f);
        path.quadTo(174.103f, 227.144f, 175.103f, 226.544f);
        path.quadTo(177.003f, 225.144f, 178.253f, 224.344f);
        path.quadTo(183.503f, 221.194f, 194.453f, 221.194f);
        path.lineTo(194.603f, 221.194f);
        path.quadTo(188.835f, 219.494f, 183.403f, 219.494f);
        path.close();
        path.moveTo(196.891f, 221.934f);
        path.lineTo(198.741f, 223.284f);
        path.quadTo(201.091f, 225.334f, 202.441f, 225.334f);
        path.lineTo(203.991f, 225.134f);
        path.lineTo(203.791f, 224.884f);
        path.quadTo(200.298f, 223.131f, 196.891f, 221.934f);
        path.close();
        path.moveTo(155.046f, 202.001f);
        path.lineTo(154.995f, 196.951f);
        path.quadTo(154.495f, 194.351f, 151.945f, 192.851f);
        path.lineTo(147.796f, 196.651f);
        path.quadTo(145.346f, 199.151f, 142.046f, 203.701f);
        path.quadTo(142.195f, 204.401f, 143.145f, 206.551f);
        path.quadTo(143.895f, 208.251f, 143.895f, 209.551f);
        path.lineTo(143.445f, 213.301f);
        path.quadTo(143.046f, 215.801f, 143.195f, 217.051f);
        path.quadTo(152.845f, 216.951f, 155.595f, 218.251f);
        path.lineTo(156.795f, 219.151f);
        path.quadTo(157.195f, 219.551f, 157.795f, 219.551f);
        path.quadTo(159.195f, 219.551f, 159.295f, 219.251f);
        path.lineTo(159.095f, 218.851f);
        path.quadTo(158.645f, 216.501f, 157.245f, 215.401f);
        path.lineTo(163.445f, 211.951f);
        path.quadTo(155.046f, 208.768f, 155.046f, 202.001f);
        path.close();
        path.moveTo(148.048f, 202.461f);
        path.lineTo(148.048f, 202.561f);
        path.quadTo(148.848f, 197.711f, 151.698f, 194.261f);
        path.quadTo(153.598f, 194.261f, 154.098f, 196.961f);
        path.lineTo(154.248f, 200.461f);
        path.lineTo(153.998f, 204.361f);
        path.lineTo(152.648f, 203.261f);
        path.quadTo(151.298f, 202.311f, 149.848f, 202.311f);
        path.lineTo(148.048f, 202.461f);
        path.close();
        path.moveTo(150.304f, 205.914f);
        path.quadTo(152.054f, 207.714f, 153.804f, 210.314f);
        path.quadTo(155.354f, 212.814f, 155.354f, 213.614f);
        path.quadTo(155.354f, 215.014f, 155.004f, 215.164f);
        path.lineTo(154.654f, 214.964f);
        path.lineTo(151.904f, 215.214f);
        path.quadTo(150.854f, 214.514f, 148.304f, 212.164f);
        path.quadTo(145.204f, 209.314f, 145.204f, 208.514f);
        path.quadTo(145.24f, 200.942f, 150.304f, 205.914f);
        path.close();
        path.moveTo(143.675f, 205.73f);
        path.quadTo(143.175f, 204.83f, 143.175f, 204.38f);
        path.lineTo(144.475f, 204.23f);
        path.lineTo(145.725f, 204.18f);
        path.quadTo(145.175f, 204.78f, 144.825f, 205.93f);
        path.lineTo(144.325f, 206.93f);
        path.lineTo(143.675f, 205.73f);
        path.close();
        path.moveTo(145.24f, 210.84f);
        path.lineTo(145.24f, 210.64f);
        path.lineTo(147.64f, 212.64f);
        path.lineTo(150.34f, 215.24f);
        path.lineTo(144.34f, 215.44f);
        path.quadTo(144.319f, 212.681f, 145.24f, 210.84f);
        path.close();
        path.moveTo(155.69f, 210.564f);
        path.quadTo(155.14f, 208.964f, 155.14f, 208.064f);
        path.quadTo(153.49f, 206.664f, 156.99f, 208.914f);
        path.quadTo(160.54f, 211.214f, 160.89f, 211.764f);
        path.quadTo(159.94f, 212.714f, 156.74f, 213.364f);
        path.lineTo(155.69f, 210.564f);
        path.close();
        path.moveTo(156.473f, 216.824f);
        path.quadTo(156.823f, 217.074f, 157.223f, 217.974f);
        path.lineTo(155.423f, 217.174f);
        path.lineTo(153.773f, 216.374f);
        path.quadTo(155.92f, 216.41f, 156.473f, 216.824f);
        path.close();
        path.moveTo(184.278f, 242.65f);
        path.lineTo(183.228f, 242.4f);
        path.quadTo(181.128f, 243.15f, 180.178f, 247.15f);
        path.quadTo(179.528f, 249.8f, 179.528f, 253.3f);
        path.quadTo(179.528f, 255.0f, 180.678f, 256.15f);
        path.quadTo(183.278f, 258.75f, 190.578f, 258.75f);
        path.quadTo(193.878f, 258.75f, 197.528f, 256.25f);
        path.quadTo(196.478f, 258.6f, 195.928f, 261.25f);
        path.quadTo(195.428f, 263.65f, 195.278f, 267.6f);
        path.lineTo(195.178f, 269.55f);
        path.lineTo(195.178f, 269.95f);
        path.lineTo(195.178f, 270.25f);
        path.lineTo(195.178f, 271.65f);
        path.quadTo(195.178f, 272.25f, 195.578f, 272.85f);
        path.quadTo(196.178f, 274.6f, 197.978f, 274.6f);
        path.lineTo(198.228f, 274.6f);
        path.lineTo(201.878f, 275.1f);
        path.quadTo(208.628f, 275.1f, 213.628f, 268.15f);
        path.quadTo(213.778f, 269.3f, 214.378f, 270.55f);
        path.lineTo(215.578f, 272.2f);
        path.lineTo(215.528f, 272.55f);
        path.quadTo(215.528f, 274.1f, 216.028f, 274.85f);
        path.quadTo(217.328f, 276.9f, 221.778f, 276.9f);
        path.quadTo(226.378f, 276.9f, 229.828f, 254.85f);
        path.lineTo(229.828f, 254.2f);
        path.lineTo(229.828f, 254.15f);
        path.quadTo(229.828f, 252.05f, 229.328f, 249.3f);
        path.lineTo(228.678f, 249.3f);
        path.lineTo(228.578f, 250.7f);
        path.quadTo(228.428f, 251.5f, 228.428f, 252.75f);
        path.lineTo(228.528f, 254.3f);
        path.lineTo(227.678f, 261.65f);
        path.lineTo(227.728f, 260.6f);
        path.lineTo(227.678f, 258.95f);
        path.lineTo(227.528f, 258.5f);
        path.lineTo(226.828f, 258.75f);
        path.quadTo(226.828f, 261.9f, 225.028f, 265.8f);
        path.quadTo(222.328f, 271.4f, 217.378f, 271.4f);
        path.lineTo(216.928f, 271.3f);
        path.lineTo(216.728f, 267.6f);
        path.lineTo(216.528f, 263.0f);
        path.lineTo(217.828f, 259.75f);
        path.quadTo(218.778f, 257.15f, 218.778f, 256.45f);
        path.quadTo(218.778f, 254.35f, 218.278f, 253.0f);
        path.lineTo(217.628f, 253.0f);
        path.lineTo(217.528f, 254.35f);
        path.quadTo(215.228f, 254.1f, 214.178f, 259.25f);
        path.quadTo(213.478f, 262.65f, 213.478f, 267.05f);
        path.lineTo(213.528f, 267.7f);
        path.quadTo(210.528f, 271.5f, 205.278f, 272.7f);
        path.lineTo(207.678f, 270.45f);
        path.quadTo(209.128f, 268.55f, 210.928f, 263.1f);
        path.lineTo(210.228f, 263.1f);
        path.lineTo(206.928f, 268.2f);
        path.quadTo(203.628f, 272.1f, 199.778f, 272.1f);
        path.lineTo(197.528f, 271.75f);
        path.lineTo(197.028f, 271.4f);
        path.quadTo(196.378f, 265.55f, 199.528f, 257.6f);
        path.quadTo(200.478f, 255.1f, 201.728f, 252.7f);
        path.lineTo(202.878f, 251.45f);
        path.lineTo(209.078f, 243.3f);
        path.quadTo(207.978f, 243.75f, 203.828f, 248.9f);
        path.quadTo(205.428f, 246.25f, 207.228f, 243.8f);
        path.quadTo(202.928f, 246.45f, 199.778f, 252.45f);
        path.lineTo(199.228f, 253.2f);
        path.quadTo(194.178f, 256.65f, 188.128f, 256.65f);
        path.quadTo(183.378f, 256.65f, 181.878f, 253.95f);
        path.quadTo(181.128f, 252.6f, 181.128f, 249.4f);
        path.quadTo(181.128f, 247.55f, 181.628f, 246.6f);
        path.quadTo(182.528f, 244.65f, 185.528f, 243.3f);
        path.quadTo(185.382f, 243.018f, 184.278f, 242.65f);
        path.close();
        path.moveTo(187.822f, 290.71f);
        path.lineTo(188.272f, 290.21f);
        path.lineTo(187.172f, 289.26f);
        path.lineTo(186.222f, 288.86f);
        path.quadTo(185.522f, 288.86f, 185.272f, 289.76f);
        path.quadTo(185.521f, 290.48f, 187.822f, 290.71f);
        path.close();
        path.moveTo(163.424f, 286.337f);
        path.lineTo(163.424f, 291.187f);
        path.lineTo(165.624f, 291.937f);
        path.lineTo(167.124f, 292.087f);
        path.lineTo(165.724f, 291.037f);
        path.lineTo(164.324f, 289.587f);
        path.quadTo(167.874f, 290.587f, 168.874f, 289.487f);
        path.quadTo(169.174f, 289.137f, 169.174f, 287.937f);
        path.quadTo(169.174f, 286.587f, 168.024f, 286.137f);
        path.lineTo(163.424f, 286.337f);
        path.close();
        path.moveTo(167.567f, 287.488f);
        path.quadTo(167.567f, 288.188f, 164.317f, 288.438f);
        path.lineTo(164.317f, 287.938f);
        path.quadTo(164.517f, 287.438f, 165.967f, 287.338f);
        path.lineTo(167.567f, 287.488f);
        path.close();
        path.moveTo(358.243f, 183.909f);
        path.lineTo(356.194f, 183.659f);
        path.quadTo(355.743f, 184.109f, 355.293f, 185.209f);
        path.quadTo(354.793f, 186.659f, 354.793f, 188.059f);
        path.lineTo(355.743f, 187.809f);
        path.quadTo(355.743f, 186.809f, 356.344f, 185.859f);
        path.quadTo(356.893f, 185.009f, 357.594f, 184.809f);
        path.quadTo(357.594f, 186.659f, 358.044f, 187.109f);
        path.quadTo(358.494f, 186.659f, 358.494f, 185.959f);
        path.lineTo(358.243f, 183.909f);
        path.close();
        path.moveTo(345.124f, 202.692f);
        path.lineTo(345.124f, 203.042f);
        path.lineTo(345.124f, 203.092f);
        path.quadTo(345.074f, 204.242f, 342.574f, 207.092f);
        path.lineTo(341.024f, 208.742f);
        path.quadTo(341.524f, 206.192f, 341.674f, 201.892f);
        path.quadTo(342.424f, 200.192f, 342.574f, 198.642f);
        path.lineTo(341.674f, 200.142f);
        path.lineTo(341.674f, 199.892f);
        path.quadTo(341.674f, 194.742f, 340.524f, 189.892f);
        path.lineTo(340.524f, 189.242f);
        path.quadTo(344.824f, 196.792f, 345.124f, 202.392f);
        path.lineTo(345.124f, 202.692f);
        path.close();
        path.moveTo(324.04f, 181.055f);
        path.quadTo(326.49f, 183.655f, 326.49f, 185.805f);
        path.quadTo(327.04f, 188.055f, 326.09f, 190.055f);
        path.quadTo(324.64f, 192.955f, 320.09f, 193.755f);
        path.quadTo(323.441f, 187.684f, 324.04f, 181.055f);
        path.close();
        path.moveTo(328.643f, 183.357f);
        path.lineTo(328.393f, 181.957f);
        path.lineTo(328.843f, 182.357f);
        path.lineTo(328.643f, 183.357f);
        path.close();
        path.moveTo(325.098f, 195.464f);
        path.lineTo(324.598f, 196.614f);
        path.lineTo(322.798f, 200.214f);
        path.lineTo(318.448f, 200.714f);
        path.quadTo(316.998f, 200.714f, 316.998f, 200.164f);
        path.lineTo(317.298f, 199.564f);
        path.quadTo(318.148f, 198.664f, 317.598f, 197.664f);
        path.lineTo(318.748f, 196.014f);
        path.lineTo(323.048f, 196.314f);
        path.quadTo(324.132f, 196.339f, 325.098f, 195.464f);
        path.close();
        path.moveTo(337.252f, 192.886f);
        path.quadTo(335.452f, 195.536f, 334.502f, 198.186f);
        path.lineTo(337.602f, 195.686f);
        path.lineTo(337.752f, 198.986f);
        path.quadTo(337.652f, 203.036f, 335.002f, 206.936f);
        path.quadTo(332.002f, 211.436f, 326.602f, 213.386f);
        path.quadTo(329.602f, 208.886f, 332.452f, 200.936f);
        path.quadTo(334.502f, 195.136f, 336.152f, 188.436f);
        path.lineTo(337.252f, 192.886f);
        path.close();
        path.moveTo(340.336f, 211.3f);
        path.lineTo(340.536f, 211.3f);
        path.quadTo(342.336f, 210.9f, 344.486f, 208.75f);
        path.lineTo(345.136f, 208.75f);
        path.quadTo(346.586f, 208.75f, 346.836f, 208.3f);
        path.lineTo(346.986f, 207.8f);
        path.lineTo(346.986f, 206.85f);
        path.lineTo(349.486f, 209.5f);
        path.lineTo(347.136f, 211.85f);
        path.quadTo(344.186f, 212.95f, 339.286f, 213.6f);
        path.lineTo(340.336f, 211.3f);
        path.close();
        path.moveTo(337.344f, 211.392f);
        path.lineTo(336.344f, 213.942f);
        path.lineTo(331.344f, 214.292f);
        path.lineTo(331.544f, 214.092f);
        path.quadTo(335.544f, 210.492f, 338.094f, 207.342f);
        path.quadTo(337.804f, 209.919f, 337.344f, 211.392f);
        path.close();
        path.moveTo(327.308f, 217.653f);
        path.lineTo(328.558f, 217.853f);
        path.lineTo(327.158f, 220.253f);
        path.quadTo(329.708f, 220.303f, 330.558f, 218.103f);
        path.lineTo(332.658f, 218.203f);
        path.lineTo(333.708f, 218.203f);
        path.quadTo(330.958f, 221.703f, 326.658f, 225.103f);
        path.quadTo(320.958f, 226.253f, 309.208f, 226.253f);
        path.quadTo(304.458f, 226.253f, 299.158f, 222.403f);
        path.lineTo(299.258f, 220.903f);
        path.lineTo(300.258f, 221.153f);
        path.quadTo(304.658f, 223.953f, 312.858f, 223.953f);
        path.quadTo(319.114f, 223.96f, 327.308f, 217.653f);
        path.close();
        path.moveTo(323.855f, 216.64f);
        path.lineTo(324.605f, 216.94f);
        path.quadTo(317.505f, 221.69f, 311.155f, 221.69f);
        path.lineTo(308.455f, 221.54f);
        path.lineTo(304.255f, 220.64f);
        path.quadTo(301.455f, 219.64f, 299.505f, 217.74f);
        path.lineTo(299.305f, 217.44f);
        path.lineTo(299.305f, 216.49f);
        path.lineTo(299.305f, 216.04f);
        path.lineTo(299.705f, 215.54f);
        path.lineTo(300.155f, 214.99f);
        path.quadTo(302.555f, 215.94f, 305.405f, 216.39f);
        path.quadTo(306.455f, 217.29f, 307.355f, 217.29f);
        path.quadTo(311.205f, 217.29f, 314.755f, 214.84f);
        path.lineTo(316.105f, 215.29f);
        path.lineTo(316.955f, 216.19f);
        path.lineTo(315.205f, 215.94f);
        path.lineTo(314.955f, 216.59f);
        path.lineTo(316.555f, 218.24f);
        path.quadTo(317.355f, 219.14f, 318.405f, 219.14f);
        path.quadTo(321.231f, 219.126f, 323.855f, 216.64f);
        path.close();
        path.moveTo(351.338f, 223.085f);
        path.lineTo(354.988f, 222.935f);
        path.quadTo(360.188f, 223.985f, 361.638f, 228.285f);
        path.quadTo(360.238f, 230.085f, 358.688f, 233.535f);
        path.lineTo(356.888f, 233.635f);
        path.quadTo(354.138f, 233.635f, 351.788f, 230.435f);
        path.quadTo(349.738f, 227.585f, 349.738f, 225.235f);
        path.quadTo(349.727f, 223.684f, 351.338f, 223.085f);
        path.close();
        path.moveTo(319.16f, 187.362f);
        path.lineTo(320.86f, 183.412f);
        path.lineTo(321.71f, 181.112f);
        path.quadTo(321.11f, 187.362f, 318.11f, 193.962f);
        path.lineTo(316.36f, 194.012f);
        path.lineTo(316.21f, 194.012f);
        path.quadTo(317.779f, 191.091f, 319.16f, 187.362f);
        path.close();
        path.moveTo(304.659f, 187.454f);
        path.lineTo(307.259f, 189.254f);
        path.quadTo(304.309f, 193.204f, 301.359f, 196.104f);
        path.lineTo(296.809f, 200.154f);
        path.quadTo(295.859f, 198.804f, 294.559f, 197.854f);
        path.quadTo(298.959f, 194.304f, 303.009f, 189.404f);
        path.lineTo(304.659f, 187.454f);
        path.close();
        path.moveTo(307.835f, 190.354f);
        path.lineTo(308.285f, 190.804f);
        path.lineTo(308.585f, 190.654f);
        path.lineTo(308.785f, 190.854f);
        path.lineTo(310.335f, 193.204f);
        path.lineTo(310.585f, 193.654f);
        path.quadTo(305.335f, 198.754f, 297.885f, 201.954f);
        path.lineTo(297.335f, 200.954f);
        path.lineTo(299.585f, 198.954f);
        path.quadTo(304.435f, 194.454f, 308.035f, 190.004f);
        path.lineTo(308.185f, 190.154f);
        path.lineTo(307.835f, 190.354f);
        path.close();
        path.moveTo(305.764f, 186.533f);
        path.lineTo(305.514f, 186.333f);
        path.lineTo(305.614f, 186.283f);
        path.lineTo(305.764f, 186.533f);
        path.close();
        path.moveTo(307.697f, 201.126f);
        path.lineTo(305.797f, 202.976f);
        path.lineTo(305.147f, 203.226f);
        path.lineTo(307.697f, 201.126f);
        path.close();
        path.moveTo(312.209f, 202.323f);
        path.lineTo(311.509f, 202.323f);
        path.lineTo(311.509f, 206.673f);
        path.lineTo(312.309f, 207.723f);
        path.lineTo(312.009f, 208.773f);
        path.quadTo(311.459f, 210.573f, 310.559f, 211.773f);
        path.quadTo(307.809f, 213.173f, 304.609f, 214.073f);
        path.lineTo(304.459f, 214.273f);
        path.lineTo(301.009f, 213.873f);
        path.quadTo(303.609f, 210.123f, 304.509f, 206.773f);
        path.lineTo(308.109f, 203.473f);
        path.quadTo(310.359f, 202.173f, 312.409f, 199.723f);
        path.lineTo(312.659f, 203.023f);
        path.lineTo(312.659f, 204.923f);
        path.lineTo(312.609f, 205.473f);
        path.quadTo(312.163f, 203.935f, 312.209f, 202.323f);
        path.close();
        path.moveTo(315.569f, 195.188f);
        path.lineTo(317.319f, 195.688f);
        path.lineTo(314.669f, 200.288f);
        path.lineTo(313.969f, 197.838f);
        path.lineTo(315.569f, 195.188f);
        path.close();
        path.moveTo(315.891f, 199.883f);
        path.lineTo(315.891f, 200.033f);
        path.quadTo(316.641f, 200.783f, 317.691f, 201.333f);
        path.quadTo(319.241f, 202.083f, 320.741f, 202.083f);
        path.lineTo(321.591f, 202.083f);
        path.quadTo(318.691f, 206.333f, 314.691f, 209.283f);
        path.lineTo(314.391f, 208.883f);
        path.quadTo(314.991f, 205.783f, 314.991f, 202.883f);
        path.lineTo(314.841f, 200.933f);
        path.lineTo(314.991f, 200.933f);
        path.lineTo(315.891f, 199.883f);
        path.close();
        path.moveTo(299.319f, 189.894f);
        path.lineTo(302.419f, 186.494f);
        path.lineTo(302.419f, 186.544f);
        path.quadTo(297.819f, 192.894f, 293.069f, 196.894f);
        path.lineTo(291.619f, 196.294f);
        path.quadTo(296.833f, 193.347f, 299.319f, 189.894f);
        path.close();
        path.moveTo(289.329f, 197.674f);
        path.lineTo(289.179f, 199.674f);
        path.quadTo(284.229f, 202.774f, 279.029f, 203.524f);
        path.quadTo(283.579f, 201.374f, 287.829f, 198.174f);
        path.lineTo(288.479f, 197.924f);
        path.lineTo(289.379f, 197.474f);
        path.lineTo(289.329f, 197.674f);
        path.close();
        path.moveTo(289.375f, 201.495f);
        path.lineTo(289.775f, 203.095f);
        path.lineTo(290.225f, 204.395f);
        path.lineTo(289.675f, 204.745f);
        path.quadTo(283.175f, 206.395f, 275.375f, 206.945f);
        path.quadTo(275.525f, 207.395f, 281.425f, 207.895f);
        path.lineTo(281.675f, 207.945f);
        path.lineTo(276.325f, 209.245f);
        path.quadTo(275.825f, 208.195f, 275.175f, 207.645f);
        path.lineTo(274.675f, 208.095f);
        path.lineTo(275.375f, 209.395f);
        path.lineTo(274.375f, 209.595f);
        path.lineTo(274.225f, 207.495f);
        path.lineTo(275.225f, 205.045f);
        path.lineTo(275.875f, 204.845f);
        path.lineTo(278.825f, 205.095f);
        path.quadTo(283.437f, 205.085f, 289.375f, 201.495f);
        path.close();
        path.moveTo(290.756f, 200.62f);
        path.lineTo(292.106f, 199.67f);
        path.lineTo(294.256f, 202.02f);
        path.lineTo(291.356f, 203.77f);
        path.quadTo(290.987f, 202.369f, 290.756f, 200.62f);
        path.close();
        path.moveTo(290.526f, 198.825f);
        path.lineTo(290.476f, 198.225f);
        path.lineTo(290.876f, 198.525f);
        path.lineTo(290.526f, 198.825f);
        path.close();
        path.moveTo(294.899f, 202.922f);
        path.lineTo(294.999f, 203.072f);
        path.lineTo(294.499f, 203.222f);
        path.lineTo(294.899f, 202.922f);
        path.close();
        path.moveTo(303.462f, 204.855f);
        path.lineTo(301.862f, 205.955f);
        path.lineTo(299.112f, 207.605f);
        path.lineTo(299.012f, 206.555f);
        path.lineTo(302.562f, 204.855f);
        path.lineTo(302.762f, 204.855f);
        path.lineTo(303.462f, 204.855f);
        path.close();
        path.moveTo(296.695f, 207.295f);
        path.lineTo(296.845f, 208.795f);
        path.lineTo(294.195f, 209.895f);
        path.lineTo(292.995f, 208.095f);
        path.lineTo(296.695f, 207.295f);
        path.close();
        path.moveTo(296.971f, 212.313f);
        path.lineTo(296.621f, 212.063f);
        path.lineTo(296.971f, 211.863f);
        path.lineTo(296.971f, 212.313f);
        path.close();
        path.moveTo(296.695f, 213.003f);
        path.lineTo(296.245f, 213.703f);
        path.lineTo(295.095f, 212.853f);
        path.lineTo(295.995f, 212.453f);
        path.lineTo(296.695f, 213.003f);
        path.close();
        path.moveTo(299.319f, 213.188f);
        path.lineTo(299.319f, 212.438f);
        path.lineTo(300.119f, 210.088f);
        path.lineTo(301.669f, 208.988f);
        path.lineTo(299.319f, 213.188f);
        path.close();
        path.moveTo(286.429f, 208.262f);
        path.lineTo(288.979f, 208.312f);
        path.lineTo(292.129f, 208.162f);
        path.lineTo(292.479f, 208.612f);
        path.lineTo(293.579f, 210.112f);
        path.quadTo(287.529f, 212.412f, 279.679f, 213.662f);
        path.quadTo(279.229f, 211.462f, 278.829f, 211.062f);
        path.quadTo(278.279f, 211.612f, 278.229f, 211.862f);
        path.lineTo(278.129f, 213.812f);
        path.lineTo(278.129f, 213.912f);
        path.lineTo(277.629f, 213.962f);
        path.lineTo(277.429f, 212.612f);
        path.lineTo(277.079f, 211.212f);
        path.quadTo(281.734f, 210.518f, 286.429f, 208.262f);
        path.close();
        path.moveTo(289.882f, 221.888f);
        path.lineTo(290.182f, 221.888f);
        path.quadTo(286.632f, 225.188f, 282.432f, 225.538f);
        path.lineTo(279.632f, 221.738f);
        path.lineTo(277.932f, 218.938f);
        path.lineTo(280.182f, 218.438f);
        path.quadTo(283.207f, 221.888f, 289.882f, 221.888f);
        path.close();
        path.moveTo(292.874f, 218.712f);
        path.quadTo(290.224f, 219.812f, 286.874f, 219.812f);
        path.quadTo(283.274f, 219.812f, 281.474f, 218.112f);
        path.lineTo(282.974f, 217.512f);
        path.lineTo(282.724f, 216.812f);
        path.lineTo(280.674f, 217.162f);
        path.lineTo(280.524f, 216.962f);
        path.quadTo(286.074f, 216.312f, 291.024f, 214.512f);
        path.quadTo(291.171f, 216.502f, 292.874f, 218.712f);
        path.close();
        path.moveTo(294.347f, 220.553f);
        path.lineTo(294.447f, 220.503f);
        path.lineTo(296.397f, 222.253f);
        path.lineTo(296.997f, 222.703f);
        path.lineTo(296.747f, 226.853f);
        path.quadTo(296.247f, 230.753f, 294.997f, 232.853f);
        path.lineTo(290.847f, 227.853f);
        path.lineTo(290.547f, 228.253f);
        path.quadTo(290.247f, 228.653f, 290.147f, 229.003f);
        path.lineTo(294.147f, 234.003f);
        path.quadTo(293.047f, 235.103f, 291.497f, 235.203f);
        path.lineTo(289.947f, 233.753f);
        path.quadTo(289.447f, 231.753f, 289.197f, 229.903f);
        path.lineTo(288.547f, 229.903f);
        path.lineTo(288.497f, 232.303f);
        path.lineTo(283.947f, 227.403f);
        path.quadTo(289.283f, 227.136f, 294.347f, 220.553f);
        path.close();
        path.moveTo(297.017f, 218.482f);
        path.lineTo(297.017f, 219.182f);
        path.lineTo(296.417f, 219.032f);
        path.lineTo(297.017f, 218.482f);
        path.close();
        path.moveTo(296.327f, 220.093f);
        path.lineTo(297.027f, 220.293f);
        path.lineTo(297.027f, 220.693f);
        path.lineTo(296.327f, 220.093f);
        path.close();
        path.moveTo(291.999f, 214.2f);
        path.lineTo(294.899f, 212.95f);
        path.lineTo(295.549f, 214.8f);
        path.lineTo(293.849f, 217.45f);
        path.quadTo(292.552f, 215.766f, 291.999f, 214.2f);
        path.close();
        path.moveTo(317.733f, 213.234f);
        path.lineTo(319.283f, 214.334f);
        path.lineTo(316.133f, 213.834f);
        path.lineTo(317.233f, 212.834f);
        path.lineTo(317.733f, 213.234f);
        path.close();
        path.moveTo(307.007f, 232.43f);
        path.quadTo(306.657f, 232.88f, 306.657f, 234.53f);
        path.quadTo(306.657f, 235.98f, 306.907f, 236.68f);
        path.quadTo(307.457f, 238.23f, 309.207f, 238.23f);
        path.lineTo(310.757f, 238.03f);
        path.lineTo(310.557f, 237.78f);
        path.quadTo(310.557f, 237.38f, 311.057f, 236.28f);
        path.quadTo(311.507f, 235.13f, 311.507f, 233.88f);
        path.lineTo(311.407f, 232.18f);
        path.lineTo(311.257f, 231.78f);
        path.quadTo(307.927f, 231.095f, 307.007f, 232.43f);
        path.close();
        path.moveTo(308.065f, 235.699f);
        path.quadTo(307.715f, 233.899f, 308.065f, 232.949f);
        path.lineTo(309.365f, 232.899f);
        path.quadTo(310.465f, 233.099f, 310.565f, 233.399f);
        path.quadTo(310.365f, 234.799f, 309.415f, 236.649f);
        path.quadTo(308.415f, 236.499f, 308.165f, 236.099f);
        path.lineTo(308.065f, 235.699f);
        path.close();
        path.moveTo(321.876f, 241.039f);
        path.quadTo(321.626f, 241.189f, 321.626f, 241.489f);
        path.quadTo(326.476f, 241.839f, 333.026f, 244.489f);
        path.quadTo(338.426f, 246.689f, 341.926f, 246.089f);
        path.lineTo(333.876f, 243.789f);
        path.lineTo(322.126f, 240.789f);
        path.lineTo(321.876f, 241.039f);
        path.close();
        path.moveTo(293.012f, 237.54f);
        path.quadTo(294.562f, 237.54f, 295.712f, 236.29f);
        path.quadTo(302.412f, 245.59f, 310.112f, 259.49f);
        path.lineTo(309.662f, 260.79f);
        path.lineTo(310.362f, 260.79f);
        path.lineTo(310.612f, 260.39f);
        path.lineTo(311.062f, 261.19f);
        path.quadTo(315.812f, 269.89f, 320.162f, 276.84f);
        path.quadTo(318.662f, 279.24f, 318.862f, 280.14f);
        path.lineTo(322.112f, 280.39f);
        path.lineTo(322.312f, 280.24f);
        path.lineTo(326.512f, 286.44f);
        path.lineTo(319.862f, 287.79f);
        path.lineTo(314.562f, 279.69f);
        path.lineTo(303.512f, 263.09f);
        path.quadTo(294.162f, 248.44f, 290.812f, 237.19f);
        path.lineTo(293.012f, 237.54f);
        path.close();
        path.moveTo(332.648f, 270.363f);
        path.lineTo(332.698f, 269.063f);
        path.lineTo(337.098f, 268.813f);
        path.lineTo(337.098f, 269.063f);
        path.lineTo(334.948f, 269.763f);
        path.lineTo(332.648f, 270.363f);
        path.close();
        path.moveTo(271.007f, 202.323f);
        path.lineTo(274.357f, 200.323f);
        path.quadTo(273.557f, 201.673f, 273.107f, 203.523f);
        path.lineTo(272.257f, 203.373f);
        path.lineTo(270.057f, 203.223f);
        path.quadTo(270.057f, 203.523f, 271.857f, 203.973f);
        path.lineTo(265.457f, 205.773f);
        path.quadTo(265.457f, 206.473f, 267.757f, 206.923f);
        path.lineTo(272.607f, 205.873f);
        path.quadTo(272.257f, 207.723f, 272.207f, 209.823f);
        path.lineTo(265.607f, 210.123f);
        path.quadTo(258.757f, 210.123f, 256.807f, 209.223f);
        path.quadTo(255.807f, 208.073f, 254.857f, 207.623f);
        path.lineTo(254.407f, 208.323f);
        path.quadTo(255.607f, 208.773f, 256.207f, 209.573f);
        path.quadTo(256.807f, 210.273f, 257.407f, 210.573f);
        path.lineTo(258.057f, 210.723f);
        path.quadTo(256.907f, 211.723f, 256.257f, 213.773f);
        path.quadTo(252.407f, 213.023f, 250.057f, 211.623f);
        path.lineTo(248.457f, 208.423f);
        path.lineTo(248.657f, 208.323f);
        path.quadTo(251.857f, 206.473f, 258.307f, 206.473f);
        path.quadTo(263.458f, 206.466f, 271.007f, 202.323f);
        path.close();
        path.moveTo(259.867f, 188.973f);
        path.lineTo(260.167f, 187.273f);
        path.quadTo(262.867f, 188.423f, 265.917f, 188.273f);
        path.lineTo(265.017f, 188.523f);
        path.lineTo(259.867f, 188.973f);
        path.close();
        path.moveTo(258.624f, 186.441f);
        path.lineTo(258.174f, 188.941f);
        path.lineTo(256.074f, 188.691f);
        path.lineTo(254.424f, 188.291f);
        path.quadTo(257.174f, 187.591f, 257.674f, 186.941f);
        path.quadTo(255.674f, 186.441f, 254.224f, 185.791f);
        path.quadTo(254.824f, 184.341f, 254.874f, 183.141f);
        path.lineTo(255.424f, 183.891f);
        path.quadTo(256.967f, 185.429f, 258.624f, 186.441f);
        path.close();
        path.moveTo(250.936f, 190.032f);
        path.lineTo(251.786f, 189.432f);
        path.lineTo(252.586f, 189.882f);
        path.lineTo(251.236f, 190.132f);
        path.lineTo(250.936f, 190.032f);
        path.close();
        path.moveTo(250.2f, 188.421f);
        path.lineTo(249.6f, 189.271f);
        path.quadTo(248.15f, 188.471f, 247.0f, 187.471f);
        path.lineTo(245.4f, 183.321f);
        path.quadTo(247.299f, 186.303f, 250.2f, 188.421f);
        path.close();
        path.moveTo(258.44f, 214.154f);
        path.lineTo(258.59f, 210.854f);
        path.lineTo(272.19f, 211.504f);
        path.lineTo(272.19f, 211.604f);
        path.quadTo(272.19f, 211.854f, 273.44f, 214.454f);
        path.lineTo(268.74f, 214.854f);
        path.lineTo(258.44f, 214.154f);
        path.close();
        path.moveTo(251.166f, 213.602f);
        path.lineTo(251.016f, 213.402f);
        path.quadTo(253.116f, 214.202f, 255.966f, 214.752f);
        path.lineTo(255.866f, 215.102f);
        path.quadTo(253.284f, 214.845f, 251.166f, 213.602f);
        path.close();
        path.moveTo(255.632f, 216.778f);
        path.lineTo(255.582f, 217.278f);
        path.lineTo(255.582f, 218.628f);
        path.lineTo(253.882f, 218.428f);
        path.lineTo(252.782f, 216.528f);
        path.lineTo(255.632f, 216.778f);
        path.close();
        path.moveTo(256.0f, 222.118f);
        path.lineTo(255.15f, 220.668f);
        path.lineTo(255.8f, 220.718f);
        path.lineTo(256.15f, 222.118f);
        path.lineTo(256.0f, 222.118f);
        path.close();
        path.moveTo(261.478f, 218.896f);
        path.lineTo(258.128f, 218.846f);
        path.lineTo(258.278f, 216.996f);
        path.quadTo(264.678f, 217.296f, 274.228f, 217.296f);
        path.lineTo(274.778f, 217.296f);
        path.lineTo(275.078f, 217.896f);
        path.lineTo(270.478f, 218.296f);
        path.lineTo(261.478f, 218.896f);
        path.close();
        path.moveTo(259.038f, 223.039f);
        path.lineTo(258.538f, 222.789f);
        path.lineTo(261.838f, 221.189f);
        path.lineTo(261.738f, 220.989f);
        path.quadTo(266.938f, 220.889f, 274.388f, 219.589f);
        path.lineTo(275.838f, 219.389f);
        path.lineTo(276.538f, 220.689f);
        path.quadTo(273.888f, 226.039f, 262.488f, 226.039f);
        path.quadTo(259.888f, 226.039f, 258.838f, 223.939f);
        path.lineTo(259.038f, 223.739f);
        path.lineTo(259.038f, 223.039f);
        path.close();
        path.moveTo(258.026f, 220.921f);
        path.lineTo(260.176f, 220.971f);
        path.lineTo(258.126f, 221.521f);
        path.lineTo(258.026f, 220.921f);
        path.close();
        path.moveTo(276.209f, 211.346f);
        path.lineTo(277.009f, 214.096f);
        path.lineTo(275.659f, 214.246f);
        path.quadTo(275.059f, 212.846f, 274.709f, 211.496f);
        path.lineTo(276.209f, 211.346f);
        path.close();
        path.moveTo(279.202f, 217.101f);
        path.lineTo(279.352f, 217.351f);
        path.lineTo(277.902f, 217.551f);
        path.lineTo(277.902f, 217.151f);
        path.lineTo(279.202f, 217.101f);
        path.close();
        path.moveTo(276.992f, 217.239f);
        path.lineTo(277.392f, 217.189f);
        path.lineTo(277.392f, 217.639f);
        path.lineTo(277.192f, 217.689f);
        path.lineTo(276.992f, 217.239f);
        path.close();
        path.moveTo(237.356f, 195.602f);
        path.lineTo(236.006f, 194.252f);
        path.lineTo(236.006f, 194.002f);
        path.lineTo(238.906f, 194.452f);
        path.lineTo(241.656f, 194.702f);
        path.lineTo(241.756f, 195.002f);
        path.lineTo(241.056f, 195.752f);
        path.lineTo(239.706f, 196.552f);
        path.quadTo(238.461f, 196.431f, 237.356f, 195.602f);
        path.close();
        path.moveTo(245.228f, 192.656f);
        path.quadTo(245.578f, 193.206f, 245.028f, 194.456f);
        path.quadTo(244.528f, 195.856f, 243.378f, 197.006f);
        path.lineTo(244.978f, 192.856f);
        path.lineTo(245.228f, 192.656f);
        path.close();
        path.moveTo(247.438f, 197.167f);
        path.quadTo(247.788f, 196.067f, 247.788f, 192.717f);
        path.lineTo(247.688f, 190.967f);
        path.quadTo(251.238f, 192.217f, 256.388f, 192.417f);
        path.quadTo(253.468f, 196.155f, 247.438f, 197.167f);
        path.close();
        path.moveTo(220.553f, 180.963f);
        path.lineTo(222.053f, 183.363f);
        path.lineTo(219.653f, 180.463f);
        path.lineTo(219.953f, 180.463f);
        path.lineTo(220.553f, 180.963f);
        path.close();
        path.moveTo(217.101f, 219.54f);
        path.lineTo(214.801f, 219.59f);
        path.quadTo(216.501f, 220.44f, 219.651f, 221.09f);
        path.lineTo(224.501f, 221.69f);
        path.lineTo(226.051f, 221.44f);
        path.lineTo(225.851f, 221.19f);
        path.lineTo(225.101f, 220.59f);
        path.lineTo(224.501f, 220.04f);
        path.lineTo(217.101f, 219.54f);
        path.close();
        path.moveTo(247.023f, 207.157f);
        path.lineTo(246.823f, 207.207f);
        path.lineTo(246.723f, 206.507f);
        path.lineTo(247.023f, 207.157f);
        path.close();
        path.moveTo(247.53f, 209.183f);
        path.lineTo(247.88f, 208.883f);
        path.lineTo(248.83f, 210.733f);
        path.lineTo(247.53f, 209.183f);
        path.close();
        path.moveTo(238.369f, 225.525f);
        path.lineTo(238.519f, 225.225f);
        path.quadTo(241.419f, 227.325f, 243.369f, 230.175f);
        path.lineTo(242.469f, 231.325f);
        path.lineTo(242.519f, 231.325f);
        path.lineTo(241.419f, 232.075f);
        path.lineTo(240.419f, 229.325f);
        path.quadTo(239.566f, 227.228f, 238.369f, 225.525f);
        path.close();
        path.moveTo(246.056f, 231.187f);
        path.lineTo(246.256f, 231.037f);
        path.quadTo(247.956f, 229.687f, 248.606f, 228.287f);
        path.quadTo(249.356f, 230.037f, 249.356f, 232.337f);
        path.quadTo(249.356f, 234.037f, 248.756f, 236.137f);
        path.lineTo(248.456f, 237.137f);
        path.quadTo(248.266f, 234.778f, 246.056f, 231.187f);
        path.close();
        path.moveTo(241.775f, 233.443f);
        path.lineTo(242.925f, 233.643f);
        path.lineTo(244.625f, 232.293f);
        path.lineTo(245.225f, 233.693f);
        path.quadTo(245.825f, 235.143f, 246.825f, 240.343f);
        path.quadTo(245.675f, 241.943f, 243.675f, 243.693f);
        path.lineTo(242.925f, 244.293f);
        path.quadTo(242.88f, 238.138f, 241.775f, 233.443f);
        path.close();
        path.moveTo(237.586f, 232.614f);
        path.quadTo(237.136f, 230.464f, 237.286f, 229.114f);
        path.lineTo(237.486f, 227.914f);
        path.quadTo(239.336f, 231.214f, 240.286f, 235.664f);
        path.lineTo(237.586f, 232.614f);
        path.close();
        path.moveTo(236.343f, 226.077f);
        path.lineTo(236.293f, 226.127f);
        path.quadTo(236.143f, 226.677f, 236.093f, 228.127f);
        path.lineTo(236.043f, 228.077f);
        path.lineTo(234.243f, 223.527f);
        path.quadTo(235.376f, 224.696f, 236.343f, 226.077f);
        path.close();
        path.moveTo(238.277f, 246.885f);
        path.lineTo(238.327f, 242.935f);
        path.quadTo(238.327f, 239.135f, 237.777f, 235.485f);
        path.quadTo(238.827f, 237.035f, 239.427f, 238.735f);
        path.quadTo(240.377f, 241.485f, 240.527f, 245.485f);
        path.lineTo(240.577f, 245.885f);
        path.lineTo(238.277f, 246.885f);
        path.close();
        path.moveTo(218.988f, 231.325f);
        path.lineTo(218.288f, 231.775f);
        path.quadTo(222.938f, 234.525f, 224.288f, 234.775f);
        path.quadTo(222.763f, 232.752f, 218.988f, 231.325f);
        path.close();
        path.moveTo(222.901f, 240.302f);
        path.lineTo(223.751f, 242.352f);
        path.quadTo(224.601f, 243.752f, 226.101f, 243.752f);
        path.lineTo(228.101f, 243.602f);
        path.lineTo(228.651f, 243.252f);
        path.lineTo(228.401f, 242.802f);
        path.quadTo(225.201f, 241.552f, 224.251f, 240.802f);
        path.quadTo(223.776f, 240.44f, 222.901f, 240.302f);
        path.close();
        path.moveTo(215.673f, 258.854f);
        path.quadTo(216.323f, 255.854f, 217.523f, 254.454f);
        path.quadTo(217.123f, 258.454f, 216.473f, 261.304f);
        path.lineTo(216.473f, 261.204f);
        path.lineTo(215.773f, 261.454f);
        path.lineTo(215.773f, 263.704f);
        path.lineTo(215.173f, 265.054f);
        path.lineTo(215.123f, 265.204f);
        path.lineTo(215.073f, 263.304f);
        path.quadTo(215.075f, 261.34f, 215.673f, 258.854f);
        path.close();
        path.moveTo(215.167f, 265.667f);
        path.lineTo(215.767f, 264.617f);
        path.lineTo(215.617f, 269.317f);
        path.quadTo(215.259f, 267.923f, 215.167f, 265.667f);
        path.close();
        path.moveTo(225.709f, 267.463f);
        path.quadTo(227.109f, 264.263f, 227.559f, 262.113f);
        path.quadTo(225.359f, 275.063f, 219.909f, 275.063f);
        path.lineTo(217.709f, 274.713f);
        path.lineTo(217.109f, 274.363f);
        path.lineTo(217.059f, 273.113f);
        path.lineTo(218.959f, 273.413f);
        path.quadTo(222.947f, 273.447f, 225.709f, 267.463f);
        path.close();
        path.moveTo(320.265f, 278.741f);
        path.lineTo(320.815f, 277.891f);
        path.lineTo(321.615f, 279.141f);
        path.lineTo(319.815f, 279.241f);
        path.lineTo(320.265f, 278.741f);
        path.close();
        path.moveTo(302.081f, 288.869f);
        path.lineTo(301.381f, 288.869f);
        path.quadTo(303.231f, 293.169f, 307.881f, 298.619f);
        path.quadTo(313.231f, 304.819f, 317.981f, 306.819f);
        path.quadTo(313.131f, 303.019f, 308.831f, 298.219f);
        path.quadTo(304.475f, 293.288f, 302.081f, 288.869f);
        path.close();
    }

    private static void draw_0(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_0(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_1(Path path)
    {
        path.reset();
        path.moveTo(602.551f, 286.797f);
        path.quadTo(605.451f, 288.647f, 605.451f, 291.897f);
        path.lineTo(604.851f, 294.697f);
        path.quadTo(604.101f, 297.897f, 602.951f, 300.647f);
        path.quadTo(599.301f, 309.247f, 593.251f, 309.847f);
        path.quadTo(593.251f, 310.347f, 594.901f, 310.797f);
        path.lineTo(598.301f, 311.197f);
        path.quadTo(601.051f, 311.197f, 602.601f, 309.397f);
        path.quadTo(604.051f, 307.747f, 604.051f, 305.547f);
        path.quadTo(604.051f, 301.247f, 605.901f, 297.847f);
        path.quadTo(607.751f, 294.547f, 607.751f, 292.097f);
        path.quadTo(607.751f, 287.847f, 605.601f, 286.397f);
        path.quadTo(602.351f, 284.297f, 590.901f, 283.847f);
        path.quadTo(590.901f, 267.697f, 580.301f, 272.147f);
        path.quadTo(578.151f, 273.047f, 575.601f, 274.797f);
        path.lineTo(574.651f, 274.497f);
        path.lineTo(575.301f, 274.997f);
        path.quadTo(574.351f, 275.647f, 573.401f, 276.397f);
        path.quadTo(574.051f, 271.747f, 573.951f, 266.047f);
        path.quadTo(573.451f, 255.097f, 573.451f, 250.197f);
        path.lineTo(573.651f, 250.197f);
        path.lineTo(574.301f, 257.397f);
        path.lineTo(574.801f, 264.047f);
        path.lineTo(575.951f, 263.797f);
        path.lineTo(576.201f, 252.047f);
        path.quadTo(576.201f, 241.097f, 575.251f, 236.447f);
        path.quadTo(573.501f, 227.997f, 572.301f, 215.447f);
        path.lineTo(571.001f, 214.747f);
        path.lineTo(568.851f, 214.547f);
        path.quadTo(566.751f, 214.547f, 566.351f, 215.447f);
        path.quadTo(565.651f, 216.997f, 565.151f, 217.297f);
        path.quadTo(564.901f, 213.647f, 564.101f, 212.497f);
        path.quadTo(563.401f, 211.547f, 561.801f, 211.797f);
        path.lineTo(558.201f, 212.547f);
        path.lineTo(553.201f, 212.247f);
        path.lineTo(553.251f, 214.147f);
        path.lineTo(551.201f, 214.247f);
        path.lineTo(550.851f, 213.847f);
        path.lineTo(549.501f, 213.647f);
        path.quadTo(549.001f, 213.947f, 548.601f, 214.497f);
        path.lineTo(547.601f, 214.647f);
        path.lineTo(548.351f, 213.947f);
        path.quadTo(548.751f, 213.297f, 548.801f, 212.497f);
        path.lineTo(547.201f, 212.497f);
        path.lineTo(540.051f, 212.597f);
        path.quadTo(541.201f, 206.797f, 541.201f, 203.497f);
        path.quadTo(541.201f, 202.047f, 540.701f, 201.897f);
        path.lineTo(539.351f, 201.647f);
        path.lineTo(538.101f, 201.847f);
        path.quadTo(537.501f, 202.097f, 537.501f, 203.597f);
        path.lineTo(536.801f, 212.597f);
        path.lineTo(532.651f, 212.247f);
        path.lineTo(532.451f, 212.347f);
        path.quadTo(532.401f, 212.797f, 531.101f, 213.647f);
        path.quadTo(531.401f, 214.097f, 536.601f, 214.647f);
        path.lineTo(536.401f, 216.447f);
        path.lineTo(533.201f, 215.697f);
        path.lineTo(531.601f, 215.397f);
        path.quadTo(529.501f, 213.547f, 527.751f, 211.747f);
        path.lineTo(527.951f, 209.397f);
        path.lineTo(528.801f, 209.247f);
        path.quadTo(528.701f, 208.997f, 528.001f, 208.897f);
        path.lineTo(528.801f, 197.597f);
        path.lineTo(528.751f, 196.147f);
        path.lineTo(528.551f, 195.897f);
        path.lineTo(527.851f, 195.897f);
        path.quadTo(527.851f, 200.297f, 526.851f, 205.647f);
        path.lineTo(526.551f, 207.247f);
        path.lineTo(526.451f, 195.997f);
        path.quadTo(526.451f, 184.297f, 527.851f, 177.497f);
        path.quadTo(527.851f, 177.847f, 528.251f, 177.797f);
        path.lineTo(528.801f, 177.247f);
        path.quadTo(528.651f, 176.847f, 527.551f, 176.447f);
        path.lineTo(526.501f, 176.097f);
        path.quadTo(521.651f, 180.347f, 522.451f, 193.597f);
        path.lineTo(523.601f, 204.897f);
        path.lineTo(523.951f, 207.697f);
        path.lineTo(521.851f, 205.247f);
        path.lineTo(517.451f, 196.147f);
        path.quadTo(512.401f, 186.247f, 507.601f, 186.247f);
        path.quadTo(507.001f, 186.247f, 506.151f, 186.697f);
        path.lineTo(503.501f, 176.897f);
        path.lineTo(503.701f, 171.047f);
        path.lineTo(502.801f, 171.897f);
        path.lineTo(503.851f, 146.847f);
        path.lineTo(504.401f, 133.097f);
        path.quadTo(506.201f, 130.097f, 507.901f, 125.547f);
        path.quadTo(510.601f, 118.147f, 515.451f, 114.197f);
        path.lineTo(514.951f, 113.497f);
        path.lineTo(513.651f, 114.047f);
        path.lineTo(520.701f, 102.847f);
        path.lineTo(524.151f, 121.597f);
        path.lineTo(523.251f, 121.347f);
        path.lineTo(524.451f, 123.247f);
        path.lineTo(526.501f, 134.497f);
        path.quadTo(529.351f, 150.447f, 531.851f, 160.647f);
        path.quadTo(528.101f, 159.247f, 522.551f, 157.747f);
        path.quadTo(509.751f, 154.247f, 504.851f, 154.247f);
        path.lineTo(504.601f, 154.697f);
        path.quadTo(507.101f, 156.297f, 521.851f, 160.347f);
        path.lineTo(532.551f, 163.397f);
        path.lineTo(532.651f, 163.747f);
        path.quadTo(533.051f, 180.497f, 531.551f, 192.197f);
        path.lineTo(531.551f, 191.997f);
        path.quadTo(531.551f, 187.847f, 531.101f, 186.447f);
        path.quadTo(529.951f, 202.047f, 529.951f, 205.097f);
        path.lineTo(529.951f, 206.747f);
        path.lineTo(530.401f, 207.197f);
        path.lineTo(531.551f, 207.197f);
        path.quadTo(531.801f, 203.697f, 533.451f, 190.597f);
        path.quadTo(534.751f, 180.347f, 534.751f, 173.647f);
        path.lineTo(534.201f, 166.847f);
        path.lineTo(533.901f, 163.797f);
        path.quadTo(537.601f, 164.947f, 538.451f, 165.497f);
        path.quadTo(539.151f, 165.047f, 539.151f, 164.347f);
        path.quadTo(537.701f, 162.947f, 533.601f, 161.297f);
        path.lineTo(533.451f, 160.497f);
        path.lineTo(533.401f, 159.647f);
        path.lineTo(533.351f, 159.247f);
        path.lineTo(533.151f, 158.147f);
        path.quadTo(531.951f, 150.697f, 528.751f, 134.697f);
        path.lineTo(527.551f, 128.747f);
        path.quadTo(530.251f, 133.947f, 533.051f, 140.547f);
        path.quadTo(539.851f, 156.597f, 541.451f, 159.747f);
        path.lineTo(542.151f, 158.397f);
        path.quadTo(540.101f, 154.497f, 538.051f, 147.597f);
        path.lineTo(534.601f, 136.197f);
        path.quadTo(531.301f, 125.997f, 526.301f, 122.697f);
        path.quadTo(523.001f, 106.847f, 521.201f, 100.847f);
        path.lineTo(520.251f, 100.847f);
        path.lineTo(520.601f, 102.297f);
        path.quadTo(518.301f, 103.897f, 512.701f, 111.347f);
        path.quadTo(508.551f, 116.797f, 504.501f, 122.897f);
        path.lineTo(504.001f, 114.147f);
        path.quadTo(503.501f, 103.847f, 503.901f, 98.7475f);
        path.quadTo(502.851f, 100.097f, 502.201f, 102.397f);
        path.quadTo(501.601f, 104.547f, 501.601f, 106.597f);
        path.lineTo(501.301f, 135.597f);
        path.lineTo(500.951f, 136.297f);
        path.lineTo(501.301f, 136.497f);
        path.lineTo(501.151f, 145.247f);
        path.lineTo(500.801f, 171.497f);
        path.quadTo(498.101f, 175.697f, 495.401f, 181.647f);
        path.lineTo(494.801f, 179.947f);
        path.lineTo(493.601f, 176.197f);
        path.quadTo(492.051f, 172.797f, 485.051f, 172.197f);
        path.quadTo(484.501f, 172.447f, 482.601f, 174.747f);
        path.quadTo(480.651f, 177.297f, 479.301f, 178.197f);
        path.quadTo(479.201f, 174.647f, 478.701f, 172.197f);
        path.quadTo(477.751f, 167.597f, 473.101f, 167.597f);
        path.quadTo(471.901f, 167.597f, 471.251f, 168.647f);
        path.quadTo(470.551f, 169.647f, 469.401f, 169.647f);
        path.lineTo(466.951f, 169.897f);
        path.lineTo(466.701f, 167.997f);
        path.quadTo(462.401f, 142.047f, 459.751f, 121.797f);
        path.lineTo(449.601f, 121.547f);
        path.lineTo(448.551f, 121.647f);
        path.lineTo(448.451f, 121.347f);
        path.lineTo(448.501f, 121.647f);
        path.lineTo(448.451f, 121.697f);
        path.lineTo(447.001f, 110.747f);
        path.quadTo(445.201f, 96.6475f, 445.201f, 94.1475f);
        path.lineTo(445.251f, 92.2975f);
        path.lineTo(445.701f, 92.2975f);
        path.lineTo(447.051f, 88.7975f);
        path.quadTo(449.551f, 90.6975f, 454.351f, 91.7975f);
        path.quadTo(467.751f, 94.8475f, 503.451f, 94.8475f);
        path.lineTo(505.601f, 94.5475f);
        path.lineTo(508.501f, 98.7475f);
        path.quadTo(501.701f, 86.3475f, 491.901f, 62.6975f);
        path.quadTo(481.601f, 37.7475f, 476.051f, 27.1975f);
        path.quadTo(475.401f, 27.1975f, 475.151f, 27.6475f);
        path.quadTo(480.001f, 39.1475f, 489.701f, 64.0475f);
        path.quadTo(497.101f, 81.5975f, 504.851f, 93.4975f);
        path.lineTo(504.501f, 93.3475f);
        path.lineTo(503.451f, 92.9975f);
        path.lineTo(483.851f, 91.7975f);
        path.lineTo(461.801f, 90.6975f);
        path.quadTo(451.651f, 89.8475f, 447.951f, 88.1975f);
        path.lineTo(447.401f, 87.8975f);
        path.quadTo(451.051f, 77.7475f, 457.551f, 55.9975f);
        path.quadTo(464.151f, 33.9975f, 470.801f, 21.2975f);
        path.quadTo(469.301f, 20.4975f, 467.651f, 22.0975f);
        path.quadTo(464.201f, 25.4975f, 459.751f, 40.2975f);
        path.quadTo(458.251f, 45.2975f, 452.151f, 68.8975f);
        path.quadTo(449.001f, 80.9475f, 446.801f, 87.5475f);
        path.lineTo(446.201f, 87.0475f);
        path.lineTo(445.701f, 86.3475f);
        path.lineTo(445.001f, 86.3475f);
        path.lineTo(445.651f, 87.3475f);
        path.quadTo(444.901f, 88.1475f, 444.301f, 89.5975f);
        path.quadTo(443.601f, 91.3975f, 443.601f, 92.9975f);
        path.quadTo(443.601f, 98.7475f, 445.101f, 110.997f);
        path.quadTo(446.051f, 118.947f, 446.801f, 122.347f);
        path.quadTo(445.801f, 123.097f, 445.501f, 124.547f);
        path.lineTo(445.451f, 129.397f);
        path.quadTo(445.451f, 134.797f, 445.801f, 136.247f);
        path.quadTo(446.501f, 139.147f, 449.751f, 143.747f);
        path.lineTo(447.701f, 144.297f);
        path.lineTo(444.301f, 145.097f);
        path.lineTo(444.601f, 144.147f);
        path.quadTo(444.601f, 143.397f, 444.051f, 143.397f);
        path.lineTo(443.201f, 144.797f);
        path.lineTo(442.901f, 145.247f);
        path.lineTo(442.701f, 145.247f);
        path.lineTo(442.701f, 144.797f);
        path.quadTo(444.001f, 138.197f, 442.451f, 130.297f);
        path.quadTo(438.251f, 122.647f, 435.601f, 128.597f);
        path.quadTo(434.751f, 130.447f, 434.201f, 133.497f);
        path.lineTo(433.701f, 136.298f);
        path.quadTo(429.751f, 135.298f, 426.801f, 137.148f);
        path.lineTo(424.051f, 139.748f);
        path.quadTo(424.301f, 136.098f, 423.851f, 133.698f);
        path.quadTo(423.101f, 129.148f, 418.751f, 129.148f);
        path.lineTo(415.601f, 129.498f);
        path.lineTo(415.601f, 129.148f);
        path.lineTo(416.451f, 128.898f);
        path.quadTo(415.601f, 126.648f, 415.101f, 123.998f);
        path.lineTo(414.401f, 116.248f);
        path.lineTo(414.751f, 121.948f);
        path.quadTo(413.501f, 114.148f, 414.301f, 102.948f);
        path.lineTo(414.901f, 90.1475f);
        path.quadTo(414.901f, 83.0475f, 413.451f, 77.7975f);
        path.lineTo(412.551f, 78.0475f);
        path.lineTo(412.551f, 118.098f);
        path.lineTo(415.001f, 127.048f);
        path.lineTo(415.051f, 129.498f);
        path.lineTo(414.651f, 129.548f);
        path.quadTo(412.001f, 129.898f, 410.951f, 129.598f);
        path.lineTo(410.951f, 130.998f);
        path.lineTo(415.101f, 130.798f);
        path.lineTo(415.301f, 142.598f);
        path.quadTo(415.301f, 149.848f, 416.001f, 150.798f);
        path.quadTo(416.701f, 148.698f, 416.701f, 142.848f);
        path.lineTo(415.701f, 130.747f);
        path.lineTo(421.751f, 130.997f);
        path.quadTo(421.751f, 132.397f, 422.201f, 134.247f);
        path.lineTo(422.651f, 137.197f);
        path.lineTo(422.251f, 139.647f);
        path.quadTo(421.901f, 140.697f, 422.001f, 141.347f);
        path.lineTo(424.301f, 141.597f);
        path.lineTo(427.201f, 139.297f);
        path.quadTo(429.951f, 137.197f, 431.651f, 137.197f);
        path.lineTo(435.101f, 137.447f);
        path.quadTo(435.101f, 134.147f, 435.251f, 132.797f);
        path.quadTo(435.401f, 130.547f, 436.001f, 129.147f);
        path.lineTo(440.151f, 129.147f);
        path.quadTo(442.001f, 133.297f, 442.001f, 135.697f);
        path.lineTo(441.501f, 140.997f);
        path.quadTo(441.051f, 145.097f, 441.301f, 147.097f);
        path.lineTo(446.851f, 147.097f);
        path.lineTo(447.351f, 146.897f);
        path.lineTo(448.451f, 146.897f);
        path.lineTo(449.151f, 145.947f);
        path.lineTo(451.901f, 144.797f);
        path.lineTo(455.101f, 164.497f);
        path.quadTo(454.201f, 166.447f, 454.201f, 170.347f);
        path.lineTo(454.001f, 172.547f);
        path.quadTo(454.051f, 175.147f, 455.351f, 177.297f);
        path.lineTo(457.201f, 179.497f);
        path.lineTo(457.901f, 186.697f);
        path.quadTo(461.451f, 185.547f, 462.751f, 182.647f);
        path.lineTo(464.601f, 183.197f);
        path.quadTo(464.801f, 209.247f, 463.851f, 231.097f);
        path.lineTo(463.401f, 231.097f);
        path.quadTo(463.201f, 230.497f, 462.651f, 229.847f);
        path.quadTo(462.051f, 229.047f, 461.551f, 229.047f);
        path.quadTo(463.101f, 233.747f, 464.351f, 234.547f);
        path.quadTo(466.101f, 229.347f, 466.551f, 217.597f);
        path.lineTo(466.651f, 198.747f);
        path.lineTo(466.501f, 195.047f);
        path.lineTo(466.701f, 197.747f);
        path.lineTo(468.451f, 215.447f);
        path.lineTo(469.401f, 214.997f);
        path.lineTo(469.601f, 209.097f);
        path.quadTo(469.601f, 196.447f, 468.501f, 183.847f);
        path.lineTo(474.451f, 184.147f);
        path.quadTo(477.451f, 184.147f, 478.151f, 183.447f);
        path.lineTo(478.151f, 182.798f);
        path.lineTo(468.451f, 183.447f);
        path.lineTo(468.451f, 183.048f);
        path.lineTo(469.751f, 183.298f);
        path.lineTo(471.701f, 183.447f);
        path.quadTo(471.451f, 182.997f, 470.001f, 182.598f);
        path.lineTo(468.401f, 182.247f);
        path.lineTo(467.051f, 170.598f);
        path.lineTo(474.351f, 169.898f);
        path.quadTo(475.801f, 169.898f, 475.901f, 170.248f);
        path.lineTo(475.851f, 170.598f);
        path.lineTo(475.751f, 176.248f);
        path.quadTo(476.401f, 180.498f, 480.451f, 180.498f);
        path.quadTo(481.851f, 180.498f, 482.201f, 179.848f);
        path.lineTo(482.501f, 178.848f);
        path.quadTo(482.351f, 180.398f, 485.451f, 181.998f);
        path.lineTo(483.651f, 179.548f);
        path.quadTo(484.551f, 179.598f, 486.701f, 180.698f);
        path.quadTo(489.951f, 182.348f, 492.201f, 183.248f);
        path.lineTo(491.501f, 183.698f);
        path.lineTo(489.751f, 184.298f);
        path.quadTo(491.701f, 185.598f, 492.651f, 186.948f);
        path.lineTo(492.901f, 187.498f);
        path.quadTo(488.951f, 197.298f, 488.951f, 202.798f);
        path.lineTo(489.051f, 205.498f);
        path.quadTo(489.201f, 206.648f, 489.651f, 207.398f);
        path.lineTo(490.101f, 206.948f);
        path.quadTo(490.101f, 198.698f, 493.501f, 189.198f);
        path.lineTo(494.101f, 191.548f);
        path.lineTo(491.701f, 201.898f);
        path.quadTo(491.201f, 204.348f, 486.701f, 218.548f);
        path.quadTo(484.751f, 224.698f, 483.801f, 228.298f);
        path.quadTo(482.001f, 229.598f, 480.751f, 232.048f);
        path.lineTo(477.201f, 230.648f);
        path.lineTo(476.051f, 230.898f);
        path.quadTo(476.901f, 232.498f, 480.051f, 233.598f);
        path.quadTo(479.101f, 235.898f, 478.551f, 238.998f);
        path.quadTo(477.701f, 243.648f, 477.701f, 251.698f);
        path.quadTo(477.701f, 256.598f, 479.151f, 265.298f);
        path.quadTo(480.551f, 273.548f, 481.801f, 276.898f);
        path.lineTo(482.301f, 276.248f);
        path.lineTo(482.401f, 275.948f);
        path.lineTo(482.501f, 274.498f);
        path.lineTo(480.901f, 263.198f);
        path.quadTo(479.301f, 250.798f, 479.301f, 244.098f);
        path.quadTo(479.301f, 241.448f, 481.001f, 236.198f);
        path.lineTo(481.751f, 234.098f);
        path.lineTo(482.851f, 234.348f);
        path.lineTo(482.951f, 234.548f);
        path.lineTo(483.101f, 234.448f);
        path.quadTo(489.551f, 235.698f, 501.601f, 235.698f);
        path.lineTo(516.301f, 235.698f);
        path.lineTo(516.701f, 235.698f);
        path.lineTo(518.051f, 241.998f);
        path.quadTo(515.951f, 242.148f, 513.901f, 242.898f);
        path.quadTo(511.401f, 244.098f, 510.301f, 244.398f);
        path.lineTo(509.351f, 244.598f);
        path.lineTo(515.451f, 244.698f);
        path.lineTo(518.201f, 242.798f);
        path.lineTo(518.401f, 243.998f);
        path.lineTo(519.501f, 243.848f);
        path.lineTo(519.551f, 250.398f);
        path.quadTo(519.801f, 261.398f, 519.551f, 266.798f);
        path.lineTo(519.551f, 266.548f);
        path.lineTo(519.351f, 263.098f);
        path.lineTo(518.651f, 263.348f);
        path.lineTo(518.651f, 267.498f);
        path.quadTo(519.001f, 269.398f, 519.201f, 272.698f);
        path.lineTo(519.551f, 277.848f);
        path.quadTo(520.701f, 277.848f, 522.101f, 276.448f);
        path.lineTo(522.101f, 266.798f);
        path.lineTo(521.351f, 250.198f);
        path.lineTo(520.401f, 235.548f);
        path.quadTo(529.251f, 235.098f, 529.251f, 233.898f);
        path.quadTo(529.251f, 233.448f, 523.001f, 233.748f);
        path.lineTo(520.301f, 233.898f);
        path.lineTo(520.251f, 233.648f);
        path.lineTo(519.551f, 233.648f);
        path.lineTo(519.551f, 233.898f);
        path.lineTo(518.901f, 233.948f);
        path.quadTo(516.751f, 224.498f, 511.351f, 205.248f);
        path.lineTo(506.851f, 189.298f);
        path.lineTo(507.851f, 188.298f);
        path.quadTo(510.801f, 190.198f, 513.401f, 194.198f);
        path.quadTo(513.101f, 194.398f, 512.901f, 194.998f);
        path.lineTo(517.101f, 201.148f);
        path.lineTo(518.201f, 203.748f);
        path.lineTo(516.501f, 203.098f);
        path.quadTo(515.351f, 202.448f, 514.951f, 202.598f);
        path.quadTo(515.501f, 203.098f, 517.751f, 206.098f);
        path.quadTo(520.101f, 208.798f, 522.351f, 208.798f);
        path.lineTo(522.651f, 208.248f);
        path.lineTo(524.151f, 210.048f);
        path.lineTo(524.401f, 215.348f);
        path.quadTo(524.401f, 217.748f, 525.101f, 219.848f);
        path.lineTo(525.901f, 219.848f);
        path.quadTo(526.001f, 224.148f, 526.501f, 226.748f);
        path.lineTo(526.951f, 226.298f);
        path.quadTo(527.051f, 221.898f, 527.651f, 213.948f);
        path.lineTo(528.601f, 215.048f);
        path.lineTo(528.301f, 214.998f);
        path.lineTo(528.101f, 215.298f);
        path.quadTo(527.851f, 215.398f, 527.851f, 215.698f);
        path.lineTo(529.801f, 216.348f);
        path.lineTo(530.901f, 217.498f);
        path.lineTo(528.801f, 217.548f);
        path.lineTo(528.551f, 216.148f);
        path.lineTo(527.851f, 216.148f);
        path.lineTo(527.851f, 218.898f);
        path.lineTo(532.451f, 218.998f);
        path.lineTo(535.951f, 221.898f);
        path.lineTo(535.901f, 222.598f);
        path.quadTo(535.901f, 226.748f, 536.151f, 228.798f);
        path.lineTo(536.851f, 228.798f);
        path.lineTo(537.951f, 222.598f);
        path.lineTo(539.251f, 222.398f);
        path.lineTo(539.151f, 221.898f);
        path.lineTo(538.251f, 221.198f);
        path.lineTo(538.701f, 219.148f);
        path.lineTo(543.301f, 219.398f);
        path.lineTo(543.501f, 220.098f);
        path.quadTo(543.701f, 220.548f, 545.101f, 220.548f);
        path.lineTo(546.551f, 220.298f);
        path.lineTo(546.251f, 220.048f);
        path.lineTo(545.601f, 219.398f);
        path.lineTo(542.451f, 217.048f);
        path.lineTo(543.951f, 217.098f);
        path.lineTo(547.501f, 216.248f);
        path.lineTo(547.951f, 216.198f);
        path.quadTo(547.651f, 217.348f, 547.651f, 218.998f);
        path.quadTo(547.651f, 220.948f, 548.601f, 232.498f);
        path.lineTo(546.051f, 232.748f);
        path.quadTo(546.201f, 233.298f, 548.751f, 233.798f);
        path.lineTo(549.051f, 237.348f);
        path.lineTo(549.951f, 237.348f);
        path.lineTo(550.301f, 234.048f);
        path.lineTo(556.851f, 234.548f);
        path.lineTo(557.901f, 228.648f);
        path.quadTo(558.451f, 224.998f, 558.451f, 223.398f);
        path.quadTo(558.451f, 221.948f, 558.251f, 221.998f);
        path.lineTo(558.001f, 222.348f);
        path.quadTo(556.101f, 223.248f, 555.951f, 227.498f);
        path.quadTo(555.851f, 229.748f, 556.151f, 232.948f);
        path.lineTo(550.401f, 232.598f);
        path.lineTo(550.401f, 230.448f);
        path.quadTo(550.401f, 227.598f, 550.851f, 223.548f);
        path.quadTo(551.351f, 219.698f, 551.351f, 215.698f);
        path.lineTo(553.301f, 215.448f);
        path.lineTo(553.651f, 229.498f);
        path.quadTo(555.251f, 229.498f, 555.501f, 228.798f);
        path.quadTo(554.801f, 224.448f, 554.801f, 215.448f);
        path.lineTo(557.401f, 215.948f);
        path.lineTo(563.301f, 216.598f);
        path.lineTo(563.301f, 220.548f);
        path.quadTo(562.451f, 221.798f, 562.551f, 222.798f);
        path.quadTo(562.701f, 223.948f, 564.201f, 225.598f);
        path.quadTo(564.651f, 225.448f, 564.851f, 225.198f);
        path.lineTo(565.151f, 224.898f);
        path.quadTo(564.201f, 222.448f, 565.951f, 219.998f);
        path.lineTo(569.051f, 216.598f);
        path.lineTo(572.101f, 230.198f);
        path.quadTo(574.351f, 240.798f, 574.351f, 244.998f);
        path.lineTo(574.101f, 248.598f);
        path.lineTo(574.101f, 248.398f);
        path.quadTo(574.101f, 246.998f, 573.651f, 246.298f);
        path.lineTo(572.751f, 246.548f);
        path.quadTo(571.151f, 253.248f, 570.701f, 262.948f);
        path.lineTo(570.401f, 273.698f);
        path.lineTo(570.201f, 273.698f);
        path.lineTo(570.401f, 273.898f);
        path.lineTo(570.201f, 279.448f);
        path.quadTo(570.201f, 279.048f, 569.751f, 278.548f);
        path.quadTo(569.301f, 278.098f, 569.301f, 279.548f);
        path.lineTo(569.451f, 281.698f);
        path.lineTo(570.001f, 282.698f);
        path.lineTo(572.051f, 282.698f);
        path.lineTo(573.051f, 278.448f);
        path.quadTo(575.751f, 278.398f, 579.651f, 279.448f);
        path.lineTo(579.651f, 279.348f);
        path.quadTo(586.401f, 286.998f, 593.701f, 300.648f);
        path.quadTo(589.201f, 300.698f, 586.851f, 301.848f);
        path.lineTo(584.951f, 303.148f);
        path.lineTo(586.301f, 303.398f);
        path.lineTo(595.551f, 302.698f);
        path.lineTo(595.551f, 298.548f);
        path.quadTo(590.051f, 288.598f, 586.051f, 283.348f);
        path.quadTo(583.101f, 279.548f, 580.001f, 277.248f);
        path.lineTo(580.451f, 275.898f);
        path.quadTo(581.651f, 273.698f, 586.101f, 273.698f);
        path.quadTo(587.901f, 273.698f, 588.801f, 279.498f);
        path.lineTo(589.551f, 286.148f);
        path.quadTo(598.408f, 284.219f, 602.551f, 286.797f);
        path.close();
        path.moveTo(533.268f, 62.6074f);
        path.quadTo(535.318f, 57.7575f, 538.268f, 53.6575f);
        path.quadTo(547.518f, 40.7075f, 561.718f, 40.7075f);
        path.quadTo(567.618f, 40.7075f, 571.818f, 51.3074f);
        path.quadTo(575.068f, 59.3574f, 575.068f, 63.7575f);
        path.quadTo(575.068f, 72.1075f, 570.518f, 82.2075f);
        path.quadTo(565.168f, 94.0075f, 557.118f, 98.2575f);
        path.quadTo(557.318f, 98.9575f, 558.718f, 99.4074f);
        path.quadTo(568.018f, 94.0574f, 573.118f, 82.6075f);
        path.quadTo(577.368f, 73.1075f, 577.368f, 63.5075f);
        path.quadTo(577.368f, 48.4575f, 570.018f, 42.7575f);
        path.quadTo(563.718f, 37.8575f, 553.768f, 40.5075f);
        path.quadTo(544.768f, 42.8575f, 537.518f, 49.7075f);
        path.quadTo(530.168f, 56.7575f, 530.168f, 63.3574f);
        path.quadTo(530.168f, 73.4074f, 534.718f, 81.8074f);
        path.quadTo(540.118f, 91.7075f, 551.318f, 98.0075f);
        path.lineTo(549.718f, 184.657f);
        path.lineTo(550.318f, 193.457f);
        path.lineTo(551.368f, 205.507f);
        path.lineTo(551.818f, 205.057f);
        path.lineTo(552.068f, 198.157f);
        path.quadTo(552.068f, 187.057f, 552.618f, 141.607f);
        path.lineTo(553.218f, 96.3075f);
        path.quadTo(553.218f, 92.8575f, 552.518f, 89.7575f);
        path.lineTo(551.568f, 89.7575f);
        path.lineTo(551.368f, 95.9575f);
        path.lineTo(551.318f, 97.5575f);
        path.quadTo(541.618f, 89.4575f, 537.018f, 82.7575f);
        path.quadTo(531.768f, 74.9575f, 531.768f, 66.8075f);
        path.quadTo(531.795f, 66.1521f, 533.268f, 62.6074f);
        path.close();
        path.moveTo(459.75f, 20.4855f);
        path.lineTo(463.3f, 20.2855f);
        path.quadTo(457.15f, 30.9355f, 445.85f, 53.2855f);
        path.quadTo(432.55f, 79.6855f, 432.55f, 82.8855f);
        path.quadTo(432.55f, 84.2855f, 433.5f, 84.1855f);
        path.lineTo(434.4f, 83.7855f);
        path.quadTo(437.8f, 75.5355f, 449.45f, 51.8855f);
        path.quadTo(459.15f, 32.2855f, 463.6f, 20.2855f);
        path.lineTo(465.9f, 20.1355f);
        path.lineTo(471.7f, 19.5855f);
        path.quadTo(470.8f, 18.8355f, 465.65f, 18.6855f);
        path.lineTo(459.5f, 18.6355f);
        path.quadTo(459.52f, 19.795f, 459.75f, 20.4855f);
        path.close();
        path.moveTo(474.482f, 30.8434f);
        path.quadTo(475.432f, 30.6434f, 475.632f, 29.9434f);
        path.quadTo(473.682f, 23.4934f, 471.532f, 21.6934f);
        path.lineTo(472.682f, 25.6934f);
        path.lineTo(474.482f, 30.8434f);
        path.close();
        path.moveTo(495.566f, 108.965f);
        path.lineTo(495.416f, 109.315f);
        path.quadTo(493.516f, 111.065f, 491.216f, 114.465f);
        path.lineTo(491.166f, 114.415f);
        path.lineTo(490.816f, 114.615f);
        path.quadTo(487.616f, 116.315f, 485.816f, 120.365f);
        path.quadTo(484.116f, 124.065f, 484.116f, 128.065f);
        path.lineTo(484.616f, 134.965f);
        path.lineTo(485.066f, 144.315f);
        path.lineTo(488.466f, 144.965f);
        path.lineTo(491.516f, 145.465f);
        path.quadTo(494.266f, 145.465f, 495.666f, 144.765f);
        path.lineTo(495.566f, 144.515f);
        path.lineTo(496.816f, 144.365f);
        path.lineTo(497.466f, 143.865f);
        path.lineTo(497.266f, 143.165f);
        path.lineTo(495.666f, 143.015f);
        path.quadTo(497.366f, 139.615f, 498.866f, 131.515f);
        path.quadTo(498.866f, 127.715f, 497.266f, 121.515f);
        path.lineTo(496.266f, 117.915f);
        path.lineTo(496.316f, 117.615f);
        path.lineTo(496.216f, 117.715f);
        path.lineTo(494.866f, 112.615f);
        path.lineTo(495.665f, 110.315f);
        path.lineTo(495.566f, 108.965f);
        path.close();
        path.moveTo(495.059f, 121.716f);
        path.lineTo(495.559f, 123.716f);
        path.quadTo(497.009f, 129.766f, 497.009f, 131.666f);
        path.quadTo(497.009f, 132.766f, 494.959f, 138.166f);
        path.lineTo(493.159f, 142.916f);
        path.lineTo(492.359f, 142.916f);
        path.lineTo(491.359f, 143.016f);
        path.quadTo(490.709f, 140.016f, 490.159f, 136.016f);
        path.lineTo(490.059f, 135.416f);
        path.quadTo(491.809f, 131.966f, 493.409f, 127.166f);
        path.lineTo(495.059f, 121.716f);
        path.close();
        path.moveTo(487.371f, 124.755f);
        path.lineTo(488.271f, 124.505f);
        path.quadTo(488.071f, 126.555f, 488.071f, 128.855f);
        path.quadTo(488.071f, 135.405f, 488.321f, 137.255f);
        path.lineTo(488.271f, 137.405f);
        path.lineTo(488.371f, 137.405f);
        path.quadTo(488.821f, 140.805f, 490.471f, 143.205f);
        path.lineTo(490.321f, 143.205f);
        path.lineTo(486.921f, 142.705f);
        path.lineTo(486.471f, 134.505f);
        path.lineTo(485.971f, 128.055f);
        path.quadTo(485.971f, 125.955f, 487.121f, 123.455f);
        path.lineTo(487.121f, 123.655f);
        path.quadTo(487.141f, 125.997f, 487.371f, 124.755f);
        path.close();
        path.moveTo(489.765f, 123.512f);
        path.lineTo(493.565f, 115.762f);
        path.lineTo(494.515f, 119.412f);
        path.quadTo(492.665f, 121.762f, 491.265f, 126.262f);
        path.lineTo(489.665f, 132.062f);
        path.lineTo(489.415f, 129.212f);
        path.quadTo(489.443f, 124.386f, 489.765f, 123.512f);
        path.close();
        path.moveTo(504.588f, 123.834f);
        path.lineTo(506.738f, 122.484f);
        path.lineTo(506.438f, 123.134f);
        path.lineTo(504.588f, 128.184f);
        path.lineTo(504.638f, 124.984f);
        path.lineTo(504.588f, 123.834f);
        path.close();
        path.moveTo(447.919f, 124.478f);
        path.quadTo(448.219f, 123.928f, 448.719f, 123.628f);
        path.quadTo(449.219f, 123.378f, 449.869f, 123.378f);
        path.lineTo(458.369f, 123.828f);
        path.quadTo(458.819f, 128.428f, 462.619f, 151.428f);
        path.lineTo(464.569f, 164.578f);
        path.lineTo(464.369f, 164.578f);
        path.lineTo(464.469f, 170.678f);
        path.quadTo(462.269f, 171.878f, 461.619f, 174.428f);
        path.quadTo(461.269f, 175.828f, 460.919f, 178.978f);
        path.lineTo(460.569f, 180.578f);
        path.lineTo(458.569f, 178.778f);
        path.lineTo(456.569f, 163.278f);
        path.lineTo(456.769f, 162.728f);
        path.lineTo(456.519f, 162.878f);
        path.quadTo(454.869f, 150.328f, 453.319f, 142.928f);
        path.lineTo(451.419f, 143.378f);
        path.quadTo(448.769f, 140.078f, 447.819f, 136.178f);
        path.quadTo(447.069f, 133.278f, 447.069f, 128.878f);
        path.quadTo(446.969f, 127.328f, 447.319f, 125.978f);
        path.quadTo(447.551f, 125.077f, 447.919f, 124.478f);
        path.close();
        path.moveTo(447.965f, 170.835f);
        path.lineTo(448.215f, 170.585f);
        path.lineTo(448.215f, 158.835f);
        path.lineTo(443.165f, 154.435f);
        path.lineTo(442.465f, 157.385f);
        path.quadTo(441.765f, 159.735f, 441.765f, 160.985f);
        path.quadTo(441.765f, 164.685f, 442.215f, 165.835f);
        path.quadTo(443.215f, 168.885f, 447.315f, 171.235f);
        path.lineTo(447.965f, 170.835f);
        path.close();
        path.moveTo(455.147f, 170.329f);
        path.quadTo(455.147f, 168.929f, 455.597f, 167.129f);
        path.lineTo(456.847f, 176.279f);
        path.quadTo(455.147f, 173.413f, 455.147f, 170.329f);
        path.close();
        path.moveTo(463.571f, 172.539f);
        path.quadTo(463.821f, 171.639f, 464.471f, 171.189f);
        path.lineTo(464.621f, 182.139f);
        path.lineTo(464.571f, 182.139f);
        path.quadTo(464.371f, 182.289f, 464.371f, 182.539f);
        path.lineTo(464.621f, 182.589f);
        path.lineTo(464.621f, 182.689f);
        path.lineTo(463.021f, 182.089f);
        path.quadTo(463.821f, 180.039f, 463.621f, 177.239f);
        path.quadTo(463.387f, 173.367f, 463.571f, 172.539f);
        path.close();
        path.moveTo(458.876f, 180.825f);
        path.lineTo(460.276f, 181.625f);
        path.lineTo(459.276f, 183.675f);
        path.lineTo(458.876f, 180.825f);
        path.close();
        path.moveTo(483.689f, 177.695f);
        path.lineTo(484.589f, 176.495f);
        path.lineTo(485.089f, 175.195f);
        path.quadTo(487.389f, 174.145f, 489.589f, 175.945f);
        path.quadTo(491.539f, 177.545f, 491.539f, 179.095f);
        path.quadTo(491.539f, 180.545f, 491.189f, 180.445f);
        path.lineTo(490.839f, 179.995f);
        path.lineTo(483.489f, 177.945f);
        path.lineTo(483.689f, 177.695f);
        path.close();
        path.moveTo(500.721f, 173.782f);
        path.lineTo(500.771f, 173.882f);
        path.lineTo(500.771f, 175.332f);
        path.lineTo(500.321f, 176.582f);
        path.quadTo(498.121f, 178.832f, 496.371f, 183.532f);
        path.lineTo(496.071f, 182.932f);
        path.quadTo(498.051f, 178.477f, 500.721f, 173.782f);
        path.close();
        path.moveTo(581.513f, 120.151f);
        path.quadTo(581.513f, 127.301f, 578.113f, 136.001f);
        path.quadTo(574.613f, 144.751f, 568.863f, 151.901f);
        path.quadTo(569.313f, 152.601f, 570.663f, 153.051f);
        path.quadTo(576.363f, 148.901f, 580.313f, 137.751f);
        path.quadTo(583.813f, 128.001f, 583.813f, 120.351f);
        path.quadTo(583.813f, 111.401f, 579.313f, 108.301f);
        path.quadTo(575.313f, 105.551f, 569.463f, 108.051f);
        path.quadTo(563.663f, 110.451f, 559.563f, 116.201f);
        path.quadTo(555.013f, 122.451f, 555.013f, 129.351f);
        path.quadTo(555.013f, 140.101f, 556.763f, 145.301f);
        path.quadTo(559.513f, 153.251f, 568.013f, 160.151f);
        path.quadTo(565.613f, 157.951f, 561.213f, 148.351f);
        path.quadTo(556.663f, 138.451f, 556.663f, 136.001f);
        path.quadTo(556.613f, 128.901f, 559.013f, 122.201f);
        path.quadTo(563.713f, 108.851f, 575.963f, 108.851f);
        path.quadTo(580.713f, 108.851f, 581.563f, 113.901f);
        path.quadTo(582.019f, 116.56f, 581.513f, 120.151f);
        path.close();
        path.moveTo(565.585f, 162.411f);
        path.lineTo(565.435f, 161.811f);
        path.lineTo(564.735f, 161.811f);
        path.quadTo(564.085f, 168.011f, 563.335f, 178.761f);
        path.quadTo(562.635f, 188.811f, 562.635f, 190.811f);
        path.quadTo(562.635f, 201.861f, 562.885f, 207.361f);
        path.lineTo(563.585f, 207.361f);
        path.quadTo(563.835f, 199.061f, 564.785f, 181.211f);
        path.lineTo(565.635f, 164.211f);
        path.lineTo(565.585f, 162.411f);
        path.close();
        path.moveTo(392.539f, 62.8376f);
        path.lineTo(392.99f, 59.3876f);
        path.quadTo(393.34f, 57.7876f, 393.84f, 56.6376f);
        path.quadTo(398.59f, 57.3376f, 401.49f, 58.3376f);
        path.quadTo(404.24f, 59.3376f, 406.889f, 61.2876f);
        path.lineTo(407.689f, 61.8876f);
        path.quadTo(410.389f, 77.3376f, 412.189f, 91.9876f);
        path.lineTo(409.289f, 62.8876f);
        path.lineTo(411.439f, 63.9876f);
        path.quadTo(412.139f, 63.5376f, 412.139f, 62.8376f);
        path.quadTo(410.939f, 62.3376f, 409.089f, 61.0876f);
        path.lineTo(408.889f, 59.6376f);
        path.lineTo(407.839f, 59.5376f);
        path.lineTo(407.289f, 59.6376f);
        path.lineTo(407.339f, 59.9376f);
        path.quadTo(404.639f, 58.0376f, 401.739f, 56.9376f);
        path.quadTo(392.439f, 53.6876f, 366.289f, 53.1876f);
        path.quadTo(359.289f, 53.4376f, 353.939f, 53.2876f);
        path.lineTo(350.189f, 53.1876f);
        path.quadTo(350.189f, 53.4876f, 356.239f, 54.2876f);
        path.lineTo(363.989f, 55.0376f);
        path.quadTo(382.389f, 55.0376f, 392.789f, 56.4376f);
        path.quadTo(391.839f, 56.9376f, 391.539f, 57.8376f);
        path.quadTo(391.389f, 58.2376f, 391.389f, 60.3376f);
        path.lineTo(391.439f, 62.2876f);
        path.lineTo(391.639f, 63.0876f);
        path.lineTo(392.539f, 62.8376f);
        path.close();
        path.moveTo(389.455f, 68.3158f);
        path.quadTo(387.505f, 67.6658f, 386.755f, 67.6658f);
        path.lineTo(386.755f, 84.7158f);
        path.quadTo(388.155f, 86.7658f, 395.755f, 88.1658f);
        path.quadTo(397.155f, 88.1658f, 396.955f, 87.8158f);
        path.lineTo(396.455f, 87.4658f);
        path.lineTo(396.455f, 81.9158f);
        path.quadTo(395.305f, 73.1158f, 393.455f, 71.5658f);
        path.lineTo(394.555f, 76.0158f);
        path.quadTo(395.305f, 78.9158f, 395.305f, 80.1658f);
        path.quadTo(395.305f, 83.9158f, 394.605f, 86.3158f);
        path.quadTo(387.455f, 83.4658f, 387.755f, 77.6658f);
        path.quadTo(389.205f, 71.4158f, 388.155f, 69.0658f);
        path.quadTo(389.655f, 69.7158f, 392.355f, 70.1658f);
        path.quadTo(394.905f, 70.5658f, 395.305f, 70.2158f);
        path.lineTo(389.455f, 68.3158f);
        path.close();
        path.moveTo(374.356f, 78.5816f);
        path.quadTo(374.356f, 76.9315f, 375.706f, 72.8316f);
        path.quadTo(377.106f, 68.6815f, 377.106f, 66.5315f);
        path.quadTo(377.656f, 66.6815f, 379.506f, 69.2316f);
        path.lineTo(381.256f, 72.0316f);
        path.quadTo(381.256f, 75.4816f, 380.106f, 83.5816f);
        path.quadTo(375.906f, 83.4315f, 374.756f, 81.4315f);
        path.quadTo(374.356f, 80.6992f, 374.356f, 78.5816f);
        path.close();
        path.moveTo(381.491f, 72.7351f);
        path.lineTo(381.991f, 72.7351f);
        path.quadTo(383.341f, 74.8351f, 384.291f, 74.5851f);
        path.lineTo(381.741f, 69.0851f);
        path.quadTo(380.291f, 66.2351f, 376.441f, 64.6851f);
        path.quadTo(375.591f, 65.5851f, 374.291f, 70.6351f);
        path.quadTo(372.991f, 75.7851f, 372.991f, 78.8351f);
        path.lineTo(372.741f, 79.9851f);
        path.quadTo(372.641f, 81.1851f, 373.041f, 82.1351f);
        path.quadTo(374.291f, 85.1851f, 380.491f, 85.1851f);
        path.quadTo(381.941f, 85.1851f, 381.991f, 84.8351f);
        path.lineTo(381.741f, 84.4851f);
        path.quadTo(381.491f, 80.3309f, 381.491f, 72.7351f);
        path.close();
        path.moveTo(436.503f, 86.3154f);
        path.lineTo(435.803f, 86.5154f);
        path.quadTo(439.003f, 109.065f, 443.153f, 125.915f);
        path.quadTo(444.303f, 125.665f, 444.553f, 124.965f);
        path.lineTo(443.803f, 120.015f);
        path.quadTo(444.303f, 119.565f, 444.303f, 119.015f);
        path.quadTo(444.303f, 116.215f, 443.853f, 115.515f);
        path.lineTo(443.153f, 115.515f);
        path.lineTo(441.503f, 105.165f);
        path.quadTo(439.633f, 93.5889f, 436.503f, 86.3154f);
        path.close();
        path.moveTo(445.71f, 87.3742f);
        path.lineTo(446.56f, 88.2742f);
        path.lineTo(445.26f, 91.6742f);
        path.quadTo(445.388f, 88.8473f, 445.71f, 87.3742f);
        path.close();
        path.moveTo(336.377f, 27.4368f);
        path.lineTo(338.077f, 30.5368f);
        path.quadTo(345.577f, 44.1868f, 354.777f, 65.5868f);
        path.lineTo(355.727f, 65.0368f);
        path.quadTo(346.677f, 45.4368f, 341.627f, 36.3368f);
        path.lineTo(336.377f, 27.4368f);
        path.close();
        path.moveTo(323.119f, 9.48319f);
        path.lineTo(321.869f, 8.08319f);
        path.lineTo(319.769f, 7.73319f);
        path.quadTo(321.277f, 8.05611f, 323.119f, 9.48319f);
        path.close();
        path.moveTo(307.835f, 22.373f);
        path.lineTo(307.635f, 22.573f);
        path.lineTo(307.085f, 23.373f);
        path.lineTo(308.785f, 19.123f);
        path.lineTo(306.635f, 24.023f);
        path.lineTo(306.635f, 24.123f);
        path.quadTo(302.685f, 30.473f, 299.935f, 39.223f);
        path.quadTo(297.485f, 46.923f, 297.485f, 49.823f);
        path.quadTo(297.485f, 52.823f, 296.885f, 54.573f);
        path.quadTo(296.235f, 56.423f, 294.035f, 59.823f);
        path.lineTo(294.035f, 64.673f);
        path.lineTo(295.635f, 64.673f);
        path.quadTo(294.835f, 63.273f, 296.185f, 58.223f);
        path.lineTo(296.585f, 58.223f);
        path.quadTo(297.985f, 54.973f, 300.335f, 46.573f);
        path.lineTo(300.735f, 45.473f);
        path.quadTo(308.085f, 27.623f, 308.085f, 23.923f);
        path.lineTo(307.835f, 22.373f);
        path.close();
        path.moveTo(427.756f, 154.907f);
        path.lineTo(427.756f, 154.657f);
        path.quadTo(429.256f, 155.907f, 430.906f, 159.157f);
        path.quadTo(432.556f, 162.557f, 432.556f, 164.657f);
        path.quadTo(432.556f, 166.157f, 432.156f, 167.557f);
        path.lineTo(431.406f, 169.607f);
        path.quadTo(430.956f, 168.707f, 430.706f, 168.707f);
        path.quadTo(431.106f, 166.157f, 429.506f, 161.607f);
        path.quadTo(427.756f, 156.657f, 427.756f, 154.907f);
        path.close();
        path.moveTo(428.217f, 151.455f);
        path.quadTo(426.367f, 152.655f, 426.367f, 156.255f);
        path.quadTo(426.367f, 158.205f, 428.117f, 164.355f);
        path.quadTo(430.167f, 171.655f, 432.117f, 172.855f);
        path.quadTo(433.117f, 170.805f, 433.767f, 168.305f);
        path.quadTo(434.417f, 165.955f, 434.417f, 164.205f);
        path.quadTo(434.417f, 162.005f, 432.617f, 159.055f);
        path.quadTo(428.999f, 153.066f, 428.217f, 151.455f);
        path.close();
        path.moveTo(446.17f, 168.718f);
        path.quadTo(444.27f, 166.918f, 443.57f, 163.418f);
        path.quadTo(442.77f, 159.268f, 446.17f, 158.818f);
        path.lineTo(446.42f, 164.118f);
        path.lineTo(446.17f, 168.718f);
        path.close();
        path.moveTo(401.746f, 306.362f);
        path.lineTo(401.746f, 307.712f);
        path.quadTo(409.996f, 309.362f, 420.796f, 310.012f);
        path.quadTo(435.146f, 310.962f, 461.596f, 310.962f);
        path.lineTo(505.046f, 311.162f);
        path.quadTo(549.746f, 311.512f, 565.646f, 312.112f);
        path.lineTo(559.646f, 311.162f);
        path.quadTo(559.646f, 311.012f, 572.646f, 311.012f);
        path.quadTo(585.797f, 310.562f, 586.596f, 308.212f);
        path.quadTo(570.646f, 307.112f, 558.496f, 308.562f);
        path.lineTo(546.996f, 310.262f);
        path.lineTo(542.246f, 310.112f);
        path.quadTo(542.946f, 308.912f, 542.746f, 306.812f);
        path.quadTo(542.396f, 303.812f, 542.496f, 303.162f);
        path.quadTo(543.046f, 298.962f, 552.746f, 298.512f);
        path.quadTo(545.696f, 296.162f, 542.546f, 301.312f);
        path.quadTo(540.546f, 304.562f, 540.546f, 309.112f);
        path.lineTo(540.696f, 310.062f);
        path.lineTo(503.046f, 308.862f);
        path.quadTo(497.296f, 308.712f, 483.146f, 308.862f);
        path.lineTo(426.846f, 309.112f);
        path.lineTo(409.846f, 308.362f);
        path.lineTo(401.746f, 306.362f);
        path.close();
        path.moveTo(539.483f, 215.397f);
        path.lineTo(539.533f, 215.247f);
        path.lineTo(539.633f, 214.947f);
        path.lineTo(542.883f, 215.197f);
        path.lineTo(539.733f, 215.447f);
        path.lineTo(539.483f, 215.397f);
        path.close();
        path.moveTo(536.214f, 219.034f);
        path.lineTo(536.164f, 219.434f);
        path.lineTo(535.764f, 219.034f);
        path.lineTo(536.214f, 219.034f);
        path.close();
        path.moveTo(567.242f, 273.217f);
        path.lineTo(566.592f, 273.217f);
        path.lineTo(566.242f, 278.467f);
        path.quadTo(565.942f, 281.217f, 565.192f, 282.867f);
        path.lineTo(565.892f, 283.267f);
        path.lineTo(563.092f, 286.117f);
        path.quadTo(554.642f, 283.217f, 551.892f, 286.667f);
        path.quadTo(550.692f, 288.167f, 550.692f, 291.717f);
        path.quadTo(550.692f, 294.167f, 550.892f, 294.867f);
        path.lineTo(552.542f, 294.867f);
        path.quadTo(551.242f, 292.317f, 551.592f, 290.267f);
        path.quadTo(552.242f, 286.317f, 560.142f, 286.317f);
        path.quadTo(560.942f, 286.317f, 561.942f, 287.167f);
        path.lineTo(564.742f, 288.867f);
        path.quadTo(566.092f, 287.917f, 566.692f, 285.417f);
        path.lineTo(567.492f, 282.267f);
        path.lineTo(567.742f, 282.167f);
        path.lineTo(567.742f, 277.367f);
        path.lineTo(567.242f, 273.217f);
        path.close();
        path.moveTo(503.76f, 193.07f);
        path.lineTo(505.31f, 191.17f);
        path.lineTo(510.26f, 209.47f);
        path.quadTo(513.96f, 223.37f, 516.36f, 233.97f);
        path.lineTo(508.26f, 234.22f);
        path.quadTo(492.66f, 234.52f, 483.96f, 232.77f);
        path.quadTo(489.06f, 222.87f, 493.16f, 204.22f);
        path.lineTo(495.51f, 194.52f);
        path.quadTo(497.01f, 196.67f, 499.46f, 196.77f);
        path.lineTo(499.96f, 202.67f);
        path.quadTo(500.71f, 210.67f, 500.71f, 214.62f);
        path.quadTo(500.71f, 216.07f, 500.86f, 216.77f);
        path.lineTo(501.16f, 217.72f);
        path.lineTo(502.56f, 217.72f);
        path.quadTo(502.41f, 208.07f, 502.86f, 194.22f);
        path.lineTo(502.86f, 194.12f);
        path.lineTo(503.76f, 193.07f);
        path.close();
        path.moveTo(495.612f, 185.751f);
        path.lineTo(495.512f, 186.001f);
        path.lineTo(495.012f, 188.001f);
        path.lineTo(494.462f, 186.651f);
        path.lineTo(494.812f, 185.751f);
        path.lineTo(495.612f, 185.751f);
        path.close();
        path.moveTo(498.972f, 190.078f);
        path.lineTo(499.222f, 193.378f);
        path.lineTo(497.022f, 195.178f);
        path.lineTo(496.272f, 191.778f);
        path.quadTo(497.622f, 186.778f, 499.122f, 182.828f);
        path.quadTo(498.834f, 186.027f, 498.972f, 190.078f);
        path.close();
        path.moveTo(503.069f, 189.249f);
        path.lineTo(503.269f, 183.699f);
        path.lineTo(504.469f, 187.999f);
        path.lineTo(503.069f, 189.249f);
        path.close();
        path.moveTo(482.446f, 232.43f);
        path.lineTo(483.146f, 231.03f);
        path.lineTo(482.896f, 232.53f);
        path.lineTo(482.446f, 232.43f);
        path.close();
        path.moveTo(519.274f, 235.561f);
        path.lineTo(519.524f, 235.561f);
        path.lineTo(519.524f, 236.661f);
        path.lineTo(519.274f, 235.561f);
        path.close();
        path.moveTo(501.504f, 242.328f);
        path.quadTo(501.554f, 243.178f, 502.104f, 243.528f);
        path.quadTo(503.254f, 244.278f, 508.604f, 244.528f);
        path.quadTo(505.704f, 244.178f, 501.854f, 240.078f);
        path.quadTo(501.254f, 240.078f, 500.954f, 240.978f);
        path.quadTo(501.412f, 241.453f, 501.504f, 242.328f);
        path.close();
        path.moveTo(185.521f, 44.0093f);
        path.quadTo(182.271f, 42.8093f, 180.171f, 43.9594f);
        path.quadTo(177.771f, 45.2593f, 177.771f, 49.3093f);
        path.quadTo(177.771f, 50.8093f, 178.321f, 51.9093f);
        path.lineTo(178.521f, 52.2093f);
        path.lineTo(176.621f, 52.0093f);
        path.lineTo(175.271f, 52.0093f);
        path.quadTo(175.271f, 53.1593f, 175.721f, 53.6093f);
        path.lineTo(178.221f, 53.1593f);
        path.lineTo(179.021f, 53.0593f);
        path.lineTo(179.371f, 53.6093f);
        path.lineTo(179.871f, 53.1593f);
        path.lineTo(179.821f, 52.9593f);
        path.lineTo(180.771f, 52.7093f);
        path.lineTo(179.571f, 52.4593f);
        path.quadTo(178.821f, 50.4093f, 178.771f, 48.9093f);
        path.quadTo(178.771f, 45.5593f, 183.521f, 45.5593f);
        path.quadTo(188.121f, 45.5593f, 190.171f, 49.9093f);
        path.quadTo(191.221f, 52.2093f, 192.271f, 55.7093f);
        path.lineTo(192.971f, 55.2093f);
        path.quadTo(192.971f, 55.1093f, 193.121f, 55.1093f);
        path.lineTo(193.221f, 53.8593f);
        path.quadTo(193.221f, 50.7093f, 190.821f, 47.8093f);
        path.quadTo(188.559f, 45.2063f, 185.521f, 44.0093f);
        path.close();
        path.moveTo(173.459f, 45.1142f);
        path.quadTo(170.659f, 42.3642f, 165.109f, 42.3642f);
        path.quadTo(162.909f, 42.3642f, 155.659f, 45.8142f);
        path.quadTo(148.309f, 49.3142f, 148.309f, 50.6142f);
        path.quadTo(148.309f, 51.7642f, 149.209f, 55.8142f);
        path.quadTo(150.159f, 59.8142f, 150.159f, 60.9642f);
        path.lineTo(150.059f, 63.1142f);
        path.quadTo(149.659f, 64.4142f, 147.609f, 64.6642f);
        path.quadTo(147.459f, 64.4142f, 146.609f, 64.2642f);
        path.lineTo(145.759f, 64.2142f);
        path.lineTo(146.259f, 64.9142f);
        path.quadTo(147.009f, 66.0642f, 150.359f, 66.0642f);
        path.lineTo(151.709f, 65.8142f);
        path.lineTo(151.309f, 65.5642f);
        path.lineTo(151.509f, 61.0642f);
        path.quadTo(151.509f, 59.3642f, 150.959f, 55.8142f);
        path.lineTo(149.709f, 49.7142f);
        path.quadTo(152.659f, 48.8142f, 158.759f, 46.0642f);
        path.quadTo(163.009f, 44.1642f, 166.009f, 44.1642f);
        path.quadTo(167.409f, 44.1642f, 170.159f, 46.9142f);
        path.lineTo(174.759f, 51.7642f);
        path.lineTo(175.259f, 51.3142f);
        path.lineTo(175.409f, 51.0642f);
        path.lineTo(175.459f, 49.5642f);
        path.quadTo(175.485f, 47.0937f, 173.459f, 45.1142f);
        path.close();
        path.moveTo(110.208f, 46.5413f);
        path.lineTo(109.758f, 46.9913f);
        path.quadTo(111.558f, 50.9913f, 112.458f, 57.3913f);
        path.lineTo(113.708f, 66.9913f);
        path.lineTo(120.408f, 67.6913f);
        path.lineTo(124.758f, 68.3913f);
        path.quadTo(122.658f, 68.0913f, 122.158f, 67.6913f);
        path.lineTo(121.858f, 66.8413f);
        path.lineTo(121.458f, 66.4413f);
        path.lineTo(121.958f, 66.2913f);
        path.quadTo(122.108f, 63.8913f, 120.708f, 59.8413f);
        path.lineTo(120.358f, 58.6913f);
        path.lineTo(120.408f, 59.2913f);
        path.lineTo(121.058f, 66.1913f);
        path.quadTo(119.508f, 65.5413f, 115.058f, 65.1413f);
        path.quadTo(114.458f, 51.3413f, 110.458f, 46.2913f);
        path.lineTo(110.208f, 46.5413f);
        path.close();
        path.moveTo(103.763f, 47.9683f);
        path.lineTo(107.263f, 47.1684f);
        path.quadTo(102.113f, 46.1184f, 99.9626f, 47.0684f);
        path.lineTo(99.8626f, 46.9184f);
        path.lineTo(99.6626f, 46.4683f);
        path.quadTo(93.1626f, 47.6184f, 88.2126f, 50.5684f);
        path.lineTo(87.6626f, 50.9684f);
        path.lineTo(87.4626f, 50.8684f);
        path.lineTo(86.5626f, 51.0184f);
        path.lineTo(85.8626f, 51.3184f);
        path.lineTo(86.3626f, 51.7184f);
        path.quadTo(81.4626f, 54.5684f, 78.7126f, 55.4684f);
        path.quadTo(84.0126f, 54.1184f, 90.5626f, 51.2684f);
        path.quadTo(94.9626f, 49.3184f, 97.9626f, 48.4684f);
        path.lineTo(96.2126f, 49.0184f);
        path.lineTo(98.5126f, 49.2684f);
        path.lineTo(103.763f, 47.9683f);
        path.close();
        path.moveTo(76.0957f, 53.7687f);
        path.quadTo(76.0957f, 51.4188f, 74.5957f, 50.1688f);
        path.quadTo(73.4957f, 52.5688f, 72.6457f, 60.9688f);
        path.lineTo(72.6457f, 60.9688f);
        path.lineTo(71.3957f, 62.8188f);
        path.lineTo(72.4957f, 62.8188f);
        path.lineTo(72.3457f, 64.4188f);
        path.lineTo(71.4457f, 67.8688f);
        path.quadTo(71.6957f, 65.6188f, 72.0457f, 63.9688f);
        path.quadTo(69.9957f, 65.5188f, 69.4957f, 72.5188f);
        path.lineTo(69.3457f, 76.9688f);
        path.lineTo(66.9957f, 88.7688f);
        path.quadTo(63.7457f, 106.219f, 63.0457f, 116.369f);
        path.lineTo(61.5457f, 114.669f);
        path.lineTo(60.6457f, 113.669f);
        path.quadTo(57.8957f, 102.719f, 56.3457f, 87.0188f);
        path.quadTo(54.8457f, 67.8188f, 53.6457f, 58.6688f);
        path.lineTo(52.9457f, 58.6688f);
        path.lineTo(52.9457f, 64.4188f);
        path.quadTo(54.1457f, 72.6188f, 55.3957f, 90.7688f);
        path.quadTo(56.7957f, 104.469f, 59.9957f, 113.019f);
        path.quadTo(55.3957f, 108.319f, 49.9457f, 104.569f);
        path.quadTo(46.3957f, 101.419f, 43.2957f, 99.4188f);
        path.lineTo(40.0957f, 95.6688f);
        path.lineTo(40.0957f, 90.4688f);
        path.quadTo(38.2957f, 86.0188f, 37.2957f, 78.7688f);
        path.quadTo(36.9457f, 76.1188f, 36.4957f, 70.4188f);
        path.lineTo(36.5957f, 70.6688f);
        path.lineTo(36.8457f, 70.2188f);
        path.quadTo(43.0457f, 61.3188f, 43.0457f, 60.0688f);
        path.quadTo(43.0457f, 58.6188f, 42.8457f, 58.5188f);
        path.lineTo(42.5957f, 58.6688f);
        path.lineTo(42.1957f, 58.9688f);
        path.lineTo(42.8957f, 57.2688f);
        path.quadTo(43.0457f, 56.4688f, 43.0457f, 52.1188f);
        path.quadTo(43.0457f, 44.8188f, 38.2457f, 39.5688f);
        path.quadTo(33.9457f, 34.9188f, 27.6457f, 33.6188f);
        path.quadTo(21.4457f, 32.2688f, 17.0457f, 34.9188f);
        path.quadTo(12.1957f, 37.9188f, 12.1957f, 44.6688f);
        path.quadTo(12.1957f, 45.8188f, 12.9457f, 48.9188f);
        path.quadTo(13.9457f, 53.3688f, 15.6957f, 57.0688f);
        path.quadTo(21.1957f, 68.5688f, 31.3457f, 68.5688f);
        path.quadTo(32.7457f, 68.5688f, 33.1457f, 68.0688f);
        path.lineTo(33.6457f, 67.4188f);
        path.lineTo(33.3957f, 66.9688f);
        path.quadTo(22.9457f, 65.6688f, 17.5457f, 57.3688f);
        path.quadTo(13.5957f, 51.2188f, 13.5957f, 44.4188f);
        path.quadTo(12.3957f, 41.9188f, 13.6457f, 39.6188f);
        path.quadTo(16.1957f, 34.9688f, 28.5457f, 34.9688f);
        path.quadTo(35.8957f, 34.9688f, 39.3957f, 42.1188f);
        path.quadTo(41.6957f, 46.8188f, 41.6957f, 51.7688f);
        path.lineTo(41.5457f, 56.8688f);
        path.quadTo(41.2957f, 58.5688f, 40.5457f, 60.3188f);
        path.quadTo(38.8457f, 61.9188f, 37.7457f, 64.3188f);
        path.quadTo(36.3957f, 67.1688f, 36.3957f, 69.3688f);
        path.lineTo(36.3957f, 69.7188f);
        path.lineTo(36.1457f, 66.9688f);
        path.lineTo(35.4457f, 66.9688f);
        path.lineTo(35.4457f, 72.7188f);
        path.quadTo(36.9457f, 77.4188f, 37.7457f, 85.2188f);
        path.lineTo(38.7957f, 94.2188f);
        path.quadTo(36.5957f, 91.7688f, 34.9457f, 91.2188f);
        path.lineTo(32.9457f, 91.1188f);
        path.quadTo(29.5457f, 92.1188f, 26.0457f, 100.119f);
        path.lineTo(22.3957f, 108.469f);
        path.quadTo(18.7957f, 113.769f, 15.9457f, 121.319f);
        path.quadTo(13.9457f, 126.569f, 9.89567f, 141.519f);
        path.lineTo(9.64567f, 137.769f);
        path.lineTo(11.6957f, 132.369f);
        path.lineTo(9.59567f, 137.219f);
        path.lineTo(9.44567f, 134.169f);
        path.lineTo(8.74567f, 134.169f);
        path.lineTo(8.74567f, 139.169f);
        path.lineTo(5.99567f, 145.719f);
        path.lineTo(6.69567f, 145.719f);
        path.lineTo(8.74567f, 140.069f);
        path.lineTo(8.74567f, 152.819f);
        path.lineTo(8.99567f, 154.369f);
        path.lineTo(8.74567f, 154.919f);
        path.lineTo(9.04567f, 154.869f);
        path.quadTo(10.2457f, 163.469f, 11.1957f, 175.619f);
        path.lineTo(10.9457f, 175.619f);
        path.lineTo(10.3957f, 173.769f);
        path.lineTo(9.69567f, 173.769f);
        path.lineTo(9.99567f, 175.319f);
        path.quadTo(8.49567f, 177.819f, 7.09567f, 181.619f);
        path.lineTo(6.39567f, 160.469f);
        path.lineTo(6.69567f, 159.969f);
        path.lineTo(6.39567f, 160.319f);
        path.lineTo(6.39567f, 158.269f);
        path.quadTo(6.49567f, 157.419f, 6.94567f, 156.519f);
        path.lineTo(7.59567f, 154.419f);
        path.lineTo(6.34567f, 156.669f);
        path.lineTo(5.79567f, 140.419f);
        path.lineTo(4.84567f, 140.419f);
        path.lineTo(4.84567f, 159.069f);
        path.lineTo(-6.95433f, 179.619f);
        path.quadTo(-16.3543f, 194.219f, -25.4543f, 211.519f);
        path.lineTo(-30.5043f, 221.469f);
        path.lineTo(-35.1043f, 222.119f);
        path.lineTo(-28.3543f, 209.919f);
        path.quadTo(-10.2043f, 177.019f, 2.99567f, 155.119f);
        path.quadTo(-12.1043f, 175.569f, -36.6543f, 218.469f);
        path.quadTo(-48.1043f, 238.419f, -53.8543f, 249.419f);
        path.lineTo(-62.5543f, 248.819f);
        path.quadTo(-62.5543f, 249.019f, -63.2043f, 249.269f);
        path.quadTo(-60.0543f, 248.969f, -54.2043f, 250.119f);
        path.quadTo(-59.7543f, 260.669f, -59.7543f, 262.469f);
        path.quadTo(-59.7543f, 264.019f, -59.5043f, 264.669f);
        path.lineTo(-58.8543f, 265.369f);
        path.lineTo(-50.8543f, 250.819f);
        path.lineTo(-50.4043f, 250.969f);
        path.lineTo(-51.4043f, 253.219f);
        path.quadTo(-55.8043f, 263.369f, -59.0543f, 266.969f);
        path.lineTo(-68.0043f, 265.869f);
        path.lineTo(-92.0043f, 259.869f);
        path.lineTo(-92.7043f, 260.319f);
        path.quadTo(-91.2043f, 261.919f, -83.5543f, 263.719f);
        path.lineTo(-86.0043f, 263.769f);
        path.lineTo(-73.6043f, 266.869f);
        path.lineTo(-63.5543f, 267.669f);
        path.lineTo(-61.4043f, 268.169f);
        path.lineTo(-61.5043f, 267.669f);
        path.lineTo(-58.6043f, 267.569f);
        path.lineTo(-58.3043f, 267.569f);
        path.lineTo(-57.0043f, 267.919f);
        path.lineTo(-56.6543f, 267.419f);
        path.lineTo(-55.6543f, 267.219f);
        path.lineTo(-56.5043f, 267.169f);
        path.quadTo(-52.7043f, 261.569f, -49.3043f, 253.669f);
        path.lineTo(-48.4043f, 251.369f);
        path.lineTo(-45.1543f, 251.969f);
        path.lineTo(-46.4043f, 254.719f);
        path.quadTo(-47.4043f, 256.069f, -48.5543f, 259.219f);
        path.lineTo(-51.0043f, 264.469f);
        path.lineTo(-50.2543f, 264.319f);
        path.lineTo(-50.4543f, 264.969f);
        path.lineTo(-51.8543f, 270.169f);
        path.lineTo(-53.4543f, 269.769f);
        path.lineTo(-53.1043f, 270.569f);
        path.quadTo(-52.9043f, 271.069f, -52.1543f, 271.469f);
        path.lineTo(-52.2543f, 271.769f);
        path.quadTo(-55.2043f, 271.169f, -57.6043f, 270.269f);
        path.quadTo(-60.7543f, 269.069f, -61.6043f, 269.069f);
        path.lineTo(-62.1043f, 269.919f);
        path.lineTo(-65.7543f, 269.319f);
        path.quadTo(-65.1543f, 269.569f, -62.5043f, 271.519f);
        path.lineTo(-62.5543f, 272.269f);
        path.lineTo(-60.4543f, 272.969f);
        path.lineTo(-59.8043f, 273.419f);
        path.lineTo(-66.2043f, 274.569f);
        path.quadTo(-66.2043f, 274.819f, -66.9043f, 275.069f);
        path.quadTo(-63.5543f, 275.219f, -59.1543f, 276.719f);
        path.quadTo(-56.6043f, 277.569f, -52.4543f, 277.919f);
        path.lineTo(-52.3043f, 278.319f);
        path.lineTo(-51.2543f, 280.119f);
        path.lineTo(-51.6043f, 277.969f);
        path.lineTo(-49.3043f, 278.069f);
        path.lineTo(-49.5043f, 281.719f);
        path.lineTo(-66.2543f, 279.219f);
        path.lineTo(-86.4543f, 275.519f);
        path.lineTo(-87.1543f, 275.969f);
        path.lineTo(-69.7543f, 280.169f);
        path.quadTo(-58.7043f, 282.669f, -52.1043f, 283.619f);
        path.lineTo(-55.3543f, 287.519f);
        path.lineTo(-56.3543f, 288.669f);
        path.lineTo(-82.0043f, 284.019f);
        path.lineTo(-106.754f, 279.219f);
        path.quadTo(-106.754f, 279.419f, -107.404f, 279.669f);
        path.quadTo(-103.254f, 281.069f, -84.3043f, 285.419f);
        path.lineTo(-68.3543f, 288.819f);
        path.quadTo(-85.5543f, 286.719f, -98.8043f, 283.169f);
        path.lineTo(-113.604f, 278.869f);
        path.quadTo(-122.604f, 276.219f, -129.754f, 274.569f);
        path.quadTo(-129.754f, 274.819f, -130.454f, 275.069f);
        path.quadTo(-123.154f, 278.069f, -98.2543f, 284.469f);
        path.quadTo(-70.7543f, 291.619f, -62.5543f, 291.619f);
        path.lineTo(-58.7043f, 291.469f);
        path.lineTo(-60.2543f, 293.469f);
        path.lineTo(-58.1043f, 291.419f);
        path.lineTo(-57.3043f, 291.419f);
        path.lineTo(-53.8043f, 291.169f);
        path.lineTo(-54.0043f, 290.219f);
        path.lineTo(-56.8043f, 290.019f);
        path.lineTo(-56.6543f, 289.869f);
        path.lineTo(-55.6543f, 289.719f);
        path.lineTo(-52.8543f, 289.319f);
        path.lineTo(-55.7543f, 288.819f);
        path.lineTo(-55.7043f, 288.719f);
        path.quadTo(-53.3043f, 285.819f, -51.9543f, 283.669f);
        path.lineTo(-49.5543f, 283.969f);
        path.lineTo(-49.6543f, 289.169f);
        path.lineTo(-49.3543f, 295.219f);
        path.lineTo(-49.8043f, 296.869f);
        path.lineTo(-49.8543f, 297.169f);
        path.quadTo(-68.1543f, 294.969f, -87.5543f, 290.969f);
        path.lineTo(-132.504f, 281.019f);
        path.quadTo(-132.504f, 281.269f, -133.204f, 281.519f);
        path.quadTo(-116.704f, 286.469f, -86.7543f, 293.019f);
        path.quadTo(-61.6043f, 298.469f, -50.2543f, 299.769f);
        path.lineTo(-50.3543f, 300.319f);
        path.lineTo(-59.9043f, 299.869f);
        path.quadTo(-89.9043f, 298.219f, -102.604f, 293.469f);
        path.quadTo(-97.4543f, 297.969f, -65.1043f, 300.019f);
        path.lineTo(-50.4043f, 300.719f);
        path.lineTo(-50.5543f, 301.769f);
        path.quadTo(-60.8543f, 300.469f, -63.3043f, 302.769f);
        path.quadTo(-64.2043f, 303.619f, -64.2543f, 305.069f);
        path.lineTo(-64.1543f, 307.369f);
        path.quadTo(-64.1543f, 309.219f, -63.6543f, 311.419f);
        path.lineTo(-63.0043f, 313.819f);
        path.lineTo(-63.0043f, 314.169f);
        path.lineTo(-62.8043f, 314.219f);
        path.lineTo(-62.3043f, 315.319f);
        path.lineTo(-61.9043f, 315.219f);
        path.lineTo(-61.8543f, 314.369f);
        path.lineTo(-51.7043f, 315.169f);
        path.lineTo(-40.4543f, 315.769f);
        path.quadTo(-38.8043f, 315.769f, -34.0043f, 312.119f);
        path.quadTo(-29.4043f, 308.569f, -29.4043f, 307.819f);
        path.quadTo(-29.4043f, 307.069f, -31.2543f, 305.069f);
        path.lineTo(-33.7543f, 302.669f);
        path.lineTo(-34.4543f, 302.669f);
        path.quadTo(-34.4543f, 303.569f, -33.1043f, 305.569f);
        path.lineTo(-31.4543f, 307.969f);
        path.lineTo(-35.3543f, 311.219f);
        path.quadTo(-39.6043f, 313.969f, -45.5043f, 313.969f);
        path.lineTo(-61.9043f, 312.869f);
        path.lineTo(-62.3043f, 309.119f);
        path.lineTo(-62.7543f, 303.619f);
        path.quadTo(-48.5043f, 304.669f, -47.7543f, 300.869f);
        path.lineTo(-46.3543f, 300.919f);
        path.lineTo(-45.9543f, 305.219f);
        path.lineTo(-45.2543f, 304.769f);
        path.lineTo(-45.2543f, 300.969f);
        path.lineTo(-38.9543f, 301.169f);
        path.quadTo(-36.9043f, 304.919f, -36.3043f, 307.719f);
        path.quadTo(-35.5543f, 307.619f, -35.0543f, 307.169f);
        path.lineTo(-34.7043f, 306.819f);
        path.quadTo(-35.6543f, 305.669f, -37.2543f, 302.369f);
        path.lineTo(-37.8043f, 301.169f);
        path.lineTo(-29.8543f, 301.269f);
        path.lineTo(-38.0043f, 300.769f);
        path.lineTo(-40.0043f, 296.719f);
        path.quadTo(-42.6043f, 292.269f, -45.3043f, 292.069f);
        path.lineTo(-45.4043f, 284.269f);
        path.lineTo(-45.3543f, 284.269f);
        path.lineTo(-43.2043f, 284.019f);
        path.lineTo(-42.0543f, 283.819f);
        path.lineTo(-42.0543f, 282.419f);
        path.lineTo(-45.4543f, 282.119f);
        path.lineTo(-45.7543f, 272.269f);
        path.lineTo(-44.4043f, 272.069f);
        path.lineTo(-44.6043f, 271.819f);
        path.lineTo(-44.8043f, 271.369f);
        path.lineTo(-46.5543f, 271.169f);
        path.lineTo(-45.7543f, 266.919f);
        path.lineTo(-44.7043f, 267.619f);
        path.lineTo(-44.6043f, 270.219f);
        path.lineTo(-42.8543f, 268.769f);
        path.lineTo(-42.1543f, 268.369f);
        path.lineTo(-42.0543f, 268.369f);
        path.lineTo(-40.6043f, 268.169f);
        path.lineTo(-40.8543f, 267.969f);
        path.lineTo(-40.2043f, 267.919f);
        path.quadTo(-38.9543f, 267.919f, -38.5543f, 268.569f);
        path.quadTo(-38.2043f, 269.169f, -37.4543f, 269.069f);
        path.lineTo(-37.2043f, 268.369f);
        path.quadTo(-43.0043f, 264.969f, -43.1543f, 263.519f);
        path.quadTo(-43.2043f, 262.969f, -43.4043f, 262.819f);
        path.quadTo(-43.8043f, 262.419f, -45.9543f, 261.719f);
        path.quadTo(-47.6543f, 264.719f, -48.6043f, 270.869f);
        path.lineTo(-50.9543f, 270.419f);
        path.lineTo(-50.2043f, 267.869f);
        path.quadTo(-48.9043f, 263.969f, -45.0543f, 256.619f);
        path.lineTo(-41.9043f, 261.269f);
        path.quadTo(-40.6543f, 262.719f, -38.2543f, 263.369f);
        path.lineTo(-37.6543f, 264.469f);
        path.lineTo(-37.2043f, 264.019f);
        path.lineTo(-36.8043f, 262.869f);
        path.lineTo(-36.7543f, 262.869f);
        path.lineTo(-35.4043f, 261.469f);
        path.lineTo(-35.6043f, 267.069f);
        path.quadTo(-35.6043f, 268.569f, -35.0543f, 270.869f);
        path.lineTo(-34.0043f, 274.819f);
        path.lineTo(-33.3043f, 274.369f);
        path.lineTo(-33.3043f, 269.519f);
        path.quadTo(-34.0543f, 266.869f, -34.5043f, 261.019f);
        path.lineTo(-30.1043f, 260.569f);
        path.lineTo(-28.3043f, 260.769f);
        path.quadTo(-28.1043f, 260.919f, -28.2543f, 261.019f);
        path.quadTo(-29.0543f, 265.019f, -25.7043f, 269.069f);
        path.lineTo(-25.4543f, 268.619f);
        path.quadTo(-26.3543f, 266.419f, -26.7043f, 263.469f);
        path.lineTo(-26.7043f, 263.169f);
        path.lineTo(-25.6543f, 264.569f);
        path.lineTo(-25.7043f, 265.369f);
        path.quadTo(-25.7043f, 266.819f, -25.4543f, 266.969f);
        path.lineTo(-25.2543f, 266.769f);
        path.lineTo(-24.3043f, 266.769f);
        path.quadTo(-23.7543f, 266.219f, -23.3543f, 265.469f);
        path.lineTo(-23.3543f, 265.419f);
        path.lineTo(-23.1543f, 265.169f);
        path.lineTo(-23.2043f, 265.119f);
        path.quadTo(-22.8543f, 264.069f, -22.9543f, 262.619f);
        path.quadTo(-23.0543f, 259.869f, -21.5543f, 258.469f);
        path.lineTo(-16.8043f, 258.969f);
        path.lineTo(-14.2043f, 258.919f);
        path.lineTo(-14.4543f, 257.569f);
        path.lineTo(-14.5043f, 257.519f);
        path.lineTo(-13.8543f, 257.219f);
        path.lineTo(-13.3043f, 256.869f);
        path.lineTo(-14.1043f, 251.069f);
        path.lineTo(-13.1043f, 250.869f);
        path.lineTo(-12.3543f, 250.669f);
        path.quadTo(-12.5043f, 250.369f, -14.0543f, 250.019f);
        path.lineTo(-14.2543f, 249.969f);
        path.lineTo(-14.8043f, 246.919f);
        path.lineTo(-14.7543f, 246.669f);
        path.lineTo(-12.8043f, 246.719f);
        path.lineTo(-9.85432f, 246.469f);
        path.lineTo(-8.90432f, 254.669f);
        path.lineTo(-6.85432f, 270.469f);
        path.lineTo(-5.90432f, 270.469f);
        path.quadTo(-5.45432f, 269.069f, -5.45432f, 265.619f);
        path.lineTo(-5.70432f, 261.969f);
        path.lineTo(-5.70432f, 253.869f);
        path.lineTo(-8.55432f, 239.469f);
        path.lineTo(-2.05432f, 239.819f);
        path.lineTo(0.0456797f, 239.969f);
        path.quadTo(0.14568f, 242.569f, 1.24568f, 251.319f);
        path.quadTo(2.59568f, 262.269f, 3.69568f, 267.469f);
        path.lineTo(4.39568f, 267.019f);
        path.lineTo(4.39568f, 265.069f);
        path.lineTo(4.44568f, 265.819f);
        path.lineTo(5.09568f, 273.219f);
        path.lineTo(6.24568f, 272.969f);
        path.lineTo(6.04568f, 253.319f);
        path.quadTo(5.94568f, 246.069f, 6.54568f, 240.319f);
        path.lineTo(10.3957f, 240.119f);
        path.quadTo(13.0457f, 239.919f, 13.3957f, 239.619f);
        path.lineTo(6.64568f, 239.519f);
        path.lineTo(6.99568f, 237.319f);
        path.lineTo(8.29568f, 237.319f);
        path.quadTo(10.2957f, 237.319f, 14.1457f, 235.669f);
        path.lineTo(15.2457f, 235.119f);
        path.lineTo(15.7457f, 240.219f);
        path.lineTo(18.4457f, 270.469f);
        path.lineTo(19.1457f, 269.969f);
        path.lineTo(19.1957f, 269.569f);
        path.lineTo(20.2957f, 277.569f);
        path.lineTo(20.8957f, 276.869f);
        path.lineTo(20.9457f, 276.419f);
        path.quadTo(21.1957f, 277.369f, 21.1957f, 275.069f);
        path.quadTo(21.1957f, 272.269f, 19.3457f, 253.419f);
        path.lineTo(19.3457f, 252.719f);
        path.quadTo(19.3457f, 243.219f, 18.5957f, 233.269f);
        path.lineTo(19.7957f, 232.219f);
        path.quadTo(19.6957f, 231.819f, 18.5957f, 231.519f);
        path.lineTo(18.4957f, 231.519f);
        path.lineTo(16.9457f, 217.669f);
        path.quadTo(15.3457f, 205.519f, 14.7957f, 195.719f);
        path.lineTo(17.3957f, 206.369f);
        path.quadTo(22.2957f, 226.369f, 24.3957f, 238.219f);
        path.lineTo(25.5457f, 238.019f);
        path.lineTo(25.7457f, 237.219f);
        path.lineTo(25.7957f, 235.219f);
        path.quadTo(25.7957f, 223.819f, 19.7457f, 203.369f);
        path.lineTo(14.5457f, 187.119f);
        path.lineTo(14.5457f, 186.419f);
        path.quadTo(14.5457f, 176.769f, 14.9957f, 171.919f);
        path.quadTo(13.2957f, 172.719f, 13.0457f, 178.469f);
        path.lineTo(11.9957f, 166.019f);
        path.lineTo(10.9457f, 154.269f);
        path.lineTo(11.5457f, 153.969f);
        path.quadTo(16.9957f, 131.169f, 26.2957f, 116.269f);
        path.quadTo(30.3957f, 110.169f, 31.7457f, 107.769f);
        path.quadTo(33.8457f, 103.919f, 33.8457f, 100.369f);
        path.lineTo(33.8457f, 100.269f);
        path.quadTo(39.3457f, 104.469f, 47.8957f, 113.019f);
        path.lineTo(57.5457f, 122.619f);
        path.lineTo(64.2957f, 130.919f);
        path.lineTo(64.7457f, 132.419f);
        path.quadTo(55.8457f, 134.969f, 42.2457f, 140.069f);
        path.lineTo(17.9957f, 149.369f);
        path.quadTo(28.6957f, 146.619f, 44.4457f, 141.219f);
        path.lineTo(65.2957f, 133.569f);
        path.lineTo(65.3957f, 133.719f);
        path.lineTo(65.6457f, 133.469f);
        path.lineTo(66.0957f, 133.319f);
        path.lineTo(67.2457f, 134.869f);
        path.lineTo(67.2957f, 134.869f);
        path.lineTo(67.3957f, 136.719f);
        path.lineTo(67.4957f, 144.119f);
        path.quadTo(67.5457f, 148.719f, 68.1457f, 151.919f);
        path.quadTo(70.1957f, 162.269f, 71.8957f, 182.919f);
        path.quadTo(72.6957f, 192.969f, 73.5957f, 200.519f);
        path.quadTo(71.6457f, 199.519f, 69.2957f, 197.469f);
        path.quadTo(68.5957f, 197.469f, 68.3957f, 197.969f);
        path.quadTo(69.5457f, 200.119f, 73.7457f, 201.869f);
        path.quadTo(74.5457f, 208.719f, 75.4957f, 213.469f);
        path.quadTo(75.0457f, 216.569f, 74.7957f, 222.669f);
        path.lineTo(74.5957f, 230.469f);
        path.quadTo(74.5957f, 239.469f, 75.6957f, 252.519f);
        path.lineTo(76.6957f, 262.819f);
        path.lineTo(72.7457f, 262.369f);
        path.quadTo(56.3457f, 262.919f, 55.0957f, 266.269f);
        path.quadTo(54.6457f, 267.319f, 55.5457f, 269.819f);
        path.quadTo(56.5457f, 272.669f, 56.3957f, 274.119f);
        path.quadTo(50.6457f, 271.519f, 46.2957f, 274.769f);
        path.lineTo(42.3957f, 277.519f);
        path.quadTo(39.8957f, 278.969f, 36.8457f, 278.969f);
        path.lineTo(34.3457f, 278.719f);
        path.lineTo(33.3957f, 278.519f);
        path.lineTo(33.2957f, 281.569f);
        path.quadTo(32.1957f, 282.319f, 30.4957f, 286.269f);
        path.quadTo(28.7957f, 290.169f, 28.7957f, 291.169f);
        path.lineTo(29.1957f, 291.769f);
        path.lineTo(31.3457f, 293.469f);
        path.lineTo(34.2957f, 290.719f);
        path.lineTo(30.1957f, 291.869f);
        path.lineTo(30.1957f, 291.619f);
        path.quadTo(30.3957f, 290.669f, 32.0457f, 286.819f);
        path.lineTo(32.9957f, 284.269f);
        path.lineTo(32.6957f, 287.019f);
        path.quadTo(32.6957f, 288.469f, 33.3457f, 288.619f);
        path.lineTo(34.9957f, 288.869f);
        path.lineTo(35.4457f, 288.419f);
        path.lineTo(35.0457f, 283.969f);
        path.lineTo(34.7957f, 279.869f);
        path.quadTo(43.3457f, 280.119f, 45.9457f, 278.569f);
        path.quadTo(49.9457f, 276.169f, 57.7957f, 275.069f);
        path.quadTo(57.7957f, 274.269f, 56.6457f, 271.569f);
        path.quadTo(55.6957f, 269.269f, 56.1957f, 268.069f);
        path.quadTo(57.8457f, 264.219f, 75.3957f, 264.219f);
        path.lineTo(76.8957f, 264.369f);
        path.quadTo(77.5457f, 269.819f, 78.2957f, 274.119f);
        path.lineTo(78.9457f, 273.669f);
        path.lineTo(79.1957f, 266.769f);
        path.lineTo(79.1957f, 265.019f);
        path.quadTo(81.0957f, 265.869f, 82.8957f, 267.519f);
        path.quadTo(85.8957f, 270.319f, 85.8957f, 272.269f);
        path.quadTo(85.8957f, 273.419f, 86.6957f, 274.719f);
        path.quadTo(87.4957f, 275.969f, 87.4957f, 277.119f);
        path.lineTo(87.0957f, 280.119f);
        path.quadTo(86.8957f, 283.519f, 87.5457f, 286.319f);
        path.quadTo(89.4957f, 295.319f, 99.4457f, 295.319f);
        path.quadTo(102.046f, 295.319f, 103.596f, 293.969f);
        path.quadTo(105.096f, 292.719f, 106.596f, 292.769f);
        path.lineTo(106.746f, 293.169f);
        path.lineTo(106.846f, 294.919f);
        path.lineTo(106.496f, 296.619f);
        path.quadTo(105.996f, 298.369f, 105.096f, 299.819f);
        path.quadTo(102.196f, 304.319f, 96.2457f, 303.619f);
        path.quadTo(96.6957f, 304.269f, 98.5457f, 304.969f);
        path.lineTo(99.1957f, 305.319f);
        path.lineTo(80.6457f, 305.919f);
        path.quadTo(38.8957f, 307.769f, 31.7957f, 312.319f);
        path.quadTo(38.1457f, 311.119f, 51.0957f, 310.369f);
        path.quadTo(64.3457f, 309.569f, 79.1957f, 309.569f);
        path.quadTo(96.8457f, 309.569f, 104.046f, 308.219f);
        path.quadTo(111.296f, 306.819f, 117.396f, 306.819f);
        path.quadTo(118.696f, 306.819f, 120.896f, 307.619f);
        path.lineTo(123.146f, 308.219f);
        path.lineTo(123.396f, 307.069f);
        path.lineTo(122.996f, 306.019f);
        path.lineTo(122.696f, 304.969f);
        path.lineTo(106.496f, 305.169f);
        path.quadTo(107.396f, 303.769f, 107.996f, 301.269f);
        path.quadTo(108.896f, 297.669f, 108.896f, 295.069f);
        path.lineTo(108.696f, 292.319f);
        path.quadTo(108.396f, 291.219f, 107.296f, 290.219f);
        path.quadTo(105.296f, 290.369f, 103.146f, 291.819f);
        path.quadTo(100.896f, 293.219f, 98.5457f, 293.469f);
        path.quadTo(98.6957f, 292.169f, 97.6957f, 291.119f);
        path.quadTo(95.7457f, 289.069f, 89.3457f, 289.569f);
        path.lineTo(89.0957f, 284.469f);
        path.lineTo(88.8457f, 280.119f);
        path.quadTo(88.8457f, 273.519f, 87.0957f, 269.969f);
        path.quadTo(84.7457f, 265.169f, 79.1957f, 263.419f);
        path.quadTo(79.0457f, 252.669f, 78.0957f, 239.419f);
        path.quadTo(77.1957f, 226.369f, 75.5957f, 213.719f);
        path.lineTo(75.9957f, 213.369f);
        path.lineTo(75.0457f, 202.369f);
        path.quadTo(78.9457f, 203.769f, 85.0457f, 204.919f);
        path.quadTo(100.696f, 207.819f, 126.496f, 207.819f);
        path.lineTo(126.646f, 222.019f);
        path.quadTo(126.496f, 236.969f, 124.096f, 246.969f);
        path.lineTo(123.296f, 246.319f);
        path.lineTo(122.496f, 245.369f);
        path.lineTo(121.996f, 246.069f);
        path.quadTo(123.396f, 248.819f, 124.296f, 249.269f);
        path.lineTo(125.596f, 248.519f);
        path.lineTo(126.146f, 248.119f);
        path.quadTo(127.246f, 237.269f, 127.746f, 221.719f);
        path.lineTo(128.096f, 207.819f);
        path.quadTo(129.046f, 207.769f, 129.346f, 207.369f);
        path.lineTo(129.396f, 206.919f);
        path.lineTo(128.446f, 205.519f);
        path.lineTo(128.196f, 205.519f);
        path.lineTo(128.446f, 196.319f);
        path.quadTo(127.596f, 195.719f, 126.996f, 195.619f);
        path.lineTo(126.396f, 195.619f);
        path.lineTo(126.446f, 205.469f);
        path.lineTo(82.3957f, 202.619f);
        path.quadTo(77.5957f, 202.069f, 74.9457f, 201.119f);
        path.lineTo(72.2957f, 167.769f);
        path.lineTo(71.7457f, 154.569f);
        path.lineTo(71.8457f, 154.919f);
        path.lineTo(72.2957f, 154.419f);
        path.quadTo(71.9957f, 152.169f, 71.5957f, 148.069f);
        path.quadTo(72.1457f, 140.369f, 73.9457f, 131.819f);
        path.lineTo(75.5957f, 131.769f);
        path.lineTo(75.7457f, 131.869f);
        path.lineTo(75.6457f, 131.769f);
        path.lineTo(76.1957f, 131.769f);
        path.quadTo(74.1457f, 139.919f, 74.1457f, 147.169f);
        path.quadTo(74.1457f, 148.469f, 75.4957f, 150.519f);
        path.quadTo(73.1957f, 144.069f, 77.6457f, 132.419f);
        path.lineTo(78.2957f, 136.719f);
        path.lineTo(78.7457f, 136.469f);
        path.lineTo(78.2457f, 131.469f);
        path.lineTo(78.7457f, 131.169f);
        path.lineTo(78.3957f, 130.719f);
        path.quadTo(84.1457f, 118.319f, 85.8957f, 113.019f);
        path.quadTo(81.2957f, 115.469f, 77.7957f, 126.269f);
        path.quadTo(77.4957f, 122.469f, 77.3457f, 118.569f);
        path.quadTo(78.5957f, 114.169f, 80.9457f, 107.519f);
        path.lineTo(82.1957f, 104.719f);
        path.lineTo(81.8457f, 105.069f);
        path.quadTo(85.3957f, 94.9686f, 91.1457f, 80.1186f);
        path.quadTo(83.0457f, 92.7686f, 77.1457f, 111.919f);
        path.quadTo(76.9457f, 105.819f, 77.0457f, 99.3687f);
        path.quadTo(77.1957f, 86.0686f, 78.4957f, 62.3686f);
        path.lineTo(78.8457f, 63.2687f);
        path.quadTo(79.0457f, 63.6687f, 79.6457f, 63.5187f);
        path.lineTo(79.8957f, 59.3686f);
        path.lineTo(79.8957f, 59.2186f);
        path.lineTo(79.9457f, 59.1686f);
        path.quadTo(81.8957f, 58.5186f, 84.2457f, 57.3186f);
        path.quadTo(84.1457f, 57.0186f, 82.5457f, 56.6686f);
        path.lineTo(81.0457f, 56.3686f);
        path.lineTo(79.1957f, 57.2687f);
        path.lineTo(78.4957f, 56.6186f);
        path.lineTo(77.5957f, 56.6186f);
        path.lineTo(77.4957f, 58.0187f);
        path.lineTo(75.0457f, 58.6687f);
        path.lineTo(75.2957f, 58.0187f);
        path.lineTo(75.3457f, 57.9187f);
        path.lineTo(75.5457f, 57.5187f);
        path.lineTo(78.4957f, 53.1687f);
        path.lineTo(75.5457f, 57.1187f);
        path.lineTo(76.0957f, 53.7687f);
        path.close();
        path.moveTo(74.5765f, 52.4798f);
        path.lineTo(74.8265f, 52.2298f);
        path.quadTo(75.2765f, 55.3298f, 74.5765f, 57.3298f);
        path.lineTo(74.1265f, 57.3298f);
        path.quadTo(74.1162f, 53.8608f, 74.5765f, 52.4798f);
        path.close();
        path.moveTo(77.2926f, 60.1676f);
        path.lineTo(77.2426f, 61.1676f);
        path.quadTo(75.6926f, 64.6176f, 74.8926f, 70.2676f);
        path.lineTo(75.0926f, 66.0176f);
        path.quadTo(75.3426f, 63.2176f, 75.7426f, 61.4676f);
        path.quadTo(75.0426f, 61.4676f, 74.1426f, 62.8176f);
        path.lineTo(74.1426f, 71.1176f);
        path.lineTo(74.7926f, 71.1176f);
        path.quadTo(74.1926f, 75.3676f, 73.8926f, 80.7176f);
        path.quadTo(73.5426f, 89.1176f, 73.8926f, 98.0676f);
        path.quadTo(73.8926f, 108.918f, 74.8426f, 117.518f);
        path.lineTo(74.5926f, 118.218f);
        path.quadTo(73.8926f, 116.368f, 73.4426f, 113.768f);
        path.lineTo(72.0426f, 104.018f);
        path.quadTo(70.6926f, 97.2176f, 70.6926f, 83.6176f);
        path.lineTo(70.8426f, 74.9176f);
        path.lineTo(71.6426f, 71.5176f);
        path.lineTo(71.3926f, 73.8676f);
        path.quadTo(73.3426f, 72.4176f, 73.1926f, 66.4176f);
        path.lineTo(73.1926f, 64.4676f);
        path.lineTo(73.8926f, 61.4676f);
        path.lineTo(73.3926f, 61.4676f);
        path.quadTo(73.7426f, 60.4676f, 74.4426f, 59.2676f);
        path.lineTo(76.4426f, 60.5176f);
        path.lineTo(77.2926f, 60.1676f);
        path.close();
        path.moveTo(145.562f, 63.7583f);
        path.lineTo(144.712f, 59.8583f);
        path.quadTo(143.912f, 56.6083f, 142.712f, 54.2083f);
        path.quadTo(139.062f, 46.9583f, 131.662f, 46.9583f);
        path.quadTo(126.862f, 46.9583f, 123.412f, 48.8083f);
        path.quadTo(121.312f, 49.9083f, 120.512f, 51.3083f);
        path.quadTo(123.312f, 48.7583f, 132.562f, 48.7583f);
        path.quadTo(137.762f, 48.7583f, 141.262f, 55.6083f);
        path.quadTo(143.812f, 60.5083f, 143.962f, 63.9583f);
        path.lineTo(145.562f, 63.7583f);
        path.close();
        path.moveTo(45.1142f, 15.2836f);
        path.quadTo(48.8142f, 11.0836f, 54.2142f, 10.4336f);
        path.quadTo(59.5642f, 9.78358f, 63.2642f, 12.9836f);
        path.quadTo(67.4142f, 16.6336f, 67.4142f, 23.5836f);
        path.quadTo(67.4142f, 33.4836f, 64.4642f, 40.9336f);
        path.quadTo(60.5642f, 50.9336f, 51.3142f, 57.0836f);
        path.lineTo(47.8142f, 51.8336f);
        path.quadTo(50.0142f, 56.8836f, 51.0642f, 60.0836f);
        path.quadTo(61.0642f, 52.6836f, 65.4142f, 42.4336f);
        path.quadTo(68.8142f, 34.2836f, 68.8142f, 23.7336f);
        path.quadTo(68.8142f, 16.2836f, 64.3142f, 12.2836f);
        path.quadTo(60.2642f, 8.73358f, 54.4642f, 9.28358f);
        path.quadTo(48.5642f, 9.88358f, 44.5642f, 14.3336f);
        path.quadTo(40.0642f, 19.2336f, 40.0642f, 26.9336f);
        path.quadTo(40.0642f, 34.6336f, 42.9642f, 41.1336f);
        path.quadTo(40.9642f, 34.7836f, 40.9642f, 27.0336f);
        path.quadTo(40.9711f, 19.9331f, 45.1142f, 15.2836f);
        path.close();
        path.moveTo(74.1162f, 58.2341f);
        path.lineTo(73.9162f, 58.8341f);
        path.lineTo(74.1162f, 59.0841f);
        path.lineTo(73.4162f, 59.9841f);
        path.quadTo(73.5662f, 58.4841f, 73.8662f, 57.7841f);
        path.lineTo(74.1162f, 58.2341f);
        path.close();
        path.moveTo(69.2825f, 82.1262f);
        path.lineTo(69.2825f, 83.3262f);
        path.quadTo(69.2825f, 99.9262f, 69.7325f, 103.876f);
        path.quadTo(70.7825f, 112.426f, 74.4325f, 118.526f);
        path.lineTo(74.1325f, 119.576f);
        path.lineTo(71.9325f, 127.526f);
        path.lineTo(69.4325f, 124.376f);
        path.quadTo(69.7325f, 121.926f, 69.7325f, 118.626f);
        path.lineTo(69.2825f, 106.576f);
        path.lineTo(68.5825f, 106.576f);
        path.lineTo(67.9325f, 118.426f);
        path.lineTo(67.7325f, 122.176f);
        path.lineTo(64.2825f, 117.826f);
        path.quadTo(64.8325f, 106.676f, 66.5825f, 96.1262f);
        path.quadTo(67.349f, 91.1491f, 69.2825f, 82.1262f);
        path.close();
        path.moveTo(42.4902f, 100.264f);
        path.lineTo(38.2402f, 98.264f);
        path.lineTo(38.2402f, 98.514f);
        path.quadTo(43.8402f, 102.464f, 48.9902f, 106.764f);
        path.quadTo(56.6902f, 114.564f, 61.6902f, 121.064f);
        path.lineTo(62.9402f, 122.764f);
        path.lineTo(63.2902f, 125.764f);
        path.lineTo(61.2902f, 122.964f);
        path.quadTo(58.3402f, 119.114f, 54.7402f, 116.414f);
        path.lineTo(49.4902f, 111.164f);
        path.quadTo(41.7402f, 103.914f, 32.2402f, 97.114f);
        path.quadTo(31.7902f, 97.364f, 31.7902f, 98.714f);
        path.lineTo(32.9902f, 99.614f);
        path.quadTo(26.6402f, 108.964f, 19.8402f, 126.214f);
        path.lineTo(10.5902f, 150.164f);
        path.lineTo(10.0902f, 143.964f);
        path.lineTo(12.9402f, 134.314f);
        path.quadTo(15.1402f, 126.264f, 16.2902f, 122.914f);
        path.quadTo(20.8402f, 109.514f, 29.6902f, 100.114f);
        path.quadTo(25.7902f, 103.264f, 22.4902f, 108.264f);
        path.quadTo(27.3402f, 98.964f, 32.9402f, 91.114f);
        path.lineTo(42.4902f, 100.264f);
        path.close();
        path.moveTo(64.4488f, 121.532f);
        path.lineTo(64.1488f, 121.032f);
        path.lineTo(64.1988f, 120.732f);
        path.lineTo(67.6488f, 124.132f);
        path.lineTo(67.4488f, 127.282f);
        path.lineTo(67.4988f, 128.032f);
        path.quadTo(66.1521f, 124.478f, 64.4488f, 121.532f);
        path.close();
        path.moveTo(65.2314f, 132.304f);
        path.lineTo(64.7814f, 131.554f);
        path.lineTo(65.2814f, 132.254f);
        path.lineTo(65.2314f, 132.304f);
        path.close();
        path.moveTo(74.4845f, 130.785f);
        path.lineTo(74.1844f, 130.835f);
        path.lineTo(74.2345f, 130.535f);
        path.lineTo(74.4845f, 130.785f);
        path.close();
        path.moveTo(68.1316f, 129.128f);
        path.quadTo(68.8316f, 127.728f, 69.2316f, 125.678f);
        path.lineTo(71.7816f, 128.178f);
        path.lineTo(71.0316f, 131.178f);
        path.lineTo(70.4316f, 131.178f);
        path.lineTo(70.4316f, 131.878f);
        path.lineTo(70.8316f, 131.878f);
        path.lineTo(70.0816f, 135.128f);
        path.lineTo(70.0316f, 135.128f);
        path.lineTo(69.9316f, 134.778f);
        path.lineTo(69.2816f, 132.378f);
        path.lineTo(68.8816f, 132.378f);
        path.lineTo(68.8316f, 132.228f);
        path.quadTo(69.1316f, 132.028f, 69.5316f, 131.878f);
        path.lineTo(69.2816f, 131.178f);
        path.lineTo(68.5816f, 131.378f);
        path.lineTo(67.8816f, 129.028f);
        path.lineTo(68.1316f, 129.128f);
        path.close();
        path.moveTo(66.7506f, 131.89f);
        path.lineTo(66.7006f, 131.89f);
        path.lineTo(63.9506f, 126.94f);
        path.lineTo(64.0006f, 124.64f);
        path.quadTo(65.922f, 128.023f, 66.7506f, 131.89f);
        path.close();
        path.moveTo(4.69556f, 163.654f);
        path.lineTo(4.84556f, 163.354f);
        path.lineTo(4.84556f, 163.654f);
        path.lineTo(4.69556f, 163.654f);
        path.close();
        path.moveTo(4.83366f, 167.797f);
        path.lineTo(4.88366f, 167.747f);
        path.quadTo(5.03366f, 174.497f, 5.63366f, 186.047f);
        path.lineTo(5.23366f, 187.297f);
        path.quadTo(1.28366f, 188.697f, -1.91634f, 195.847f);
        path.lineTo(-2.06634f, 195.597f);
        path.lineTo(-2.46634f, 194.997f);
        path.quadTo(-6.41634f, 201.347f, -13.6163f, 214.897f);
        path.lineTo(-13.3663f, 207.797f);
        path.lineTo(-8.36634f, 199.847f);
        path.lineTo(-8.11634f, 199.897f);
        path.lineTo(-8.36634f, 199.797f);
        path.quadTo(-2.76634f, 191.547f, 2.98366f, 185.547f);
        path.quadTo(-4.01634f, 191.497f, -10.0163f, 199.097f);
        path.quadTo(-10.5663f, 198.797f, -11.3163f, 198.497f);
        path.quadTo(-12.4163f, 197.997f, -13.3163f, 197.847f);
        path.lineTo(-13.3663f, 196.297f);
        path.lineTo(4.13366f, 164.697f);
        path.lineTo(4.13366f, 167.797f);
        path.lineTo(4.83366f, 167.797f);
        path.close();
        path.moveTo(10.542f, 177.787f);
        path.lineTo(10.392f, 182.187f);
        path.lineTo(10.492f, 184.537f);
        path.lineTo(6.94199f, 191.887f);
        path.lineTo(7.09199f, 188.087f);
        path.quadTo(7.89199f, 187.537f, 8.74199f, 187.137f);
        path.lineTo(7.14199f, 186.937f);
        path.lineTo(7.54199f, 185.687f);
        path.quadTo(7.94199f, 185.287f, 8.09199f, 185.287f);
        path.lineTo(8.04199f, 183.687f);
        path.lineTo(10.092f, 175.787f);
        path.lineTo(10.542f, 177.787f);
        path.close();
        path.moveTo(35.9072f, 159.741f);
        path.lineTo(35.9072f, 159.991f);
        path.lineTo(35.4572f, 159.491f);
        path.lineTo(35.4072f, 160.691f);
        path.quadTo(35.4072f, 162.291f, 37.8572f, 168.391f);
        path.lineTo(38.7572f, 170.841f);
        path.lineTo(38.7072f, 170.841f);
        path.lineTo(37.9572f, 171.241f);
        path.quadTo(39.0072f, 173.841f, 39.0572f, 178.241f);
        path.quadTo(39.3572f, 179.741f, 40.3072f, 180.941f);
        path.quadTo(40.4572f, 183.141f, 41.4072f, 184.591f);
        path.lineTo(42.0072f, 183.891f);
        path.lineTo(42.1072f, 183.441f);
        path.lineTo(42.1072f, 182.541f);
        path.quadTo(43.1072f, 183.191f, 44.4072f, 183.691f);
        path.quadTo(45.8072f, 180.241f, 45.8072f, 174.041f);
        path.quadTo(46.0572f, 170.591f, 45.3572f, 167.741f);
        path.quadTo(44.1072f, 161.991f, 39.5572f, 163.441f);
        path.lineTo(39.3572f, 163.741f);
        path.quadTo(39.1072f, 163.841f, 39.1072f, 164.141f);
        path.quadTo(43.0572f, 166.191f, 44.1072f, 169.391f);
        path.quadTo(44.4072f, 170.391f, 44.4072f, 173.791f);
        path.lineTo(44.1572f, 182.091f);
        path.lineTo(42.1072f, 182.291f);
        path.lineTo(42.1072f, 182.291f);
        path.quadTo(42.0572f, 178.191f, 40.1572f, 170.691f);
        path.quadTo(38.0709f, 162.365f, 35.9072f, 159.741f);
        path.close();
        path.moveTo(70.8477f, 140.545f);
        path.lineTo(70.4977f, 137.095f);
        path.lineTo(71.9477f, 133.245f);
        path.lineTo(70.8477f, 140.545f);
        path.close();
        path.moveTo(52.9401f, 154.217f);
        path.lineTo(52.2901f, 154.817f);
        path.quadTo(51.7901f, 155.317f, 51.7901f, 156.717f);
        path.quadTo(51.7901f, 160.667f, 53.7901f, 167.617f);
        path.quadTo(55.9401f, 175.367f, 58.2401f, 177.217f);
        path.lineTo(59.2901f, 176.267f);
        path.lineTo(59.6401f, 175.867f);
        path.lineTo(59.6401f, 168.267f);
        path.quadTo(58.9401f, 166.817f, 58.4901f, 164.167f);
        path.lineTo(57.6901f, 159.717f);
        path.quadTo(56.5308f, 154.677f, 52.9401f, 154.217f);
        path.close();
        path.moveTo(54.091f, 156.749f);
        path.lineTo(54.091f, 156.549f);
        path.quadTo(55.791f, 157.599f, 57.141f, 163.949f);
        path.quadTo(58.241f, 169.099f, 58.241f, 172.049f);
        path.lineTo(58.041f, 175.649f);
        path.lineTo(57.791f, 175.399f);
        path.quadTo(55.091f, 171.249f, 54.341f, 166.099f);
        path.quadTo(53.8608f, 162.825f, 54.091f, 156.749f);
        path.close();
        path.moveTo(75.0369f, 108.044f);
        path.quadTo(75.0369f, 100.894f, 75.4869f, 92.5439f);
        path.quadTo(75.4869f, 104.494f, 76.0369f, 114.344f);
        path.lineTo(75.7869f, 114.944f);
        path.lineTo(75.6369f, 114.144f);
        path.quadTo(75.0369f, 109.839f, 75.0369f, 108.044f);
        path.close();
        path.moveTo(76.8783f, 127.747f);
        path.lineTo(76.8783f, 126.197f);
        path.lineTo(77.1283f, 128.347f);
        path.lineTo(76.7283f, 129.647f);
        path.lineTo(76.6283f, 129.597f);
        path.lineTo(75.9783f, 129.597f);
        path.lineTo(75.9783f, 130.047f);
        path.quadTo(76.3283f, 130.447f, 74.6783f, 130.747f);
        path.lineTo(74.2783f, 130.297f);
        path.lineTo(75.6783f, 124.347f);
        path.lineTo(76.4283f, 128.247f);
        path.lineTo(76.8783f, 127.747f);
        path.close();
        path.moveTo(103.348f, 124.064f);
        path.lineTo(102.698f, 124.064f);
        path.lineTo(99.8483f, 132.764f);
        path.lineTo(99.6983f, 132.364f);
        path.lineTo(98.9983f, 132.364f);
        path.lineTo(98.9983f, 133.564f);
        path.lineTo(99.2983f, 134.564f);
        path.lineTo(85.7483f, 176.514f);
        path.lineTo(76.4483f, 198.864f);
        path.quadTo(76.8983f, 199.564f, 77.7983f, 199.564f);
        path.lineTo(81.6483f, 190.914f);
        path.lineTo(82.1983f, 191.014f);
        path.lineTo(86.7983f, 178.014f);
        path.lineTo(90.9983f, 167.014f);
        path.quadTo(96.7983f, 151.764f, 102.148f, 141.664f);
        path.lineTo(109.948f, 159.564f);
        path.lineTo(109.598f, 159.264f);
        path.lineTo(108.198f, 159.514f);
        path.lineTo(107.798f, 160.164f);
        path.lineTo(107.748f, 161.664f);
        path.quadTo(107.748f, 162.114f, 112.998f, 170.064f);
        path.lineTo(117.248f, 176.614f);
        path.quadTo(123.098f, 191.164f, 123.848f, 197.464f);
        path.lineTo(123.098f, 196.614f);
        path.quadTo(122.448f, 195.864f, 121.998f, 195.864f);
        path.lineTo(123.048f, 199.014f);
        path.quadTo(123.798f, 200.864f, 125.698f, 201.414f);
        path.lineTo(126.098f, 200.964f);
        path.lineTo(126.148f, 199.314f);
        path.quadTo(126.148f, 187.264f, 115.498f, 165.264f);
        path.lineTo(106.698f, 147.864f);
        path.lineTo(102.948f, 140.164f);
        path.lineTo(105.198f, 136.264f);
        path.lineTo(105.498f, 137.564f);
        path.quadTo(105.698f, 138.314f, 106.148f, 138.314f);
        path.lineTo(106.298f, 138.064f);
        path.lineTo(106.348f, 136.564f);
        path.lineTo(106.298f, 135.114f);
        path.lineTo(106.148f, 134.864f);
        path.quadTo(104.748f, 136.314f, 102.748f, 139.714f);
        path.lineTo(100.448f, 134.414f);
        path.lineTo(103.348f, 124.064f);
        path.close();
        path.moveTo(110.944f, 163.194f);
        path.lineTo(110.944f, 161.844f);
        path.lineTo(114.594f, 170.194f);
        path.quadTo(110.944f, 164.252f, 110.944f, 163.194f);
        path.close();
        path.moveTo(101.921f, 141.189f);
        path.quadTo(98.1712f, 147.889f, 92.5212f, 160.639f);
        path.lineTo(99.8712f, 136.339f);
        path.lineTo(101.921f, 141.189f);
        path.close();
        path.moveTo(124.985f, 226.492f);
        path.lineTo(124.935f, 224.092f);
        path.lineTo(124.535f, 222.342f);
        path.lineTo(123.635f, 222.342f);
        path.quadTo(123.635f, 225.542f, 122.685f, 231.542f);
        path.lineTo(121.785f, 238.242f);
        path.quadTo(121.785f, 240.542f, 121.985f, 239.642f);
        path.lineTo(122.685f, 239.642f);
        path.quadTo(123.635f, 236.792f, 124.335f, 232.392f);
        path.quadTo(124.985f, 228.471f, 124.985f, 226.492f);
        path.close();
        path.moveTo(99.9878f, 219.264f);
        path.lineTo(99.2378f, 219.564f);
        path.quadTo(98.8878f, 218.814f, 98.1878f, 218.264f);
        path.quadTo(97.5378f, 217.714f, 97.1378f, 217.714f);
        path.quadTo(96.9378f, 220.264f, 96.9378f, 226.814f);
        path.quadTo(96.9378f, 233.364f, 97.1378f, 236.164f);
        path.lineTo(97.8378f, 236.164f);
        path.quadTo(98.2878f, 234.064f, 98.2878f, 229.264f);
        path.lineTo(98.5378f, 229.714f);
        path.quadTo(98.5378f, 235.214f, 98.9878f, 237.314f);
        path.quadTo(100.388f, 236.364f, 102.188f, 236.364f);
        path.quadTo(102.188f, 237.064f, 102.338f, 237.414f);
        path.quadTo(102.538f, 237.914f, 103.138f, 238.214f);
        path.lineTo(103.838f, 237.764f);
        path.lineTo(104.038f, 232.214f);
        path.lineTo(103.938f, 224.964f);
        path.quadTo(103.438f, 220.714f, 101.288f, 218.214f);
        path.lineTo(99.9878f, 219.264f);
        path.close();
        path.moveTo(51.5591f, 188.973f);
        path.quadTo(49.4091f, 193.923f, 49.2091f, 195.023f);
        path.quadTo(49.0091f, 195.873f, 49.0091f, 200.823f);
        path.quadTo(49.0091f, 203.223f, 49.6591f, 210.373f);
        path.quadTo(50.4091f, 218.923f, 51.3091f, 223.973f);
        path.lineTo(53.6091f, 223.973f);
        path.lineTo(54.2591f, 223.173f);
        path.quadTo(54.7591f, 222.573f, 54.7591f, 221.173f);
        path.lineTo(54.6591f, 219.623f);
        path.lineTo(54.5591f, 219.823f);
        path.lineTo(53.8591f, 219.823f);
        path.quadTo(53.8591f, 220.773f, 53.3591f, 221.773f);
        path.quadTo(52.8591f, 222.623f, 52.4591f, 222.823f);
        path.lineTo(52.0091f, 222.323f);
        path.lineTo(50.9591f, 209.923f);
        path.lineTo(50.4091f, 200.923f);
        path.quadTo(50.4091f, 199.223f, 51.5591f, 190.573f);
        path.lineTo(51.7591f, 191.023f);
        path.quadTo(54.3091f, 198.473f, 56.8591f, 210.723f);
        path.quadTo(60.0091f, 226.073f, 60.9591f, 229.723f);
        path.lineTo(61.4591f, 229.023f);
        path.quadTo(59.2591f, 215.373f, 57.9091f, 208.423f);
        path.quadTo(55.5181f, 196.247f, 51.5591f, 188.973f);
        path.close();
        path.moveTo(4.14314f, 198.042f);
        path.lineTo(4.19314f, 197.842f);
        path.lineTo(5.89314f, 191.642f);
        path.lineTo(5.99314f, 193.892f);
        path.lineTo(4.14314f, 198.042f);
        path.close();
        path.moveTo(0.0f, 201.172f);
        path.quadTo(1.4f, 201.172f, 1.7f, 200.372f);
        path.quadTo(1.8f, 199.472f, 2.05f, 199.122f);
        path.lineTo(-0.55f, 199.872f);
        path.lineTo(-0.5f, 199.072f);
        path.quadTo(0.15f, 193.422f, 4.55f, 189.822f);
        path.lineTo(3.15f, 195.522f);
        path.lineTo(1.85f, 202.172f);
        path.quadTo(0.6f, 201.522f, -0.5f, 201.172f);
        path.lineTo(0.0f, 201.172f);
        path.close();
        path.moveTo(0.18414f, 203.658f);
        path.lineTo(1.43414f, 204.308f);
        path.lineTo(-1.21586f, 210.708f);
        path.lineTo(-7.76586f, 214.208f);
        path.lineTo(-12.4659f, 216.408f);
        path.lineTo(-10.4159f, 212.808f);
        path.lineTo(-4.21586f, 202.008f);
        path.quadTo(-5.46586f, 205.708f, -6.16586f, 209.658f);
        path.quadTo(-6.16586f, 211.108f, -5.31586f, 211.108f);
        path.lineTo(-4.56586f, 210.808f);
        path.quadTo(-2.01586f, 208.608f, -1.21586f, 205.208f);
        path.lineTo(-0.91586f, 202.858f);
        path.lineTo(0.18414f, 203.658f);
        path.close();
        path.moveTo(6.21471f, 204.119f);
        path.lineTo(6.21471f, 203.819f);
        path.lineTo(6.66471f, 196.919f);
        path.lineTo(10.6647f, 187.169f);
        path.lineTo(11.8647f, 200.869f);
        path.lineTo(10.6647f, 202.919f);
        path.lineTo(9.81471f, 203.219f);
        path.quadTo(7.46471f, 204.169f, 6.41471f, 204.169f);
        path.lineTo(6.21471f, 204.119f);
        path.close();
        path.moveTo(4.05107f, 203.244f);
        path.lineTo(6.05107f, 198.394f);
        path.lineTo(5.85107f, 204.044f);
        path.lineTo(4.05107f, 203.244f);
        path.close();
        path.moveTo(10.0816f, 205.224f);
        path.lineTo(10.2816f, 205.074f);
        path.lineTo(12.1816f, 204.024f);
        path.lineTo(14.0316f, 223.474f);
        path.lineTo(15.0816f, 233.224f);
        path.lineTo(14.0316f, 234.374f);
        path.quadTo(12.7816f, 235.224f, 7.23164f, 235.574f);
        path.lineTo(7.58164f, 233.624f);
        path.quadTo(5.73164f, 234.024f, 4.58164f, 235.674f);
        path.lineTo(0.23164f, 235.674f);
        path.quadTo(-3.56836f, 235.674f, -7.91836f, 234.374f);
        path.lineTo(-8.61836f, 234.124f);
        path.lineTo(-1.31836f, 216.424f);
        path.lineTo(-0.118361f, 215.324f);
        path.lineTo(0.381639f, 214.824f);
        path.quadTo(0.231639f, 216.924f, 0.231639f, 218.874f);
        path.quadTo(0.231639f, 220.374f, 0.781639f, 220.874f);
        path.quadTo(1.13164f, 221.174f, 1.83164f, 221.424f);
        path.lineTo(2.53164f, 220.974f);
        path.quadTo(1.98164f, 217.424f, 2.13164f, 213.174f);
        path.lineTo(5.43164f, 209.974f);
        path.quadTo(4.73164f, 216.674f, 3.23164f, 222.124f);
        path.lineTo(4.63164f, 222.324f);
        path.lineTo(5.83164f, 209.624f);
        path.lineTo(10.0816f, 205.224f);
        path.close();
        path.moveTo(8.28628f, 206.006f);
        path.lineTo(8.58628f, 205.956f);
        path.lineTo(5.83628f, 209.206f);
        path.lineTo(5.88628f, 208.356f);
        path.lineTo(5.98628f, 208.306f);
        path.lineTo(5.88628f, 208.306f);
        path.lineTo(6.08628f, 205.806f);
        path.lineTo(8.28628f, 206.006f);
        path.close();
        path.moveTo(5.57022f, 208.722f);
        path.lineTo(5.47022f, 209.572f);
        path.lineTo(2.32022f, 212.922f);
        path.lineTo(2.12022f, 213.122f);
        path.lineTo(2.17022f, 211.572f);
        path.quadTo(4.05107f, 210.149f, 5.57022f, 208.722f);
        path.close();
        path.moveTo(5.8004f, 205.776f);
        path.lineTo(5.6004f, 208.326f);
        path.quadTo(4.1504f, 208.376f, 2.3004f, 208.976f);
        path.lineTo(2.6004f, 206.776f);
        path.lineTo(3.3004f, 205.076f);
        path.lineTo(5.8004f, 205.776f);
        path.close();
        path.moveTo(0.0f, 213.049f);
        path.lineTo(0.5f, 212.749f);
        path.lineTo(0.35f, 214.799f);
        path.lineTo(-1.3f, 216.399f);
        path.lineTo(0.0f, 213.049f);
        path.close();
        path.moveTo(1.8414f, 237.54f);
        path.lineTo(0.941396f, 237.69f);
        path.quadTo(0.0413955f, 237.99f, 0.0413955f, 239.39f);
        path.lineTo(0.0413955f, 239.54f);
        path.quadTo(-7.3086f, 239.39f, -7.3086f, 238.24f);
        path.quadTo(-7.3086f, 236.74f, -7.8086f, 236.29f);
        path.lineTo(-8.4586f, 235.99f);
        path.lineTo(-8.8086f, 235.34f);
        path.quadTo(-3.5086f, 236.84f, 3.6414f, 237.24f);
        path.lineTo(2.9414f, 239.54f);
        path.lineTo(2.3414f, 239.54f);
        path.quadTo(2.16364f, 238.092f, 1.8414f, 237.54f);
        path.close();
        path.moveTo(2.53192f, 242.097f);
        path.lineTo(2.38192f, 240.147f);
        path.lineTo(2.78192f, 240.197f);
        path.quadTo(2.57795f, 241.039f, 2.53192f, 242.097f);
        path.close();
        path.moveTo(39.3598f, 306.592f);
        path.quadTo(38.8598f, 305.942f, 37.4098f, 305.592f);
        path.lineTo(29.4598f, 304.792f);
        path.quadTo(16.1598f, 304.892f, 8.60983f, 306.692f);
        path.quadTo(1.20983f, 308.442f, -7.19017f, 308.442f);
        path.lineTo(-19.8402f, 307.592f);
        path.lineTo(-22.9902f, 306.142f);
        path.lineTo(-23.4402f, 306.592f);
        path.quadTo(-23.4402f, 308.042f, -22.5902f, 308.092f);
        path.lineTo(-21.3902f, 307.992f);
        path.quadTo(-19.1402f, 309.242f, -18.9902f, 310.092f);
        path.lineTo(-18.7402f, 310.592f);
        path.quadTo(-14.1402f, 310.042f, 0.909829f, 310.042f);
        path.quadTo(2.80983f, 310.042f, 4.55983f, 308.892f);
        path.quadTo(6.40983f, 307.642f, 11.9598f, 307.292f);
        path.lineTo(26.1598f, 306.992f);
        path.lineTo(39.3598f, 306.592f);
        path.close();
        path.moveTo(23.2476f, 280.583f);
        path.quadTo(21.7476f, 281.333f, 21.0976f, 282.883f);
        path.quadTo(20.4976f, 284.383f, 20.4976f, 286.783f);
        path.quadTo(20.4976f, 287.533f, 21.4976f, 291.933f);
        path.lineTo(20.7476f, 291.633f);
        path.lineTo(20.7476f, 291.883f);
        path.lineTo(21.7476f, 292.833f);
        path.lineTo(22.3976f, 295.483f);
        path.lineTo(24.3976f, 304.083f);
        path.lineTo(25.0976f, 304.083f);
        path.lineTo(25.4476f, 303.633f);
        path.lineTo(25.5476f, 301.983f);
        path.quadTo(25.5476f, 301.233f, 23.7476f, 294.883f);
        path.lineTo(23.3976f, 293.733f);
        path.lineTo(24.1976f, 293.933f);
        path.lineTo(24.1976f, 293.233f);
        path.lineTo(23.1476f, 292.633f);
        path.quadTo(21.8976f, 288.033f, 21.8976f, 286.133f);
        path.quadTo(21.8666f, 283.345f, 23.2476f, 280.583f);
        path.close();
        path.moveTo(-10.4499f, 199.515f);
        path.lineTo(-13.3999f, 203.365f);
        path.lineTo(-13.3999f, 201.465f);
        path.lineTo(-13.3999f, 199.115f);
        path.lineTo(-10.4499f, 199.515f);
        path.close();
        path.moveTo(-35.585f, 222.947f);
        path.lineTo(-34.235f, 223.097f);
        path.lineTo(-31.435f, 223.297f);
        path.lineTo(-35.385f, 231.347f);
        path.lineTo(-39.585f, 230.447f);
        path.lineTo(-39.885f, 230.747f);
        path.lineTo(-35.585f, 222.947f);
        path.close();
        path.moveTo(-23.2476f, 219.955f);
        path.lineTo(-27.2476f, 220.855f);
        path.lineTo(-22.7976f, 212.905f);
        path.lineTo(-14.4476f, 197.955f);
        path.lineTo(-14.7476f, 205.355f);
        path.quadTo(-19.3347f, 212.083f, -23.2476f, 219.955f);
        path.close();
        path.moveTo(-28.5416f, 223.269f);
        path.lineTo(-24.6916f, 222.869f);
        path.lineTo(-29.2416f, 232.669f);
        path.lineTo(-33.1916f, 231.769f);
        path.lineTo(-28.5416f, 223.269f);
        path.close();
        path.moveTo(-13.8105f, 219.817f);
        path.lineTo(-11.3105f, 218.817f);
        path.quadTo(-6.71047f, 216.917f, -2.96047f, 214.817f);
        path.lineTo(-4.86047f, 219.417f);
        path.lineTo(-14.0105f, 227.067f);
        path.lineTo(-13.9105f, 223.167f);
        path.lineTo(-13.8105f, 219.817f);
        path.close();
        path.moveTo(-14.9153f, 210.287f);
        path.lineTo(-15.1653f, 217.487f);
        path.lineTo(-19.6653f, 218.987f);
        path.lineTo(-14.9153f, 210.287f);
        path.close();
        path.moveTo(-14.0867f, 227.504f);
        path.lineTo(-4.98668f, 219.704f);
        path.lineTo(-8.88668f, 229.554f);
        path.lineTo(-8.98668f, 229.004f);
        path.quadTo(-9.63668f, 229.504f, -10.2367f, 232.004f);
        path.lineTo(-10.5367f, 233.504f);
        path.lineTo(-13.8367f, 232.454f);
        path.lineTo(-14.2867f, 232.904f);
        path.quadTo(-14.2867f, 233.604f, -10.7867f, 234.754f);
        path.lineTo(-11.4867f, 237.004f);
        path.lineTo(-14.4367f, 236.204f);
        path.lineTo(-14.0867f, 227.504f);
        path.close();
        path.moveTo(-21.2681f, 222.164f);
        path.lineTo(-16.8181f, 220.864f);
        path.quadTo(-23.0181f, 232.764f, -23.0181f, 233.864f);
        path.lineTo(-23.0181f, 234.064f);
        path.lineTo(-26.7681f, 233.214f);
        path.lineTo(-21.2681f, 222.164f);
        path.close();
        path.moveTo(-49.9479f, 249.877f);
        path.lineTo(-50.3979f, 249.827f);
        path.lineTo(-40.0479f, 230.977f);
        path.lineTo(-35.7979f, 232.127f);
        path.lineTo(-41.2479f, 243.527f);
        path.lineTo(-41.4479f, 243.527f);
        path.lineTo(-41.6979f, 243.827f);
        path.lineTo(-41.8979f, 244.227f);
        path.lineTo(-41.5979f, 244.277f);
        path.lineTo(-44.5479f, 250.427f);
        path.lineTo(-47.9979f, 250.127f);
        path.lineTo(-43.9979f, 239.827f);
        path.quadTo(-46.4492f, 242.282f, -49.9479f, 249.877f);
        path.close();
        path.moveTo(-43.1347f, 250.568f);
        path.lineTo(-39.9847f, 244.468f);
        path.lineTo(-35.3847f, 245.668f);
        path.lineTo(-38.1347f, 250.968f);
        path.lineTo(-43.1347f, 250.568f);
        path.close();
        path.moveTo(-56.1626f, 269.074f);
        path.lineTo(-56.8626f, 269.524f);
        path.lineTo(-55.0126f, 269.374f);
        path.lineTo(-56.1626f, 269.074f);
        path.close();
        path.moveTo(-45.1602f, 254.527f);
        path.lineTo(-43.9602f, 252.177f);
        path.lineTo(-39.0602f, 252.727f);
        path.lineTo(-41.8102f, 257.427f);
        path.quadTo(-43.549f, 255.448f, -45.1602f, 254.527f);
        path.close();
        path.moveTo(-41.1092f, 258.302f);
        path.lineTo(-41.3092f, 258.002f);
        path.lineTo(-37.7092f, 252.802f);
        path.lineTo(-35.6592f, 252.902f);
        path.quadTo(-37.4592f, 254.002f, -38.1592f, 255.052f);
        path.quadTo(-38.6592f, 255.902f, -38.6592f, 259.152f);
        path.lineTo(-38.5592f, 261.652f);
        path.lineTo(-41.1092f, 258.302f);
        path.close();
        path.moveTo(-51.3289f, 271.974f);
        path.lineTo(-51.2789f, 271.824f);
        path.lineTo(-48.8289f, 272.224f);
        path.lineTo(-49.1789f, 275.074f);
        path.quadTo(-50.1789f, 274.424f, -51.2789f, 273.974f);
        path.lineTo(-50.4289f, 273.574f);
        path.quadTo(-49.0289f, 272.874f, -49.0289f, 272.274f);
        path.lineTo(-51.3289f, 271.974f);
        path.close();
        path.moveTo(-44.93f, 265.99f);
        path.lineTo(-45.5801f, 265.79f);
        path.lineTo(-45.1301f, 264.04f);
        path.lineTo(-44.93f, 265.99f);
        path.close();
        path.moveTo(-46.8175f, 272.296f);
        path.lineTo(-46.4675f, 272.296f);
        path.lineTo(-46.6175f, 277.246f);
        path.lineTo(-47.3175f, 276.496f);
        path.lineTo(-46.8175f, 272.296f);
        path.close();
        path.moveTo(-17.0329f, 229.484f);
        path.lineTo(-15.6329f, 228.684f);
        path.lineTo(-15.6829f, 228.984f);
        path.lineTo(-15.8829f, 235.834f);
        path.lineTo(-17.9829f, 235.334f);
        path.quadTo(-18.8329f, 232.934f, -19.8329f, 230.984f);
        path.quadTo(-18.2329f, 227.034f, -15.3829f, 221.684f);
        path.lineTo(-15.6329f, 228.384f);
        path.lineTo(-17.0329f, 229.484f);
        path.close();
        path.moveTo(-15.9741f, 239.151f);
        path.lineTo(-16.7241f, 239.101f);
        path.lineTo(-17.6741f, 236.051f);
        path.lineTo(-15.8741f, 236.401f);
        path.lineTo(-15.9741f, 239.151f);
        path.close();
        path.moveTo(-11.5548f, 237.264f);
        path.lineTo(-11.7048f, 238.314f);
        path.lineTo(-11.6048f, 239.764f);
        path.lineTo(-11.0048f, 239.814f);
        path.lineTo(-10.7548f, 239.164f);
        path.lineTo(-10.6548f, 239.264f);
        path.lineTo(-10.0548f, 245.414f);
        path.lineTo(-14.7548f, 245.014f);
        path.lineTo(-14.5048f, 239.714f);
        path.lineTo(-13.3548f, 239.614f);
        path.lineTo(-14.5048f, 239.314f);
        path.lineTo(-14.4048f, 236.714f);
        path.lineTo(-11.5548f, 237.264f);
        path.close();
        path.moveTo(-16.4805f, 239.796f);
        path.lineTo(-16.0305f, 239.796f);
        path.lineTo(-16.0805f, 241.446f);
        path.lineTo(-16.4805f, 239.796f);
        path.close();
        path.moveTo(-17.9076f, 244.169f);
        path.lineTo(-17.7076f, 244.869f);
        path.lineTo(-25.7576f, 244.219f);
        path.lineTo(-26.4576f, 244.669f);
        path.quadTo(-26.3076f, 245.119f, -20.4076f, 245.969f);
        path.lineTo(-17.4076f, 246.369f);
        path.lineTo(-16.7076f, 249.619f);
        path.lineTo(-24.4576f, 249.169f);
        path.lineTo(-31.3076f, 246.019f);
        path.lineTo(-33.0576f, 245.219f);
        path.lineTo(-30.5576f, 240.719f);
        path.lineTo(-27.2076f, 234.019f);
        path.lineTo(-26.1076f, 234.269f);
        path.lineTo(-22.9576f, 234.969f);
        path.lineTo(-22.8576f, 235.519f);
        path.lineTo(-22.5576f, 235.919f);
        path.lineTo(-21.6076f, 235.669f);
        path.lineTo(-21.4576f, 235.269f);
        path.lineTo(-19.8576f, 235.619f);
        path.lineTo(-19.1076f, 238.969f);
        path.lineTo(-19.6076f, 238.969f);
        path.lineTo(-24.6076f, 239.169f);
        path.quadTo(-24.4576f, 239.619f, -19.0576f, 239.719f);
        path.lineTo(-18.9076f, 239.719f);
        path.lineTo(-17.9076f, 244.169f);
        path.close();
        path.moveTo(-20.0712f, 234.824f);
        path.lineTo(-21.2712f, 234.524f);
        path.lineTo(-20.5212f, 232.624f);
        path.lineTo(-20.0712f, 234.824f);
        path.close();
        path.moveTo(-33.6055f, 232.614f);
        path.lineTo(-29.6055f, 233.464f);
        path.lineTo(-32.4555f, 239.714f);
        path.lineTo(-34.8055f, 244.564f);
        path.quadTo(-37.2555f, 243.714f, -39.4555f, 243.564f);
        path.lineTo(-33.6055f, 232.614f);
        path.close();
        path.moveTo(-33.6515f, 246.241f);
        path.lineTo(-30.1015f, 247.391f);
        path.lineTo(-24.8515f, 249.191f);
        path.lineTo(-25.4515f, 249.191f);
        path.quadTo(-31.3015f, 249.041f, -31.9515f, 249.291f);
        path.quadTo(-31.8515f, 249.741f, -24.5515f, 250.491f);
        path.lineTo(-16.3515f, 251.141f);
        path.lineTo(-16.3015f, 251.441f);
        path.lineTo(-16.1015f, 256.741f);
        path.quadTo(-20.8015f, 254.641f, -23.5015f, 258.141f);
        path.quadTo(-24.8015f, 259.791f, -25.3015f, 261.891f);
        path.quadTo(-26.1515f, 260.091f, -26.7015f, 257.941f);
        path.quadTo(-27.4015f, 253.091f, -28.0515f, 250.691f);
        path.lineTo(-30.3515f, 250.441f);
        path.lineTo(-32.9015f, 251.491f);
        path.lineTo(-33.1015f, 251.391f);
        path.lineTo(-36.5515f, 251.141f);
        path.lineTo(-33.6515f, 246.241f);
        path.close();
        path.moveTo(-34.7563f, 258.486f);
        path.lineTo(-34.8563f, 258.486f);
        path.quadTo(-32.5563f, 254.436f, -29.4563f, 252.536f);
        path.quadTo(-29.0563f, 253.236f, -28.2063f, 258.286f);
        path.lineTo(-33.7063f, 258.036f);
        path.quadTo(-34.2063f, 258.136f, -34.7563f, 258.586f);
        path.lineTo(-34.7563f, 258.486f);
        path.close();
        path.moveTo(-30.383f, 271.145f);
        path.lineTo(-30.733f, 270.995f);
        path.quadTo(-31.083f, 270.895f, -31.083f, 272.295f);
        path.quadTo(-31.083f, 274.595f, -30.833f, 273.245f);
        path.lineTo(-19.583f, 273.045f);
        path.lineTo(-18.883f, 278.745f);
        path.lineTo(-17.733f, 278.545f);
        path.quadTo(-17.483f, 277.845f, -17.483f, 275.395f);
        path.lineTo(-17.983f, 269.395f);
        path.lineTo(-18.433f, 261.945f);
        path.quadTo(-13.433f, 261.645f, -11.633f, 261.945f);
        path.quadTo(-10.683f, 262.095f, -10.133f, 262.645f);
        path.lineTo(-9.68303f, 262.195f);
        path.lineTo(-9.43303f, 261.145f);
        path.quadTo(-9.43303f, 259.745f, -9.68303f, 259.695f);
        path.lineTo(-9.88303f, 259.645f);
        path.quadTo(-17.583f, 259.495f, -19.633f, 262.145f);
        path.quadTo(-20.283f, 262.995f, -20.283f, 265.945f);
        path.lineTo(-19.733f, 271.395f);
        path.lineTo(-30.383f, 271.145f);
        path.close();
        path.moveTo(-15.3757f, 256.46f);
        path.lineTo(-15.2257f, 257.16f);
        path.lineTo(-15.4257f, 257.06f);
        path.lineTo(-15.3757f, 256.46f);
        path.close();
        path.moveTo(-14.501f, 271.145f);
        path.lineTo(-14.201f, 270.945f);
        path.quadTo(-9.55099f, 271.395f, -6.30099f, 273.645f);
        path.lineTo(-2.30099f, 276.445f);
        path.lineTo(-6.15099f, 273.245f);
        path.quadTo(-9.65099f, 270.545f, -13.501f, 270.295f);
        path.quadTo(-10.851f, 267.645f, -8.95099f, 264.945f);
        path.quadTo(-10.851f, 265.695f, -12.851f, 267.145f);
        path.lineTo(-17.251f, 270.495f);
        path.quadTo(-17.0329f, 271.145f, -14.501f, 271.145f);
        path.close();
        path.moveTo(-111.773f, 276.578f);
        path.quadTo(-109.723f, 277.278f, -109.123f, 277.128f);
        path.quadTo(-110.273f, 276.278f, -113.473f, 275.078f);
        path.lineTo(-114.623f, 275.278f);
        path.lineTo(-111.773f, 276.578f);
        path.close();
        path.moveTo(-117.389f, 288.869f);
        path.lineTo(-117.389f, 290.219f);
        path.lineTo(-109.589f, 291.519f);
        path.quadTo(-115.087f, 290.112f, -117.389f, 288.869f);
        path.close();
        path.moveTo(-47.462f, 278.051f);
        path.lineTo(-46.612f, 277.951f);
        path.lineTo(-46.662f, 282.001f);
        path.lineTo(-47.762f, 281.901f);
        path.lineTo(-47.662f, 280.601f);
        path.lineTo(-47.462f, 278.051f);
        path.close();
        path.moveTo(-47.9223f, 284.173f);
        path.lineTo(-46.6723f, 284.273f);
        path.lineTo(-46.7223f, 290.223f);
        path.lineTo(-46.7223f, 292.273f);
        path.lineTo(-47.8723f, 292.773f);
        path.lineTo(-48.2223f, 293.123f);
        path.lineTo(-47.9223f, 284.173f);
        path.close();
        path.moveTo(-45.3444f, 293.841f);
        path.lineTo(-45.1444f, 293.741f);
        path.quadTo(-42.5944f, 294.991f, -39.6444f, 300.091f);
        path.lineTo(-39.2944f, 300.741f);
        path.lineTo(-40.0944f, 300.691f);
        path.lineTo(-45.3444f, 300.541f);
        path.lineTo(-45.3444f, 300.141f);
        path.lineTo(-44.6944f, 300.141f);
        path.quadTo(-41.6944f, 300.141f, -40.9944f, 299.491f);
        path.lineTo(-41.2444f, 298.091f);
        path.lineTo(-45.3444f, 297.691f);
        path.lineTo(-45.3444f, 293.841f);
        path.close();
        path.moveTo(-57.4976f, 289.974f);
        path.lineTo(-57.6476f, 289.974f);
        path.lineTo(-57.4976f, 289.924f);
        path.lineTo(-57.4976f, 289.974f);
        path.close();
        path.moveTo(-46.4952f, 300.101f);
        path.lineTo(-46.4952f, 300.451f);
        path.lineTo(-47.8452f, 300.401f);
        path.lineTo(-47.8952f, 300.001f);
        path.lineTo(-46.4952f, 300.101f);
        path.close();
        path.moveTo(-46.6333f, 297.523f);
        path.lineTo(-47.9333f, 297.373f);
        path.lineTo(-47.9333f, 297.073f);
        path.quadTo(-47.7833f, 295.673f, -46.6833f, 294.723f);
        path.lineTo(-46.6333f, 297.523f);
        path.close();
    }

    private static void draw_1(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_1(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_2(Path path)
    {
        path.reset();
        path.moveTo(378.223f, 72.505f);
        path.lineTo(379.123f, 70.8549f);
        path.quadTo(379.123f, 70.5549f, 370.023f, 62.8049f);
        path.quadTo(369.373f, 62.8049f, 368.973f, 63.2549f);
        path.lineTo(368.423f, 63.7549f);
        path.quadTo(368.423f, 61.5049f, 365.823f, 60.2549f);
        path.quadTo(363.623f, 59.2049f, 360.323f, 59.2049f);
        path.quadTo(358.473f, 59.2049f, 356.523f, 60.4549f);
        path.quadTo(354.623f, 61.7049f, 350.373f, 61.7049f);
        path.quadTo(349.823f, 61.7049f, 349.523f, 61.2549f);
        path.quadTo(349.323f, 60.8049f, 348.723f, 60.8049f);
        path.lineTo(346.123f, 61.2549f);
        path.lineTo(343.523f, 61.7049f);
        path.lineTo(341.573f, 60.9049f);
        path.quadTo(339.473f, 60.055f, 337.423f, 60.055f);
        path.lineTo(325.523f, 60.4049f);
        path.lineTo(321.123f, 60.7549f);
        path.quadTo(317.273f, 60.7549f, 315.773f, 61.7049f);
        path.quadTo(314.173f, 62.6549f, 313.523f, 62.6549f);
        path.lineTo(309.373f, 62.055f);
        path.lineTo(303.823f, 61.455f);
        path.lineTo(294.373f, 61.505f);
        path.quadTo(294.373f, 63.555f, 293.973f, 64.005f);
        path.quadTo(290.023f, 60.6049f, 287.423f, 65.655f);
        path.lineTo(285.623f, 71.555f);
        path.lineTo(285.673f, 74.305f);
        path.quadTo(282.723f, 69.355f, 277.423f, 66.855f);
        path.quadTo(271.023f, 63.855f, 259.923f, 63.855f);
        path.quadTo(246.723f, 63.855f, 238.073f, 72.555f);
        path.lineTo(237.323f, 73.455f);
        path.quadTo(234.373f, 76.005f, 232.923f, 78.155f);
        path.quadTo(228.323f, 82.855f, 225.823f, 90.605f);
        path.lineTo(225.323f, 92.005f);
        path.lineTo(224.473f, 89.305f);
        path.quadTo(222.823f, 86.555f, 219.473f, 87.955f);
        path.lineTo(219.573f, 87.655f);
        path.quadTo(220.323f, 85.705f, 220.323f, 83.755f);
        path.quadTo(225.723f, 84.155f, 226.973f, 82.055f);
        path.quadTo(227.373f, 81.305f, 227.373f, 78.055f);
        path.quadTo(227.373f, 76.255f, 225.173f, 72.805f);
        path.quadTo(222.623f, 68.855f, 222.073f, 66.755f);
        path.quadTo(221.473f, 64.255f, 220.373f, 63.555f);
        path.lineTo(217.973f, 63.405f);
        path.lineTo(214.973f, 63.755f);
        path.quadTo(213.023f, 63.555f, 211.323f, 61.955f);
        path.quadTo(208.973f, 59.655f, 200.873f, 59.005f);
        path.lineTo(194.473f, 58.855f);
        path.quadTo(189.223f, 55.705f, 175.673f, 64.455f);
        path.quadTo(170.323f, 67.905f, 165.823f, 71.905f);
        path.quadTo(161.573f, 75.605f, 161.573f, 76.605f);
        path.quadTo(161.573f, 78.055f, 161.973f, 78.955f);
        path.lineTo(163.723f, 82.155f);
        path.quadTo(160.573f, 82.955f, 159.523f, 84.655f);
        path.quadTo(158.923f, 85.655f, 158.373f, 87.605f);
        path.lineTo(158.373f, 92.405f);
        path.quadTo(153.123f, 92.855f, 148.423f, 96.455f);
        path.quadTo(143.023f, 100.605f, 143.223f, 104.455f);
        path.quadTo(143.523f, 107.205f, 142.073f, 109.055f);
        path.quadTo(141.223f, 110.155f, 138.673f, 111.855f);
        path.quadTo(136.123f, 113.505f, 135.073f, 114.755f);
        path.quadTo(133.473f, 116.805f, 133.473f, 119.855f);
        path.quadTo(133.473f, 123.905f, 131.523f, 128.755f);
        path.quadTo(129.573f, 133.555f, 129.573f, 134.055f);
        path.quadTo(129.573f, 134.605f, 135.373f, 139.305f);
        path.quadTo(141.673f, 144.405f, 144.523f, 144.405f);
        path.quadTo(145.473f, 144.405f, 149.323f, 140.555f);
        path.quadTo(149.773f, 141.755f, 150.823f, 142.155f);
        path.lineTo(153.323f, 142.455f);
        path.lineTo(156.823f, 146.855f);
        path.lineTo(158.223f, 148.805f);
        path.quadTo(158.273f, 151.555f, 159.123f, 153.805f);
        path.quadTo(160.173f, 156.155f, 162.023f, 157.755f);
        path.lineTo(162.923f, 160.755f);
        path.quadTo(164.823f, 166.555f, 166.823f, 170.855f);
        path.quadTo(171.523f, 180.955f, 177.073f, 183.405f);
        path.quadTo(169.923f, 184.555f, 167.723f, 187.755f);
        path.quadTo(166.723f, 189.205f, 166.623f, 191.105f);
        path.lineTo(166.723f, 193.855f);
        path.quadTo(166.723f, 198.805f, 167.023f, 199.805f);
        path.quadTo(167.623f, 201.905f, 171.073f, 206.805f);
        path.quadTo(175.273f, 212.805f, 178.323f, 214.205f);
        path.quadTo(180.373f, 215.205f, 184.523f, 215.555f);
        path.quadTo(185.273f, 217.005f, 185.723f, 219.755f);
        path.quadTo(185.923f, 221.405f, 186.573f, 222.555f);
        path.quadTo(182.173f, 224.505f, 178.823f, 229.305f);
        path.quadTo(175.073f, 234.805f, 175.073f, 239.755f);
        path.quadTo(175.073f, 241.105f, 175.523f, 243.555f);
        path.quadTo(175.973f, 246.155f, 176.673f, 248.255f);
        path.quadTo(177.773f, 248.055f, 177.973f, 247.605f);
        path.lineTo(177.223f, 243.455f);
        path.lineTo(176.673f, 239.855f);
        path.quadTo(176.673f, 238.405f, 181.073f, 230.755f);
        path.quadTo(184.573f, 224.555f, 186.873f, 222.905f);
        path.lineTo(187.423f, 223.655f);
        path.lineTo(187.923f, 223.355f);
        path.quadTo(187.973f, 223.205f, 188.073f, 223.305f);
        path.lineTo(188.073f, 222.405f);
        path.lineTo(188.223f, 222.355f);
        path.lineTo(189.023f, 222.405f);
        path.lineTo(189.023f, 222.255f);
        path.lineTo(188.873f, 221.755f);
        path.lineTo(188.073f, 222.005f);
        path.quadTo(187.973f, 220.255f, 186.773f, 217.955f);
        path.quadTo(185.873f, 216.155f, 185.123f, 215.605f);
        path.lineTo(191.273f, 215.855f);
        path.lineTo(198.573f, 215.705f);
        path.lineTo(199.173f, 220.455f);
        path.quadTo(199.523f, 222.355f, 200.123f, 223.655f);
        path.quadTo(198.773f, 224.655f, 198.223f, 228.255f);
        path.quadTo(193.223f, 231.955f, 188.423f, 241.455f);
        path.quadTo(186.323f, 245.505f, 184.723f, 249.855f);
        path.quadTo(183.423f, 253.405f, 183.423f, 253.905f);
        path.quadTo(183.423f, 254.905f, 183.573f, 254.855f);
        path.lineTo(183.723f, 254.655f);
        path.lineTo(184.873f, 254.805f);
        path.lineTo(185.723f, 253.455f);
        path.lineTo(188.873f, 259.955f);
        path.quadTo(192.123f, 266.055f, 193.523f, 268.255f);
        path.lineTo(192.723f, 268.655f);
        path.lineTo(192.573f, 268.805f);
        path.lineTo(189.523f, 269.005f);
        path.quadTo(185.823f, 269.005f, 183.923f, 265.805f);
        path.quadTo(182.923f, 264.105f, 182.323f, 263.605f);
        path.quadTo(181.623f, 262.955f, 180.573f, 262.755f);
        path.lineTo(180.073f, 260.755f);
        path.lineTo(179.273f, 254.955f);
        path.lineTo(178.623f, 254.955f);
        path.lineTo(178.423f, 258.655f);
        path.lineTo(178.873f, 262.955f);
        path.quadTo(179.523f, 266.105f, 180.873f, 266.805f);
        path.lineTo(181.473f, 267.555f);
        path.quadTo(184.573f, 270.755f, 192.573f, 270.755f);
        path.quadTo(194.473f, 270.755f, 195.023f, 269.955f);
        path.quadTo(195.273f, 269.555f, 195.273f, 268.155f);
        path.quadTo(195.273f, 267.005f, 190.973f, 259.205f);
        path.lineTo(186.823f, 251.605f);
        path.lineTo(192.873f, 240.655f);
        path.quadTo(195.623f, 235.555f, 197.823f, 231.855f);
        path.lineTo(197.723f, 236.255f);
        path.quadTo(197.723f, 240.305f, 199.223f, 244.505f);
        path.quadTo(200.423f, 247.755f, 202.073f, 249.555f);
        path.lineTo(199.523f, 253.455f);
        path.quadTo(198.173f, 255.405f, 198.173f, 257.755f);
        path.lineTo(198.223f, 259.355f);
        path.lineTo(198.523f, 260.455f);
        path.quadTo(200.573f, 260.455f, 201.073f, 259.955f);
        path.lineTo(201.073f, 258.005f);
        path.lineTo(201.723f, 260.855f);
        path.quadTo(202.123f, 263.355f, 203.023f, 264.905f);
        path.quadTo(205.873f, 270.105f, 215.673f, 270.105f);
        path.quadTo(217.523f, 270.105f, 218.123f, 269.355f);
        path.quadTo(218.373f, 268.855f, 218.373f, 267.555f);
        path.quadTo(218.373f, 266.305f, 215.173f, 257.855f);
        path.quadTo(212.773f, 251.705f, 211.873f, 248.405f);
        path.lineTo(212.673f, 241.505f);
        path.quadTo(213.623f, 234.355f, 213.623f, 231.605f);
        path.lineTo(213.523f, 229.905f);
        path.lineTo(213.273f, 228.705f);
        path.lineTo(212.773f, 228.705f);
        path.lineTo(211.673f, 237.205f);
        path.quadTo(210.523f, 245.555f, 210.523f, 247.655f);
        path.lineTo(210.573f, 249.355f);
        path.lineTo(210.623f, 249.605f);
        path.lineTo(210.523f, 251.505f);
        path.quadTo(210.523f, 254.005f, 213.123f, 259.455f);
        path.lineTo(216.773f, 267.605f);
        path.lineTo(212.623f, 268.455f);
        path.quadTo(207.773f, 268.455f, 204.323f, 261.555f);
        path.quadTo(201.723f, 256.305f, 201.723f, 253.355f);
        path.quadTo(201.723f, 253.105f, 202.673f, 251.655f);
        path.lineTo(203.323f, 250.605f);
        path.lineTo(204.423f, 251.205f);
        path.lineTo(204.773f, 250.705f);
        path.quadTo(200.673f, 245.805f, 199.523f, 240.855f);
        path.quadTo(198.823f, 237.905f, 198.823f, 231.205f);
        path.lineTo(198.873f, 230.555f);
        path.quadTo(199.323f, 230.955f, 200.273f, 231.055f);
        path.quadTo(201.823f, 230.505f, 203.923f, 228.855f);
        path.quadTo(206.173f, 227.055f, 206.173f, 226.155f);
        path.quadTo(206.173f, 223.655f, 205.823f, 222.605f);
        path.lineTo(204.523f, 219.805f);
        path.lineTo(204.273f, 217.955f);
        path.lineTo(203.773f, 215.505f);
        path.lineTo(209.773f, 214.855f);
        path.quadTo(214.723f, 214.205f, 217.923f, 212.805f);
        path.lineTo(217.223f, 214.255f);
        path.quadTo(215.673f, 218.055f, 215.673f, 219.905f);
        path.lineTo(215.773f, 221.155f);
        path.lineTo(215.973f, 221.605f);
        path.lineTo(216.073f, 221.555f);
        path.quadTo(216.123f, 222.455f, 215.823f, 223.255f);
        path.lineTo(213.073f, 227.555f);
        path.quadTo(213.423f, 228.105f, 215.023f, 228.205f);
        path.quadTo(217.623f, 226.705f, 217.623f, 225.255f);
        path.quadTo(217.623f, 222.455f, 216.673f, 220.655f);
        path.lineTo(218.823f, 216.105f);
        path.quadTo(220.373f, 212.855f, 220.873f, 211.055f);
        path.quadTo(223.823f, 208.755f, 225.023f, 204.705f);
        path.quadTo(225.823f, 202.005f, 225.973f, 197.605f);
        path.lineTo(226.273f, 197.505f);
        path.quadTo(226.323f, 196.305f, 226.873f, 191.055f);
        path.lineTo(226.873f, 191.155f);
        path.quadTo(227.573f, 200.805f, 227.573f, 205.405f);
        path.lineTo(228.123f, 205.205f);
        path.lineTo(228.223f, 206.255f);
        path.lineTo(227.723f, 209.705f);
        path.lineTo(226.723f, 203.155f);
        path.lineTo(226.273f, 203.155f);
        path.lineTo(226.273f, 206.505f);
        path.lineTo(227.473f, 211.605f);
        path.lineTo(226.823f, 215.905f);
        path.quadTo(222.573f, 245.155f, 222.573f, 249.705f);
        path.lineTo(222.623f, 251.505f);
        path.quadTo(222.823f, 253.555f, 223.223f, 255.255f);
        path.quadTo(224.523f, 260.505f, 227.873f, 260.505f);
        path.quadTo(228.323f, 259.805f, 229.273f, 259.055f);
        path.quadTo(231.223f, 257.605f, 233.623f, 257.605f);
        path.quadTo(235.173f, 257.605f, 236.773f, 258.455f);
        path.lineTo(239.623f, 260.305f);
        path.quadTo(243.823f, 263.055f, 249.673f, 263.055f);
        path.quadTo(250.573f, 263.055f, 250.673f, 262.355f);
        path.quadTo(250.623f, 261.405f, 250.823f, 260.905f);
        path.quadTo(251.723f, 258.755f, 259.173f, 258.755f);
        path.quadTo(260.373f, 258.755f, 263.823f, 260.605f);
        path.quadTo(267.323f, 262.555f, 271.173f, 262.555f);
        path.quadTo(272.223f, 262.555f, 273.923f, 259.705f);
        path.quadTo(275.673f, 256.805f, 278.073f, 256.805f);
        path.quadTo(282.473f, 256.805f, 285.023f, 258.405f);
        path.quadTo(287.573f, 260.005f, 289.773f, 260.005f);
        path.quadTo(292.473f, 260.005f, 294.123f, 256.955f);
        path.quadTo(295.473f, 253.405f, 296.073f, 252.505f);
        path.quadTo(298.673f, 256.205f, 299.923f, 256.905f);
        path.lineTo(300.373f, 257.105f);
        path.lineTo(300.373f, 257.605f);
        path.lineTo(307.773f, 257.905f);
        path.quadTo(313.073f, 257.905f, 319.673f, 253.605f);
        path.quadTo(322.773f, 251.505f, 324.273f, 250.055f);
        path.lineTo(324.623f, 250.055f);
        path.lineTo(324.773f, 249.555f);
        path.quadTo(325.623f, 248.505f, 325.623f, 247.855f);
        path.quadTo(325.623f, 246.805f, 325.373f, 246.705f);
        path.lineTo(325.123f, 246.855f);
        path.lineTo(325.323f, 244.055f);
        path.lineTo(325.623f, 237.955f);
        path.quadTo(326.073f, 230.555f, 329.123f, 226.555f);
        path.lineTo(329.273f, 226.755f);
        path.lineTo(332.173f, 250.555f);
        path.lineTo(332.973f, 250.605f);
        path.lineTo(332.973f, 250.705f);
        path.quadTo(334.073f, 252.605f, 338.023f, 255.055f);
        path.quadTo(343.773f, 258.555f, 350.473f, 258.555f);
        path.quadTo(352.823f, 258.555f, 353.873f, 256.605f);
        path.quadTo(354.473f, 255.455f, 354.473f, 254.255f);
        path.quadTo(354.473f, 252.755f, 349.223f, 249.005f);
        path.lineTo(345.423f, 246.305f);
        path.quadTo(347.023f, 242.405f, 347.873f, 234.905f);
        path.quadTo(348.473f, 229.905f, 348.623f, 223.905f);
        path.lineTo(348.723f, 218.555f);
        path.quadTo(348.723f, 212.755f, 348.223f, 210.355f);
        path.lineTo(347.223f, 210.505f);
        path.lineTo(347.023f, 220.555f);
        path.quadTo(346.873f, 226.305f, 346.473f, 230.255f);
        path.quadTo(345.773f, 231.905f, 345.773f, 236.705f);
        path.quadTo(345.773f, 242.355f, 345.423f, 244.355f);
        path.lineTo(345.023f, 246.105f);
        path.quadTo(343.873f, 245.405f, 343.573f, 245.405f);
        path.quadTo(343.723f, 245.955f, 344.723f, 246.905f);
        path.quadTo(342.323f, 252.155f, 334.073f, 249.605f);
        path.lineTo(333.773f, 249.255f);
        path.lineTo(333.573f, 249.405f);
        path.lineTo(333.173f, 249.255f);
        path.quadTo(333.173f, 237.555f, 332.773f, 234.505f);
        path.quadTo(331.673f, 225.155f, 327.373f, 225.155f);
        path.quadTo(325.623f, 225.155f, 325.073f, 230.005f);
        path.quadTo(324.473f, 236.355f, 324.123f, 237.005f);
        path.lineTo(324.873f, 240.105f);
        path.quadTo(325.473f, 242.505f, 325.223f, 243.955f);
        path.quadTo(324.473f, 248.605f, 314.673f, 248.605f);
        path.lineTo(312.723f, 248.305f);
        path.lineTo(312.323f, 248.155f);
        path.lineTo(313.423f, 247.305f);
        path.lineTo(312.573f, 247.005f);
        path.lineTo(311.823f, 247.155f);
        path.lineTo(309.573f, 229.055f);
        path.quadTo(308.023f, 217.405f, 305.673f, 209.555f);
        path.lineTo(305.223f, 209.555f);
        path.lineTo(305.073f, 209.905f);
        path.lineTo(305.073f, 210.805f);
        path.quadTo(305.073f, 215.605f, 307.673f, 231.255f);
        path.lineTo(310.373f, 247.505f);
        path.quadTo(308.673f, 247.955f, 307.073f, 248.855f);
        path.lineTo(305.573f, 246.705f);
        path.quadTo(299.873f, 238.405f, 298.823f, 232.355f);
        path.quadTo(297.923f, 227.705f, 297.973f, 220.905f);
        path.lineTo(298.173f, 209.705f);
        path.lineTo(298.173f, 207.205f);
        path.lineTo(299.473f, 208.305f);
        path.lineTo(299.723f, 207.805f);
        path.lineTo(299.373f, 203.355f);
        path.quadTo(299.123f, 201.105f, 298.173f, 199.405f);
        path.lineTo(297.873f, 187.105f);
        path.lineTo(297.473f, 180.255f);
        path.quadTo(297.123f, 168.655f, 294.423f, 154.255f);
        path.lineTo(293.073f, 146.855f);
        path.lineTo(293.123f, 145.805f);
        path.lineTo(293.973f, 146.205f);
        path.lineTo(294.623f, 145.105f);
        path.lineTo(294.673f, 145.105f);
        path.lineTo(294.673f, 145.455f);
        path.lineTo(294.923f, 146.005f);
        path.quadTo(296.223f, 146.005f, 296.873f, 145.055f);
        path.quadTo(294.823f, 143.405f, 297.923f, 138.405f);
        path.lineTo(299.373f, 136.255f);
        path.quadTo(301.823f, 137.555f, 304.123f, 137.655f);
        path.lineTo(304.873f, 138.955f);
        path.quadTo(307.473f, 142.805f, 307.473f, 144.955f);
        path.quadTo(307.473f, 145.955f, 306.073f, 147.905f);
        path.quadTo(304.323f, 150.305f, 302.323f, 150.305f);
        path.quadTo(304.073f, 154.205f, 308.673f, 159.755f);
        path.lineTo(316.573f, 169.105f);
        path.quadTo(317.523f, 168.955f, 317.723f, 168.455f);
        path.quadTo(317.623f, 164.205f, 316.823f, 158.405f);
        path.lineTo(315.823f, 152.555f);
        path.quadTo(317.823f, 153.405f, 320.623f, 153.405f);
        path.lineTo(323.723f, 153.205f);
        path.lineTo(324.773f, 154.455f);
        path.lineTo(324.323f, 154.355f);
        path.lineTo(321.073f, 154.005f);
        path.lineTo(321.023f, 155.655f);
        path.lineTo(320.973f, 157.405f);
        path.lineTo(321.023f, 158.655f);
        path.lineTo(320.973f, 159.555f);
        path.quadTo(320.973f, 160.505f, 321.073f, 160.605f);
        path.lineTo(321.273f, 160.755f);
        path.lineTo(322.123f, 160.755f);
        path.lineTo(322.223f, 160.905f);
        path.lineTo(320.423f, 164.505f);
        path.lineTo(319.173f, 167.155f);
        path.lineTo(319.173f, 167.055f);
        path.quadTo(317.723f, 167.705f, 317.723f, 171.505f);
        path.lineTo(318.023f, 186.255f);
        path.lineTo(318.523f, 208.955f);
        path.lineTo(309.473f, 208.305f);
        path.quadTo(303.023f, 207.955f, 301.873f, 208.305f);
        path.quadTo(304.623f, 209.405f, 309.773f, 209.705f);
        path.lineTo(319.023f, 210.805f);
        path.quadTo(319.473f, 210.505f, 319.473f, 210.055f);
        path.lineTo(318.723f, 209.005f);
        path.lineTo(319.673f, 208.955f);
        path.lineTo(319.823f, 195.155f);
        path.lineTo(319.823f, 193.405f);
        path.lineTo(326.573f, 193.705f);
        path.lineTo(332.623f, 193.855f);
        path.lineTo(333.273f, 198.455f);
        path.quadTo(335.123f, 210.105f, 335.673f, 211.455f);
        path.lineTo(336.323f, 210.705f);
        path.lineTo(336.323f, 210.505f);
        path.lineTo(337.173f, 210.655f);
        path.lineTo(340.173f, 210.805f);
        path.lineTo(343.623f, 210.305f);
        path.lineTo(346.273f, 209.705f);
        path.lineTo(355.973f, 209.055f);
        path.lineTo(356.423f, 208.905f);
        path.lineTo(356.523f, 211.305f);
        path.lineTo(357.023f, 211.305f);
        path.quadTo(357.473f, 207.705f, 357.523f, 200.555f);
        path.lineTo(358.173f, 200.405f);
        path.lineTo(358.073f, 199.805f);
        path.lineTo(358.173f, 199.755f);
        path.lineTo(358.323f, 191.355f);
        path.lineTo(358.173f, 179.905f);
        path.quadTo(357.773f, 174.305f, 355.773f, 167.055f);
        path.lineTo(355.423f, 167.605f);
        path.lineTo(354.323f, 162.505f);
        path.lineTo(354.323f, 162.705f);
        path.lineTo(354.023f, 162.755f);
        path.quadTo(354.023f, 171.905f, 354.973f, 186.555f);
        path.lineTo(355.823f, 199.655f);
        path.lineTo(355.773f, 199.905f);
        path.quadTo(355.773f, 200.355f, 355.873f, 200.655f);
        path.lineTo(356.323f, 206.905f);
        path.lineTo(355.773f, 206.805f);
        path.quadTo(355.273f, 206.805f, 355.123f, 207.155f);
        path.lineTo(355.423f, 208.105f);
        path.lineTo(342.923f, 209.255f);
        path.lineTo(336.173f, 210.005f);
        path.quadTo(335.123f, 203.955f, 333.773f, 193.805f);
        path.quadTo(335.023f, 193.655f, 335.223f, 193.055f);
        path.lineTo(334.623f, 192.355f);
        path.lineTo(334.073f, 192.105f);
        path.lineTo(333.573f, 192.105f);
        path.lineTo(333.173f, 189.055f);
        path.lineTo(332.923f, 187.455f);
        path.lineTo(333.623f, 187.455f);
        path.lineTo(333.923f, 186.455f);
        path.lineTo(332.723f, 186.155f);
        path.lineTo(330.723f, 171.705f);
        path.lineTo(330.073f, 167.805f);
        path.lineTo(329.473f, 166.605f);
        path.lineTo(325.023f, 161.555f);
        path.quadTo(327.973f, 158.905f, 328.623f, 156.755f);
        path.lineTo(330.323f, 153.505f);
        path.quadTo(331.673f, 150.355f, 331.673f, 149.155f);
        path.lineTo(331.523f, 148.155f);
        path.lineTo(331.373f, 148.405f);
        path.lineTo(331.223f, 148.555f);
        path.quadTo(332.423f, 146.355f, 332.623f, 143.255f);
        path.lineTo(334.873f, 142.905f);
        path.lineTo(336.523f, 142.605f);
        path.lineTo(334.123f, 152.405f);
        path.quadTo(331.223f, 164.755f, 331.223f, 167.105f);
        path.lineTo(331.323f, 168.605f);
        path.lineTo(331.873f, 169.105f);
        path.quadTo(333.823f, 166.105f, 339.923f, 159.605f);
        path.lineTo(348.523f, 150.005f);
        path.quadTo(347.723f, 148.905f, 345.423f, 147.905f);
        path.quadTo(342.923f, 146.855f, 342.473f, 146.305f);
        path.quadTo(344.473f, 144.855f, 347.223f, 139.605f);
        path.quadTo(349.823f, 134.555f, 349.823f, 132.505f);
        path.lineTo(349.773f, 130.855f);
        path.lineTo(349.473f, 129.655f);
        path.lineTo(348.723f, 129.655f);
        path.quadTo(349.873f, 126.805f, 350.123f, 124.205f);
        path.lineTo(349.923f, 123.955f);
        path.lineTo(350.523f, 123.155f);
        path.lineTo(351.673f, 121.355f);
        path.lineTo(350.923f, 131.255f);
        path.lineTo(350.973f, 131.355f);
        path.quadTo(348.523f, 136.005f, 348.523f, 142.205f);
        path.lineTo(348.623f, 146.155f);
        path.quadTo(349.123f, 149.905f, 351.423f, 151.155f);
        path.lineTo(352.523f, 149.755f);
        path.quadTo(353.023f, 148.955f, 353.023f, 148.405f);
        path.lineTo(353.973f, 149.355f);
        path.quadTo(354.623f, 149.905f, 355.623f, 150.005f);
        path.lineTo(356.423f, 148.855f);
        path.lineTo(357.173f, 147.605f);
        path.lineTo(358.223f, 149.305f);
        path.quadTo(358.523f, 149.755f, 359.273f, 149.955f);
        path.lineTo(358.623f, 152.855f);
        path.quadTo(358.023f, 155.555f, 358.023f, 156.455f);
        path.lineTo(358.223f, 161.005f);
        path.lineTo(358.173f, 162.605f);
        path.quadTo(357.773f, 163.355f, 357.573f, 164.405f);
        path.quadTo(357.373f, 165.405f, 357.373f, 168.555f);
        path.quadTo(357.373f, 170.505f, 359.423f, 173.605f);
        path.quadTo(362.623f, 178.255f, 368.023f, 178.255f);
        path.quadTo(373.673f, 178.255f, 376.173f, 171.055f);
        path.quadTo(377.573f, 166.905f, 377.573f, 162.855f);
        path.lineTo(377.423f, 159.205f);
        path.quadTo(377.273f, 158.255f, 376.773f, 157.555f);
        path.lineTo(376.723f, 157.105f);
        path.lineTo(377.423f, 150.205f);
        path.quadTo(378.473f, 150.205f, 379.323f, 149.605f);
        path.lineTo(380.173f, 148.605f);
        path.lineTo(379.573f, 148.055f);
        path.lineTo(378.073f, 147.955f);
        path.lineTo(377.273f, 147.805f);
        path.lineTo(376.923f, 146.505f);
        path.lineTo(376.773f, 146.505f);
        path.lineTo(379.223f, 141.955f);
        path.quadTo(380.923f, 138.105f, 380.923f, 135.255f);
        path.quadTo(380.923f, 134.055f, 378.423f, 131.455f);
        path.quadTo(375.623f, 128.755f, 373.573f, 128.505f);
        path.lineTo(373.573f, 129.005f);
        path.lineTo(376.573f, 131.855f);
        path.quadTo(379.023f, 134.055f, 379.023f, 135.005f);
        path.quadTo(379.023f, 136.405f, 376.623f, 140.805f);
        path.quadTo(374.223f, 145.155f, 374.223f, 146.855f);
        path.lineTo(374.273f, 147.255f);
        path.lineTo(371.723f, 147.255f);
        path.lineTo(368.573f, 147.205f);
        path.lineTo(367.673f, 142.355f);
        path.lineTo(367.473f, 141.405f);
        path.quadTo(368.973f, 141.155f, 369.473f, 140.455f);
        path.lineTo(369.573f, 140.305f);
        path.lineTo(370.973f, 140.405f);
        path.lineTo(371.023f, 140.405f);
        path.quadTo(370.373f, 142.005f, 370.373f, 143.305f);
        path.lineTo(370.373f, 144.455f);
        path.lineTo(370.673f, 144.705f);
        path.lineTo(372.923f, 144.905f);
        path.lineTo(374.673f, 142.955f);
        path.lineTo(375.823f, 141.205f);
        path.quadTo(374.673f, 141.305f, 373.323f, 142.255f);
        path.lineTo(371.623f, 143.405f);
        path.lineTo(371.623f, 143.305f);
        path.lineTo(371.573f, 143.105f);
        path.lineTo(371.523f, 142.005f);
        path.quadTo(371.523f, 141.105f, 372.323f, 139.755f);
        path.lineTo(373.723f, 137.655f);
        path.lineTo(373.023f, 137.805f);
        path.lineTo(373.073f, 137.655f);
        path.lineTo(369.723f, 138.855f);
        path.lineTo(369.723f, 138.555f);
        path.lineTo(369.323f, 137.105f);
        path.quadTo(369.773f, 135.655f, 371.173f, 134.155f);
        path.lineTo(373.273f, 131.755f);
        path.lineTo(373.223f, 130.805f);
        path.lineTo(373.073f, 131.105f);
        path.lineTo(370.923f, 133.505f);
        path.lineTo(368.723f, 135.855f);
        path.lineTo(367.673f, 134.455f);
        path.quadTo(366.573f, 133.305f, 365.373f, 133.655f);
        path.lineTo(364.073f, 130.605f);
        path.lineTo(364.023f, 130.605f);
        path.quadTo(363.123f, 127.105f, 362.023f, 124.255f);
        path.lineTo(362.073f, 123.405f);
        path.lineTo(362.173f, 123.205f);
        path.quadTo(363.523f, 124.405f, 364.573f, 127.605f);
        path.lineTo(365.873f, 132.055f);
        path.lineTo(366.623f, 131.555f);
        path.lineTo(367.173f, 131.205f);
        path.quadTo(367.823f, 128.255f, 368.223f, 127.105f);
        path.quadTo(368.973f, 125.055f, 372.273f, 123.855f);
        path.lineTo(372.273f, 124.355f);
        path.quadTo(372.123f, 125.955f, 371.073f, 128.705f);
        path.quadTo(369.773f, 131.855f, 369.573f, 133.005f);
        path.lineTo(370.373f, 133.355f);
        path.lineTo(372.473f, 129.205f);
        path.quadTo(373.723f, 126.555f, 373.723f, 124.555f);
        path.lineTo(373.673f, 123.055f);
        path.lineTo(373.273f, 122.455f);
        path.lineTo(369.723f, 122.455f);
        path.lineTo(368.623f, 123.405f);
        path.lineTo(368.723f, 122.355f);
        path.lineTo(368.773f, 119.005f);
        path.quadTo(368.623f, 116.905f, 367.723f, 115.505f);
        path.quadTo(365.323f, 111.855f, 356.773f, 111.255f);
        path.lineTo(356.673f, 108.005f);
        path.lineTo(361.023f, 105.205f);
        path.lineTo(363.323f, 103.355f);
        path.quadTo(363.323f, 102.105f, 362.173f, 100.905f);
        path.lineTo(362.173f, 101.705f);
        path.quadTo(362.173f, 102.305f, 359.923f, 103.755f);
        path.quadTo(358.023f, 105.005f, 356.573f, 106.205f);
        path.lineTo(356.473f, 103.155f);
        path.lineTo(355.823f, 99.955f);
        path.lineTo(357.823f, 99.505f);
        path.lineTo(358.173f, 99.705f);
        path.lineTo(358.673f, 99.405f);
        path.lineTo(360.123f, 99.355f);
        path.lineTo(358.873f, 98.755f);
        path.lineTo(358.873f, 98.105f);
        path.quadTo(359.923f, 97.655f, 360.923f, 97.355f);
        path.quadTo(367.573f, 97.655f, 372.273f, 91.505f);
        path.quadTo(377.323f, 84.905f, 377.323f, 75.005f);
        path.quadTo(377.302f, 73.886f, 378.223f, 72.505f);
        path.close();
        path.moveTo(372.975f, 82.1262f);
        path.quadTo(374.075f, 80.6262f, 374.075f, 77.2262f);
        path.quadTo(374.075f, 72.9762f, 372.625f, 70.2262f);
        path.quadTo(369.325f, 64.0262f, 359.975f, 64.0262f);
        path.lineTo(358.175f, 64.4762f);
        path.lineTo(356.325f, 64.9762f);
        path.quadTo(352.625f, 64.9762f, 351.275f, 63.5262f);
        path.quadTo(354.625f, 62.8262f, 356.725f, 61.9262f);
        path.lineTo(359.075f, 60.7762f);
        path.quadTo(361.225f, 60.0262f, 363.025f, 61.0762f);
        path.lineTo(365.425f, 62.3762f);
        path.lineTo(366.925f, 62.1262f);
        path.lineTo(366.975f, 64.0262f);
        path.quadTo(367.275f, 65.4262f, 368.625f, 65.4262f);
        path.quadTo(369.175f, 65.4262f, 369.775f, 64.9762f);
        path.quadTo(370.375f, 64.4262f, 370.925f, 64.4262f);
        path.lineTo(373.925f, 67.1262f);
        path.lineTo(377.375f, 70.4262f);
        path.lineTo(374.125f, 79.3262f);
        path.quadTo(372.425f, 84.8762f, 373.825f, 88.3762f);
        path.quadTo(372.075f, 89.0262f, 369.025f, 92.1262f);
        path.lineTo(367.925f, 93.1262f);
        path.lineTo(368.125f, 92.8762f);
        path.quadTo(369.525f, 91.4262f, 369.875f, 90.1762f);
        path.lineTo(363.925f, 87.6262f);
        path.lineTo(365.175f, 85.9262f);
        path.quadTo(371.133f, 84.5661f, 372.975f, 82.1262f);
        path.close();
        path.moveTo(323.901f, 60.8121f);
        path.quadTo(323.851f, 61.2121f, 322.701f, 61.2621f);
        path.quadTo(322.901f, 61.0621f, 323.401f, 60.8621f);
        path.lineTo(324.102f, 60.5621f);
        path.lineTo(323.901f, 60.8121f);
        path.close();
        path.moveTo(320.219f, 62.1471f);
        path.lineTo(319.969f, 62.4471f);
        path.lineTo(318.569f, 63.7971f);
        path.quadTo(318.119f, 63.7971f, 316.469f, 62.4471f);
        path.lineTo(317.519f, 62.1471f);
        path.lineTo(320.219f, 62.1471f);
        path.close();
        path.moveTo(320.311f, 67.0728f);
        path.lineTo(320.211f, 66.2228f);
        path.lineTo(321.161f, 66.0728f);
        path.lineTo(321.511f, 66.3228f);
        path.lineTo(322.711f, 67.6728f);
        path.quadTo(320.725f, 67.9935f, 320.311f, 67.0728f);
        path.close();
        path.moveTo(323.211f, 66.0601f);
        path.lineTo(322.961f, 65.6601f);
        path.lineTo(326.611f, 65.1101f);
        path.lineTo(326.061f, 65.7101f);
        path.lineTo(324.561f, 67.7101f);
        path.quadTo(324.086f, 67.4871f, 323.211f, 66.0601f);
        path.close();
        path.moveTo(320.771f, 63.8964f);
        path.lineTo(321.371f, 62.6964f);
        path.lineTo(326.671f, 62.5964f);
        path.quadTo(328.571f, 62.5964f, 329.121f, 63.1464f);
        path.lineTo(328.121f, 63.7964f);
        path.quadTo(324.132f, 63.344f, 320.771f, 63.8964f);
        path.close();
        path.moveTo(326.618f, 67.4411f);
        path.quadTo(326.818f, 67.3411f, 327.718f, 67.6911f);
        path.quadTo(328.568f, 68.0911f, 328.918f, 68.5911f);
        path.lineTo(326.618f, 68.1411f);
        path.lineTo(326.618f, 67.4411f);
        path.close();
        path.moveTo(335.272f, 65.2314f);
        path.quadTo(334.122f, 63.8814f, 333.072f, 63.0814f);
        path.lineTo(332.622f, 62.8814f);
        path.quadTo(335.772f, 63.1814f, 336.722f, 64.4314f);
        path.lineTo(337.922f, 66.2814f);
        path.lineTo(337.572f, 66.7814f);
        path.lineTo(335.822f, 65.8814f);
        path.lineTo(335.272f, 65.2314f);
        path.close();
        path.moveTo(331.727f, 64.8171f);
        path.lineTo(333.527f, 65.2671f);
        path.lineTo(334.327f, 66.1671f);
        path.quadTo(335.427f, 67.8171f, 335.427f, 69.0671f);
        path.quadTo(332.377f, 68.2171f, 332.027f, 66.6171f);
        path.quadTo(332.05f, 65.4156f, 331.727f, 64.8171f);
        path.close();
        path.moveTo(302.449f, 67.6713f);
        path.quadTo(301.699f, 67.3713f, 300.999f, 66.3713f);
        path.quadTo(300.449f, 65.6213f, 298.899f, 65.6213f);
        path.lineTo(298.049f, 65.8713f);
        path.lineTo(298.099f, 66.0713f);
        path.lineTo(298.099f, 68.4213f);
        path.quadTo(298.199f, 69.2213f, 298.549f, 69.9713f);
        path.lineTo(299.499f, 71.5713f);
        path.quadTo(297.849f, 70.7213f, 297.449f, 69.5713f);
        path.quadTo(297.199f, 68.9213f, 297.199f, 67.3213f);
        path.quadTo(297.199f, 65.0213f, 298.349f, 64.4213f);
        path.quadTo(299.849f, 63.7213f, 302.699f, 67.4713f);
        path.lineTo(302.449f, 67.6713f);
        path.close();
        path.moveTo(303.876f, 63.7583f);
        path.lineTo(303.876f, 63.3083f);
        path.quadTo(305.326f, 62.3083f, 306.876f, 62.6583f);
        path.quadTo(307.676f, 62.8583f, 308.876f, 63.5083f);
        path.lineTo(308.026f, 64.9083f);
        path.quadTo(307.376f, 65.8583f, 305.976f, 65.8583f);
        path.quadTo(305.326f, 65.8583f, 305.276f, 65.6583f);
        path.lineTo(305.226f, 65.1583f);
        path.lineTo(306.076f, 64.8583f);
        path.lineTo(306.826f, 64.4583f);
        path.quadTo(305.534f, 63.7583f, 303.876f, 63.7583f);
        path.close();
        path.moveTo(309.631f, 67.0268f);
        path.lineTo(310.331f, 67.7268f);
        path.lineTo(308.731f, 70.4268f);
        path.lineTo(308.681f, 70.2268f);
        path.quadTo(309.032f, 68.0396f, 309.631f, 67.0268f);
        path.close();
        path.moveTo(310.736f, 66.2902f);
        path.lineTo(311.035f, 65.7402f);
        path.lineTo(311.236f, 65.1902f);
        path.lineTo(313.486f, 65.4402f);
        path.lineTo(311.686f, 67.0402f);
        path.lineTo(311.136f, 66.7902f);
        path.lineTo(310.736f, 66.2902f);
        path.close();
        path.moveTo(315.661f, 67.5332f);
        path.lineTo(316.511f, 67.2332f);
        path.lineTo(318.361f, 66.7332f);
        path.quadTo(318.561f, 69.9332f, 319.461f, 73.0332f);
        path.quadTo(316.311f, 72.5832f, 315.711f, 73.3832f);
        path.quadTo(315.361f, 73.8332f, 315.561f, 75.0332f);
        path.lineTo(314.111f, 74.8832f);
        path.lineTo(313.511f, 74.6332f);
        path.lineTo(313.711f, 74.3332f);
        path.quadTo(315.111f, 73.9832f, 315.461f, 71.9832f);
        path.lineTo(315.561f, 69.5332f);
        path.lineTo(315.661f, 67.5332f);
        path.close();
        path.moveTo(313.774f, 72.551f);
        path.lineTo(313.724f, 72.051f);
        path.quadTo(313.724f, 71.251f, 313.074f, 69.701f);
        path.lineTo(312.674f, 68.851f);
        path.quadTo(313.374f, 68.451f, 314.174f, 68.051f);
        path.lineTo(313.774f, 72.551f);
        path.close();
        path.moveTo(311.564f, 69.6048f);
        path.lineTo(311.964f, 70.9548f);
        path.lineTo(312.364f, 73.6547f);
        path.lineTo(310.964f, 73.3047f);
        path.lineTo(310.014f, 72.9548f);
        path.quadTo(310.014f, 71.6048f, 310.564f, 70.3047f);
        path.lineTo(311.564f, 69.6048f);
        path.close();
        path.moveTo(310.736f, 76.1877f);
        path.lineTo(310.785f, 76.1377f);
        path.lineTo(311.285f, 77.1377f);
        path.lineTo(311.085f, 77.2377f);
        path.lineTo(308.435f, 78.0377f);
        path.lineTo(308.885f, 77.7877f);
        path.lineTo(310.736f, 76.1877f);
        path.close();
        path.moveTo(307.973f, 79.5023f);
        path.lineTo(309.273f, 79.3522f);
        path.lineTo(307.923f, 80.0522f);
        path.lineTo(307.973f, 79.5023f);
        path.close();
        path.moveTo(310.92f, 79.5483f);
        path.lineTo(311.02f, 79.5483f);
        path.lineTo(310.57f, 80.1983f);
        path.lineTo(309.22f, 80.6483f);
        path.lineTo(310.92f, 79.5483f);
        path.close();
        path.moveTo(309.078f, 74.2082f);
        path.lineTo(310.078f, 75.2082f);
        path.lineTo(307.678f, 76.8082f);
        path.lineTo(305.528f, 77.9082f);
        path.lineTo(305.628f, 77.0582f);
        path.quadTo(306.828f, 74.8082f, 307.978f, 73.2082f);
        path.lineTo(309.078f, 74.2082f);
        path.close();
        path.moveTo(312.945f, 78.8578f);
        path.lineTo(312.995f, 78.3578f);
        path.lineTo(313.395f, 78.1578f);
        path.lineTo(314.495f, 78.1578f);
        path.lineTo(316.795f, 78.4578f);
        path.quadTo(316.695f, 79.0578f, 316.045f, 79.4078f);
        path.lineTo(314.045f, 79.4078f);
        path.lineTo(313.295f, 78.9078f);
        path.lineTo(312.945f, 78.8578f);
        path.close();
        path.moveTo(304.981f, 71.4001f);
        path.lineTo(307.581f, 72.9001f);
        path.lineTo(305.731f, 75.8001f);
        path.lineTo(305.781f, 74.7001f);
        path.quadTo(305.764f, 72.4129f, 304.981f, 71.4001f);
        path.close();
        path.moveTo(304.106f, 73.0113f);
        path.lineTo(304.506f, 73.0113f);
        path.quadTo(304.606f, 75.7113f, 304.306f, 77.3113f);
        path.lineTo(304.306f, 77.1613f);
        path.lineTo(304.106f, 73.0113f);
        path.close();
        path.moveTo(305.718f, 69.973f);
        path.lineTo(305.418f, 69.973f);
        path.quadTo(304.518f, 69.123f, 304.518f, 68.573f);
        path.quadTo(304.268f, 68.173f, 304.918f, 68.923f);
        path.lineTo(305.718f, 69.973f);
        path.close();
        path.moveTo(300.884f, 68.3618f);
        path.lineTo(301.584f, 69.0618f);
        path.quadTo(300.884f, 69.7118f, 300.884f, 70.0118f);
        path.lineTo(300.184f, 70.0118f);
        path.quadTo(299.484f, 68.4618f, 299.484f, 67.2618f);
        path.lineTo(300.884f, 68.3618f);
        path.close();
        path.moveTo(300.884f, 72.551f);
        path.lineTo(301.734f, 72.501f);
        path.lineTo(302.684f, 72.551f);
        path.lineTo(302.684f, 72.751f);
        path.quadTo(302.534f, 73.051f, 301.884f, 73.101f);
        path.lineTo(301.134f, 73.151f);
        path.lineTo(300.884f, 72.551f);
        path.close();
        path.moveTo(301.114f, 76.4179f);
        path.quadTo(301.114f, 76.1179f, 301.614f, 75.5179f);
        path.quadTo(302.164f, 74.8679f, 302.964f, 74.3679f);
        path.lineTo(303.164f, 74.3679f);
        path.quadTo(303.164f, 77.1679f, 302.914f, 78.3179f);
        path.lineTo(301.914f, 77.5179f);
        path.quadTo(301.114f, 76.8322f, 301.114f, 76.4179f);
        path.close();
        path.moveTo(298.444f, 76.3719f);
        path.lineTo(298.844f, 75.4719f);
        path.lineTo(299.644f, 76.6219f);
        path.lineTo(299.844f, 76.9219f);
        path.lineTo(298.444f, 76.3719f);
        path.close();
        path.moveTo(303.738f, 85.0264f);
        path.quadTo(305.188f, 84.3264f, 306.738f, 83.7764f);
        path.quadTo(308.138f, 84.2264f, 310.288f, 85.3764f);
        path.lineTo(309.888f, 85.6264f);
        path.quadTo(308.888f, 86.1264f, 308.888f, 86.5764f);
        path.lineTo(303.638f, 86.5764f);
        path.lineTo(302.538f, 86.3764f);
        path.lineTo(303.738f, 85.0264f);
        path.close();
        path.moveTo(306.178f, 81.2055f);
        path.quadTo(306.378f, 80.4055f, 307.078f, 79.9055f);
        path.lineTo(307.078f, 80.6055f);
        path.lineTo(306.178f, 81.2055f);
        path.close();
        path.moveTo(303.14f, 82.2643f);
        path.lineTo(303.44f, 81.7143f);
        path.lineTo(304.79f, 80.3143f);
        path.lineTo(304.99f, 80.1143f);
        path.quadTo(304.705f, 81.1135f, 303.14f, 82.2643f);
        path.close();
        path.moveTo(300.608f, 79.9626f);
        path.lineTo(300.258f, 80.6126f);
        path.lineTo(299.508f, 81.4626f);
        path.lineTo(298.708f, 82.3126f);
        path.lineTo(298.358f, 81.7126f);
        path.quadTo(298.358f, 80.4626f, 299.208f, 80.0126f);
        path.quadTo(299.808f, 79.6626f, 301.058f, 79.6126f);
        path.lineTo(300.908f, 80.0626f);
        path.lineTo(300.408f, 80.4626f);
        path.lineTo(300.608f, 79.9626f);
        path.close();
        path.moveTo(300.608f, 82.4025f);
        path.lineTo(300.108f, 82.4025f);
        path.lineTo(300.608f, 81.9525f);
        path.lineTo(300.608f, 82.4025f);
        path.close();
        path.moveTo(301.805f, 88.1568f);
        path.lineTo(301.305f, 87.8068f);
        path.lineTo(301.855f, 87.2068f);
        path.lineTo(306.555f, 88.1568f);
        path.lineTo(301.805f, 88.1568f);
        path.close();
        path.moveTo(299.733f, 90.2744f);
        path.lineTo(299.883f, 90.1244f);
        path.lineTo(299.983f, 89.9744f);
        path.lineTo(299.883f, 91.1244f);
        path.quadTo(299.583f, 92.6744f, 298.483f, 92.9744f);
        path.lineTo(298.583f, 92.7244f);
        path.quadTo(299.089f, 91.4253f, 299.733f, 90.2744f);
        path.close();
        path.moveTo(300.516f, 89.0315f);
        path.lineTo(301.266f, 87.9815f);
        path.quadTo(303.766f, 89.3815f, 306.116f, 89.3815f);
        path.quadTo(307.066f, 89.3815f, 308.216f, 88.8315f);
        path.lineTo(308.766f, 89.0815f);
        path.quadTo(309.716f, 88.8815f, 310.016f, 88.4315f);
        path.quadTo(309.716f, 88.2315f, 309.416f, 88.2315f);
        path.lineTo(309.966f, 87.8315f);
        path.lineTo(310.866f, 87.1315f);
        path.lineTo(310.966f, 87.4815f);
        path.lineTo(312.266f, 87.7815f);
        path.lineTo(313.216f, 87.6815f);
        path.lineTo(313.216f, 87.1315f);
        path.lineTo(312.866f, 86.6315f);
        path.lineTo(311.366f, 86.7315f);
        path.lineTo(313.316f, 84.7815f);
        path.lineTo(314.766f, 86.8815f);
        path.quadTo(316.866f, 88.6315f, 322.716f, 88.6315f);
        path.quadTo(324.116f, 88.6315f, 325.016f, 87.8315f);
        path.quadTo(325.916f, 87.0315f, 327.516f, 87.0315f);
        path.quadTo(328.116f, 87.0315f, 329.516f, 87.6315f);
        path.quadTo(330.866f, 88.1815f, 331.466f, 88.1815f);
        path.quadTo(333.566f, 88.1815f, 334.416f, 84.7815f);
        path.quadTo(334.916f, 82.8315f, 334.916f, 80.3815f);
        path.quadTo(338.416f, 85.4315f, 340.266f, 87.2815f);
        path.quadTo(345.266f, 92.1315f, 350.866f, 92.1315f);
        path.lineTo(351.766f, 92.1315f);
        path.lineTo(351.966f, 94.2815f);
        path.lineTo(350.966f, 101.581f);
        path.quadTo(352.216f, 100.631f, 352.866f, 99.2815f);
        path.lineTo(352.866f, 101.181f);
        path.lineTo(352.666f, 101.181f);
        path.lineTo(352.816f, 103.631f);
        path.lineTo(352.066f, 116.331f);
        path.lineTo(351.816f, 119.231f);
        path.lineTo(349.666f, 122.381f);
        path.quadTo(347.566f, 125.131f, 337.966f, 134.731f);
        path.lineTo(340.166f, 134.631f);
        path.quadTo(346.266f, 128.581f, 349.316f, 124.781f);
        path.lineTo(348.866f, 127.381f);
        path.quadTo(348.166f, 130.381f, 346.516f, 132.781f);
        path.quadTo(343.716f, 136.681f, 338.566f, 139.131f);
        path.lineTo(338.566f, 139.031f);
        path.lineTo(338.516f, 138.081f);
        path.lineTo(338.416f, 138.331f);
        path.lineTo(337.816f, 138.481f);
        path.lineTo(337.366f, 139.631f);
        path.quadTo(335.166f, 140.481f, 332.616f, 141.181f);
        path.quadTo(332.616f, 135.381f, 331.516f, 133.231f);
        path.quadTo(332.616f, 131.531f, 332.616f, 130.331f);
        path.lineTo(332.516f, 128.931f);
        path.lineTo(332.166f, 128.381f);
        path.quadTo(331.866f, 128.481f, 330.316f, 130.331f);
        path.quadTo(329.016f, 131.881f, 327.366f, 131.881f);
        path.lineTo(325.916f, 131.781f);
        path.lineTo(325.116f, 131.481f);
        path.lineTo(325.416f, 131.781f);
        path.lineTo(323.716f, 131.681f);
        path.lineTo(324.116f, 131.281f);
        path.lineTo(324.166f, 131.281f);
        path.lineTo(321.866f, 131.231f);
        path.lineTo(316.816f, 131.081f);
        path.quadTo(313.066f, 131.081f, 311.016f, 132.931f);
        path.quadTo(311.216f, 133.381f, 312.116f, 133.431f);
        path.lineTo(312.016f, 134.331f);
        path.lineTo(311.666f, 134.231f);
        path.quadTo(311.266f, 134.581f, 311.166f, 134.931f);
        path.lineTo(311.166f, 135.631f);
        path.lineTo(311.316f, 135.781f);
        path.quadTo(310.316f, 135.331f, 309.466f, 134.781f);
        path.quadTo(308.016f, 133.831f, 306.366f, 131.781f);
        path.lineTo(306.866f, 131.881f);
        path.lineTo(306.866f, 130.131f);
        path.lineTo(304.416f, 129.631f);
        path.lineTo(303.916f, 129.181f);
        path.quadTo(301.766f, 121.531f, 298.266f, 116.431f);
        path.lineTo(298.016f, 114.381f);
        path.lineTo(298.266f, 110.731f);
        path.quadTo(297.916f, 111.081f, 297.766f, 111.831f);
        path.quadTo(297.216f, 106.031f, 297.266f, 100.331f);
        path.lineTo(297.516f, 100.431f);
        path.lineTo(298.166f, 100.631f);
        path.lineTo(297.666f, 100.131f);
        path.lineTo(297.316f, 99.8815f);
        path.lineTo(297.366f, 98.3315f);
        path.lineTo(297.516f, 96.3315f);
        path.quadTo(298.166f, 94.0315f, 299.466f, 93.3315f);
        path.quadTo(300.666f, 92.6315f, 300.666f, 90.2815f);
        path.lineTo(300.516f, 89.0315f);
        path.close();
        path.moveTo(314.418f, 80.7912f);
        path.quadTo(314.568f, 82.2412f, 314.118f, 82.7912f);
        path.quadTo(313.468f, 83.7912f, 308.918f, 84.0412f);
        path.lineTo(309.868f, 83.5912f);
        path.quadTo(310.818f, 83.3912f, 312.418f, 82.2412f);
        path.lineTo(314.418f, 80.7912f);
        path.close();
        path.moveTo(310.689f, 81.9421f);
        path.lineTo(311.889f, 80.8421f);
        path.lineTo(312.339f, 80.8421f);
        path.lineTo(310.689f, 81.9421f);
        path.close();
        path.moveTo(315.937f, 85.9932f);
        path.lineTo(315.137f, 84.2932f);
        path.lineTo(317.237f, 82.7932f);
        path.lineTo(318.387f, 81.7932f);
        path.lineTo(321.037f, 84.1432f);
        path.lineTo(324.137f, 87.0432f);
        path.lineTo(321.337f, 87.2432f);
        path.quadTo(317.318f, 87.2361f, 315.937f, 85.9932f);
        path.close();
        path.moveTo(327.814f, 72.7812f);
        path.quadTo(327.464f, 73.0812f, 326.814f, 73.1312f);
        path.lineTo(326.164f, 73.2312f);
        path.lineTo(325.964f, 72.9812f);
        path.lineTo(325.664f, 70.8812f);
        path.lineTo(325.664f, 70.7312f);
        path.lineTo(326.564f, 71.6312f);
        path.quadTo(327.264f, 72.3312f, 328.014f, 72.5312f);
        path.lineTo(327.814f, 72.7812f);
        path.close();
        path.moveTo(327.446f, 70.5254f);
        path.lineTo(326.896f, 69.7754f);
        path.lineTo(328.446f, 70.2754f);
        path.lineTo(329.446f, 71.3754f);
        path.lineTo(328.996f, 71.4254f);
        path.quadTo(328.137f, 71.216f, 327.446f, 70.5254f);
        path.close();
        path.moveTo(328.827f, 76.1417f);
        path.lineTo(327.977f, 74.8917f);
        path.lineTo(332.327f, 74.7917f);
        path.quadTo(334.727f, 76.6417f, 335.577f, 76.8917f);
        path.lineTo(334.677f, 77.1417f);
        path.lineTo(334.127f, 77.2417f);
        path.lineTo(333.327f, 76.2417f);
        path.lineTo(333.077f, 76.6417f);
        path.lineTo(333.077f, 77.3417f);
        path.lineTo(332.827f, 77.3417f);
        path.quadTo(330.162f, 77.3386f, 328.827f, 76.1417f);
        path.close();
        path.moveTo(326.618f, 74.8527f);
        path.quadTo(326.618f, 75.4527f, 327.368f, 76.5027f);
        path.lineTo(325.818f, 76.3527f);
        path.lineTo(325.268f, 76.0027f);
        path.quadTo(324.168f, 75.3527f, 324.818f, 75.3027f);
        path.lineTo(325.568f, 74.9527f);
        path.lineTo(326.618f, 74.8527f);
        path.close();
        path.moveTo(322.612f, 69.3746f);
        path.lineTo(324.112f, 69.3246f);
        path.lineTo(324.562f, 73.1746f);
        path.lineTo(321.812f, 73.2246f);
        path.lineTo(321.263f, 73.1246f);
        path.lineTo(321.562f, 72.9746f);
        path.quadTo(321.562f, 71.1246f, 321.062f, 69.5246f);
        path.lineTo(322.612f, 69.3746f);
        path.close();
        path.moveTo(320.311f, 76.8322f);
        path.lineTo(319.711f, 76.6322f);
        path.lineTo(321.111f, 74.8822f);
        path.lineTo(323.361f, 76.2322f);
        path.lineTo(321.561f, 76.1822f);
        path.lineTo(320.311f, 76.8322f);
        path.close();
        path.moveTo(317.641f, 76.0036f);
        path.quadTo(316.991f, 75.9536f, 316.991f, 74.8536f);
        path.quadTo(317.141f, 74.5036f, 318.191f, 74.5536f);
        path.quadTo(319.291f, 74.6036f, 319.291f, 74.8036f);
        path.quadTo(318.976f, 75.221f, 317.641f, 76.0036f);
        path.close();
        path.moveTo(322.29f, 79.5943f);
        path.lineTo(323.89f, 79.6943f);
        path.lineTo(323.94f, 81.0443f);
        path.quadTo(324.14f, 82.4943f, 324.84f, 83.3443f);
        path.quadTo(322.79f, 83.4443f, 322.19f, 82.3943f);
        path.lineTo(322.04f, 80.6943f);
        path.quadTo(322.04f, 79.9443f, 322.24f, 79.6443f);
        path.lineTo(322.29f, 79.5943f);
        path.close();
        path.moveTo(325.236f, 80.1467f);
        path.lineTo(325.236f, 79.7967f);
        path.lineTo(329.786f, 79.8967f);
        path.lineTo(330.336f, 80.6467f);
        path.quadTo(330.036f, 81.2967f, 328.586f, 82.1967f);
        path.quadTo(327.236f, 83.0467f, 326.436f, 83.1467f);
        path.lineTo(325.686f, 81.7967f);
        path.quadTo(325.236f, 80.8833f, 325.236f, 80.1467f);
        path.close();
        path.moveTo(325.927f, 85.1645f);
        path.lineTo(324.127f, 85.1645f);
        path.lineTo(323.927f, 84.9645f);
        path.lineTo(325.927f, 85.1645f);
        path.close();
        path.moveTo(320.403f, 79.8705f);
        path.lineTo(320.553f, 80.9205f);
        path.lineTo(320.403f, 81.9205f);
        path.lineTo(319.453f, 81.0205f);
        path.lineTo(320.403f, 79.9205f);
        path.lineTo(320.403f, 79.8705f);
        path.close();
        path.moveTo(332.142f, 79.8705f);
        path.lineTo(333.192f, 79.8705f);
        path.lineTo(333.292f, 82.7205f);
        path.quadTo(333.142f, 86.7705f, 330.992f, 86.7705f);
        path.lineTo(329.592f, 86.5705f);
        path.lineTo(328.992f, 86.3705f);
        path.lineTo(329.142f, 86.0705f);
        path.quadTo(332.142f, 83.9205f, 332.142f, 80.1205f);
        path.lineTo(332.142f, 79.8705f);
        path.close();
        path.moveTo(327.308f, 84.7042f);
        path.quadTo(327.408f, 84.4042f, 328.008f, 84.1042f);
        path.lineTo(328.708f, 83.8042f);
        path.lineTo(328.508f, 84.0542f);
        path.quadTo(328.458f, 84.6042f, 327.558f, 84.9042f);
        path.lineTo(327.308f, 84.7042f);
        path.close();
        path.moveTo(361.374f, 67.7173f);
        path.quadTo(360.774f, 67.4673f, 359.874f, 66.8673f);
        path.lineTo(358.424f, 65.8673f);
        path.lineTo(362.574f, 66.1173f);
        path.lineTo(361.374f, 67.7173f);
        path.close();
        path.moveTo(363.077f, 68.2697f);
        path.lineTo(363.477f, 67.4697f);
        path.lineTo(363.727f, 67.4197f);
        path.quadTo(363.377f, 68.4197f, 363.977f, 70.8197f);
        path.quadTo(364.577f, 73.2697f, 365.577f, 74.6197f);
        path.quadTo(364.927f, 74.2697f, 363.977f, 72.4197f);
        path.quadTo(363.027f, 70.5197f, 363.027f, 69.3697f);
        path.lineTo(363.077f, 68.2697f);
        path.close();
        path.moveTo(339.968f, 63.0678f);
        path.lineTo(339.968f, 63.7678f);
        path.lineTo(343.418f, 67.4178f);
        path.quadTo(340.168f, 66.8678f, 338.818f, 65.1678f);
        path.quadTo(337.618f, 63.1678f, 336.518f, 62.1178f);
        path.lineTo(340.768f, 62.3678f);
        path.lineTo(345.318f, 63.3178f);
        path.lineTo(345.018f, 63.8678f);
        path.lineTo(344.818f, 64.4678f);
        path.quadTo(344.468f, 64.4178f, 342.968f, 63.4178f);
        path.quadTo(341.918f, 62.8178f, 340.668f, 62.8178f);
        path.lineTo(339.868f, 62.9678f);
        path.lineTo(339.968f, 63.0678f);
        path.close();
        path.moveTo(336.377f, 66.6125f);
        path.lineTo(337.177f, 67.1125f);
        path.lineTo(336.727f, 67.4125f);
        path.lineTo(336.377f, 66.6125f);
        path.close();
        path.moveTo(343.881f, 65.8299f);
        path.lineTo(343.681f, 65.6299f);
        path.quadTo(344.731f, 65.6799f, 345.381f, 66.9299f);
        path.quadTo(346.181f, 68.5799f, 346.931f, 69.0799f);
        path.quadTo(345.981f, 68.8299f, 345.081f, 67.5799f);
        path.lineTo(343.881f, 65.8299f);
        path.close();
        path.moveTo(348.07f, 62.5614f);
        path.lineTo(348.97f, 62.6614f);
        path.lineTo(347.12f, 62.6114f);
        path.lineTo(348.07f, 62.5614f);
        path.close();
        path.moveTo(347.702f, 66.3363f);
        path.quadTo(346.552f, 65.3863f, 346.402f, 64.4363f);
        path.lineTo(350.852f, 64.7363f);
        path.lineTo(351.902f, 65.8363f);
        path.lineTo(350.052f, 68.1863f);
        path.lineTo(347.702f, 66.3363f);
        path.close();
        path.moveTo(353.456f, 70.9398f);
        path.quadTo(351.906f, 69.6898f, 351.906f, 69.1898f);
        path.quadTo(351.906f, 65.5398f, 354.106f, 68.2898f);
        path.quadTo(356.406f, 71.0898f, 356.056f, 72.7398f);
        path.quadTo(354.929f, 72.1827f, 353.456f, 70.9398f);
        path.close();
        path.moveTo(349.221f, 76.4179f);
        path.lineTo(349.171f, 75.4679f);
        path.lineTo(348.921f, 75.2679f);
        path.quadTo(349.521f, 75.6679f, 349.921f, 76.6679f);
        path.lineTo(349.371f, 77.0179f);
        path.lineTo(349.221f, 77.4179f);
        path.lineTo(349.021f, 77.1179f);
        path.lineTo(349.221f, 76.4179f);
        path.close();
        path.moveTo(346.919f, 77.4307f);
        path.lineTo(346.019f, 77.1807f);
        path.lineTo(346.469f, 76.7807f);
        path.lineTo(346.919f, 77.4307f);
        path.close();
        path.moveTo(347.609f, 79.18f);
        path.lineTo(347.109f, 78.98f);
        path.lineTo(347.259f, 78.93f);
        path.lineTo(347.609f, 79.18f);
        path.close();
        path.moveTo(350.233f, 78.6276f);
        path.lineTo(350.383f, 78.5276f);
        path.lineTo(350.383f, 78.6276f);
        path.lineTo(350.383f, 78.8776f);
        path.lineTo(350.233f, 78.6276f);
        path.close();
        path.moveTo(351.983f, 78.8117f);
        path.lineTo(351.983f, 78.4117f);
        path.lineTo(352.583f, 78.5117f);
        path.lineTo(352.683f, 79.5117f);
        path.lineTo(352.683f, 80.3617f);
        path.lineTo(351.933f, 80.1117f);
        path.lineTo(351.983f, 78.8117f);
        path.close();
        path.moveTo(341.901f, 71.1699f);
        path.lineTo(341.851f, 71.1699f);
        path.lineTo(341.851f, 71.1199f);
        path.lineTo(341.901f, 71.1699f);
        path.close();
        path.moveTo(342.454f, 69.5587f);
        path.lineTo(343.204f, 70.4087f);
        path.lineTo(340.904f, 68.7087f);
        path.lineTo(340.854f, 68.5587f);
        path.quadTo(341.579f, 68.6841f, 342.454f, 69.5587f);
        path.close();
        path.moveTo(339.277f, 69.0523f);
        path.lineTo(339.577f, 70.2023f);
        path.quadTo(338.127f, 70.1523f, 337.727f, 69.7023f);
        path.lineTo(337.927f, 69.3023f);
        path.lineTo(338.427f, 69.0023f);
        path.lineTo(339.277f, 69.0523f);
        path.close();
        path.moveTo(339.277f, 73.2415f);
        path.lineTo(340.227f, 73.0415f);
        path.lineTo(340.227f, 74.3915f);
        path.lineTo(339.527f, 74.5915f);
        path.lineTo(339.277f, 73.2415f);
        path.close();
        path.moveTo(340.106f, 76.8783f);
        path.lineTo(339.356f, 76.6783f);
        path.lineTo(339.406f, 76.6783f);
        path.lineTo(340.106f, 76.8783f);
        path.close();
        path.moveTo(337.528f, 79.2721f);
        path.quadTo(338.878f, 78.7721f, 339.828f, 78.7721f);
        path.lineTo(340.778f, 79.2221f);
        path.lineTo(340.828f, 79.5221f);
        path.lineTo(341.178f, 81.7221f);
        path.quadTo(341.178f, 82.8721f, 340.878f, 82.4221f);
        path.lineTo(339.278f, 82.4221f);
        path.lineTo(338.128f, 80.5221f);
        path.lineTo(337.528f, 79.2721f);
        path.close();
        path.moveTo(341.349f, 75.8195f);
        path.lineTo(341.649f, 75.4695f);
        path.quadTo(341.849f, 75.3195f, 342.049f, 75.4695f);
        path.quadTo(342.549f, 75.4195f, 341.949f, 75.9695f);
        path.lineTo(341.349f, 75.8195f);
        path.close();
        path.moveTo(343.144f, 80.7452f);
        path.lineTo(342.994f, 81.0452f);
        path.lineTo(342.544f, 81.0452f);
        path.lineTo(342.094f, 80.1452f);
        path.lineTo(341.944f, 79.7952f);
        path.lineTo(343.194f, 80.4452f);
        path.lineTo(343.144f, 80.7452f);
        path.close();
        path.moveTo(338.863f, 89.2616f);
        path.quadTo(339.263f, 89.6116f, 340.163f, 89.7116f);
        path.quadTo(340.663f, 89.3616f, 340.663f, 88.8616f);
        path.lineTo(339.863f, 87.9116f);
        path.lineTo(338.713f, 88.0116f);
        path.quadTo(338.263f, 88.2116f, 338.263f, 88.5616f);
        path.lineTo(338.863f, 89.2616f);
        path.close();
        path.moveTo(336.055f, 88.7553f);
        path.lineTo(337.255f, 88.4053f);
        path.lineTo(336.655f, 87.9053f);
        path.quadTo(335.305f, 87.9053f, 335.005f, 88.4053f);
        path.quadTo(335.318f, 88.7553f, 336.055f, 88.7553f);
        path.close();
        path.moveTo(341.625f, 86.0852f);
        path.lineTo(341.575f, 85.9352f);
        path.quadTo(343.025f, 86.2852f, 345.075f, 88.0852f);
        path.quadTo(347.375f, 89.4352f, 351.475f, 89.9352f);
        path.lineTo(351.575f, 90.7352f);
        path.lineTo(349.475f, 90.7352f);
        path.quadTo(347.425f, 90.7352f, 344.875f, 88.7852f);
        path.lineTo(341.625f, 86.0852f);
        path.close();
        path.moveTo(341.625f, 89.8601f);
        path.lineTo(341.475f, 90.3601f);
        path.quadTo(341.825f, 90.8101f, 341.825f, 91.3101f);
        path.lineTo(344.375f, 91.1101f);
        path.lineTo(344.075f, 90.3601f);
        path.quadTo(343.743f, 89.8601f, 341.625f, 89.8601f);
        path.close();
        path.moveTo(351.292f, 88.433f);
        path.lineTo(349.692f, 88.433f);
        path.quadTo(349.342f, 88.433f, 346.992f, 87.133f);
        path.lineTo(344.142f, 85.383f);
        path.lineTo(347.792f, 86.583f);
        path.lineTo(351.242f, 87.833f);
        path.lineTo(351.292f, 88.433f);
        path.close();
        path.moveTo(367.174f, 72.4129f);
        path.quadTo(365.424f, 70.1129f, 365.324f, 68.4129f);
        path.quadTo(366.974f, 69.0629f, 368.624f, 71.5129f);
        path.lineTo(370.874f, 75.7629f);
        path.lineTo(369.724f, 75.7629f);
        path.lineTo(367.174f, 72.4129f);
        path.close();
        path.moveTo(367.404f, 76.464f);
        path.lineTo(368.004f, 77.114f);
        path.lineTo(368.554f, 78.264f);
        path.lineTo(368.304f, 78.264f);
        path.lineTo(367.404f, 76.464f);
        path.close();
        path.moveTo(370.259f, 77.845f);
        path.lineTo(371.509f, 77.795f);
        path.lineTo(372.009f, 79.495f);
        path.lineTo(370.909f, 79.645f);
        path.lineTo(370.359f, 79.245f);
        path.lineTo(370.259f, 77.845f);
        path.close();
        path.moveTo(360.453f, 69.927f);
        path.lineTo(361.853f, 73.027f);
        path.lineTo(357.253f, 67.677f);
        path.quadTo(359.072f, 67.6252f, 360.453f, 69.927f);
        path.close();
        path.moveTo(358.566f, 74.8067f);
        path.quadTo(357.016f, 71.9567f, 357.016f, 69.5067f);
        path.lineTo(357.016f, 69.3067f);
        path.lineTo(361.016f, 74.6567f);
        path.quadTo(363.366f, 77.9067f, 363.966f, 79.9067f);
        path.lineTo(362.966f, 80.1067f);
        path.quadTo(360.223f, 77.891f, 358.566f, 74.8067f);
        path.close();
        path.moveTo(359.256f, 83.4152f);
        path.lineTo(361.656f, 84.9652f);
        path.lineTo(357.906f, 84.9652f);
        path.lineTo(359.256f, 83.4152f);
        path.close();
        path.moveTo(363.491f, 81.9881f);
        path.lineTo(363.441f, 81.9381f);
        path.quadTo(365.091f, 81.9881f, 365.441f, 82.5881f);
        path.lineTo(365.591f, 83.3881f);
        path.lineTo(363.491f, 81.9881f);
        path.close();
        path.moveTo(356.678f, 83.6454f);
        path.lineTo(357.028f, 83.3954f);
        path.lineTo(357.028f, 83.3954f);
        path.lineTo(356.778f, 83.7954f);
        path.lineTo(356.528f, 83.7454f);
        path.lineTo(356.678f, 83.6454f);
        path.close();
        path.moveTo(362.939f, 87.144f);
        path.lineTo(362.489f, 86.944f);
        path.lineTo(362.239f, 86.844f);
        path.quadTo(362.989f, 86.594f, 363.539f, 86.194f);
        path.lineTo(363.739f, 86.344f);
        path.lineTo(362.939f, 87.144f);
        path.close();
        path.moveTo(369.108f, 82.6787f);
        path.lineTo(368.958f, 83.6787f);
        path.lineTo(368.758f, 84.0787f);
        path.lineTo(367.158f, 84.2287f);
        path.lineTo(367.158f, 84.0787f);
        path.lineTo(366.658f, 82.5287f);
        path.quadTo(366.108f, 81.4787f, 366.108f, 80.8787f);
        path.lineTo(366.258f, 78.9787f);
        path.quadTo(368.325f, 79.9166f, 369.108f, 82.6787f);
        path.close();
        path.moveTo(365.701f, 89.3997f);
        path.lineTo(366.201f, 90.1998f);
        path.quadTo(365.951f, 90.3997f, 365.701f, 90.8997f);
        path.lineTo(365.201f, 91.3497f);
        path.lineTo(364.701f, 91.0497f);
        path.lineTo(364.701f, 90.0497f);
        path.quadTo(365.379f, 89.3997f, 365.701f, 89.3997f);
        path.close();
        path.moveTo(361.052f, 93.0825f);
        path.lineTo(360.552f, 92.6825f);
        path.lineTo(361.052f, 91.7825f);
        path.lineTo(361.652f, 92.7825f);
        path.lineTo(361.052f, 93.0825f);
        path.close();
        path.moveTo(357.277f, 94.9239f);
        path.lineTo(357.027f, 95.3239f);
        path.lineTo(356.877f, 95.3239f);
        path.quadTo(356.077f, 95.1739f, 354.777f, 93.8739f);
        path.quadTo(355.377f, 93.8739f, 356.377f, 94.3739f);
        path.lineTo(357.277f, 94.9239f);
        path.close();
        path.moveTo(355.942f, 97.2717f);
        path.lineTo(355.142f, 97.4717f);
        path.lineTo(355.092f, 97.1717f);
        path.lineTo(354.892f, 95.8717f);
        path.lineTo(355.942f, 97.2717f);
        path.close();
        path.moveTo(354.423f, 107.307f);
        path.lineTo(354.873f, 104.607f);
        path.quadTo(355.123f, 108.907f, 354.823f, 113.457f);
        path.lineTo(354.723f, 113.457f);
        path.quadTo(354.973f, 111.907f, 354.723f, 110.457f);
        path.lineTo(354.573f, 109.407f);
        path.lineTo(354.473f, 109.557f);
        path.lineTo(354.373f, 109.557f);
        path.lineTo(354.423f, 107.307f);
        path.close();
        path.moveTo(356.586f, 113.614f);
        path.lineTo(358.486f, 113.664f);
        path.quadTo(357.936f, 114.114f, 357.536f, 114.714f);
        path.lineTo(358.786f, 117.864f);
        path.lineTo(356.436f, 114.914f);
        path.lineTo(356.586f, 113.614f);
        path.close();
        path.moveTo(353.686f, 95.7526f);
        path.lineTo(353.686f, 94.7026f);
        path.lineTo(353.736f, 94.7526f);
        path.lineTo(353.836f, 97.8526f);
        path.lineTo(353.636f, 96.8526f);
        path.lineTo(353.686f, 95.7526f);
        path.close();
        path.moveTo(346.827f, 102.013f);
        path.quadTo(346.577f, 100.613f, 345.077f, 99.8133f);
        path.quadTo(343.427f, 98.8633f, 340.927f, 99.2633f);
        path.quadTo(338.327f, 99.5633f, 337.577f, 100.363f);
        path.quadTo(336.927f, 100.963f, 337.127f, 102.163f);
        path.lineTo(337.177f, 102.863f);
        path.lineTo(337.777f, 104.213f);
        path.quadTo(339.027f, 105.913f, 342.727f, 105.463f);
        path.quadTo(344.377f, 105.213f, 345.627f, 104.113f);
        path.quadTo(346.919f, 102.98f, 346.827f, 102.013f);
        path.close();
        path.moveTo(339.645f, 101.645f);
        path.lineTo(339.395f, 101.695f);
        path.lineTo(338.445f, 102.095f);
        path.lineTo(338.395f, 101.895f);
        path.lineTo(339.645f, 101.395f);
        path.lineTo(339.645f, 101.645f);
        path.close();
        path.moveTo(340.244f, 101.277f);
        path.lineTo(340.194f, 101.227f);
        path.lineTo(341.744f, 100.977f);
        path.quadTo(344.244f, 100.827f, 345.544f, 102.177f);
        path.quadTo(342.894f, 103.977f, 340.794f, 104.277f);
        path.quadTo(339.594f, 104.477f, 338.994f, 103.327f);
        path.lineTo(339.894f, 102.727f);
        path.lineTo(340.194f, 103.077f);
        path.lineTo(341.744f, 102.977f);
        path.quadTo(342.394f, 102.527f, 342.244f, 101.677f);
        path.quadTo(341.994f, 101.377f, 341.094f, 101.277f);
        path.lineTo(340.244f, 101.277f);
        path.close();
        path.moveTo(337.344f, 112.878f);
        path.lineTo(336.544f, 112.778f);
        path.quadTo(334.294f, 114.628f, 334.294f, 116.028f);
        path.quadTo(334.294f, 117.178f, 334.694f, 116.528f);
        path.lineTo(336.244f, 115.278f);
        path.quadTo(337.394f, 114.428f, 338.394f, 113.228f);
        path.quadTo(338.218f, 112.97f, 337.344f, 112.878f);
        path.close();
        path.moveTo(344.111f, 114.673f);
        path.quadTo(343.061f, 114.373f, 342.561f, 115.073f);
        path.lineTo(342.061f, 116.473f);
        path.lineTo(342.461f, 116.673f);
        path.lineTo(343.361f, 115.673f);
        path.lineTo(344.111f, 114.673f);
        path.close();
        path.moveTo(339.001f, 115.041f);
        path.quadTo(337.901f, 115.841f, 337.901f, 116.341f);
        path.quadTo(337.901f, 117.491f, 338.101f, 116.991f);
        path.lineTo(340.851f, 114.241f);
        path.quadTo(340.106f, 114.213f, 339.001f, 115.041f);
        path.close();
        path.moveTo(336.929f, 130.417f);
        path.lineTo(336.979f, 129.017f);
        path.lineTo(336.929f, 127.667f);
        path.lineTo(336.679f, 127.117f);
        path.quadTo(334.029f, 127.117f, 333.779f, 127.567f);
        path.lineTo(335.629f, 130.017f);
        path.lineTo(336.329f, 131.217f);
        path.lineTo(336.829f, 130.967f);
        path.lineTo(336.929f, 130.417f);
        path.close();
        path.moveTo(342.96f, 134.606f);
        path.lineTo(343.41f, 134.306f);
        path.lineTo(345.81f, 132.306f);
        path.quadTo(344.56f, 133.056f, 343.06f, 133.256f);
        path.lineTo(342.11f, 133.106f);
        path.lineTo(342.36f, 133.656f);
        path.quadTo(342.5f, 134.652f, 342.96f, 134.606f);
        path.close();
        path.moveTo(353.18f, 126.596f);
        path.lineTo(353.03f, 127.246f);
        path.quadTo(352.43f, 128.046f, 351.88f, 129.846f);
        path.lineTo(353.48f, 121.896f);
        path.lineTo(354.33f, 115.596f);
        path.lineTo(354.68f, 113.896f);
        path.lineTo(354.78f, 113.946f);
        path.lineTo(354.23f, 119.646f);
        path.lineTo(353.18f, 126.596f);
        path.close();
        path.moveTo(350.694f, 135.25f);
        path.lineTo(350.594f, 135.8f);
        path.lineTo(349.844f, 140.85f);
        path.lineTo(349.844f, 136.85f);
        path.lineTo(350.694f, 135.25f);
        path.close();
        path.moveTo(346.136f, 134.698f);
        path.quadTo(347.636f, 132.398f, 348.536f, 130.148f);
        path.quadTo(348.436f, 133.748f, 345.986f, 137.848f);
        path.quadTo(342.386f, 143.198f, 340.186f, 146.898f);
        path.quadTo(340.386f, 147.148f, 343.086f, 148.698f);
        path.quadTo(345.986f, 150.348f, 346.586f, 150.998f);
        path.lineTo(340.036f, 158.198f);
        path.quadTo(336.186f, 161.998f, 333.186f, 164.198f);
        path.lineTo(333.186f, 163.848f);
        path.lineTo(336.436f, 150.998f);
        path.quadTo(337.886f, 145.398f, 338.336f, 141.998f);
        path.quadTo(342.776f, 140.084f, 346.136f, 134.698f);
        path.close();
        path.moveTo(365.333f, 122.545f);
        path.quadTo(365.883f, 123.095f, 366.233f, 123.095f);
        path.lineTo(366.833f, 122.495f);
        path.lineTo(366.683f, 123.245f);
        path.quadTo(364.733f, 123.245f, 364.583f, 123.745f);
        path.lineTo(364.783f, 124.245f);
        path.lineTo(364.733f, 124.195f);
        path.quadTo(363.683f, 122.845f, 362.433f, 122.395f);
        path.lineTo(362.833f, 121.945f);
        path.quadTo(362.833f, 120.295f, 362.333f, 119.595f);
        path.lineTo(363.333f, 119.245f);
        path.quadTo(363.433f, 119.595f, 363.233f, 120.995f);
        path.quadTo(363.033f, 121.945f, 363.983f, 121.945f);
        path.quadTo(364.826f, 121.946f, 365.333f, 122.545f);
        path.close();
        path.moveTo(356.402f, 115.455f);
        path.quadTo(357.702f, 116.955f, 358.852f, 119.155f);
        path.lineTo(355.902f, 124.055f);
        path.lineTo(354.852f, 125.505f);
        path.lineTo(355.752f, 120.205f);
        path.lineTo(356.402f, 115.455f);
        path.close();
        path.moveTo(360.131f, 121.946f);
        path.lineTo(359.731f, 121.946f);
        path.lineTo(359.931f, 121.546f);
        path.lineTo(360.131f, 121.946f);
        path.close();
        path.moveTo(361.098f, 122.131f);
        path.lineTo(361.098f, 121.981f);
        path.lineTo(361.098f, 121.931f);
        path.lineTo(360.898f, 121.581f);
        path.lineTo(361.748f, 122.181f);
        path.lineTo(361.098f, 122.131f);
        path.close();
        path.moveTo(361.65f, 130.509f);
        path.quadTo(360.25f, 127.759f, 360.25f, 127.009f);
        path.quadTo(360.25f, 125.909f, 360.7f, 123.559f);
        path.lineTo(360.7f, 125.809f);
        path.lineTo(361.85f, 130.959f);
        path.lineTo(361.65f, 130.509f);
        path.close();
        path.moveTo(357.139f, 126.596f);
        path.quadTo(356.989f, 128.246f, 355.939f, 129.496f);
        path.quadTo(355.389f, 129.446f, 354.989f, 128.846f);
        path.lineTo(356.689f, 126.546f);
        path.lineTo(357.189f, 125.846f);
        path.lineTo(357.139f, 126.596f);
        path.close();
        path.moveTo(360.591f, 131.89f);
        path.quadTo(360.591f, 133.74f, 361.341f, 134.49f);
        path.lineTo(360.741f, 135.49f);
        path.lineTo(359.941f, 136.79f);
        path.lineTo(359.941f, 131.44f);
        path.quadTo(360.269f, 131.43f, 360.591f, 131.89f);
        path.close();
        path.moveTo(362.341f, 135.527f);
        path.lineTo(362.841f, 134.977f);
        path.lineTo(363.591f, 134.827f);
        path.lineTo(363.641f, 134.927f);
        path.lineTo(362.341f, 136.727f);
        path.lineTo(364.991f, 136.427f);
        path.lineTo(365.791f, 139.477f);
        path.quadTo(364.591f, 139.627f, 364.591f, 140.577f);
        path.quadTo(364.591f, 141.577f, 364.741f, 141.627f);
        path.quadTo(364.841f, 141.677f, 364.941f, 141.577f);
        path.lineTo(366.291f, 141.577f);
        path.lineTo(367.341f, 145.577f);
        path.lineTo(367.441f, 147.177f);
        path.lineTo(365.141f, 146.927f);
        path.lineTo(365.241f, 145.577f);
        path.quadTo(365.241f, 144.077f, 362.991f, 141.877f);
        path.lineTo(362.191f, 141.027f);
        path.lineTo(362.191f, 138.977f);
        path.lineTo(361.041f, 137.727f);
        path.lineTo(360.891f, 137.527f);
        path.quadTo(361.144f, 136.862f, 362.341f, 135.527f);
        path.close();
        path.moveTo(366.208f, 127.885f);
        path.lineTo(365.858f, 127.735f);
        path.quadTo(366.258f, 126.535f, 365.307f, 125.035f);
        path.lineTo(366.508f, 125.985f);
        path.lineTo(367.307f, 125.685f);
        path.lineTo(366.208f, 127.885f);
        path.close();
        path.moveTo(320.357f, 100.218f);
        path.quadTo(321.557f, 100.568f, 322.107f, 101.568f);
        path.lineTo(322.507f, 103.068f);
        path.quadTo(322.757f, 105.168f, 322.407f, 110.168f);
        path.quadTo(322.007f, 115.068f, 322.307f, 117.468f);
        path.quadTo(322.457f, 118.368f, 323.807f, 121.168f);
        path.quadTo(325.157f, 123.918f, 325.257f, 124.818f);
        path.quadTo(325.407f, 125.818f, 325.007f, 125.768f);
        path.lineTo(324.507f, 125.518f);
        path.lineTo(323.657f, 124.868f);
        path.lineTo(322.007f, 124.618f);
        path.quadTo(321.007f, 124.768f, 320.807f, 125.018f);
        path.lineTo(320.807f, 125.268f);
        path.quadTo(320.957f, 126.418f, 319.857f, 128.168f);
        path.lineTo(319.657f, 127.768f);
        path.lineTo(319.207f, 127.618f);
        path.lineTo(318.607f, 123.418f);
        path.quadTo(317.957f, 121.318f, 314.607f, 122.418f);
        path.lineTo(314.557f, 122.068f);
        path.lineTo(316.157f, 119.768f);
        path.lineTo(317.757f, 117.268f);
        path.lineTo(318.107f, 117.518f);
        path.quadTo(318.307f, 118.968f, 318.657f, 119.218f);
        path.lineTo(318.907f, 118.418f);
        path.quadTo(318.107f, 113.668f, 318.257f, 109.468f);
        path.quadTo(318.515f, 104.039f, 320.357f, 100.218f);
        path.close();
        path.moveTo(323.625f, 110.622f);
        path.quadTo(323.925f, 106.222f, 323.475f, 103.322f);
        path.quadTo(322.275f, 94.1718f, 319.975f, 98.3218f);
        path.quadTo(318.075f, 101.772f, 317.375f, 108.272f);
        path.quadTo(317.225f, 109.822f, 317.375f, 112.072f);
        path.lineTo(317.575f, 115.822f);
        path.lineTo(314.875f, 119.522f);
        path.quadTo(312.675f, 122.472f, 312.875f, 123.622f);
        path.quadTo(312.975f, 124.722f, 313.375f, 124.822f);
        path.lineTo(314.925f, 124.822f);
        path.lineTo(316.125f, 123.972f);
        path.lineTo(317.375f, 123.772f);
        path.quadTo(317.925f, 124.822f, 317.625f, 127.422f);
        path.quadTo(317.875f, 129.572f, 320.825f, 129.772f);
        path.quadTo(321.675f, 129.022f, 322.075f, 127.672f);
        path.lineTo(322.175f, 126.022f);
        path.lineTo(323.275f, 126.822f);
        path.quadTo(323.975f, 127.272f, 324.975f, 127.122f);
        path.quadTo(325.925f, 127.022f, 326.375f, 126.472f);
        path.lineTo(326.775f, 125.922f);
        path.quadTo(326.225f, 122.122f, 325.075f, 120.572f);
        path.quadTo(323.875f, 119.022f, 323.625f, 117.322f);
        path.quadTo(323.257f, 114.903f, 323.625f, 110.622f);
        path.close();
        path.moveTo(304.291f, 101.691f);
        path.lineTo(304.141f, 101.641f);
        path.lineTo(304.391f, 100.591f);
        path.quadTo(304.941f, 99.8411f, 309.391f, 101.591f);
        path.quadTo(308.441f, 104.291f, 306.041f, 104.591f);
        path.quadTo(304.191f, 104.891f, 302.941f, 103.541f);
        path.lineTo(303.641f, 103.691f);
        path.lineTo(304.191f, 103.091f);
        path.quadTo(304.341f, 103.991f, 304.741f, 104.141f);
        path.lineTo(305.691f, 104.341f);
        path.lineTo(306.691f, 103.391f);
        path.lineTo(306.641f, 101.941f);
        path.quadTo(306.441f, 101.691f, 305.491f, 101.591f);
        path.lineTo(304.691f, 101.591f);
        path.lineTo(304.291f, 101.691f);
        path.close();
        path.moveTo(305.395f, 99.8497f);
        path.quadTo(303.645f, 100.4f, 302.345f, 101.4f);
        path.quadTo(300.895f, 102.5f, 301.045f, 103.35f);
        path.quadTo(301.245f, 104.9f, 302.995f, 105.55f);
        path.lineTo(306.895f, 105.8f);
        path.quadTo(308.595f, 105.6f, 309.645f, 104.6f);
        path.quadTo(310.795f, 103.6f, 310.595f, 102.1f);
        path.quadTo(310.091f, 98.5147f, 305.395f, 99.8497f);
        path.close();
        path.moveTo(306.823f, 113.706f);
        path.lineTo(306.622f, 113.506f);
        path.lineTo(305.272f, 115.106f);
        path.quadTo(304.322f, 116.406f, 304.322f, 117.156f);
        path.quadTo(304.322f, 117.806f, 304.472f, 117.856f);
        path.lineTo(304.772f, 117.856f);
        path.lineTo(306.322f, 115.706f);
        path.lineTo(306.872f, 114.356f);
        path.lineTo(306.823f, 113.706f);
        path.close();
        path.moveTo(303.186f, 113.476f);
        path.lineTo(303.086f, 112.826f);
        path.lineTo(302.986f, 113.026f);
        path.quadTo(302.086f, 113.526f, 301.286f, 114.726f);
        path.quadTo(300.686f, 115.726f, 300.686f, 116.076f);
        path.quadTo(300.686f, 117.276f, 300.836f, 116.676f);
        path.lineTo(301.536f, 116.676f);
        path.lineTo(302.836f, 115.076f);
        path.quadTo(303.186f, 114.351f, 303.186f, 113.476f);
        path.close();
        path.moveTo(298.812f, 127.24f);
        path.lineTo(298.812f, 127.54f);
        path.lineTo(298.662f, 127.44f);
        path.lineTo(297.912f, 126.99f);
        path.lineTo(297.962f, 126.49f);
        path.quadTo(298.26f, 127.24f, 298.812f, 127.24f);
        path.close();
        path.moveTo(298.905f, 128.852f);
        path.lineTo(299.005f, 130.552f);
        path.lineTo(299.155f, 131.252f);
        path.lineTo(298.055f, 130.452f);
        path.lineTo(298.604f, 129.352f);
        path.quadTo(298.055f, 129.352f, 297.505f, 129.652f);
        path.lineTo(297.455f, 129.552f);
        path.lineTo(297.755f, 128.052f);
        path.lineTo(298.905f, 128.852f);
        path.close();
        path.moveTo(301.436f, 131.476f);
        path.lineTo(301.436f, 131.526f);
        path.lineTo(301.336f, 131.476f);
        path.lineTo(300.936f, 131.326f);
        path.lineTo(300.536f, 131.376f);
        path.lineTo(300.536f, 129.926f);
        path.lineTo(301.436f, 131.476f);
        path.close();
        path.moveTo(301.667f, 132.212f);
        path.lineTo(301.767f, 132.012f);
        path.lineTo(301.967f, 132.262f);
        path.lineTo(301.667f, 132.212f);
        path.close();
        path.moveTo(301.344f, 133.041f);
        path.lineTo(301.494f, 132.741f);
        path.lineTo(302.194f, 132.641f);
        path.lineTo(302.244f, 132.691f);
        path.lineTo(302.344f, 132.891f);
        path.lineTo(302.344f, 132.941f);
        path.lineTo(301.794f, 133.091f);
        path.lineTo(301.344f, 133.041f);
        path.close();
        path.moveTo(299.227f, 133.179f);
        path.lineTo(299.527f, 133.179f);
        path.lineTo(299.727f, 133.329f);
        path.lineTo(299.527f, 133.529f);
        path.lineTo(299.027f, 133.229f);
        path.lineTo(299.227f, 133.179f);
        path.close();
        path.moveTo(301.206f, 134.468f);
        path.lineTo(302.506f, 134.468f);
        path.lineTo(302.906f, 135.518f);
        path.lineTo(300.656f, 134.218f);
        path.lineTo(300.656f, 134.168f);
        path.lineTo(301.206f, 134.468f);
        path.close();
        path.moveTo(305.165f, 131.568f);
        path.lineTo(305.065f, 131.568f);
        path.lineTo(304.915f, 131.418f);
        path.lineTo(305.065f, 131.468f);
        path.lineTo(305.165f, 131.568f);
        path.close();
        path.moveTo(305.165f, 136.678f);
        path.lineTo(304.615f, 135.628f);
        path.quadTo(307.515f, 138.578f, 311.315f, 140.478f);
        path.lineTo(311.115f, 142.978f);
        path.lineTo(311.115f, 144.728f);
        path.quadTo(311.165f, 146.678f, 311.765f, 148.278f);
        path.quadTo(312.715f, 150.678f, 314.665f, 151.978f);
        path.quadTo(314.765f, 153.878f, 315.665f, 157.678f);
        path.quadTo(316.565f, 161.978f, 316.565f, 164.178f);
        path.lineTo(316.465f, 165.828f);
        path.lineTo(316.315f, 166.728f);
        path.quadTo(306.665f, 157.028f, 304.215f, 150.978f);
        path.quadTo(307.265f, 149.728f, 308.215f, 148.078f);
        path.quadTo(308.765f, 147.178f, 308.765f, 145.228f);
        path.quadTo(308.765f, 143.628f, 306.415f, 139.178f);
        path.lineTo(305.615f, 137.578f);
        path.quadTo(306.115f, 137.478f, 306.165f, 137.178f);
        path.lineTo(305.165f, 136.678f);
        path.close();
        path.moveTo(307.053f, 134.284f);
        path.lineTo(307.053f, 134.234f);
        path.lineTo(307.703f, 134.134f);
        path.lineTo(309.453f, 135.384f);
        path.lineTo(309.703f, 135.534f);
        path.lineTo(307.603f, 135.284f);
        path.lineTo(307.653f, 135.484f);
        path.quadTo(308.803f, 135.984f, 310.853f, 137.134f);
        path.lineTo(311.703f, 137.434f);
        path.lineTo(311.503f, 138.834f);
        path.lineTo(311.403f, 139.434f);
        path.quadTo(308.753f, 137.784f, 306.453f, 135.234f);
        path.lineTo(306.753f, 135.284f);
        path.lineTo(307.753f, 135.084f);
        path.quadTo(307.753f, 134.984f, 307.603f, 134.984f);
        path.lineTo(307.053f, 134.284f);
        path.close();
        path.moveTo(312.439f, 133.271f);
        path.lineTo(312.439f, 133.371f);
        path.lineTo(312.289f, 133.371f);
        path.lineTo(312.439f, 133.271f);
        path.close();
        path.moveTo(315.661f, 134.882f);
        path.lineTo(313.461f, 132.782f);
        path.quadTo(317.461f, 130.832f, 317.911f, 131.932f);
        path.lineTo(318.261f, 133.132f);
        path.quadTo(318.611f, 133.782f, 319.861f, 133.682f);
        path.lineTo(319.811f, 134.482f);
        path.quadTo(319.811f, 136.082f, 319.961f, 135.432f);
        path.lineTo(320.411f, 135.432f);
        path.lineTo(320.761f, 133.532f);
        path.quadTo(321.761f, 133.182f, 322.661f, 132.532f);
        path.lineTo(323.061f, 132.182f);
        path.lineTo(326.061f, 132.632f);
        path.lineTo(327.261f, 134.682f);
        path.lineTo(326.011f, 135.282f);
        path.lineTo(325.061f, 135.732f);
        path.lineTo(324.611f, 135.832f);
        path.lineTo(322.411f, 136.432f);
        path.lineTo(322.361f, 136.282f);
        path.lineTo(321.711f, 136.282f);
        path.lineTo(321.711f, 136.632f);
        path.lineTo(321.011f, 136.732f);
        path.lineTo(320.111f, 136.832f);
        path.lineTo(319.961f, 135.982f);
        path.lineTo(319.811f, 136.282f);
        path.lineTo(319.561f, 136.782f);
        path.lineTo(319.311f, 136.782f);
        path.quadTo(317.457f, 136.401f, 315.661f, 134.882f);
        path.close();
        path.moveTo(328.459f, 134.008f);
        path.lineTo(327.509f, 132.908f);
        path.lineTo(327.359f, 132.808f);
        path.lineTo(329.409f, 133.058f);
        path.lineTo(329.409f, 133.258f);
        path.lineTo(328.459f, 134.008f);
        path.close();
        path.moveTo(330.254f, 137.828f);
        path.lineTo(330.254f, 137.728f);
        path.quadTo(331.504f, 139.528f, 332.004f, 141.328f);
        path.lineTo(329.004f, 141.978f);
        path.lineTo(330.254f, 137.828f);
        path.close();
        path.moveTo(327.17f, 137.828f);
        path.lineTo(327.97f, 136.978f);
        path.lineTo(329.27f, 135.828f);
        path.lineTo(329.07f, 137.778f);
        path.lineTo(327.17f, 137.828f);
        path.close();
        path.moveTo(327.86f, 138.611f);
        path.lineTo(327.36f, 138.461f);
        path.quadTo(326.96f, 139.011f, 326.06f, 139.411f);
        path.lineTo(325.91f, 139.511f);
        path.lineTo(325.91f, 139.211f);
        path.lineTo(326.91f, 138.111f);
        path.lineTo(329.01f, 137.911f);
        path.lineTo(328.461f, 140.061f);
        path.lineTo(327.51f, 142.211f);
        path.lineTo(327.111f, 142.211f);
        path.lineTo(326.061f, 142.311f);
        path.lineTo(326.011f, 141.061f);
        path.lineTo(328.611f, 139.111f);
        path.lineTo(327.86f, 138.611f);
        path.close();
        path.moveTo(327.538f, 145.194f);
        path.lineTo(328.388f, 143.544f);
        path.lineTo(332.338f, 143.294f);
        path.lineTo(332.038f, 146.144f);
        path.quadTo(330.438f, 151.844f, 320.638f, 151.844f);
        path.quadTo(317.488f, 151.844f, 315.538f, 150.594f);
        path.lineTo(315.188f, 148.294f);
        path.lineTo(314.738f, 149.644f);
        path.lineTo(314.688f, 149.944f);
        path.lineTo(314.188f, 149.394f);
        path.quadTo(312.788f, 147.694f, 312.788f, 145.294f);
        path.lineTo(312.838f, 144.094f);
        path.lineTo(312.888f, 143.794f);
        path.quadTo(314.888f, 146.294f, 315.688f, 146.944f);
        path.quadTo(317.338f, 148.294f, 319.988f, 148.294f);
        path.quadTo(325.697f, 148.278f, 327.538f, 145.194f);
        path.close();
        path.moveTo(322.843f, 138.657f);
        path.lineTo(322.893f, 138.657f);
        path.lineTo(322.643f, 138.707f);
        path.lineTo(322.643f, 138.657f);
        path.lineTo(322.843f, 138.657f);
        path.close();
        path.moveTo(321.692f, 138.657f);
        path.lineTo(321.692f, 138.957f);
        path.lineTo(320.742f, 139.207f);
        path.lineTo(319.992f, 139.307f);
        path.lineTo(320.092f, 138.557f);
        path.lineTo(321.692f, 138.657f);
        path.close();
        path.moveTo(324.776f, 141.695f);
        path.lineTo(324.826f, 141.695f);
        path.lineTo(324.776f, 142.445f);
        path.lineTo(322.826f, 142.495f);
        path.lineTo(322.776f, 141.645f);
        path.lineTo(324.776f, 141.695f);
        path.close();
        path.moveTo(318.654f, 139.348f);
        path.lineTo(317.453f, 139.348f);
        path.lineTo(316.253f, 138.598f);
        path.lineTo(314.653f, 137.698f);
        path.lineTo(315.753f, 137.648f);
        path.lineTo(318.903f, 138.448f);
        path.lineTo(318.654f, 139.348f);
        path.close();
        path.moveTo(318.055f, 141.235f);
        path.lineTo(317.805f, 141.985f);
        path.quadTo(315.505f, 141.485f, 313.505f, 140.535f);
        path.lineTo(313.355f, 139.785f);
        path.lineTo(314.905f, 140.385f);
        path.quadTo(316.122f, 140.913f, 318.055f, 141.235f);
        path.close();
        path.moveTo(319.574f, 141.465f);
        path.lineTo(321.524f, 141.615f);
        path.lineTo(321.474f, 142.465f);
        path.lineTo(319.324f, 142.215f);
        path.lineTo(319.474f, 141.715f);
        path.lineTo(319.574f, 141.465f);
        path.close();
        path.moveTo(318.792f, 146.667f);
        path.lineTo(318.442f, 146.667f);
        path.quadTo(318.692f, 144.717f, 319.192f, 142.917f);
        path.lineTo(321.392f, 143.267f);
        path.lineTo(321.292f, 145.567f);
        path.lineTo(321.292f, 146.417f);
        path.lineTo(318.792f, 146.667f);
        path.close();
        path.moveTo(324.822f, 144.826f);
        path.lineTo(324.872f, 145.076f);
        path.quadTo(323.972f, 145.626f, 322.972f, 145.976f);
        path.lineTo(322.822f, 143.376f);
        path.lineTo(324.772f, 143.526f);
        path.lineTo(324.822f, 144.826f);
        path.close();
        path.moveTo(326.065f, 144.089f);
        path.lineTo(326.065f, 143.589f);
        path.lineTo(326.565f, 143.589f);
        path.lineTo(326.065f, 144.089f);
        path.close();
        path.moveTo(325.605f, 153.803f);
        path.quadTo(325.055f, 153.253f, 324.105f, 153.103f);
        path.quadTo(328.555f, 152.303f, 330.705f, 149.303f);
        path.lineTo(329.505f, 151.953f);
        path.quadTo(328.555f, 154.403f, 327.705f, 155.253f);
        path.lineTo(326.605f, 154.953f);
        path.lineTo(325.605f, 153.803f);
        path.close();
        path.moveTo(316.904f, 146.207f);
        path.quadTo(315.404f, 145.307f, 314.354f, 142.957f);
        path.lineTo(313.804f, 141.557f);
        path.lineTo(317.604f, 142.607f);
        path.quadTo(316.95f, 145.102f, 316.904f, 146.207f);
        path.close();
        path.moveTo(327.216f, 170.743f);
        path.lineTo(326.866f, 170.743f);
        path.lineTo(327.016f, 168.343f);
        path.lineTo(327.366f, 169.193f);
        path.quadTo(327.538f, 170.099f, 327.216f, 170.743f);
        path.close();
        path.moveTo(326.894f, 167.843f);
        path.lineTo(326.444f, 167.043f);
        path.lineTo(326.244f, 166.093f);
        path.lineTo(326.244f, 165.943f);
        path.lineTo(326.894f, 167.843f);
        path.close();
        path.moveTo(323.809f, 161.675f);
        path.lineTo(324.009f, 161.725f);
        path.lineTo(324.609f, 163.075f);
        path.lineTo(323.859f, 163.025f);
        path.lineTo(323.659f, 162.875f);
        path.lineTo(323.809f, 161.675f);
        path.close();
        path.moveTo(321.6f, 170.099f);
        path.lineTo(321.6f, 169.999f);
        path.quadTo(322.1f, 171.149f, 321.75f, 173.349f);
        path.lineTo(321.15f, 172.849f);
        path.lineTo(321.0f, 172.499f);
        path.lineTo(321.6f, 170.099f);
        path.close();
        path.moveTo(324.546f, 174.15f);
        path.lineTo(324.346f, 174.2f);
        path.lineTo(324.346f, 171.85f);
        path.lineTo(324.496f, 170.0f);
        path.quadTo(324.73f, 171.434f, 324.546f, 174.15f);
        path.close();
        path.moveTo(319.482f, 174.702f);
        path.lineTo(320.982f, 178.102f);
        path.quadTo(323.432f, 183.452f, 325.532f, 185.852f);
        path.lineTo(322.682f, 186.102f);
        path.lineTo(319.732f, 186.352f);
        path.lineTo(319.682f, 183.952f);
        path.lineTo(319.482f, 174.702f);
        path.close();
        path.moveTo(328.965f, 172.493f);
        path.lineTo(329.165f, 173.243f);
        path.lineTo(329.665f, 173.643f);
        path.quadTo(330.065f, 176.593f, 331.365f, 183.293f);
        path.lineTo(331.515f, 186.093f);
        path.lineTo(327.015f, 185.843f);
        path.lineTo(327.015f, 185.343f);
        path.quadTo(327.015f, 183.343f, 326.515f, 181.743f);
        path.quadTo(325.915f, 180.393f, 325.815f, 179.743f);
        path.quadTo(325.467f, 177.833f, 328.965f, 172.493f);
        path.close();
        path.moveTo(367.773f, 139.163f);
        path.lineTo(367.023f, 139.313f);
        path.lineTo(366.273f, 136.463f);
        path.quadTo(367.273f, 136.613f, 367.773f, 136.963f);
        path.lineTo(367.773f, 139.163f);
        path.close();
        path.moveTo(363.952f, 145.792f);
        path.lineTo(363.852f, 146.792f);
        path.lineTo(362.152f, 146.393f);
        path.lineTo(362.152f, 142.743f);
        path.quadTo(363.952f, 145.47f, 363.952f, 145.792f);
        path.close();
        path.moveTo(356.126f, 141.327f);
        path.lineTo(356.876f, 140.577f);
        path.quadTo(357.276f, 141.227f, 357.476f, 142.927f);
        path.quadTo(357.576f, 144.477f, 358.776f, 145.727f);
        path.quadTo(359.876f, 143.277f, 359.926f, 139.577f);
        path.lineTo(360.226f, 143.127f);
        path.lineTo(360.376f, 145.877f);
        path.lineTo(360.276f, 145.877f);
        path.lineTo(359.626f, 146.027f);
        path.quadTo(359.826f, 146.777f, 360.326f, 147.377f);
        path.lineTo(360.276f, 147.977f);
        path.quadTo(359.326f, 147.577f, 358.226f, 146.077f);
        path.quadTo(357.126f, 144.627f, 356.226f, 144.277f);
        path.quadTo(355.926f, 144.727f, 355.626f, 146.227f);
        path.lineTo(354.976f, 148.277f);
        path.lineTo(354.026f, 145.477f);
        path.quadTo(353.426f, 143.677f, 352.726f, 143.127f);
        path.quadTo(351.676f, 143.977f, 351.776f, 146.377f);
        path.quadTo(351.776f, 148.827f, 350.626f, 149.727f);
        path.quadTo(350.226f, 148.927f, 349.826f, 148.927f);
        path.lineTo(349.826f, 147.277f);
        path.lineTo(350.476f, 147.627f);
        path.lineTo(351.426f, 146.877f);
        path.quadTo(351.526f, 145.377f, 352.076f, 142.627f);
        path.lineTo(352.726f, 138.327f);
        path.quadTo(352.976f, 138.827f, 353.776f, 138.727f);
        path.lineTo(354.676f, 138.477f);
        path.lineTo(354.676f, 141.877f);
        path.quadTo(355.435f, 141.88f, 356.126f, 141.327f);
        path.close();
        path.moveTo(361.65f, 149.567f);
        path.lineTo(362.15f, 149.067f);
        path.lineTo(362.15f, 148.617f);
        path.lineTo(363.5f, 149.117f);
        path.lineTo(362.85f, 153.767f);
        path.quadTo(362.1f, 159.167f, 363.3f, 161.767f);
        path.lineTo(363.6f, 161.417f);
        path.quadTo(363.7f, 158.417f, 364.5f, 152.067f);
        path.lineTo(364.8f, 149.417f);
        path.lineTo(367.8f, 149.817f);
        path.lineTo(368.0f, 150.917f);
        path.quadTo(368.65f, 154.417f, 369.05f, 154.967f);
        path.lineTo(369.7f, 154.217f);
        path.lineTo(369.0f, 149.917f);
        path.lineTo(373.7f, 150.167f);
        path.lineTo(374.4f, 153.867f);
        path.lineTo(374.9f, 156.267f);
        path.lineTo(374.5f, 156.267f);
        path.lineTo(375.1f, 157.717f);
        path.lineTo(375.3f, 159.717f);
        path.quadTo(375.3f, 163.567f, 373.65f, 167.317f);
        path.lineTo(372.55f, 169.967f);
        path.lineTo(371.95f, 169.767f);
        path.lineTo(372.1f, 170.267f);
        path.lineTo(372.35f, 170.467f);
        path.quadTo(371.95f, 171.717f, 371.95f, 172.267f);
        path.quadTo(371.95f, 173.217f, 372.1f, 173.267f);
        path.lineTo(372.9f, 173.317f);
        path.lineTo(373.25f, 173.167f);
        path.quadTo(371.15f, 176.667f, 367.95f, 176.667f);
        path.quadTo(364.4f, 176.667f, 362.1f, 174.267f);
        path.lineTo(362.8f, 173.767f);
        path.lineTo(361.45f, 166.167f);
        path.quadTo(361.0f, 163.367f, 360.9f, 160.617f);
        path.lineTo(361.05f, 160.467f);
        path.lineTo(360.9f, 160.517f);
        path.lineTo(360.9f, 159.367f);
        path.quadTo(360.9f, 158.117f, 361.2f, 155.817f);
        path.quadTo(361.7f, 152.867f, 362.3f, 152.117f);
        path.quadTo(362.1f, 151.667f, 360.7f, 151.317f);
        path.lineTo(360.3f, 152.117f);
        path.lineTo(361.4f, 149.717f);
        path.lineTo(361.65f, 149.567f);
        path.close();
        path.moveTo(371.271f, 154.999f);
        path.lineTo(371.171f, 155.199f);
        path.lineTo(369.071f, 155.099f);
        path.lineTo(368.271f, 155.199f);
        path.lineTo(368.271f, 157.899f);
        path.lineTo(368.621f, 158.449f);
        path.lineTo(370.871f, 158.249f);
        path.lineTo(370.921f, 157.949f);
        path.lineTo(370.971f, 157.899f);
        path.lineTo(371.171f, 157.249f);
        path.lineTo(371.321f, 155.999f);
        path.lineTo(371.271f, 154.999f);
        path.close();
        path.moveTo(370.857f, 161.49f);
        path.lineTo(370.657f, 161.79f);
        path.quadTo(369.757f, 161.69f, 369.157f, 162.24f);
        path.quadTo(368.407f, 162.74f, 368.407f, 163.54f);
        path.quadTo(368.407f, 164.54f, 369.057f, 164.44f);
        path.lineTo(369.707f, 164.19f);
        path.lineTo(370.357f, 163.89f);
        path.lineTo(370.857f, 163.74f);
        path.lineTo(370.957f, 162.49f);
        path.lineTo(370.857f, 161.49f);
        path.close();
        path.moveTo(359.394f, 169.224f);
        path.lineTo(359.494f, 169.174f);
        path.lineTo(359.594f, 169.774f);
        path.lineTo(359.394f, 169.224f);
        path.close();
        path.moveTo(355.113f, 180.871f);
        path.lineTo(355.363f, 184.471f);
        path.lineTo(354.963f, 181.671f);
        path.lineTo(355.113f, 180.871f);
        path.close();
        path.moveTo(376.151f, 147.634f);
        path.lineTo(376.251f, 147.484f);
        path.lineTo(376.251f, 147.584f);
        path.lineTo(376.151f, 147.634f);
        path.close();
        path.moveTo(375.967f, 148.094f);
        path.lineTo(376.067f, 147.944f);
        path.lineTo(375.967f, 148.394f);
        path.lineTo(375.967f, 148.094f);
        path.close();
        path.moveTo(376.197f, 150.212f);
        path.lineTo(376.197f, 152.962f);
        path.lineTo(375.747f, 150.212f);
        path.lineTo(376.197f, 150.212f);
        path.close();
        path.moveTo(375.599f, 165.173f);
        path.lineTo(375.649f, 164.973f);
        path.lineTo(375.749f, 164.873f);
        path.lineTo(375.049f, 168.523f);
        path.lineTo(375.599f, 165.173f);
        path.close();
        path.moveTo(329.011f, 192.104f);
        path.lineTo(329.161f, 191.904f);
        path.lineTo(331.361f, 189.804f);
        path.quadTo(326.811f, 188.054f, 324.461f, 187.504f);
        path.lineTo(331.711f, 187.454f);
        path.lineTo(332.311f, 192.104f);
        path.lineTo(329.011f, 192.104f);
        path.close();
        path.moveTo(320.587f, 191.965f);
        path.lineTo(320.637f, 192.115f);
        path.lineTo(319.837f, 192.115f);
        path.lineTo(319.787f, 187.565f);
        path.lineTo(322.037f, 187.515f);
        path.lineTo(322.037f, 189.115f);
        path.quadTo(322.137f, 190.465f, 321.437f, 191.465f);
        path.lineTo(321.587f, 189.765f);
        path.lineTo(321.587f, 188.065f);
        path.lineTo(320.587f, 189.015f);
        path.quadTo(320.437f, 189.315f, 320.437f, 190.465f);
        path.quadTo(320.449f, 191.643f, 320.587f, 191.965f);
        path.close();
        path.moveTo(325.467f, 191.965f);
        path.lineTo(325.817f, 192.115f);
        path.lineTo(322.917f, 192.115f);
        path.lineTo(323.467f, 191.115f);
        path.lineTo(325.467f, 191.965f);
        path.close();
        path.moveTo(299.733f, 244.768f);
        path.lineTo(304.283f, 250.518f);
        path.quadTo(301.783f, 252.368f, 300.583f, 254.068f);
        path.lineTo(299.283f, 252.967f);
        path.quadTo(296.533f, 250.367f, 295.933f, 250.367f);
        path.quadTo(294.783f, 250.367f, 292.633f, 254.217f);
        path.quadTo(290.583f, 257.918f, 289.033f, 257.918f);
        path.lineTo(287.433f, 257.467f);
        path.lineTo(285.683f, 256.418f);
        path.quadTo(282.933f, 254.868f, 278.233f, 254.868f);
        path.quadTo(274.583f, 254.868f, 272.933f, 257.717f);
        path.lineTo(271.683f, 259.617f);
        path.quadTo(270.833f, 260.517f, 269.283f, 260.517f);
        path.quadTo(266.783f, 260.517f, 265.483f, 259.967f);
        path.lineTo(263.533f, 258.767f);
        path.quadTo(260.633f, 256.967f, 252.283f, 256.967f);
        path.quadTo(251.333f, 256.967f, 250.883f, 257.617f);
        path.lineTo(250.333f, 259.068f);
        path.quadTo(249.633f, 261.168f, 247.133f, 261.168f);
        path.quadTo(245.133f, 261.168f, 243.333f, 260.268f);
        path.quadTo(242.533f, 259.918f, 240.333f, 258.418f);
        path.quadTo(236.283f, 255.668f, 231.683f, 255.668f);
        path.quadTo(230.983f, 255.668f, 228.883f, 257.068f);
        path.lineTo(226.733f, 258.568f);
        path.quadTo(224.833f, 256.818f, 224.383f, 254.467f);
        path.quadTo(224.183f, 253.518f, 224.183f, 249.818f);
        path.quadTo(224.183f, 246.268f, 228.333f, 215.967f);
        path.lineTo(228.783f, 218.167f);
        path.lineTo(228.433f, 215.367f);
        path.lineTo(228.783f, 212.967f);
        path.quadTo(229.833f, 222.117f, 232.033f, 227.267f);
        path.quadTo(230.783f, 218.967f, 229.533f, 207.567f);
        path.lineTo(232.533f, 186.567f);
        path.lineTo(232.583f, 186.967f);
        path.lineTo(232.883f, 186.967f);
        path.lineTo(233.083f, 184.767f);
        path.lineTo(233.083f, 182.767f);
        path.lineTo(233.783f, 177.667f);
        path.lineTo(234.583f, 185.767f);
        path.quadTo(234.583f, 196.817f, 233.633f, 210.617f);
        path.quadTo(233.083f, 219.117f, 231.783f, 232.367f);
        path.quadTo(230.433f, 228.367f, 230.583f, 226.167f);
        path.lineTo(230.133f, 226.167f);
        path.lineTo(230.133f, 229.518f);
        path.lineTo(231.633f, 233.618f);
        path.lineTo(231.533f, 234.768f);
        path.lineTo(231.233f, 233.417f);
        path.lineTo(231.433f, 236.268f);
        path.lineTo(231.433f, 243.167f);
        path.lineTo(232.983f, 243.317f);
        path.quadTo(233.633f, 243.017f, 233.933f, 242.567f);
        path.lineTo(233.983f, 240.217f);
        path.lineTo(236.183f, 246.217f);
        path.lineTo(237.183f, 248.467f);
        path.lineTo(237.183f, 249.617f);
        path.lineTo(237.783f, 249.617f);
        path.quadTo(240.733f, 255.017f, 243.883f, 255.017f);
        path.quadTo(248.383f, 255.017f, 247.283f, 252.267f);
        path.lineTo(245.583f, 249.167f);
        path.lineTo(245.583f, 249.717f);
        path.quadTo(245.583f, 252.717f, 243.233f, 254.117f);
        path.quadTo(240.833f, 251.817f, 238.683f, 248.067f);
        path.quadTo(240.333f, 237.367f, 240.983f, 221.517f);
        path.lineTo(242.133f, 193.517f);
        path.lineTo(244.333f, 219.017f);
        path.quadTo(245.183f, 229.967f, 245.433f, 238.217f);
        path.quadTo(244.633f, 238.617f, 244.333f, 239.167f);
        path.quadTo(243.733f, 240.217f, 244.483f, 242.017f);
        path.lineTo(245.083f, 243.367f);
        path.lineTo(245.533f, 242.817f);
        path.lineTo(245.533f, 244.417f);
        path.lineTo(246.783f, 244.417f);
        path.quadTo(247.883f, 243.017f, 248.083f, 240.917f);
        path.lineTo(249.933f, 240.117f);
        path.quadTo(251.133f, 243.867f, 251.133f, 244.867f);
        path.quadTo(251.133f, 246.067f, 250.383f, 249.917f);
        path.quadTo(250.033f, 253.567f, 251.633f, 255.017f);
        path.quadTo(253.083f, 254.567f, 253.333f, 252.217f);
        path.quadTo(253.333f, 249.717f, 253.583f, 249.067f);
        path.quadTo(253.883f, 249.467f, 254.483f, 251.667f);
        path.quadTo(254.833f, 253.117f, 256.733f, 253.117f);
        path.quadTo(257.733f, 253.117f, 258.183f, 252.717f);
        path.lineTo(258.533f, 252.317f);
        path.lineTo(258.533f, 239.767f);
        path.lineTo(258.333f, 238.267f);
        path.lineTo(262.783f, 237.767f);
        path.quadTo(262.983f, 248.617f, 263.333f, 254.117f);
        path.lineTo(264.783f, 254.367f);
        path.lineTo(265.933f, 254.267f);
        path.lineTo(266.033f, 254.117f);
        path.lineTo(266.233f, 246.767f);
        path.lineTo(265.883f, 237.517f);
        path.lineTo(274.983f, 237.267f);
        path.lineTo(277.933f, 248.617f);
        path.lineTo(278.983f, 248.417f);
        path.lineTo(279.083f, 248.167f);
        path.quadTo(279.083f, 240.917f, 278.733f, 237.717f);
        path.lineTo(279.333f, 238.567f);
        path.quadTo(279.833f, 239.017f, 280.833f, 239.017f);
        path.lineTo(280.933f, 239.017f);
        path.quadTo(281.883f, 240.117f, 282.633f, 241.917f);
        path.quadTo(283.883f, 245.017f, 283.883f, 247.217f);
        path.lineTo(283.583f, 250.967f);
        path.lineTo(283.433f, 253.267f);
        path.lineTo(283.083f, 253.267f);
        path.quadTo(282.133f, 253.267f, 281.833f, 252.817f);
        path.lineTo(281.483f, 252.317f);
        path.lineTo(281.333f, 252.817f);
        path.lineTo(282.733f, 253.767f);
        path.lineTo(283.383f, 254.117f);
        path.lineTo(283.383f, 255.217f);
        path.lineTo(285.283f, 255.568f);
        path.lineTo(286.933f, 255.668f);
        path.quadTo(291.683f, 255.668f, 294.133f, 242.368f);
        path.quadTo(296.083f, 247.318f, 297.233f, 247.318f);
        path.quadTo(298.233f, 247.318f, 298.883f, 246.568f);
        path.lineTo(299.733f, 244.768f);
        path.close();
        path.moveTo(310.689f, 249.233f);
        path.lineTo(310.689f, 249.283f);
        path.lineTo(321.889f, 249.983f);
        path.lineTo(320.439f, 251.483f);
        path.quadTo(317.539f, 253.883f, 310.839f, 255.183f);
        path.lineTo(310.989f, 254.233f);
        path.lineTo(308.339f, 250.633f);
        path.lineTo(310.689f, 249.233f);
        path.close();
        path.moveTo(302.311f, 255.079f);
        path.quadTo(303.211f, 253.729f, 305.561f, 252.229f);
        path.lineTo(307.911f, 255.429f);
        path.lineTo(304.211f, 255.529f);
        path.quadTo(303.324f, 255.54f, 302.311f, 255.079f);
        path.close();
        path.moveTo(344.985f, 247.207f);
        path.lineTo(348.585f, 250.157f);
        path.quadTo(352.885f, 253.357f, 352.885f, 254.557f);
        path.quadTo(352.885f, 255.507f, 352.535f, 255.957f);
        path.lineTo(352.235f, 256.307f);
        path.lineTo(346.135f, 256.807f);
        path.quadTo(344.835f, 256.807f, 339.685f, 253.657f);
        path.lineTo(335.285f, 250.607f);
        path.lineTo(340.835f, 250.707f);
        path.quadTo(343.328f, 250.706f, 344.985f, 247.207f);
        path.close();
        path.moveTo(272.619f, 26.7923f);
        path.quadTo(272.319f, 24.7923f, 271.069f, 23.2923f);
        path.lineTo(270.419f, 23.2923f);
        path.lineTo(270.219f, 23.8923f);
        path.quadTo(270.069f, 24.4923f, 270.069f, 25.4423f);
        path.lineTo(270.969f, 28.2423f);
        path.lineTo(272.169f, 31.3423f);
        path.quadTo(272.819f, 30.9923f, 272.919f, 30.4923f);
        path.lineTo(272.619f, 26.7923f);
        path.close();
        path.moveTo(275.381f, 33.8817f);
        path.quadTo(275.081f, 33.3817f, 272.281f, 33.3817f);
        path.lineTo(272.181f, 33.8817f);
        path.lineTo(273.781f, 34.2317f);
        path.quadTo(275.151f, 34.2039f, 275.381f, 33.8817f);
        path.close();
        path.moveTo(261.386f, 27.6209f);
        path.lineTo(261.286f, 26.2209f);
        path.lineTo(260.936f, 25.6709f);
        path.lineTo(260.086f, 25.6709f);
        path.lineTo(259.486f, 28.2709f);
        path.quadTo(259.186f, 29.9709f, 259.186f, 30.9709f);
        path.lineTo(259.286f, 32.6209f);
        path.quadTo(259.386f, 33.1209f, 259.986f, 33.6709f);
        path.lineTo(260.486f, 33.1709f);
        path.lineTo(260.736f, 32.9209f);
        path.quadTo(260.736f, 31.9209f, 261.086f, 30.2709f);
        path.lineTo(261.886f, 31.0209f);
        path.lineTo(262.486f, 34.8709f);
        path.quadTo(263.186f, 38.3209f, 265.436f, 40.1209f);
        path.lineTo(265.736f, 39.6209f);
        path.lineTo(264.386f, 34.0709f);
        path.lineTo(263.936f, 32.5209f);
        path.lineTo(264.136f, 32.5709f);
        path.quadTo(265.886f, 33.2209f, 267.636f, 30.0209f);
        path.lineTo(267.386f, 29.4209f);
        path.lineTo(267.336f, 29.2209f);
        path.lineTo(262.086f, 29.0709f);
        path.lineTo(262.036f, 29.0209f);
        path.lineTo(261.736f, 29.0709f);
        path.lineTo(261.636f, 29.0709f);
        path.lineTo(261.286f, 29.0709f);
        path.lineTo(261.386f, 27.6209f);
        path.close();
        path.moveTo(272.849f, 40.2805f);
        path.quadTo(266.199f, 41.6305f, 262.549f, 43.8805f);
        path.quadTo(257.249f, 47.2305f, 255.349f, 53.9305f);
        path.quadTo(254.949f, 53.2305f, 255.149f, 52.0305f);
        path.quadTo(255.299f, 50.6805f, 255.099f, 50.2305f);
        path.quadTo(254.449f, 48.4805f, 247.799f, 48.4805f);
        path.quadTo(246.699f, 48.4805f, 241.549f, 50.6305f);
        path.quadTo(236.449f, 52.8305f, 231.899f, 52.8305f);
        path.quadTo(223.249f, 52.8305f, 218.149f, 43.5305f);
        path.quadTo(216.399f, 40.3805f, 215.399f, 36.7305f);
        path.quadTo(214.599f, 33.9805f, 214.599f, 32.9305f);
        path.quadTo(214.599f, 23.1805f, 225.749f, 17.5305f);
        path.quadTo(235.749f, 12.5805f, 250.349f, 12.6805f);
        path.quadTo(264.799f, 12.7305f, 274.999f, 17.7305f);
        path.quadTo(286.149f, 23.2305f, 286.149f, 32.3305f);
        path.quadTo(286.149f, 34.9805f, 284.449f, 36.6305f);
        path.quadTo(287.749f, 34.4305f, 287.749f, 32.0805f);
        path.quadTo(287.749f, 24.7805f, 282.199f, 20.3305f);
        path.quadTo(271.699f, 11.9305f, 242.649f, 12.1805f);
        path.quadTo(225.149f, 15.1305f, 217.799f, 22.0805f);
        path.quadTo(212.999f, 26.7305f, 212.999f, 32.7305f);
        path.quadTo(212.999f, 34.2305f, 213.649f, 36.8805f);
        path.quadTo(214.699f, 40.9805f, 216.699f, 44.3305f);
        path.quadTo(222.799f, 54.5805f, 235.599f, 54.5805f);
        path.quadTo(238.549f, 54.5805f, 242.899f, 52.2805f);
        path.quadTo(247.299f, 50.0805f, 251.649f, 50.0805f);
        path.quadTo(253.249f, 50.0805f, 253.699f, 52.9305f);
        path.quadTo(254.299f, 56.9805f, 254.849f, 57.9305f);
        path.quadTo(256.849f, 52.5305f, 262.499f, 48.1805f);
        path.quadTo(266.449f, 45.2805f, 273.549f, 41.9805f);
        path.lineTo(280.999f, 38.5305f);
        path.lineTo(272.849f, 40.2805f);
        path.close();
        path.moveTo(238.138f, 28.0352f);
        path.lineTo(238.938f, 26.6852f);
        path.lineTo(237.388f, 26.4852f);
        path.lineTo(237.088f, 26.5852f);
        path.quadTo(235.988f, 25.3352f, 234.938f, 25.0352f);
        path.lineTo(234.488f, 25.3852f);
        path.lineTo(235.938f, 27.8852f);
        path.lineTo(234.338f, 28.0352f);
        path.quadTo(232.888f, 28.3352f, 232.538f, 28.5852f);
        path.quadTo(232.688f, 29.0352f, 234.938f, 29.2352f);
        path.lineTo(236.138f, 28.2852f);
        path.lineTo(238.138f, 32.2852f);
        path.quadTo(238.588f, 31.9352f, 238.588f, 31.4352f);
        path.lineTo(238.738f, 31.3352f);
        path.lineTo(238.788f, 31.3352f);
        path.lineTo(240.038f, 30.1852f);
        path.lineTo(240.888f, 29.0352f);
        path.lineTo(239.488f, 29.6352f);
        path.quadTo(239.088f, 29.8352f, 238.788f, 29.9852f);
        path.quadTo(238.783f, 29.094f, 238.138f, 28.0352f);
        path.close();
        path.moveTo(236.389f, 32.8229f);
        path.lineTo(237.189f, 32.0729f);
        path.lineTo(237.039f, 31.6229f);
        path.lineTo(233.189f, 31.9229f);
        path.lineTo(233.489f, 32.4229f);
        path.lineTo(233.789f, 33.0229f);
        path.lineTo(234.939f, 33.2229f);
        path.quadTo(235.929f, 33.2372f, 236.389f, 32.8229f);
        path.close();
        path.moveTo(237.632f, 33.5594f);
        path.lineTo(237.032f, 33.5594f);
        path.lineTo(236.932f, 34.9594f);
        path.lineTo(236.832f, 36.8094f);
        path.lineTo(236.882f, 37.4594f);
        path.quadTo(234.082f, 39.1594f, 233.182f, 40.1094f);
        path.quadTo(234.582f, 40.1594f, 237.032f, 38.9094f);
        path.lineTo(237.232f, 39.9594f);
        path.lineTo(237.832f, 43.3094f);
        path.lineTo(238.582f, 43.1594f);
        path.lineTo(238.732f, 42.6094f);
        path.lineTo(238.782f, 41.2094f);
        path.lineTo(238.582f, 39.0594f);
        path.lineTo(240.932f, 40.3094f);
        path.quadTo(243.232f, 41.3594f, 244.732f, 41.3594f);
        path.quadTo(243.832f, 39.7594f, 238.782f, 38.5094f);
        path.lineTo(238.582f, 38.7594f);
        path.lineTo(238.532f, 38.1594f);
        path.quadTo(240.932f, 36.6594f, 242.632f, 35.1094f);
        path.lineTo(242.332f, 34.6594f);
        path.quadTo(241.432f, 34.8094f, 238.282f, 36.6594f);
        path.lineTo(237.632f, 33.5594f);
        path.close();
        path.moveTo(230.589f, 24.5366f);
        path.lineTo(229.939f, 24.7366f);
        path.quadTo(230.989f, 26.9866f, 231.489f, 30.2866f);
        path.lineTo(232.039f, 36.0866f);
        path.lineTo(232.539f, 36.0866f);
        path.lineTo(232.789f, 34.9366f);
        path.lineTo(232.839f, 33.2366f);
        path.quadTo(232.839f, 30.7366f, 232.489f, 28.9366f);
        path.quadTo(231.924f, 26.5621f, 230.589f, 24.5366f);
        path.close();
        path.moveTo(248.404f, 35.7691f);
        path.quadTo(248.604f, 36.1191f, 250.654f, 36.5191f);
        path.lineTo(253.854f, 36.9191f);
        path.quadTo(255.404f, 36.9191f, 254.804f, 36.7191f);
        path.lineTo(254.804f, 35.7691f);
        path.lineTo(250.954f, 35.3191f);
        path.quadTo(248.68f, 35.3548f, 248.404f, 35.7691f);
        path.close();
        path.moveTo(254.067f, 67.3951f);
        path.lineTo(253.217f, 65.9951f);
        path.lineTo(253.017f, 65.9951f);
        path.quadTo(257.967f, 64.7451f, 263.817f, 64.7451f);
        path.quadTo(275.667f, 64.7451f, 282.617f, 74.3451f);
        path.quadTo(279.767f, 72.1451f, 275.267f, 70.9951f);
        path.quadTo(270.567f, 69.7451f, 267.817f, 67.7451f);
        path.quadTo(259.217f, 64.0951f, 255.667f, 66.3451f);
        path.lineTo(254.167f, 67.5951f);
        path.lineTo(254.067f, 67.3951f);
        path.close();
        path.moveTo(247.391f, 67.8554f);
        path.quadTo(249.641f, 66.8054f, 252.091f, 66.1554f);
        path.lineTo(252.091f, 68.9554f);
        path.quadTo(250.691f, 69.6554f, 248.891f, 69.6554f);
        path.quadTo(248.141f, 69.6554f, 248.091f, 68.6554f);
        path.quadTo(248.036f, 68.0856f, 247.391f, 67.8554f);
        path.close();
        path.moveTo(242.005f, 75.9576f);
        path.lineTo(242.005f, 75.5576f);
        path.quadTo(244.205f, 73.9576f, 246.455f, 73.9576f);
        path.lineTo(247.205f, 74.0576f);
        path.lineTo(247.505f, 75.4076f);
        path.lineTo(247.105f, 75.4076f);
        path.quadTo(246.105f, 75.4076f, 244.155f, 76.0576f);
        path.lineTo(241.655f, 77.0076f);
        path.quadTo(242.005f, 76.556f, 242.005f, 75.9576f);
        path.close();
        path.moveTo(224.973f, 75.8195f);
        path.quadTo(225.823f, 76.5695f, 225.823f, 78.5195f);
        path.lineTo(225.823f, 80.5195f);
        path.quadTo(225.323f, 82.3195f, 222.923f, 82.3195f);
        path.lineTo(220.273f, 81.9195f);
        path.lineTo(218.723f, 81.5195f);
        path.lineTo(218.873f, 83.5195f);
        path.quadTo(218.973f, 85.0195f, 218.773f, 86.0195f);
        path.quadTo(218.473f, 87.1695f, 217.773f, 87.9195f);
        path.quadTo(215.573f, 82.4195f, 211.973f, 77.5195f);
        path.quadTo(205.373f, 71.8695f, 197.073f, 71.0695f);
        path.quadTo(189.173f, 70.3195f, 181.923f, 74.1694f);
        path.quadTo(174.573f, 77.9695f, 170.123f, 85.2695f);
        path.quadTo(165.423f, 93.1195f, 165.423f, 103.069f);
        path.lineTo(165.773f, 109.569f);
        path.lineTo(165.873f, 110.419f);
        path.lineTo(165.423f, 111.019f);
        path.lineTo(165.973f, 111.119f);
        path.lineTo(166.623f, 114.819f);
        path.quadTo(165.423f, 116.069f, 165.423f, 116.819f);
        path.quadTo(165.423f, 117.419f, 168.223f, 120.719f);
        path.lineTo(169.323f, 123.569f);
        path.quadTo(170.123f, 125.469f, 171.123f, 127.219f);
        path.lineTo(170.973f, 127.569f);
        path.quadTo(170.223f, 129.119f, 167.523f, 129.469f);
        path.quadTo(167.923f, 129.769f, 168.323f, 130.769f);
        path.quadTo(166.573f, 129.419f, 163.373f, 129.819f);
        path.lineTo(168.373f, 134.119f);
        path.quadTo(169.223f, 134.969f, 169.423f, 135.919f);
        path.lineTo(168.823f, 135.919f);
        path.lineTo(168.723f, 137.169f);
        path.lineTo(166.673f, 138.119f);
        path.lineTo(166.573f, 137.819f);
        path.lineTo(165.773f, 137.819f);
        path.lineTo(165.373f, 138.819f);
        path.lineTo(163.273f, 140.319f);
        path.quadTo(161.723f, 141.569f, 160.673f, 142.819f);
        path.quadTo(159.723f, 142.019f, 159.123f, 140.469f);
        path.quadTo(161.973f, 140.069f, 163.723f, 137.719f);
        path.quadTo(165.123f, 135.769f, 165.123f, 134.319f);
        path.lineTo(164.923f, 132.669f);
        path.lineTo(164.273f, 131.869f);
        path.quadTo(163.523f, 132.369f, 163.523f, 132.869f);
        path.quadTo(163.323f, 134.719f, 161.423f, 136.669f);
        path.quadTo(160.173f, 137.969f, 158.673f, 138.469f);
        path.lineTo(158.223f, 136.569f);
        path.quadTo(157.773f, 136.969f, 156.773f, 138.769f);
        path.quadTo(155.773f, 138.769f, 155.523f, 138.419f);
        path.lineTo(155.523f, 138.019f);
        path.quadTo(157.223f, 134.069f, 159.173f, 131.769f);
        path.quadTo(159.973f, 130.869f, 159.973f, 127.669f);
        path.quadTo(159.973f, 124.269f, 159.373f, 121.169f);
        path.quadTo(158.223f, 115.219f, 155.323f, 115.219f);
        path.quadTo(152.673f, 115.219f, 151.973f, 122.119f);
        path.quadTo(151.573f, 125.619f, 151.573f, 129.819f);
        path.lineTo(148.873f, 126.269f);
        path.quadTo(146.523f, 123.569f, 143.873f, 123.569f);
        path.lineTo(142.873f, 123.619f);
        path.lineTo(143.073f, 123.719f);
        path.quadTo(143.223f, 129.369f, 149.173f, 137.319f);
        path.lineTo(148.723f, 139.569f);
        path.quadTo(147.673f, 142.669f, 141.123f, 142.669f);
        path.quadTo(139.323f, 142.669f, 138.073f, 140.919f);
        path.quadTo(137.173f, 139.619f, 136.973f, 138.319f);
        path.quadTo(139.623f, 138.119f, 140.373f, 137.519f);
        path.quadTo(140.823f, 137.069f, 140.823f, 135.819f);
        path.lineTo(140.773f, 134.769f);
        path.lineTo(140.373f, 134.669f);
        path.lineTo(137.573f, 134.669f);
        path.lineTo(136.773f, 135.619f);
        path.quadTo(136.023f, 136.269f, 135.073f, 136.269f);
        path.quadTo(132.673f, 136.269f, 131.923f, 135.469f);
        path.quadTo(131.573f, 134.569f, 131.173f, 134.319f);
        path.quadTo(132.373f, 132.219f, 135.273f, 128.869f);
        path.quadTo(138.623f, 125.019f, 140.823f, 121.619f);
        path.quadTo(139.123f, 121.369f, 137.323f, 121.619f);
        path.quadTo(135.823f, 121.869f, 135.073f, 121.619f);
        path.lineTo(135.073f, 117.819f);
        path.quadTo(136.023f, 116.319f, 139.723f, 113.319f);
        path.quadTo(143.973f, 109.919f, 145.673f, 109.919f);
        path.quadTo(145.773f, 109.919f, 146.673f, 110.619f);
        path.quadTo(148.023f, 110.869f, 150.423f, 108.769f);
        path.quadTo(147.873f, 106.219f, 145.773f, 106.219f);
        path.lineTo(144.823f, 106.319f);
        path.quadTo(144.523f, 106.219f, 144.523f, 105.519f);
        path.quadTo(144.523f, 101.519f, 148.573f, 98.0694f);
        path.quadTo(152.223f, 94.8694f, 158.373f, 93.1694f);
        path.lineTo(158.373f, 94.3694f);
        path.lineTo(160.723f, 94.8194f);
        path.quadTo(162.323f, 94.8194f, 162.523f, 94.3694f);
        path.lineTo(162.423f, 93.8694f);
        path.lineTo(161.123f, 92.4694f);
        path.lineTo(161.423f, 92.4194f);
        path.lineTo(161.023f, 92.3694f);
        path.quadTo(159.973f, 91.1694f, 159.973f, 90.6694f);
        path.quadTo(159.973f, 89.2694f, 161.723f, 87.1694f);
        path.lineTo(166.423f, 81.8694f);
        path.quadTo(164.923f, 80.6694f, 163.973f, 78.9194f);
        path.quadTo(163.173f, 77.4694f, 163.173f, 76.5694f);
        path.quadTo(163.173f, 75.5194f, 164.323f, 74.1694f);
        path.quadTo(166.123f, 72.0194f, 169.323f, 72.0194f);
        path.lineTo(171.173f, 72.4694f);
        path.lineTo(172.173f, 72.5694f);
        path.lineTo(172.173f, 71.5694f);
        path.lineTo(170.223f, 69.6694f);
        path.lineTo(171.973f, 67.6694f);
        path.quadTo(174.223f, 65.7694f, 177.123f, 65.7694f);
        path.quadTo(178.073f, 65.7694f, 179.923f, 66.5194f);
        path.lineTo(182.273f, 67.3694f);
        path.lineTo(183.073f, 66.6194f);
        path.lineTo(182.373f, 66.0694f);
        path.quadTo(181.773f, 65.6194f, 181.773f, 64.6694f);
        path.quadTo(181.773f, 63.3194f, 183.723f, 62.2694f);
        path.quadTo(186.773f, 60.4694f, 193.323f, 60.4694f);
        path.quadTo(196.523f, 60.4694f, 196.873f, 62.6694f);
        path.quadTo(197.073f, 63.8694f, 196.873f, 65.4694f);
        path.lineTo(198.923f, 65.9694f);
        path.lineTo(200.273f, 65.7194f);
        path.lineTo(200.423f, 65.4694f);
        path.quadTo(200.523f, 64.1694f, 200.273f, 63.3194f);
        path.quadTo(199.823f, 62.1194f, 198.623f, 61.1194f);
        path.quadTo(198.873f, 60.8194f, 201.473f, 60.6194f);
        path.lineTo(205.223f, 60.4694f);
        path.quadTo(209.023f, 60.4694f, 210.123f, 63.2694f);
        path.quadTo(210.623f, 64.6694f, 210.723f, 66.6194f);
        path.quadTo(211.923f, 66.2194f, 212.123f, 65.8694f);
        path.lineTo(212.123f, 65.3694f);
        path.lineTo(218.073f, 65.0194f);
        path.quadTo(219.223f, 65.0194f, 220.023f, 66.9194f);
        path.quadTo(220.623f, 68.4194f, 220.623f, 69.3194f);
        path.quadTo(220.623f, 70.4194f, 220.173f, 70.8194f);
        path.lineTo(218.073f, 72.5694f);
        path.quadTo(223.684f, 74.6686f, 224.973f, 75.8195f);
        path.close();
        path.moveTo(231.555f, 81.6659f);
        path.quadTo(230.455f, 83.3159f, 229.455f, 85.4159f);
        path.quadTo(227.355f, 90.1159f, 226.405f, 94.4659f);
        path.lineTo(225.905f, 94.3659f);
        path.lineTo(225.755f, 93.4659f);
        path.quadTo(228.105f, 84.6659f, 231.605f, 79.7659f);
        path.lineTo(232.905f, 78.1659f);
        path.quadTo(231.655f, 80.0159f, 231.555f, 81.5159f);
        path.lineTo(231.555f, 81.6659f);
        path.close();
        path.moveTo(229.484f, 89.5379f);
        path.lineTo(229.484f, 89.3879f);
        path.quadTo(229.734f, 91.3879f, 229.284f, 94.5879f);
        path.lineTo(229.184f, 95.3379f);
        path.lineTo(228.734f, 95.1879f);
        path.lineTo(229.134f, 92.7379f);
        path.lineTo(229.484f, 89.5379f);
        path.close();
        path.moveTo(240.21f, 83.8756f);
        path.lineTo(239.71f, 84.1756f);
        path.quadTo(241.06f, 82.6756f, 242.81f, 81.6256f);
        path.lineTo(244.91f, 80.1256f);
        path.quadTo(257.16f, 72.3756f, 272.11f, 79.6256f);
        path.quadTo(278.21f, 82.3256f, 281.81f, 90.9256f);
        path.quadTo(281.01f, 86.1256f, 280.41f, 84.6256f);
        path.lineTo(280.81f, 84.7756f);
        path.lineTo(281.41f, 86.0756f);
        path.lineTo(281.31f, 86.3256f);
        path.lineTo(282.36f, 88.0756f);
        path.lineTo(282.46f, 88.4256f);
        path.quadTo(284.16f, 92.4756f, 284.71f, 95.1756f);
        path.lineTo(284.71f, 99.8256f);
        path.lineTo(284.76f, 100.076f);
        path.lineTo(284.61f, 100.126f);
        path.lineTo(285.31f, 103.726f);
        path.quadTo(286.66f, 111.576f, 286.91f, 124.226f);
        path.lineTo(286.81f, 123.926f);
        path.quadTo(286.11f, 121.926f, 285.86f, 117.876f);
        path.lineTo(286.01f, 112.026f);
        path.quadTo(286.01f, 108.226f, 284.71f, 106.576f);
        path.quadTo(285.46f, 112.026f, 284.91f, 119.176f);
        path.quadTo(284.21f, 127.776f, 281.81f, 134.826f);
        path.quadTo(277.36f, 147.976f, 268.21f, 152.026f);
        path.quadTo(263.06f, 151.576f, 259.41f, 150.126f);
        path.lineTo(255.76f, 148.026f);
        path.quadTo(254.61f, 148.026f, 253.31f, 148.726f);
        path.quadTo(252.01f, 149.376f, 249.56f, 149.376f);
        path.quadTo(248.46f, 148.076f, 247.61f, 146.376f);
        path.quadTo(246.51f, 144.226f, 245.56f, 140.926f);
        path.lineTo(244.61f, 138.026f);
        path.lineTo(245.61f, 137.176f);
        path.quadTo(245.51f, 136.326f, 246.66f, 131.226f);
        path.lineTo(247.86f, 125.226f);
        path.quadTo(247.86f, 122.676f, 247.41f, 119.226f);
        path.quadTo(245.86f, 118.726f, 243.41f, 119.726f);
        path.lineTo(240.06f, 120.876f);
        path.lineTo(240.06f, 124.076f);
        path.quadTo(239.81f, 126.726f, 241.61f, 131.276f);
        path.lineTo(243.56f, 136.426f);
        path.lineTo(241.56f, 133.726f);
        path.quadTo(240.11f, 131.576f, 239.81f, 129.876f);
        path.lineTo(238.76f, 124.576f);
        path.quadTo(237.81f, 120.826f, 236.61f, 120.826f);
        path.lineTo(235.86f, 120.976f);
        path.lineTo(235.91f, 121.126f);
        path.lineTo(235.91f, 123.626f);
        path.lineTo(235.71f, 123.626f);
        path.lineTo(235.06f, 118.276f);
        path.quadTo(234.51f, 113.926f, 234.51f, 113.026f);
        path.quadTo(234.51f, 110.176f, 235.66f, 103.876f);
        path.quadTo(236.81f, 97.5755f, 236.81f, 96.0755f);
        path.quadTo(236.81f, 92.9255f, 235.46f, 92.7255f);
        path.quadTo(234.31f, 92.4755f, 233.46f, 95.5255f);
        path.lineTo(233.91f, 93.4755f);
        path.quadTo(234.51f, 90.7755f, 237.21f, 87.2255f);
        path.lineTo(237.81f, 86.4755f);
        path.lineTo(237.86f, 86.4255f);
        path.lineTo(238.41f, 85.7255f);
        path.lineTo(238.46f, 85.7755f);
        path.lineTo(240.21f, 83.8756f);
        path.close();
        path.moveTo(237.908f, 80.0547f);
        path.lineTo(240.608f, 79.8047f);
        path.quadTo(237.408f, 81.8547f, 236.208f, 84.8547f);
        path.lineTo(234.808f, 88.5547f);
        path.quadTo(235.658f, 84.4047f, 236.258f, 83.2547f);
        path.lineTo(236.058f, 83.1047f);
        path.lineTo(237.708f, 80.3047f);
        path.lineTo(237.908f, 80.0547f);
        path.close();
        path.moveTo(252.087f, 72.3668f);
        path.lineTo(252.087f, 72.4168f);
        path.lineTo(249.437f, 72.5168f);
        path.lineTo(249.087f, 72.5168f);
        path.lineTo(249.187f, 72.2668f);
        path.lineTo(249.687f, 72.2168f);
        path.lineTo(252.087f, 72.3668f);
        path.close();
        path.moveTo(252.087f, 75.1289f);
        path.lineTo(252.087f, 76.0289f);
        path.lineTo(250.437f, 76.2789f);
        path.lineTo(250.487f, 76.0289f);
        path.quadTo(250.587f, 75.5289f, 248.287f, 75.4789f);
        path.lineTo(248.037f, 74.2789f);
        path.lineTo(252.087f, 75.1289f);
        path.close();
        path.moveTo(253.652f, 75.4972f);
        path.lineTo(254.902f, 75.7972f);
        path.lineTo(253.652f, 75.8472f);
        path.lineTo(253.652f, 75.4972f);
        path.close();
        path.moveTo(249.003f, 72.505f);
        path.lineTo(247.903f, 72.555f);
        path.lineTo(248.653f, 72.355f);
        path.lineTo(249.003f, 72.505f);
        path.close();
        path.moveTo(244.399f, 71.6763f);
        path.lineTo(243.849f, 71.8263f);
        path.lineTo(246.049f, 69.6763f);
        path.quadTo(245.649f, 70.8263f, 244.699f, 71.4763f);
        path.lineTo(244.399f, 71.6763f);
        path.close();
        path.moveTo(290.94f, 67.0268f);
        path.lineTo(291.19f, 65.3768f);
        path.lineTo(292.59f, 65.5268f);
        path.quadTo(294.04f, 65.7768f, 294.19f, 66.0768f);
        path.quadTo(293.141f, 68.0268f, 293.641f, 71.2268f);
        path.lineTo(294.391f, 76.0268f);
        path.lineTo(295.341f, 76.0268f);
        path.quadTo(295.791f, 74.3268f, 295.791f, 70.8768f);
        path.lineTo(296.041f, 70.8768f);
        path.quadTo(297.891f, 73.2268f, 297.891f, 73.7268f);
        path.lineTo(297.041f, 76.2768f);
        path.quadTo(293.991f, 76.4268f, 293.991f, 79.7268f);
        path.quadTo(293.991f, 81.5768f, 295.991f, 83.7768f);
        path.lineTo(296.191f, 84.4268f);
        path.lineTo(296.541f, 85.3268f);
        path.lineTo(295.341f, 86.1268f);
        path.quadTo(293.891f, 84.4768f, 292.891f, 82.0268f);
        path.lineTo(290.991f, 76.6768f);
        path.lineTo(291.241f, 76.6768f);
        path.quadTo(291.241f, 77.0268f, 291.841f, 77.2768f);
        path.lineTo(293.241f, 77.5768f);
        path.quadTo(294.391f, 77.5768f, 293.941f, 76.9268f);
        path.lineTo(293.941f, 74.1768f);
        path.lineTo(293.141f, 72.9768f);
        path.quadTo(292.191f, 72.0268f, 290.941f, 72.0268f);
        path.quadTo(290.241f, 72.0268f, 290.04f, 72.2768f);
        path.lineTo(289.79f, 72.5268f);
        path.lineTo(289.59f, 70.9268f);
        path.lineTo(289.34f, 69.5268f);
        path.lineTo(290.04f, 68.8768f);
        path.lineTo(290.741f, 68.1268f);
        path.lineTo(290.94f, 67.0268f);
        path.close();
        path.moveTo(295.774f, 62.8837f);
        path.lineTo(297.874f, 62.8837f);
        path.quadTo(296.974f, 63.2337f, 295.774f, 63.9837f);
        path.lineTo(295.774f, 62.8837f);
        path.close();
        path.moveTo(294.992f, 68.2697f);
        path.lineTo(294.892f, 68.1197f);
        path.lineTo(295.542f, 66.3197f);
        path.lineTo(295.792f, 66.3197f);
        path.lineTo(295.792f, 68.3697f);
        path.lineTo(294.992f, 68.2697f);
        path.close();
        path.moveTo(277.268f, 76.3719f);
        path.lineTo(276.668f, 76.3719f);
        path.lineTo(275.168f, 76.0219f);
        path.lineTo(275.068f, 75.0719f);
        path.quadTo(275.381f, 75.0829f, 277.268f, 76.3719f);
        path.close();
        path.moveTo(270.777f, 77.9371f);
        path.lineTo(270.227f, 77.7871f);
        path.quadTo(277.477f, 77.7871f, 278.877f, 80.6871f);
        path.lineTo(280.677f, 84.4371f);
        path.lineTo(280.377f, 84.2871f);
        path.lineTo(280.377f, 84.2371f);
        path.quadTo(277.406f, 80.2388f, 270.777f, 77.9371f);
        path.close();
        path.moveTo(292.368f, 75.7734f);
        path.lineTo(291.618f, 74.7734f);
        path.lineTo(290.918f, 73.6734f);
        path.quadTo(292.568f, 73.7234f, 292.568f, 75.0234f);
        path.lineTo(292.568f, 75.7734f);
        path.lineTo(292.368f, 75.7734f);
        path.close();
        path.moveTo(296.511f, 79.6864f);
        path.lineTo(296.661f, 79.2364f);
        path.lineTo(296.711f, 79.2364f);
        path.quadTo(296.711f, 79.7864f, 297.211f, 81.2364f);
        path.lineTo(297.561f, 82.6364f);
        path.quadTo(296.961f, 82.5364f, 296.511f, 82.1364f);
        path.lineTo(296.511f, 79.6864f);
        path.close();
        path.moveTo(297.892f, 78.9498f);
        path.lineTo(297.892f, 78.5498f);
        path.quadTo(297.892f, 77.9998f, 298.042f, 77.4998f);
        path.quadTo(298.792f, 77.6998f, 299.692f, 78.2998f);
        path.lineTo(297.892f, 78.9498f);
        path.close();
        path.moveTo(295.13f, 79.7324f);
        path.quadTo(295.13f, 77.7824f, 296.53f, 77.4324f);
        path.quadTo(295.63f, 79.3324f, 295.48f, 80.6824f);
        path.quadTo(295.13f, 80.1007f, 295.13f, 79.7324f);
        path.close();
        path.moveTo(287.074f, 77.0164f);
        path.lineTo(287.024f, 76.6164f);
        path.quadTo(287.174f, 73.2164f, 286.824f, 71.3664f);
        path.lineTo(286.824f, 71.1664f);
        path.quadTo(289.074f, 72.4664f, 289.324f, 75.9164f);
        path.lineTo(289.624f, 81.4664f);
        path.lineTo(289.124f, 81.5164f);
        path.lineTo(288.324f, 80.5664f);
        path.lineTo(287.074f, 77.0164f);
        path.close();
        path.moveTo(291.861f, 87.7885f);
        path.lineTo(292.011f, 88.2385f);
        path.lineTo(291.411f, 88.5885f);
        path.lineTo(291.661f, 87.2885f);
        path.lineTo(291.861f, 87.7885f);
        path.close();
        path.moveTo(290.756f, 85.8551f);
        path.lineTo(289.706f, 85.6551f);
        path.lineTo(289.206f, 84.1051f);
        path.lineTo(288.956f, 82.8051f);
        path.quadTo(290.906f, 84.2551f, 291.156f, 85.3551f);
        path.lineTo(291.256f, 85.9051f);
        path.lineTo(290.756f, 85.8551f);
        path.close();
        path.moveTo(294.623f, 88.1108f);
        path.lineTo(295.123f, 88.4108f);
        path.lineTo(295.323f, 88.5108f);
        path.lineTo(295.323f, 88.5608f);
        path.lineTo(295.923f, 89.3608f);
        path.quadTo(294.423f, 88.8608f, 294.423f, 88.5608f);
        path.lineTo(294.623f, 88.1108f);
        path.close();
        path.moveTo(178.431f, 89.3997f);
        path.lineTo(178.081f, 90.2998f);
        path.lineTo(177.331f, 89.3997f);
        path.lineTo(176.681f, 89.5498f);
        path.quadTo(177.631f, 91.6497f, 176.931f, 93.2998f);
        path.quadTo(175.881f, 95.5998f, 171.831f, 94.8498f);
        path.lineTo(171.831f, 96.1498f);
        path.lineTo(172.781f, 97.2498f);
        path.quadTo(173.131f, 97.7998f, 173.131f, 98.7498f);
        path.quadTo(173.131f, 99.3498f, 171.781f, 101.6f);
        path.lineTo(167.431f, 108.1f);
        path.lineTo(167.081f, 103.1f);
        path.quadTo(167.081f, 89.8998f, 175.331f, 80.9998f);
        path.quadTo(183.081f, 72.6498f, 193.631f, 72.3998f);
        path.quadTo(204.631f, 72.0998f, 211.881f, 81.2498f);
        path.quadTo(214.531f, 84.5498f, 216.381f, 88.8498f);
        path.lineTo(213.731f, 89.2498f);
        path.quadTo(211.531f, 89.2498f, 210.131f, 87.3998f);
        path.quadTo(208.831f, 85.6998f, 206.831f, 85.8998f);
        path.quadTo(206.531f, 86.4998f, 206.681f, 88.9998f);
        path.quadTo(206.381f, 91.3498f, 203.631f, 91.3498f);
        path.quadTo(199.531f, 91.3498f, 197.831f, 88.7998f);
        path.quadTo(197.281f, 87.9498f, 196.781f, 86.5498f);
        path.lineTo(196.131f, 84.7998f);
        path.lineTo(195.031f, 85.1498f);
        path.lineTo(194.481f, 85.3998f);
        path.quadTo(194.481f, 87.2498f, 193.031f, 90.3998f);
        path.quadTo(190.981f, 94.6998f, 187.931f, 94.6998f);
        path.quadTo(184.281f, 94.6998f, 181.781f, 92.4998f);
        path.quadTo(179.582f, 89.9522f, 178.431f, 89.3997f);
        path.close();
        path.moveTo(194.728f, 89.8601f);
        path.quadTo(195.478f, 88.5601f, 195.928f, 88.2101f);
        path.quadTo(196.778f, 90.3601f, 199.178f, 91.7101f);
        path.quadTo(201.728f, 93.0601f, 205.428f, 93.0601f);
        path.quadTo(207.028f, 93.0601f, 207.428f, 91.3601f);
        path.quadTo(207.778f, 89.1601f, 208.328f, 88.1101f);
        path.lineTo(208.628f, 88.8601f);
        path.quadTo(208.878f, 89.4601f, 209.378f, 89.9101f);
        path.quadTo(210.928f, 91.1101f, 215.678f, 91.1101f);
        path.lineTo(217.128f, 90.8601f);
        path.quadTo(220.178f, 99.3601f, 220.178f, 111.26f);
        path.lineTo(220.328f, 116.41f);
        path.quadTo(220.128f, 122.16f, 218.378f, 126.91f);
        path.quadTo(215.178f, 135.76f, 207.378f, 139.41f);
        path.lineTo(208.278f, 138.01f);
        path.quadTo(210.728f, 133.56f, 210.728f, 129.81f);
        path.quadTo(210.728f, 128.91f, 211.128f, 127.86f);
        path.lineTo(211.978f, 125.46f);
        path.quadTo(211.478f, 124.96f, 209.228f, 124.51f);
        path.quadTo(208.978f, 124.66f, 208.878f, 125.16f);
        path.lineTo(208.628f, 126.16f);
        path.quadTo(208.078f, 127.41f, 205.428f, 127.41f);
        path.quadTo(204.978f, 127.41f, 204.178f, 126.56f);
        path.quadTo(203.128f, 125.51f, 201.528f, 125.01f);
        path.quadTo(201.178f, 125.31f, 200.778f, 125.96f);
        path.lineTo(200.128f, 127.11f);
        path.lineTo(198.628f, 126.26f);
        path.quadTo(197.378f, 125.61f, 196.428f, 125.61f);
        path.quadTo(191.578f, 128.06f, 190.628f, 128.06f);
        path.quadTo(188.378f, 128.06f, 184.778f, 124.81f);
        path.quadTo(181.528f, 121.71f, 179.578f, 122.26f);
        path.lineTo(181.128f, 127.41f);
        path.quadTo(182.528f, 131.66f, 184.228f, 134.61f);
        path.quadTo(187.178f, 139.61f, 191.578f, 141.91f);
        path.quadTo(186.128f, 141.36f, 181.778f, 138.46f);
        path.lineTo(183.078f, 137.01f);
        path.quadTo(182.828f, 136.76f, 182.228f, 136.51f);
        path.lineTo(181.678f, 136.41f);
        path.lineTo(180.278f, 137.31f);
        path.lineTo(178.228f, 135.46f);
        path.lineTo(178.228f, 135.41f);
        path.quadTo(175.128f, 132.21f, 172.828f, 127.51f);
        path.lineTo(172.828f, 125.81f);
        path.quadTo(172.828f, 123.21f, 171.778f, 122.01f);
        path.lineTo(169.878f, 119.96f);
        path.lineTo(168.678f, 115.41f);
        path.lineTo(169.178f, 114.61f);
        path.quadTo(169.578f, 113.76f, 169.578f, 112.81f);
        path.quadTo(169.578f, 109.66f, 172.178f, 104.21f);
        path.lineTo(174.728f, 98.6101f);
        path.lineTo(174.628f, 97.0601f);
        path.lineTo(174.278f, 96.4101f);
        path.quadTo(176.628f, 96.3101f, 177.978f, 95.0101f);
        path.quadTo(179.078f, 93.9601f, 179.078f, 92.7601f);
        path.lineTo(178.528f, 91.1101f);
        path.lineTo(182.528f, 93.7601f);
        path.quadTo(186.278f, 95.9601f, 188.678f, 95.9601f);
        path.quadTo(191.278f, 95.9601f, 193.328f, 92.4601f);
        path.lineTo(194.728f, 89.8601f);
        path.close();
        path.moveTo(218.482f, 89.768f);
        path.lineTo(218.632f, 89.618f);
        path.lineTo(218.882f, 89.718f);
        path.quadTo(222.482f, 88.718f, 223.882f, 91.468f);
        path.lineTo(224.732f, 94.568f);
        path.quadTo(223.332f, 100.568f, 222.932f, 108.768f);
        path.lineTo(222.382f, 108.768f);
        path.lineTo(222.882f, 109.618f);
        path.lineTo(222.832f, 112.118f);
        path.lineTo(222.682f, 112.168f);
        path.lineTo(221.532f, 111.868f);
        path.quadTo(221.382f, 102.668f, 220.782f, 98.768f);
        path.quadTo(220.047f, 94.1413f, 218.482f, 89.768f);
        path.close();
        path.moveTo(212.635f, 102.382f);
        path.quadTo(211.535f, 101.532f, 209.885f, 101.682f);
        path.quadTo(208.335f, 101.782f, 207.135f, 102.732f);
        path.quadTo(205.885f, 103.832f, 205.885f, 105.332f);
        path.lineTo(205.735f, 106.082f);
        path.quadTo(205.635f, 106.782f, 205.885f, 107.332f);
        path.quadTo(206.735f, 109.132f, 211.185f, 109.132f);
        path.quadTo(213.035f, 109.132f, 213.635f, 107.682f);
        path.quadTo(213.935f, 106.932f, 213.935f, 105.282f);
        path.quadTo(213.924f, 103.348f, 212.635f, 102.382f);
        path.close();
        path.moveTo(205.638f, 101.185f);
        path.quadTo(207.638f, 99.5847f, 210.488f, 99.5847f);
        path.quadTo(213.288f, 99.5847f, 215.288f, 101.235f);
        path.quadTo(217.438f, 103.085f, 217.438f, 106.085f);
        path.quadTo(216.738f, 107.535f, 215.238f, 108.985f);
        path.quadTo(212.238f, 111.885f, 208.338f, 111.885f);
        path.quadTo(206.238f, 111.885f, 204.838f, 109.935f);
        path.quadTo(203.488f, 108.185f, 203.488f, 106.285f);
        path.quadTo(203.474f, 103.072f, 205.638f, 101.185f);
        path.close();
        path.moveTo(207.387f, 113.522f);
        path.lineTo(208.987f, 113.622f);
        path.quadTo(212.337f, 113.622f, 215.887f, 110.622f);
        path.quadTo(219.037f, 107.872f, 219.037f, 106.222f);
        path.quadTo(219.037f, 102.972f, 216.387f, 100.672f);
        path.quadTo(214.037f, 98.672f, 210.537f, 98.172f);
        path.quadTo(207.137f, 97.722f, 204.687f, 99.022f);
        path.quadTo(202.037f, 100.422f, 202.037f, 103.372f);
        path.lineTo(201.887f, 105.022f);
        path.quadTo(201.837f, 106.872f, 202.237f, 108.522f);
        path.quadTo(202.987f, 111.522f, 205.237f, 112.772f);
        path.quadTo(200.837f, 111.522f, 195.287f, 111.672f);
        path.lineTo(195.137f, 111.622f);
        path.lineTo(195.137f, 112.522f);
        path.quadTo(195.137f, 114.672f, 196.437f, 117.822f);
        path.lineTo(197.837f, 120.222f);
        path.lineTo(197.387f, 117.022f);
        path.quadTo(197.087f, 114.472f, 197.087f, 113.172f);
        path.quadTo(203.787f, 113.172f, 207.837f, 115.372f);
        path.quadTo(210.087f, 116.672f, 212.487f, 118.922f);
        path.lineTo(207.237f, 119.872f);
        path.lineTo(198.437f, 120.972f);
        path.quadTo(199.987f, 122.572f, 202.187f, 122.572f);
        path.quadTo(209.987f, 122.572f, 214.037f, 119.722f);
        path.quadTo(214.887f, 120.522f, 217.637f, 120.522f);
        path.quadTo(218.687f, 120.522f, 218.837f, 120.022f);
        path.lineTo(218.887f, 118.272f);
        path.quadTo(218.887f, 116.872f, 218.087f, 115.922f);
        path.quadTo(217.337f, 114.972f, 216.337f, 114.872f);
        path.quadTo(213.887f, 114.522f, 213.737f, 117.822f);
        path.quadTo(212.737f, 116.072f, 209.487f, 114.372f);
        path.lineTo(207.387f, 113.522f);
        path.close();
        path.moveTo(221.566f, 112.509f);
        path.lineTo(222.066f, 112.709f);
        path.quadTo(221.766f, 113.059f, 221.566f, 113.459f);
        path.lineTo(221.566f, 112.509f);
        path.close();
        path.moveTo(223.361f, 111.773f);
        path.lineTo(223.311f, 110.073f);
        path.lineTo(224.161f, 110.823f);
        path.lineTo(224.161f, 111.473f);
        path.lineTo(223.361f, 111.773f);
        path.close();
        path.moveTo(223.223f, 109.103f);
        path.lineTo(223.123f, 106.103f);
        path.quadTo(223.173f, 103.303f, 225.073f, 95.9027f);
        path.quadTo(225.673f, 95.7027f, 226.223f, 95.6027f);
        path.lineTo(225.823f, 98.7027f);
        path.quadTo(224.773f, 104.003f, 224.273f, 109.853f);
        path.lineTo(223.223f, 109.103f);
        path.close();
        path.moveTo(192.702f, 109.517f);
        path.quadTo(192.702f, 105.317f, 189.802f, 102.817f);
        path.quadTo(187.202f, 100.617f, 183.352f, 100.417f);
        path.quadTo(179.552f, 100.167f, 176.852f, 101.817f);
        path.quadTo(173.952f, 103.617f, 173.952f, 106.717f);
        path.lineTo(174.352f, 108.317f);
        path.quadTo(175.052f, 110.317f, 176.202f, 112.017f);
        path.lineTo(177.952f, 114.117f);
        path.lineTo(176.452f, 113.867f);
        path.quadTo(174.702f, 113.817f, 173.402f, 114.717f);
        path.quadTo(172.002f, 115.667f, 172.002f, 117.367f);
        path.lineTo(172.502f, 120.017f);
        path.quadTo(173.702f, 123.067f, 177.102f, 123.067f);
        path.quadTo(178.902f, 123.067f, 180.052f, 121.167f);
        path.quadTo(181.002f, 119.567f, 181.002f, 118.267f);
        path.quadTo(181.002f, 116.917f, 180.402f, 115.967f);
        path.quadTo(183.102f, 117.467f, 186.752f, 117.467f);
        path.quadTo(189.202f, 117.467f, 191.102f, 114.117f);
        path.quadTo(192.702f, 111.358f, 192.702f, 109.517f);
        path.close();
        path.moveTo(191.137f, 109.609f);
        path.quadTo(191.287f, 111.209f, 190.487f, 112.609f);
        path.quadTo(188.937f, 115.509f, 184.237f, 115.509f);
        path.quadTo(179.387f, 115.509f, 177.487f, 110.759f);
        path.quadTo(176.487f, 108.259f, 176.487f, 105.159f);
        path.quadTo(176.487f, 103.059f, 178.787f, 102.309f);
        path.quadTo(180.887f, 101.659f, 183.837f, 102.359f);
        path.quadTo(186.837f, 103.159f, 188.837f, 104.959f);
        path.quadTo(191.137f, 106.985f, 191.137f, 109.609f);
        path.close();
        path.moveTo(187.27f, 112.325f);
        path.lineTo(187.57f, 108.225f);
        path.quadTo(187.57f, 106.475f, 186.32f, 105.325f);
        path.quadTo(185.17f, 104.375f, 183.57f, 104.275f);
        path.quadTo(181.92f, 104.225f, 180.82f, 105.075f);
        path.quadTo(179.57f, 106.025f, 179.57f, 107.625f);
        path.quadTo(179.57f, 106.825f, 179.37f, 108.125f);
        path.quadTo(179.32f, 109.025f, 179.57f, 109.925f);
        path.quadTo(180.52f, 112.825f, 184.62f, 112.825f);
        path.lineTo(186.32f, 112.625f);
        path.lineTo(187.27f, 112.325f);
        path.close();
        path.moveTo(190.492f, 129.818f);
        path.quadTo(191.642f, 129.568f, 194.692f, 128.268f);
        path.lineTo(197.742f, 127.118f);
        path.lineTo(198.892f, 127.968f);
        path.lineTo(200.892f, 129.468f);
        path.lineTo(201.542f, 128.218f);
        path.lineTo(202.192f, 126.768f);
        path.lineTo(203.792f, 128.268f);
        path.quadTo(204.692f, 129.118f, 206.092f, 129.018f);
        path.lineTo(205.892f, 129.168f);
        path.lineTo(203.092f, 130.618f);
        path.quadTo(200.342f, 131.768f, 197.242f, 131.768f);
        path.lineTo(191.992f, 131.318f);
        path.quadTo(191.827f, 130.555f, 190.492f, 129.818f);
        path.close();
        path.moveTo(188.881f, 131.107f);
        path.lineTo(194.231f, 132.307f);
        path.quadTo(199.281f, 133.507f, 201.531f, 133.507f);
        path.quadTo(202.581f, 133.507f, 205.231f, 131.857f);
        path.lineTo(207.831f, 130.307f);
        path.quadTo(207.281f, 130.957f, 206.831f, 132.407f);
        path.quadTo(206.381f, 134.057f, 205.931f, 134.707f);
        path.quadTo(204.181f, 137.357f, 197.981f, 137.357f);
        path.quadTo(193.331f, 137.357f, 191.131f, 134.707f);
        path.quadTo(189.618f, 131.844f, 188.881f, 131.107f);
        path.close();
        path.moveTo(217.423f, 118.264f);
        path.lineTo(216.473f, 118.414f);
        path.quadTo(215.773f, 117.714f, 215.473f, 116.964f);
        path.quadTo(215.923f, 116.864f, 216.423f, 117.214f);
        path.lineTo(217.423f, 118.264f);
        path.close();
        path.moveTo(221.06f, 124.202f);
        path.lineTo(221.41f, 122.002f);
        path.lineTo(221.66f, 123.202f);
        path.lineTo(221.06f, 124.202f);
        path.close();
        path.moveTo(208.308f, 132.857f);
        path.lineTo(208.408f, 133.357f);
        path.quadTo(207.558f, 136.657f, 206.458f, 138.257f);
        path.quadTo(205.458f, 139.757f, 204.258f, 140.607f);
        path.quadTo(200.608f, 141.707f, 196.208f, 141.957f);
        path.quadTo(191.008f, 141.107f, 187.708f, 136.907f);
        path.quadTo(185.508f, 134.107f, 182.908f, 127.107f);
        path.quadTo(184.008f, 127.657f, 185.258f, 129.807f);
        path.lineTo(187.858f, 133.907f);
        path.quadTo(192.058f, 139.307f, 200.858f, 139.307f);
        path.quadTo(203.458f, 139.307f, 205.458f, 136.807f);
        path.quadTo(207.295f, 133.869f, 208.308f, 132.857f);
        path.close();
        path.moveTo(221.98f, 125.951f);
        path.lineTo(222.13f, 125.601f);
        path.lineTo(222.88f, 128.451f);
        path.lineTo(222.73f, 129.451f);
        path.quadTo(221.83f, 128.901f, 221.03f, 128.751f);
        path.lineTo(221.98f, 125.951f);
        path.close();
        path.moveTo(220.001f, 129.496f);
        path.lineTo(220.001f, 129.546f);
        path.lineTo(219.201f, 131.896f);
        path.lineTo(220.451f, 129.996f);
        path.lineTo(222.401f, 132.046f);
        path.lineTo(219.651f, 132.096f);
        path.lineTo(220.151f, 132.796f);
        path.lineTo(220.451f, 133.396f);
        path.lineTo(223.601f, 133.396f);
        path.lineTo(223.701f, 133.546f);
        path.lineTo(224.051f, 135.846f);
        path.lineTo(224.301f, 140.596f);
        path.lineTo(224.301f, 141.096f);
        path.lineTo(224.251f, 144.646f);
        path.lineTo(224.251f, 145.396f);
        path.lineTo(223.951f, 150.946f);
        path.quadTo(223.501f, 148.246f, 222.101f, 146.496f);
        path.quadTo(218.301f, 141.946f, 208.101f, 142.846f);
        path.lineTo(208.301f, 143.346f);
        path.quadTo(216.101f, 143.896f, 219.601f, 146.496f);
        path.quadTo(218.051f, 147.296f, 217.801f, 148.546f);
        path.quadTo(217.551f, 150.396f, 216.601f, 151.546f);
        path.lineTo(213.751f, 154.596f);
        path.quadTo(211.851f, 153.096f, 209.551f, 152.396f);
        path.lineTo(209.501f, 152.196f);
        path.lineTo(209.451f, 152.346f);
        path.quadTo(207.701f, 151.796f, 205.701f, 151.696f);
        path.lineTo(205.701f, 150.496f);
        path.quadTo(205.651f, 149.546f, 205.051f, 148.946f);
        path.lineTo(204.251f, 148.946f);
        path.lineTo(204.201f, 148.896f);
        path.quadTo(204.101f, 148.896f, 204.101f, 149.896f);
        path.quadTo(204.101f, 150.746f, 205.101f, 151.646f);
        path.lineTo(205.551f, 152.096f);
        path.lineTo(205.801f, 152.246f);
        path.lineTo(205.701f, 151.946f);
        path.lineTo(205.701f, 151.846f);
        path.quadTo(207.001f, 152.096f, 208.301f, 152.696f);
        path.lineTo(206.551f, 152.746f);
        path.quadTo(207.751f, 153.446f, 209.201f, 153.796f);
        path.lineTo(209.501f, 153.296f);
        path.quadTo(211.201f, 154.296f, 212.701f, 155.746f);
        path.lineTo(211.951f, 156.946f);
        path.quadTo(211.951f, 157.946f, 212.501f, 157.896f);
        path.quadTo(212.801f, 157.896f, 213.051f, 157.596f);
        path.lineTo(213.701f, 156.796f);
        path.quadTo(215.201f, 158.496f, 215.801f, 159.846f);
        path.quadTo(215.401f, 160.246f, 215.351f, 160.646f);
        path.lineTo(215.701f, 161.196f);
        path.lineTo(216.101f, 161.296f);
        path.lineTo(216.101f, 161.446f);
        path.quadTo(216.101f, 163.596f, 212.801f, 167.196f);
        path.quadTo(208.851f, 171.546f, 204.401f, 171.546f);
        path.quadTo(202.251f, 171.546f, 200.151f, 170.446f);
        path.quadTo(197.451f, 169.046f, 196.551f, 168.846f);
        path.quadTo(196.801f, 172.096f, 198.851f, 172.946f);
        path.lineTo(205.051f, 173.496f);
        path.quadTo(209.501f, 173.496f, 213.901f, 168.346f);
        path.lineTo(214.451f, 167.746f);
        path.lineTo(214.201f, 178.646f);
        path.quadTo(214.201f, 180.946f, 215.801f, 182.746f);
        path.lineTo(219.351f, 185.646f);
        path.quadTo(221.801f, 187.496f, 222.901f, 188.796f);
        path.quadTo(224.501f, 190.996f, 224.501f, 193.896f);
        path.quadTo(224.501f, 200.596f, 223.351f, 204.146f);
        path.quadTo(222.051f, 208.146f, 218.751f, 210.246f);
        path.quadTo(215.351f, 212.346f, 208.751f, 213.146f);
        path.lineTo(203.301f, 213.646f);
        path.lineTo(203.001f, 212.646f);
        path.lineTo(202.351f, 212.646f);
        path.lineTo(202.301f, 213.696f);
        path.lineTo(191.551f, 213.946f);
        path.quadTo(182.251f, 213.946f, 176.801f, 210.896f);
        path.quadTo(168.301f, 206.146f, 168.301f, 193.996f);
        path.lineTo(168.251f, 191.646f);
        path.quadTo(168.301f, 189.896f, 169.151f, 188.696f);
        path.quadTo(171.701f, 185.046f, 181.451f, 184.896f);
        path.lineTo(181.651f, 184.796f);
        path.lineTo(181.751f, 184.096f);
        path.quadTo(183.851f, 183.546f, 185.351f, 181.046f);
        path.quadTo(186.751f, 178.646f, 186.751f, 176.946f);
        path.lineTo(186.251f, 172.746f);
        path.lineTo(186.001f, 171.496f);
        path.lineTo(186.151f, 171.746f);
        path.lineTo(186.601f, 171.396f);
        path.lineTo(184.951f, 167.946f);
        path.lineTo(185.001f, 165.596f);
        path.lineTo(185.401f, 166.596f);
        path.quadTo(185.901f, 167.396f, 187.351f, 167.396f);
        path.lineTo(188.801f, 167.196f);
        path.lineTo(189.301f, 166.896f);
        path.lineTo(189.501f, 164.496f);
        path.lineTo(189.351f, 162.846f);
        path.lineTo(189.001f, 162.096f);
        path.quadTo(191.001f, 161.896f, 191.751f, 160.796f);
        path.lineTo(192.151f, 161.346f);
        path.quadTo(192.301f, 161.796f, 192.701f, 161.896f);
        path.lineTo(203.451f, 162.246f);
        path.quadTo(208.401f, 162.246f, 210.501f, 159.396f);
        path.lineTo(210.701f, 159.096f);
        path.lineTo(210.651f, 159.146f);
        path.quadTo(209.101f, 160.796f, 195.101f, 160.796f);
        path.lineTo(192.101f, 159.146f);
        path.lineTo(192.101f, 158.746f);
        path.quadTo(192.101f, 156.296f, 189.551f, 154.746f);
        path.quadTo(188.201f, 153.946f, 184.001f, 152.596f);
        path.quadTo(180.151f, 151.246f, 178.501f, 150.046f);
        path.quadTo(176.001f, 148.246f, 176.001f, 145.246f);
        path.quadTo(176.001f, 143.346f, 178.151f, 141.596f);
        path.lineTo(181.551f, 138.746f);
        path.quadTo(188.001f, 142.796f, 196.901f, 143.596f);
        path.lineTo(199.901f, 143.796f);
        path.lineTo(200.401f, 143.796f);
        path.lineTo(201.501f, 143.796f);
        path.quadTo(212.501f, 143.796f, 218.101f, 132.746f);
        path.lineTo(219.401f, 129.696f);
        path.lineTo(220.401f, 128.396f);
        path.lineTo(220.101f, 129.296f);
        path.lineTo(220.001f, 129.496f);
        path.close();
        path.moveTo(175.991f, 105.834f);
        path.lineTo(176.191f, 105.934f);
        path.quadTo(175.741f, 107.384f, 175.741f, 107.884f);
        path.lineTo(175.241f, 107.634f);
        path.lineTo(175.091f, 107.384f);
        path.lineTo(175.741f, 105.934f);
        path.lineTo(175.991f, 105.834f);
        path.close();
        path.moveTo(153.526f, 125.307f);
        path.quadTo(153.376f, 119.957f, 155.976f, 116.807f);
        path.quadTo(156.776f, 117.807f, 157.626f, 122.357f);
        path.quadTo(158.376f, 126.307f, 158.376f, 127.657f);
        path.quadTo(158.376f, 129.357f, 156.176f, 132.157f);
        path.quadTo(153.976f, 134.957f, 153.976f, 138.207f);
        path.lineTo(153.976f, 139.407f);
        path.quadTo(154.276f, 139.907f, 155.076f, 140.257f);
        path.lineTo(154.276f, 140.507f);
        path.lineTo(153.876f, 140.057f);
        path.lineTo(151.476f, 136.957f);
        path.quadTo(151.576f, 135.757f, 150.326f, 134.457f);
        path.lineTo(149.926f, 134.957f);
        path.quadTo(146.076f, 129.457f, 145.326f, 125.807f);
        path.quadTo(146.376f, 126.507f, 149.276f, 129.907f);
        path.quadTo(152.226f, 133.407f, 153.226f, 134.007f);
        path.quadTo(153.726f, 132.157f, 153.676f, 129.607f);
        path.lineTo(153.526f, 125.307f);
        path.close();
        path.moveTo(178.753f, 116.192f);
        path.lineTo(179.053f, 116.192f);
        path.lineTo(179.503f, 116.742f);
        path.quadTo(179.703f, 117.092f, 179.703f, 118.142f);
        path.lineTo(179.553f, 119.892f);
        path.quadTo(178.903f, 121.492f, 176.153f, 121.492f);
        path.lineTo(174.603f, 121.292f);
        path.lineTo(173.953f, 120.992f);
        path.quadTo(174.103f, 120.192f, 173.953f, 119.392f);
        path.lineTo(173.753f, 117.642f);
        path.lineTo(173.803f, 116.242f);
        path.lineTo(174.103f, 115.692f);
        path.quadTo(175.553f, 114.992f, 176.803f, 115.992f);
        path.quadTo(177.753f, 116.742f, 177.753f, 117.492f);
        path.quadTo(177.753f, 118.442f, 177.403f, 118.442f);
        path.lineTo(177.003f, 118.292f);
        path.quadTo(176.703f, 117.892f, 176.503f, 117.192f);
        path.lineTo(176.153f, 116.192f);
        path.lineTo(175.203f, 116.342f);
        path.lineTo(175.203f, 119.242f);
        path.lineTo(176.203f, 119.742f);
        path.lineTo(177.753f, 119.892f);
        path.quadTo(178.753f, 119.892f, 178.903f, 119.542f);
        path.lineTo(179.053f, 119.092f);
        path.quadTo(179.076f, 116.652f, 178.753f, 116.192f);
        path.close();
        path.moveTo(169.132f, 131.476f);
        path.lineTo(170.732f, 131.576f);
        path.quadTo(171.932f, 130.676f, 172.482f, 129.576f);
        path.quadTo(174.632f, 132.926f, 177.382f, 135.476f);
        path.quadTo(173.882f, 135.626f, 170.782f, 136.426f);
        path.lineTo(170.182f, 133.326f);
        path.lineTo(169.132f, 131.476f);
        path.close();
        path.moveTo(177.464f, 136.079f);
        path.lineTo(176.664f, 136.029f);
        path.lineTo(177.614f, 135.729f);
        path.lineTo(179.914f, 137.579f);
        path.lineTo(177.114f, 139.579f);
        path.lineTo(177.314f, 137.579f);
        path.lineTo(177.014f, 136.879f);
        path.lineTo(177.464f, 136.079f);
        path.close();
        path.moveTo(174.242f, 137.736f);
        path.lineTo(172.842f, 139.336f);
        path.lineTo(172.842f, 137.586f);
        path.lineTo(175.442f, 136.536f);
        path.lineTo(175.342f, 136.736f);
        path.lineTo(174.242f, 137.736f);
        path.close();
        path.moveTo(172.815f, 141.88f);
        path.lineTo(173.865f, 141.08f);
        path.lineTo(173.865f, 141.23f);
        path.quadTo(173.465f, 143.13f, 172.815f, 146.98f);
        path.lineTo(172.815f, 141.88f);
        path.close();
        path.moveTo(167.935f, 142.294f);
        path.lineTo(168.135f, 142.344f);
        path.quadTo(167.485f, 146.494f, 166.435f, 150.244f);
        path.lineTo(166.435f, 143.994f);
        path.lineTo(166.685f, 143.694f);
        path.lineTo(167.935f, 142.294f);
        path.close();
        path.moveTo(171.066f, 147.312f);
        path.lineTo(171.216f, 147.312f);
        path.quadTo(171.216f, 154.862f, 172.466f, 159.462f);
        path.quadTo(167.016f, 158.412f, 163.966f, 156.762f);
        path.lineTo(163.166f, 154.012f);
        path.lineTo(162.616f, 152.462f);
        path.lineTo(162.716f, 152.462f);
        path.lineTo(163.866f, 150.262f);
        path.lineTo(164.616f, 148.262f);
        path.lineTo(164.866f, 152.562f);
        path.lineTo(165.116f, 156.462f);
        path.lineTo(166.216f, 156.262f);
        path.quadTo(167.716f, 151.812f, 168.466f, 147.812f);
        path.lineTo(168.766f, 152.062f);
        path.quadTo(168.916f, 154.362f, 169.466f, 155.812f);
        path.quadTo(170.066f, 155.512f, 170.216f, 154.962f);
        path.lineTo(171.066f, 147.312f);
        path.close();
        path.moveTo(174.61f, 149.429f);
        path.lineTo(174.86f, 148.529f);
        path.lineTo(175.21f, 149.229f);
        path.quadTo(175.86f, 150.329f, 177.91f, 151.429f);
        path.lineTo(182.86f, 154.029f);
        path.quadTo(186.66f, 156.229f, 190.46f, 159.379f);
        path.quadTo(188.91f, 160.929f, 187.81f, 161.029f);
        path.quadTo(187.41f, 161.029f, 187.31f, 161.379f);
        path.quadTo(186.46f, 159.279f, 185.36f, 157.529f);
        path.quadTo(183.11f, 153.779f, 181.01f, 153.779f);
        path.quadTo(179.96f, 153.779f, 179.96f, 153.979f);
        path.lineTo(180.21f, 154.229f);
        path.lineTo(179.96f, 158.029f);
        path.lineTo(178.41f, 155.429f);
        path.quadTo(177.16f, 152.379f, 176.16f, 150.679f);
        path.lineTo(175.76f, 151.179f);
        path.lineTo(174.61f, 149.429f);
        path.close();
        path.moveTo(174.104f, 151.961f);
        path.lineTo(175.004f, 153.611f);
        path.lineTo(174.804f, 154.911f);
        path.lineTo(174.404f, 159.511f);
        path.lineTo(174.104f, 159.511f);
        path.lineTo(174.104f, 151.961f);
        path.close();
        path.moveTo(181.792f, 155.644f);
        path.lineTo(183.942f, 159.494f);
        path.lineTo(185.192f, 161.344f);
        path.quadTo(184.092f, 160.794f, 182.292f, 160.794f);
        path.lineTo(181.492f, 160.944f);
        path.lineTo(181.342f, 160.644f);
        path.lineTo(181.492f, 159.594f);
        path.lineTo(181.792f, 155.644f);
        path.close();
        path.moveTo(176.59f, 156.334f);
        path.lineTo(177.64f, 158.084f);
        path.lineTo(178.24f, 159.984f);
        path.quadTo(179.09f, 162.634f, 180.39f, 164.184f);
        path.lineTo(181.04f, 163.834f);
        path.lineTo(181.09f, 163.634f);
        path.lineTo(183.44f, 167.284f);
        path.lineTo(182.99f, 168.184f);
        path.lineTo(181.79f, 168.984f);
        path.quadTo(180.44f, 167.834f, 179.99f, 166.184f);
        path.lineTo(179.54f, 163.584f);
        path.quadTo(179.04f, 161.384f, 175.99f, 160.284f);
        path.lineTo(176.59f, 156.334f);
        path.close();
        path.moveTo(166.416f, 141.419f);
        path.lineTo(166.416f, 140.719f);
        path.lineTo(166.566f, 140.469f);
        path.lineTo(166.966f, 140.269f);
        path.lineTo(166.416f, 141.419f);
        path.close();
        path.moveTo(163.056f, 143.767f);
        path.lineTo(162.406f, 143.767f);
        path.lineTo(163.706f, 142.467f);
        path.lineTo(164.756f, 141.617f);
        path.lineTo(164.506f, 142.917f);
        path.lineTo(164.456f, 143.417f);
        path.lineTo(163.056f, 143.767f);
        path.close();
        path.moveTo(160.017f, 147.818f);
        path.lineTo(160.067f, 146.768f);
        path.quadTo(160.267f, 146.218f, 160.967f, 145.368f);
        path.lineTo(163.067f, 145.718f);
        path.lineTo(162.467f, 148.018f);
        path.lineTo(161.867f, 150.868f);
        path.lineTo(160.017f, 147.818f);
        path.close();
        path.moveTo(159.373f, 144.642f);
        path.lineTo(158.723f, 146.042f);
        path.lineTo(155.773f, 142.392f);
        path.lineTo(156.473f, 141.992f);
        path.quadTo(157.123f, 141.042f, 157.573f, 140.742f);
        path.lineTo(157.873f, 142.142f);
        path.quadTo(158.023f, 143.142f, 158.473f, 143.792f);
        path.lineTo(159.373f, 144.642f);
        path.close();
        path.moveTo(163.792f, 145.7f);
        path.lineTo(164.092f, 145.7f);
        path.lineTo(163.542f, 147.3f);
        path.lineTo(163.542f, 147.15f);
        path.lineTo(163.792f, 145.7f);
        path.close();
        path.moveTo(177.28f, 166.094f);
        path.lineTo(177.93f, 168.144f);
        path.quadTo(179.38f, 170.744f, 183.58f, 170.744f);
        path.quadTo(184.38f, 170.744f, 184.73f, 169.544f);
        path.lineTo(185.03f, 169.994f);
        path.lineTo(185.03f, 170.144f);
        path.lineTo(185.33f, 172.244f);
        path.quadTo(185.63f, 174.594f, 185.53f, 176.494f);
        path.quadTo(185.18f, 182.644f, 181.03f, 182.644f);
        path.quadTo(173.68f, 182.644f, 168.78f, 171.444f);
        path.quadTo(167.08f, 167.694f, 165.43f, 161.994f);
        path.lineTo(164.78f, 159.494f);
        path.quadTo(165.38f, 159.794f, 166.08f, 159.994f);
        path.lineTo(174.03f, 162.644f);
        path.quadTo(176.38f, 163.594f, 177.03f, 164.844f);
        path.lineTo(177.28f, 166.094f);
        path.close();
        path.moveTo(220.185f, 147.035f);
        path.lineTo(220.185f, 146.935f);
        path.lineTo(220.635f, 147.385f);
        path.quadTo(222.585f, 149.385f, 222.585f, 153.485f);
        path.quadTo(222.585f, 156.135f, 221.435f, 157.135f);
        path.quadTo(220.035f, 158.485f, 217.535f, 159.035f);
        path.lineTo(217.335f, 159.085f);
        path.quadTo(216.635f, 157.285f, 214.835f, 155.585f);
        path.lineTo(218.685f, 151.735f);
        path.quadTo(220.185f, 150.304f, 220.185f, 147.035f);
        path.close();
        path.moveTo(210.932f, 157.485f);
        path.lineTo(210.832f, 158.785f);
        path.lineTo(211.982f, 155.635f);
        path.quadTo(210.932f, 156.334f, 210.932f, 157.485f);
        path.close();
        path.moveTo(186.948f, 162.549f);
        path.lineTo(187.348f, 161.949f);
        path.lineTo(187.548f, 163.799f);
        path.lineTo(187.598f, 165.599f);
        path.quadTo(187.248f, 165.099f, 186.948f, 164.049f);
        path.lineTo(186.498f, 162.549f);
        path.lineTo(186.348f, 162.349f);
        path.lineTo(186.948f, 162.549f);
        path.close();
        path.moveTo(217.745f, 161.352f);
        path.lineTo(217.745f, 161.252f);
        path.quadTo(221.845f, 161.002f, 223.445f, 158.702f);
        path.lineTo(223.345f, 159.602f);
        path.lineTo(222.645f, 168.602f);
        path.lineTo(222.395f, 170.052f);
        path.lineTo(222.545f, 170.052f);
        path.quadTo(222.295f, 174.602f, 222.295f, 177.602f);
        path.quadTo(222.295f, 181.002f, 222.395f, 182.402f);
        path.lineTo(222.945f, 182.402f);
        path.lineTo(224.195f, 167.152f);
        path.quadTo(225.195f, 155.052f, 225.195f, 150.202f);
        path.lineTo(224.995f, 145.152f);
        path.lineTo(224.995f, 141.302f);
        path.quadTo(226.445f, 154.152f, 226.995f, 156.302f);
        path.lineTo(227.245f, 156.302f);
        path.lineTo(227.395f, 159.002f);
        path.lineTo(226.745f, 170.002f);
        path.lineTo(226.095f, 181.552f);
        path.lineTo(226.245f, 182.652f);
        path.lineTo(225.595f, 189.852f);
        path.quadTo(225.045f, 188.702f, 223.545f, 186.902f);
        path.lineTo(220.695f, 184.752f);
        path.lineTo(220.795f, 181.652f);
        path.lineTo(219.645f, 172.002f);
        path.lineTo(218.395f, 163.152f);
        path.lineTo(217.745f, 163.152f);
        path.lineTo(217.745f, 166.552f);
        path.quadTo(218.745f, 169.952f, 219.145f, 175.902f);
        path.quadTo(219.545f, 181.552f, 220.045f, 184.252f);
        path.lineTo(219.245f, 183.702f);
        path.quadTo(215.945f, 181.302f, 215.845f, 179.702f);
        path.lineTo(215.595f, 172.552f);
        path.lineTo(215.345f, 166.602f);
        path.quadTo(217.745f, 163.378f, 217.745f, 161.352f);
        path.close();
        path.moveTo(296.741f, 92.392f);
        path.lineTo(295.091f, 91.342f);
        path.lineTo(296.991f, 91.092f);
        path.lineTo(296.741f, 92.392f);
        path.close();
        path.moveTo(293.657f, 92.8063f);
        path.lineTo(294.607f, 92.8563f);
        path.lineTo(294.607f, 93.4063f);
        path.quadTo(294.207f, 93.4563f, 293.707f, 94.0063f);
        path.lineTo(293.157f, 94.8064f);
        path.lineTo(292.857f, 94.6563f);
        path.lineTo(292.657f, 92.7563f);
        path.lineTo(292.657f, 92.5564f);
        path.lineTo(293.657f, 92.8063f);
        path.close();
        path.moveTo(289.237f, 91.7015f);
        path.lineTo(289.287f, 91.9515f);
        path.lineTo(289.587f, 92.6015f);
        path.lineTo(290.187f, 103.651f);
        path.lineTo(290.137f, 104.001f);
        path.quadTo(287.937f, 95.5015f, 287.937f, 94.2515f);
        path.quadTo(287.937f, 93.4515f, 288.637f, 92.6515f);
        path.lineTo(289.237f, 91.7015f);
        path.close();
        path.moveTo(289.928f, 93.2667f);
        path.lineTo(290.228f, 93.6167f);
        path.lineTo(290.778f, 96.7667f);
        path.lineTo(291.278f, 100.067f);
        path.lineTo(291.028f, 100.067f);
        path.lineTo(290.928f, 101.167f);
        path.quadTo(290.628f, 101.667f, 290.428f, 102.317f);
        path.lineTo(289.928f, 93.2667f);
        path.close();
        path.moveTo(290.94f, 94.6477f);
        path.lineTo(291.34f, 95.0477f);
        path.lineTo(291.94f, 99.8977f);
        path.lineTo(291.74f, 100.098f);
        path.lineTo(290.94f, 94.6477f);
        path.close();
        path.moveTo(291.953f, 101.783f);
        path.lineTo(292.003f, 101.633f);
        path.lineTo(292.103f, 103.333f);
        path.lineTo(291.953f, 101.783f);
        path.close();
        path.moveTo(296.05f, 97.8702f);
        path.lineTo(295.85f, 99.1702f);
        path.quadTo(293.9f, 98.3702f, 292.55f, 99.3202f);
        path.lineTo(292.0f, 95.6702f);
        path.quadTo(293.703f, 97.0415f, 296.05f, 97.8702f);
        path.close();
        path.moveTo(292.644f, 101.001f);
        path.quadTo(293.844f, 99.9505f, 295.744f, 99.9505f);
        path.quadTo(295.294f, 103.201f, 295.194f, 106.151f);
        path.quadTo(294.144f, 105.001f, 292.994f, 104.501f);
        path.lineTo(292.894f, 103.001f);
        path.lineTo(292.844f, 103.001f);
        path.lineTo(292.644f, 101.001f);
        path.close();
        path.moveTo(285.785f, 101.921f);
        path.lineTo(285.635f, 99.8212f);
        path.lineTo(288.185f, 110.671f);
        path.lineTo(287.385f, 111.121f);
        path.lineTo(285.785f, 101.921f);
        path.close();
        path.moveTo(288.409f, 111.543f);
        path.lineTo(288.959f, 113.493f);
        path.lineTo(289.159f, 114.393f);
        path.lineTo(287.909f, 115.493f);
        path.lineTo(287.459f, 111.893f);
        path.lineTo(288.409f, 111.543f);
        path.close();
        path.moveTo(296.096f, 106.939f);
        path.lineTo(296.146f, 107.389f);
        path.lineTo(295.946f, 107.089f);
        path.lineTo(295.996f, 106.189f);
        path.lineTo(296.096f, 106.939f);
        path.close();
        path.moveTo(295.912f, 107.537f);
        path.lineTo(296.112f, 107.537f);
        path.quadTo(296.312f, 111.387f, 296.862f, 115.587f);
        path.lineTo(296.562f, 115.787f);
        path.quadTo(295.82f, 111.773f, 295.912f, 107.537f);
        path.close();
        path.moveTo(291.401f, 103.809f);
        path.lineTo(291.401f, 102.759f);
        path.lineTo(291.501f, 102.409f);
        path.lineTo(291.651f, 104.059f);
        path.lineTo(291.401f, 103.809f);
        path.close();
        path.moveTo(291.401f, 107.123f);
        path.lineTo(291.951f, 107.323f);
        path.lineTo(292.301f, 112.073f);
        path.lineTo(291.401f, 108.573f);
        path.lineTo(291.401f, 107.123f);
        path.close();
        path.moveTo(293.518f, 111.22f);
        path.lineTo(293.218f, 111.47f);
        path.lineTo(293.068f, 107.47f);
        path.lineTo(295.068f, 107.52f);
        path.quadTo(295.018f, 110.72f, 295.418f, 113.47f);
        path.lineTo(295.568f, 114.52f);
        path.lineTo(294.618f, 113.27f);
        path.quadTo(294.318f, 113.37f, 294.018f, 113.57f);
        path.lineTo(293.818f, 113.77f);
        path.lineTo(293.568f, 116.62f);
        path.lineTo(293.318f, 115.77f);
        path.lineTo(293.268f, 114.62f);
        path.lineTo(293.418f, 115.17f);
        path.lineTo(293.268f, 114.22f);
        path.lineTo(293.268f, 113.27f);
        path.quadTo(293.818f, 112.62f, 293.818f, 111.92f);
        path.quadTo(293.818f, 110.87f, 293.668f, 110.92f);
        path.lineTo(293.518f, 111.22f);
        path.close();
        path.moveTo(270.041f, 110.76f);
        path.lineTo(270.041f, 111.46f);
        path.lineTo(273.941f, 111.91f);
        path.lineTo(274.591f, 111.71f);
        path.lineTo(274.441f, 111.21f);
        path.lineTo(270.041f, 110.76f);
        path.close();
        path.moveTo(274.598f, 103.164f);
        path.lineTo(270.448f, 103.064f);
        path.quadTo(269.548f, 103.364f, 269.098f, 104.714f);
        path.quadTo(270.048f, 105.664f, 274.448f, 105.914f);
        path.quadTo(274.448f, 104.864f, 274.648f, 104.464f);
        path.lineTo(274.898f, 103.864f);
        path.lineTo(274.748f, 103.064f);
        path.lineTo(274.598f, 103.164f);
        path.close();
        path.moveTo(272.757f, 115.363f);
        path.lineTo(274.807f, 115.063f);
        path.lineTo(271.207f, 114.363f);
        path.quadTo(271.407f, 114.663f, 270.657f, 115.063f);
        path.lineTo(272.757f, 115.363f);
        path.close();
        path.moveTo(275.104f, 121.762f);
        path.lineTo(275.054f, 123.062f);
        path.quadTo(275.054f, 122.312f, 274.454f, 121.112f);
        path.lineTo(273.404f, 119.012f);
        path.quadTo(274.654f, 119.012f, 275.004f, 120.062f);
        path.lineTo(275.104f, 121.762f);
        path.close();
        path.moveTo(276.44f, 125.215f);
        path.quadTo(276.44f, 117.415f, 272.84f, 118.065f);
        path.quadTo(271.34f, 118.315f, 270.29f, 120.015f);
        path.quadTo(269.14f, 121.765f, 269.14f, 124.065f);
        path.quadTo(269.14f, 125.865f, 270.24f, 130.165f);
        path.quadTo(271.59f, 135.415f, 273.04f, 136.465f);
        path.quadTo(273.99f, 135.215f, 275.29f, 130.515f);
        path.quadTo(276.44f, 126.274f, 276.44f, 125.215f);
        path.close();
        path.moveTo(270.455f, 125.721f);
        path.lineTo(270.255f, 125.721f);
        path.lineTo(270.255f, 122.221f);
        path.lineTo(270.455f, 125.721f);
        path.close();
        path.moveTo(289.559f, 115.64f);
        path.lineTo(289.659f, 116.04f);
        path.lineTo(289.759f, 117.99f);
        path.lineTo(289.259f, 125.34f);
        path.lineTo(289.009f, 123.59f);
        path.lineTo(288.859f, 123.59f);
        path.lineTo(288.409f, 119.54f);
        path.lineTo(288.009f, 116.09f);
        path.lineTo(289.559f, 115.64f);
        path.close();
        path.moveTo(295.038f, 124.294f);
        path.lineTo(294.438f, 123.344f);
        path.lineTo(294.438f, 120.194f);
        path.lineTo(294.638f, 118.594f);
        path.lineTo(295.038f, 124.294f);
        path.close();
        path.moveTo(287.488f, 128.668f);
        path.lineTo(287.338f, 125.968f);
        path.lineTo(287.338f, 125.668f);
        path.lineTo(288.288f, 136.468f);
        path.lineTo(288.138f, 137.818f);
        path.lineTo(287.938f, 136.368f);
        path.lineTo(287.688f, 136.368f);
        path.lineTo(287.688f, 137.168f);
        path.lineTo(287.588f, 138.268f);
        path.lineTo(287.788f, 142.368f);
        path.lineTo(287.038f, 153.818f);
        path.lineTo(286.938f, 153.418f);
        path.quadTo(285.788f, 154.268f, 285.788f, 156.718f);
        path.quadTo(285.788f, 159.368f, 286.788f, 165.118f);
        path.lineTo(286.638f, 165.118f);
        path.quadTo(285.538f, 160.018f, 284.838f, 158.068f);
        path.quadTo(283.538f, 154.718f, 281.938f, 153.518f);
        path.lineTo(282.138f, 153.318f);
        path.lineTo(282.438f, 153.068f);
        path.quadTo(282.638f, 151.318f, 283.638f, 148.018f);
        path.lineTo(283.738f, 147.768f);
        path.lineTo(283.738f, 147.968f);
        path.lineTo(284.238f, 147.668f);
        path.quadTo(283.838f, 151.118f, 283.838f, 152.618f);
        path.quadTo(283.838f, 153.968f, 284.088f, 154.268f);
        path.lineTo(284.988f, 154.218f);
        path.quadTo(285.688f, 150.568f, 286.588f, 142.018f);
        path.quadTo(287.488f, 132.995f, 287.488f, 128.668f);
        path.close();
        path.moveTo(293.841f, 129.128f);
        path.lineTo(293.941f, 127.328f);
        path.lineTo(293.991f, 126.778f);
        path.lineTo(295.291f, 128.778f);
        path.lineTo(295.391f, 130.528f);
        path.lineTo(293.841f, 129.128f);
        path.close();
        path.moveTo(290.894f, 134.882f);
        path.lineTo(291.144f, 132.932f);
        path.lineTo(292.044f, 138.782f);
        path.quadTo(291.944f, 139.132f, 291.744f, 138.982f);
        path.lineTo(291.444f, 137.932f);
        path.lineTo(290.894f, 134.882f);
        path.close();
        path.moveTo(297.431f, 131.706f);
        path.lineTo(297.631f, 131.356f);
        path.lineTo(297.981f, 131.656f);
        path.lineTo(297.431f, 131.706f);
        path.close();
        path.moveTo(294.439f, 133.593f);
        path.lineTo(294.639f, 133.843f);
        path.lineTo(295.039f, 133.643f);
        path.lineTo(294.139f, 135.993f);
        path.lineTo(293.789f, 133.643f);
        path.lineTo(294.439f, 133.593f);
        path.close();
        path.moveTo(296.327f, 134.146f);
        path.lineTo(297.977f, 135.396f);
        path.lineTo(296.477f, 137.646f);
        path.quadTo(295.127f, 139.996f, 294.777f, 142.346f);
        path.lineTo(294.377f, 138.096f);
        path.lineTo(294.427f, 138.046f);
        path.lineTo(296.327f, 134.146f);
        path.close();
        path.moveTo(244.445f, 111.911f);
        path.lineTo(244.295f, 112.761f);
        path.lineTo(244.945f, 112.761f);
        path.quadTo(246.195f, 112.761f, 246.795f, 111.911f);
        path.lineTo(246.445f, 111.311f);
        path.lineTo(246.095f, 110.761f);
        path.lineTo(242.645f, 110.711f);
        path.lineTo(242.645f, 111.411f);
        path.lineTo(243.645f, 111.311f);
        path.quadTo(244.445f, 111.22f, 244.445f, 111.911f);
        path.close();
        path.moveTo(244.445f, 104.085f);
        path.lineTo(247.295f, 103.635f);
        path.lineTo(246.545f, 102.235f);
        path.lineTo(242.145f, 101.335f);
        path.quadTo(242.145f, 101.535f, 241.745f, 101.585f);
        path.quadTo(241.945f, 101.985f, 242.645f, 102.235f);
        path.lineTo(241.495f, 102.285f);
        path.quadTo(241.045f, 102.285f, 241.045f, 102.985f);
        path.quadTo(241.045f, 104.135f, 241.295f, 103.585f);
        path.lineTo(244.445f, 104.085f);
        path.close();
        path.moveTo(233.627f, 102.474f);
        path.lineTo(234.327f, 98.8237f);
        path.quadTo(234.677f, 96.3737f, 235.027f, 95.2737f);
        path.quadTo(236.227f, 96.5237f, 235.427f, 100.474f);
        path.lineTo(233.677f, 106.624f);
        path.lineTo(233.627f, 106.624f);
        path.lineTo(233.627f, 102.474f);
        path.close();
        path.moveTo(228.517f, 95.7526f);
        path.lineTo(228.967f, 96.0526f);
        path.lineTo(228.817f, 96.9026f);
        path.lineTo(228.517f, 99.1526f);
        path.lineTo(228.517f, 95.7526f);
        path.close();
        path.moveTo(226.906f, 109.425f);
        path.lineTo(227.106f, 109.375f);
        path.lineTo(226.906f, 111.175f);
        path.lineTo(226.606f, 111.025f);
        path.lineTo(224.906f, 110.275f);
        path.quadTo(225.206f, 105.925f, 225.806f, 102.025f);
        path.lineTo(225.956f, 104.475f);
        path.quadTo(226.261f, 107.537f, 226.906f, 109.425f);
        path.close();
        path.moveTo(224.973f, 112.878f);
        path.lineTo(224.872f, 111.228f);
        path.lineTo(226.072f, 111.828f);
        path.lineTo(226.772f, 112.078f);
        path.lineTo(226.722f, 112.328f);
        path.lineTo(226.622f, 113.328f);
        path.lineTo(224.973f, 112.878f);
        path.close();
        path.moveTo(241.959f, 123.189f);
        path.lineTo(241.909f, 122.239f);
        path.quadTo(242.659f, 121.789f, 242.859f, 121.789f);
        path.lineTo(242.359f, 123.389f);
        path.lineTo(241.959f, 123.189f);
        path.close();
        path.moveTo(225.065f, 114.397f);
        path.lineTo(225.865f, 114.897f);
        path.lineTo(226.365f, 115.147f);
        path.lineTo(226.115f, 117.047f);
        path.lineTo(225.915f, 116.997f);
        path.quadTo(225.465f, 116.997f, 225.165f, 116.697f);
        path.lineTo(225.165f, 116.247f);
        path.lineTo(225.065f, 114.397f);
        path.close();
        path.moveTo(224.604f, 115.363f);
        path.lineTo(224.604f, 115.263f);
        path.lineTo(224.654f, 114.213f);
        path.lineTo(224.704f, 114.213f);
        path.lineTo(224.604f, 115.363f);
        path.close();
        path.moveTo(229.668f, 126.596f);
        path.lineTo(229.618f, 127.896f);
        path.quadTo(229.468f, 127.146f, 229.468f, 125.946f);
        path.lineTo(229.568f, 125.796f);
        path.lineTo(229.668f, 126.596f);
        path.close();
        path.moveTo(229.484f, 132.396f);
        path.lineTo(229.484f, 132.246f);
        path.lineTo(230.334f, 135.396f);
        path.lineTo(230.434f, 135.846f);
        path.lineTo(230.484f, 136.846f);
        path.lineTo(230.634f, 139.646f);
        path.lineTo(229.984f, 139.646f);
        path.lineTo(229.634f, 138.896f);
        path.lineTo(229.584f, 138.196f);
        path.lineTo(229.484f, 132.646f);
        path.lineTo(229.434f, 132.646f);
        path.lineTo(229.484f, 132.396f);
        path.close();
        path.moveTo(228.747f, 134.33f);
        path.lineTo(228.847f, 134.08f);
        path.lineTo(229.247f, 133.28f);
        path.lineTo(229.247f, 134.73f);
        path.lineTo(229.147f, 134.13f);
        path.lineTo(228.847f, 134.13f);
        path.lineTo(228.847f, 137.23f);
        path.lineTo(228.747f, 134.33f);
        path.close();
        path.moveTo(233.673f, 120.703f);
        path.quadTo(233.873f, 124.103f, 235.873f, 129.803f);
        path.lineTo(239.373f, 139.503f);
        path.quadTo(234.041f, 131.061f, 233.673f, 120.703f);
        path.close();
        path.moveTo(244.215f, 115.778f);
        path.lineTo(245.815f, 115.528f);
        path.lineTo(242.615f, 115.128f);
        path.lineTo(242.615f, 115.528f);
        path.lineTo(244.215f, 115.778f);
        path.close();
        path.moveTo(246.333f, 122.959f);
        path.lineTo(246.583f, 122.959f);
        path.lineTo(246.333f, 125.559f);
        path.lineTo(246.133f, 128.209f);
        path.lineTo(246.083f, 128.209f);
        path.lineTo(245.883f, 126.209f);
        path.quadTo(245.872f, 124.801f, 246.333f, 122.959f);
        path.close();
        path.moveTo(246.333f, 121.808f);
        path.lineTo(244.683f, 121.758f);
        path.lineTo(244.683f, 121.508f);
        path.quadTo(244.683f, 121.108f, 245.383f, 120.408f);
        path.lineTo(246.583f, 120.408f);
        path.lineTo(246.333f, 121.808f);
        path.close();
        path.moveTo(243.064f, 130.923f);
        path.lineTo(242.614f, 129.623f);
        path.lineTo(242.614f, 129.573f);
        path.lineTo(243.564f, 132.373f);
        path.lineTo(243.064f, 130.923f);
        path.close();
        path.moveTo(258.624f, 134.882f);
        path.quadTo(256.624f, 135.032f, 256.024f, 135.382f);
        path.quadTo(256.574f, 135.932f, 256.624f, 138.132f);
        path.quadTo(257.124f, 139.982f, 259.624f, 139.982f);
        path.quadTo(260.424f, 139.982f, 261.974f, 137.232f);
        path.lineTo(261.974f, 134.882f);
        path.quadTo(260.465f, 134.744f, 258.624f, 134.882f);
        path.close();
        path.moveTo(260.373f, 137.414f);
        path.lineTo(260.123f, 137.414f);
        path.lineTo(260.073f, 135.814f);
        path.lineTo(260.523f, 136.864f);
        path.lineTo(260.373f, 137.414f);
        path.close();
        path.moveTo(243.571f, 143.675f);
        path.lineTo(242.821f, 143.925f);
        path.lineTo(241.271f, 138.775f);
        path.lineTo(241.271f, 138.625f);
        path.quadTo(241.683f, 139.163f, 243.571f, 143.675f);
        path.close();
        path.moveTo(243.939f, 147.542f);
        path.lineTo(243.139f, 145.942f);
        path.lineTo(243.139f, 145.742f);
        path.quadTo(243.639f, 145.942f, 246.289f, 149.442f);
        path.quadTo(244.814f, 148.877f, 243.939f, 147.542f);
        path.close();
        path.moveTo(247.115f, 152.836f);
        path.lineTo(247.715f, 153.736f);
        path.lineTo(247.215f, 154.336f);
        path.lineTo(246.315f, 153.086f);
        path.quadTo(245.265f, 151.436f, 245.365f, 150.836f);
        path.lineTo(245.365f, 150.786f);
        path.lineTo(247.115f, 152.836f);
        path.close();
        path.moveTo(244.123f, 158.13f);
        path.lineTo(244.323f, 158.48f);
        path.lineTo(244.223f, 158.53f);
        path.quadTo(243.823f, 157.93f, 242.823f, 157.78f);
        path.lineTo(242.773f, 157.78f);
        path.lineTo(242.373f, 157.23f);
        path.lineTo(243.323f, 157.03f);
        path.lineTo(244.123f, 158.13f);
        path.close();
        path.moveTo(250.614f, 154.677f);
        path.lineTo(250.814f, 154.877f);
        path.lineTo(250.664f, 154.877f);
        path.lineTo(250.614f, 154.677f);
        path.close();
        path.moveTo(259.315f, 153.803f);
        path.lineTo(259.265f, 153.703f);
        path.lineTo(259.165f, 151.503f);
        path.lineTo(262.565f, 151.903f);
        path.lineTo(266.415f, 152.703f);
        path.quadTo(263.089f, 153.803f, 259.315f, 153.803f);
        path.close();
        path.moveTo(256.875f, 151.04f);
        path.lineTo(256.725f, 151.34f);
        path.quadTo(256.175f, 151.54f, 254.825f, 150.69f);
        path.lineTo(254.675f, 150.54f);
        path.lineTo(257.225f, 150.54f);
        path.lineTo(256.875f, 151.04f);
        path.close();
        path.moveTo(251.811f, 153.112f);
        path.lineTo(252.161f, 153.262f);
        path.lineTo(251.961f, 153.562f);
        path.lineTo(251.811f, 153.112f);
        path.close();
        path.moveTo(253.238f, 155.184f);
        path.quadTo(253.338f, 155.034f, 253.988f, 155.184f);
        path.lineTo(254.838f, 155.634f);
        path.lineTo(253.038f, 160.784f);
        path.lineTo(251.338f, 164.834f);
        path.lineTo(251.238f, 163.634f);
        path.lineTo(250.988f, 161.934f);
        path.quadTo(250.988f, 160.934f, 252.038f, 158.084f);
        path.lineTo(252.738f, 156.384f);
        path.lineTo(252.788f, 156.284f);
        path.lineTo(252.938f, 155.934f);
        path.lineTo(253.238f, 155.184f);
        path.close();
        path.moveTo(237.54f, 144.78f);
        path.lineTo(237.44f, 144.63f);
        path.lineTo(237.39f, 144.23f);
        path.lineTo(237.44f, 144.33f);
        path.lineTo(237.54f, 144.78f);
        path.close();
        path.moveTo(233.811f, 142.11f);
        path.quadTo(234.161f, 144.46f, 235.161f, 147.31f);
        path.lineTo(235.861f, 149.76f);
        path.lineTo(235.711f, 152.21f);
        path.lineTo(235.661f, 154.36f);
        path.lineTo(234.511f, 150.16f);
        path.lineTo(233.511f, 145.56f);
        path.lineTo(233.811f, 142.11f);
        path.close();
        path.moveTo(227.09f, 141.972f);
        path.lineTo(227.04f, 141.422f);
        path.lineTo(228.19f, 144.622f);
        path.quadTo(228.49f, 147.422f, 229.19f, 150.672f);
        path.quadTo(229.19f, 160.522f, 229.84f, 165.522f);
        path.lineTo(230.89f, 173.022f);
        path.lineTo(232.14f, 182.822f);
        path.quadTo(230.79f, 189.572f, 228.94f, 201.772f);
        path.lineTo(228.34f, 195.822f);
        path.lineTo(228.34f, 192.922f);
        path.lineTo(227.69f, 187.172f);
        path.lineTo(227.49f, 185.172f);
        path.quadTo(228.34f, 176.572f, 228.34f, 173.972f);
        path.lineTo(228.14f, 163.622f);
        path.lineTo(228.34f, 158.522f);
        path.lineTo(227.74f, 149.022f);
        path.lineTo(227.69f, 148.872f);
        path.lineTo(227.09f, 141.972f);
        path.close();
        path.moveTo(226.676f, 145.839f);
        path.lineTo(226.776f, 147.839f);
        path.lineTo(226.376f, 144.739f);
        path.lineTo(226.676f, 145.839f);
        path.close();
        path.moveTo(226.261f, 139.21f);
        path.lineTo(226.411f, 142.46f);
        path.lineTo(225.261f, 136.31f);
        path.lineTo(226.261f, 139.21f);
        path.close();
        path.moveTo(230.128f, 150.534f);
        path.lineTo(230.128f, 150.234f);
        path.quadTo(232.678f, 157.784f, 232.678f, 158.534f);
        path.lineTo(232.778f, 162.734f);
        path.quadTo(231.178f, 158.584f, 230.178f, 152.184f);
        path.lineTo(230.128f, 150.534f);
        path.close();
        path.moveTo(238.092f, 148.509f);
        path.quadTo(239.742f, 149.759f, 240.442f, 151.809f);
        path.lineTo(241.942f, 156.309f);
        path.quadTo(240.792f, 155.009f, 239.242f, 152.259f);
        path.lineTo(238.592f, 150.909f);
        path.lineTo(238.092f, 148.509f);
        path.close();
        path.moveTo(241.453f, 159.649f);
        path.quadTo(241.103f, 161.599f, 240.353f, 163.099f);
        path.quadTo(240.353f, 160.799f, 239.753f, 157.199f);
        path.lineTo(241.453f, 159.649f);
        path.close();
        path.moveTo(242.005f, 164.667f);
        path.lineTo(242.105f, 164.467f);
        path.quadTo(242.405f, 166.567f, 242.105f, 168.667f);
        path.lineTo(241.255f, 168.217f);
        path.lineTo(241.005f, 168.017f);
        path.lineTo(242.005f, 164.667f);
        path.close();
        path.moveTo(231.832f, 166.969f);
        path.lineTo(232.182f, 166.869f);
        path.quadTo(231.032f, 162.769f, 230.482f, 156.569f);
        path.quadTo(231.582f, 160.619f, 232.782f, 163.469f);
        path.quadTo(232.982f, 169.519f, 233.632f, 176.319f);
        path.lineTo(233.782f, 177.519f);
        path.lineTo(233.182f, 177.619f);
        path.lineTo(232.782f, 179.369f);
        path.lineTo(231.732f, 172.419f);
        path.quadTo(230.482f, 165.469f, 230.182f, 160.219f);
        path.quadTo(230.773f, 164.114f, 231.832f, 166.969f);
        path.close();
        path.moveTo(257.703f, 165.127f);
        path.lineTo(257.703f, 164.977f);
        path.lineTo(259.103f, 170.227f);
        path.lineTo(259.953f, 174.827f);
        path.quadTo(259.953f, 176.077f, 258.403f, 181.677f);
        path.lineTo(256.553f, 188.377f);
        path.lineTo(256.553f, 183.927f);
        path.quadTo(257.565f, 171.388f, 257.703f, 165.127f);
        path.close();
        path.moveTo(253.56f, 165.864f);
        path.quadTo(254.96f, 161.114f, 255.41f, 160.464f);
        path.quadTo(254.66f, 170.014f, 254.01f, 190.164f);
        path.lineTo(254.01f, 189.964f);
        path.lineTo(253.06f, 181.064f);
        path.quadTo(252.06f, 173.414f, 252.06f, 171.414f);
        path.quadTo(252.087f, 170.605f, 253.56f, 165.864f);
        path.close();
        path.moveTo(250.798f, 177.649f);
        path.lineTo(250.798f, 177.499f);
        path.quadTo(251.448f, 184.149f, 251.948f, 197.199f);
        path.lineTo(252.448f, 210.299f);
        path.lineTo(252.048f, 218.299f);
        path.lineTo(251.648f, 229.949f);
        path.quadTo(248.748f, 201.899f, 248.748f, 195.499f);
        path.quadTo(248.748f, 189.199f, 248.898f, 188.199f);
        path.lineTo(250.798f, 177.649f);
        path.close();
        path.moveTo(244.629f, 173.367f);
        path.quadTo(244.929f, 171.517f, 247.929f, 160.517f);
        path.lineTo(246.979f, 185.167f);
        path.lineTo(246.029f, 210.367f);
        path.quadTo(245.379f, 204.567f, 244.879f, 194.217f);
        path.quadTo(244.379f, 185.767f, 244.379f, 183.567f);
        path.quadTo(244.399f, 174.933f, 244.629f, 173.367f);
        path.close();
        path.moveTo(289.053f, 142.754f);
        path.lineTo(289.103f, 143.404f);
        path.lineTo(289.053f, 144.654f);
        path.lineTo(289.103f, 146.854f);
        path.lineTo(289.353f, 146.854f);
        path.lineTo(289.203f, 148.504f);
        path.lineTo(289.103f, 149.704f);
        path.lineTo(288.753f, 145.354f);
        path.lineTo(289.053f, 142.754f);
        path.close();
        path.moveTo(281.78f, 139.532f);
        path.quadTo(281.38f, 140.382f, 280.98f, 142.182f);
        path.quadTo(280.43f, 143.682f, 278.98f, 144.082f);
        path.lineTo(281.53f, 139.532f);
        path.lineTo(281.78f, 139.532f);
        path.close();
        path.moveTo(282.47f, 145.746f);
        path.lineTo(282.47f, 145.746f);
        path.quadTo(282.77f, 147.396f, 281.72f, 149.196f);
        path.lineTo(282.47f, 145.746f);
        path.close();
        path.moveTo(283.713f, 147.726f);
        path.quadTo(284.513f, 144.876f, 284.513f, 143.376f);
        path.lineTo(284.713f, 143.626f);
        path.lineTo(284.313f, 146.876f);
        path.lineTo(283.813f, 147.576f);
        path.lineTo(283.713f, 147.726f);
        path.close();
        path.moveTo(280.122f, 152.56f);
        path.lineTo(280.272f, 152.81f);
        path.lineTo(279.822f, 152.76f);
        path.lineTo(279.072f, 152.86f);
        path.lineTo(279.872f, 151.46f);
        path.lineTo(280.122f, 152.56f);
        path.close();
        path.moveTo(281.319f, 157.255f);
        path.lineTo(281.319f, 157.105f);
        path.quadTo(283.169f, 162.705f, 285.119f, 179.705f);
        path.lineTo(285.019f, 179.905f);
        path.quadTo(280.969f, 160.355f, 280.969f, 159.155f);
        path.lineTo(281.069f, 157.805f);
        path.lineTo(281.319f, 157.255f);
        path.close();
        path.moveTo(287.672f, 157.117f);
        path.lineTo(288.272f, 151.017f);
        path.lineTo(288.622f, 155.867f);
        path.lineTo(288.222f, 160.517f);
        path.lineTo(287.672f, 157.117f);
        path.close();
        path.moveTo(291.401f, 151.639f);
        path.lineTo(291.401f, 151.439f);
        path.lineTo(292.301f, 156.739f);
        path.lineTo(293.151f, 162.089f);
        path.lineTo(293.851f, 167.139f);
        path.lineTo(294.401f, 172.989f);
        path.lineTo(294.301f, 172.989f);
        path.lineTo(294.301f, 180.889f);
        path.lineTo(295.051f, 185.239f);
        path.lineTo(295.051f, 196.139f);
        path.quadTo(294.851f, 185.789f, 292.751f, 164.989f);
        path.lineTo(291.401f, 151.689f);
        path.lineTo(291.401f, 151.639f);
        path.close();
        path.moveTo(290.434f, 152.468f);
        path.lineTo(290.534f, 157.718f);
        path.lineTo(290.384f, 163.768f);
        path.lineTo(290.434f, 166.668f);
        path.lineTo(289.784f, 158.018f);
        path.lineTo(289.384f, 152.868f);
        path.lineTo(289.784f, 148.168f);
        path.lineTo(289.834f, 147.568f);
        path.lineTo(290.134f, 148.918f);
        path.lineTo(290.434f, 152.468f);
        path.close();
        path.moveTo(278.327f, 147.588f);
        path.lineTo(278.577f, 147.588f);
        path.quadTo(277.477f, 150.288f, 275.727f, 152.738f);
        path.quadTo(273.777f, 155.588f, 271.927f, 156.338f);
        path.lineTo(270.827f, 154.838f);
        path.lineTo(274.277f, 152.038f);
        path.quadTo(277.452f, 149.291f, 278.327f, 147.588f);
        path.close();
        path.moveTo(262.905f, 158.084f);
        path.lineTo(262.205f, 157.134f);
        path.lineTo(263.955f, 156.984f);
        path.lineTo(265.355f, 156.934f);
        path.lineTo(265.655f, 157.034f);
        path.lineTo(265.355f, 157.434f);
        path.lineTo(265.255f, 157.784f);
        path.lineTo(264.805f, 158.684f);
        path.lineTo(264.255f, 159.384f);
        path.quadTo(263.55f, 159.005f, 262.905f, 158.084f);
        path.close();
        path.moveTo(267.831f, 157.439f);
        path.lineTo(269.381f, 157.739f);
        path.quadTo(268.331f, 159.139f, 267.381f, 159.839f);
        path.quadTo(266.781f, 160.289f, 266.781f, 160.539f);
        path.quadTo(266.781f, 161.689f, 267.031f, 161.189f);
        path.lineTo(271.681f, 160.939f);
        path.lineTo(271.631f, 161.389f);
        path.lineTo(270.881f, 162.239f);
        path.quadTo(270.481f, 162.739f, 270.481f, 163.439f);
        path.lineTo(270.531f, 164.289f);
        path.lineTo(270.731f, 164.389f);
        path.lineTo(272.731f, 163.439f);
        path.lineTo(272.181f, 171.089f);
        path.lineTo(271.981f, 170.889f);
        path.quadTo(271.531f, 164.339f, 270.231f, 164.339f);
        path.lineTo(267.981f, 164.239f);
        path.quadTo(266.031f, 163.639f, 266.031f, 161.289f);
        path.quadTo(266.031f, 159.339f, 267.081f, 158.089f);
        path.lineTo(267.831f, 157.439f);
        path.close();
        path.moveTo(274.046f, 156.288f);
        path.lineTo(273.046f, 156.538f);
        path.lineTo(274.446f, 155.638f);
        path.lineTo(274.446f, 155.838f);
        path.lineTo(274.046f, 156.288f);
        path.close();
        path.moveTo(271.238f, 158.268f);
        path.lineTo(271.988f, 158.168f);
        path.lineTo(272.288f, 158.668f);
        path.quadTo(271.888f, 159.018f, 271.888f, 159.268f);
        path.lineTo(269.388f, 159.518f);
        path.lineTo(269.988f, 158.868f);
        path.quadTo(270.455f, 158.406f, 271.238f, 158.268f);
        path.close();
        path.moveTo(276.67f, 162.871f);
        path.lineTo(275.72f, 161.021f);
        path.lineTo(276.62f, 159.621f);
        path.lineTo(276.67f, 162.871f);
        path.close();
        path.moveTo(274.552f, 164.805f);
        path.lineTo(274.552f, 164.655f);
        path.quadTo(275.752f, 166.605f, 276.052f, 171.555f);
        path.lineTo(276.452f, 179.055f);
        path.quadTo(274.352f, 177.155f, 274.402f, 172.255f);
        path.quadTo(274.874f, 166.83f, 274.552f, 164.805f);
        path.close();
        path.moveTo(262.537f, 159.971f);
        path.quadTo(263.987f, 161.471f, 263.987f, 162.071f);
        path.quadTo(263.987f, 165.071f, 261.737f, 169.321f);
        path.quadTo(260.987f, 166.371f, 259.837f, 157.271f);
        path.lineTo(262.537f, 159.971f);
        path.close();
        path.moveTo(269.12f, 170.743f);
        path.lineTo(269.12f, 170.643f);
        path.quadTo(270.47f, 176.993f, 271.77f, 191.843f);
        path.quadTo(273.12f, 206.993f, 273.12f, 216.393f);
        path.quadTo(273.12f, 217.993f, 272.92f, 216.793f);
        path.quadTo(272.12f, 214.693f, 269.47f, 205.243f);
        path.quadTo(266.87f, 195.643f, 266.87f, 194.343f);
        path.quadTo(266.87f, 192.643f, 267.62f, 183.643f);
        path.quadTo(268.475f, 173.552f, 269.12f, 170.743f);
        path.close();
        path.moveTo(265.115f, 171.066f);
        path.quadTo(265.365f, 174.616f, 264.915f, 178.766f);
        path.lineTo(264.765f, 178.766f);
        path.lineTo(264.765f, 173.466f);
        path.lineTo(265.115f, 171.066f);
        path.close();
        path.moveTo(291.171f, 160.708f);
        path.lineTo(291.171f, 160.208f);
        path.quadTo(293.171f, 181.408f, 294.621f, 206.658f);
        path.lineTo(294.771f, 206.558f);
        path.lineTo(294.221f, 221.308f);
        path.quadTo(292.521f, 213.608f, 291.621f, 204.308f);
        path.lineTo(290.071f, 178.758f);
        path.quadTo(289.521f, 169.758f, 288.521f, 162.558f);
        path.lineTo(288.821f, 159.108f);
        path.quadTo(290.121f, 177.258f, 290.821f, 182.558f);
        path.lineTo(291.121f, 182.308f);
        path.lineTo(291.171f, 180.958f);
        path.lineTo(290.771f, 172.158f);
        path.lineTo(291.021f, 172.058f);
        path.lineTo(291.171f, 160.708f);
        path.close();
        path.moveTo(295.36f, 181.976f);
        path.lineTo(295.21f, 181.976f);
        path.lineTo(295.01f, 178.726f);
        path.lineTo(295.36f, 181.976f);
        path.close();
        path.moveTo(260.926f, 179.72f);
        path.lineTo(261.076f, 180.02f);
        path.quadTo(262.826f, 193.27f, 262.726f, 217.12f);
        path.quadTo(262.676f, 228.02f, 262.776f, 236.12f);
        path.lineTo(258.176f, 236.22f);
        path.quadTo(256.576f, 220.12f, 256.576f, 203.52f);
        path.quadTo(256.576f, 199.67f, 258.376f, 190.97f);
        path.lineTo(260.926f, 179.72f);
        path.close();
        path.moveTo(283.529f, 184.554f);
        path.lineTo(284.279f, 187.504f);
        path.lineTo(285.029f, 191.254f);
        path.quadTo(284.829f, 191.554f, 283.879f, 190.954f);
        path.quadTo(283.529f, 188.554f, 283.529f, 184.654f);
        path.lineTo(283.529f, 184.554f);
        path.close();
        path.moveTo(287.58f, 193.07f);
        path.lineTo(287.38f, 182.42f);
        path.quadTo(287.73f, 185.32f, 287.73f, 193.07f);
        path.lineTo(287.58f, 193.07f);
        path.close();
        path.moveTo(285.094f, 194.359f);
        path.lineTo(285.494f, 194.309f);
        path.lineTo(285.794f, 195.909f);
        path.lineTo(284.694f, 194.459f);
        path.lineTo(285.094f, 194.359f);
        path.close();
        path.moveTo(284.358f, 202.277f);
        path.quadTo(284.358f, 201.427f, 285.008f, 200.677f);
        path.lineTo(286.258f, 199.427f);
        path.lineTo(286.358f, 199.327f);
        path.lineTo(286.508f, 200.077f);
        path.lineTo(287.258f, 204.677f);
        path.quadTo(287.258f, 206.627f, 286.408f, 212.627f);
        path.lineTo(286.258f, 212.627f);
        path.quadTo(285.858f, 211.777f, 285.108f, 207.677f);
        path.quadTo(284.358f, 203.52f, 284.358f, 202.277f);
        path.close();
        path.moveTo(289.974f, 199.607f);
        path.lineTo(289.974f, 199.457f);
        path.quadTo(290.424f, 202.157f, 290.124f, 207.007f);
        path.lineTo(290.124f, 206.807f);
        path.lineTo(289.824f, 205.407f);
        path.lineTo(289.674f, 203.457f);
        path.quadTo(289.652f, 201.541f, 289.974f, 199.607f);
        path.close();
        path.moveTo(266.22f, 203.336f);
        path.lineTo(266.52f, 203.686f);
        path.lineTo(273.42f, 231.186f);
        path.lineTo(274.62f, 236.086f);
        path.lineTo(265.87f, 236.136f);
        path.lineTo(265.12f, 220.636f);
        path.lineTo(265.27f, 220.986f);
        path.quadTo(265.97f, 221.536f, 266.67f, 221.486f);
        path.quadTo(267.17f, 221.486f, 267.52f, 221.186f);
        path.lineTo(267.52f, 212.986f);
        path.lineTo(266.22f, 203.336f);
        path.close();
        path.moveTo(279.386f, 198.963f);
        path.lineTo(279.386f, 198.813f);
        path.quadTo(280.036f, 201.913f, 280.786f, 207.863f);
        path.lineTo(281.986f, 218.063f);
        path.lineTo(281.786f, 218.263f);
        path.lineTo(280.336f, 208.613f);
        path.quadTo(279.432f, 202.507f, 279.386f, 198.963f);
        path.close();
        path.moveTo(277.268f, 193.439f);
        path.lineTo(277.318f, 200.039f);
        path.quadTo(277.318f, 204.039f, 277.568f, 206.539f);
        path.quadTo(277.918f, 209.389f, 280.318f, 220.739f);
        path.lineTo(282.568f, 232.539f);
        path.quadTo(282.568f, 233.389f, 281.668f, 234.739f);
        path.lineTo(280.468f, 236.389f);
        path.quadTo(276.318f, 224.339f, 275.168f, 208.989f);
        path.quadTo(274.568f, 201.089f, 274.568f, 181.539f);
        path.quadTo(277.038f, 185.613f, 277.268f, 193.439f);
        path.close();
        path.moveTo(286.751f, 227.228f);
        path.lineTo(287.001f, 224.478f);
        path.lineTo(287.351f, 221.628f);
        path.quadTo(288.051f, 223.278f, 292.451f, 237.378f);
        path.lineTo(292.951f, 239.078f);
        path.lineTo(292.201f, 243.028f);
        path.lineTo(291.801f, 244.678f);
        path.quadTo(288.951f, 252.378f, 284.251f, 253.178f);
        path.quadTo(284.601f, 245.978f, 284.101f, 242.728f);
        path.quadTo(283.701f, 239.928f, 282.401f, 238.478f);
        path.lineTo(282.551f, 238.378f);
        path.lineTo(285.001f, 237.028f);
        path.lineTo(285.451f, 242.078f);
        path.quadTo(285.951f, 245.428f, 287.551f, 245.428f);
        path.lineTo(288.601f, 245.178f);
        path.lineTo(288.651f, 244.978f);
        path.lineTo(288.651f, 240.628f);
        path.lineTo(287.551f, 233.578f);
        path.lineTo(286.751f, 227.228f);
        path.close();
        path.moveTo(289.467f, 220.185f);
        path.quadTo(290.217f, 221.335f, 290.767f, 223.385f);
        path.lineTo(290.617f, 223.235f);
        path.lineTo(289.467f, 220.335f);
        path.lineTo(289.467f, 220.185f);
        path.close();
        path.moveTo(296.234f, 225.939f);
        path.lineTo(296.234f, 226.789f);
        path.lineTo(296.384f, 229.589f);
        path.lineTo(295.984f, 228.239f);
        path.lineTo(296.234f, 225.939f);
        path.close();
        path.moveTo(235.561f, 193.347f);
        path.lineTo(235.561f, 193.247f);
        path.quadTo(236.761f, 203.447f, 233.911f, 220.997f);
        path.lineTo(233.911f, 211.697f);
        path.lineTo(235.561f, 193.347f);
        path.close();
        path.moveTo(235.883f, 221.934f);
        path.lineTo(236.233f, 222.734f);
        path.quadTo(236.833f, 228.834f, 237.033f, 236.334f);
        path.lineTo(237.183f, 245.034f);
        path.lineTo(236.733f, 244.034f);
        path.lineTo(234.033f, 237.384f);
        path.quadTo(234.364f, 227.735f, 235.883f, 221.934f);
        path.close();
        path.moveTo(248.082f, 223.223f);
        path.lineTo(248.082f, 223.023f);
        path.quadTo(248.632f, 225.223f, 248.882f, 227.873f);
        path.quadTo(248.082f, 224.65f, 248.082f, 223.223f);
        path.close();
        path.moveTo(254.987f, 219.678f);
        path.lineTo(254.987f, 219.528f);
        path.lineTo(255.887f, 234.278f);
        path.lineTo(256.037f, 236.278f);
        path.lineTo(254.287f, 236.378f);
        path.lineTo(254.987f, 219.678f);
        path.close();
        path.moveTo(254.205f, 238.921f);
        path.lineTo(256.055f, 238.571f);
        path.lineTo(256.255f, 244.421f);
        path.lineTo(256.055f, 248.621f);
        path.lineTo(254.405f, 245.821f);
        path.quadTo(254.005f, 244.921f, 254.005f, 243.421f);
        path.lineTo(254.205f, 238.921f);
        path.close();
        path.moveTo(248.082f, 234.594f);
        path.lineTo(248.932f, 237.094f);
        path.lineTo(248.132f, 237.294f);
        path.lineTo(248.082f, 234.594f);
        path.close();
        path.moveTo(296.557f, 239.842f);
        path.lineTo(297.307f, 241.442f);
        path.lineTo(297.307f, 244.792f);
        path.lineTo(297.007f, 244.792f);
        path.quadTo(296.857f, 242.892f, 295.907f, 239.042f);
        path.lineTo(296.557f, 239.842f);
        path.close();
        path.moveTo(285.646f, 254.573f);
        path.lineTo(284.496f, 254.373f);
        path.lineTo(285.046f, 254.373f);
        path.quadTo(286.896f, 254.373f, 288.546f, 252.923f);
        path.quadTo(287.166f, 254.573f, 285.646f, 254.573f);
        path.close();
        path.moveTo(202.185f, 215.627f);
        path.lineTo(202.185f, 215.927f);
        path.quadTo(202.185f, 216.927f, 202.485f, 218.727f);
        path.lineTo(202.385f, 218.877f);
        path.lineTo(202.585f, 219.027f);
        path.lineTo(202.635f, 219.627f);
        path.quadTo(203.135f, 222.327f, 203.785f, 224.327f);
        path.lineTo(204.585f, 224.177f);
        path.quadTo(204.685f, 224.027f, 204.735f, 224.077f);
        path.lineTo(204.785f, 224.027f);
        path.lineTo(204.785f, 224.427f);
        path.quadTo(204.785f, 225.527f, 203.085f, 227.077f);
        path.lineTo(198.885f, 230.277f);
        path.lineTo(198.935f, 230.127f);
        path.lineTo(201.235f, 226.577f);
        path.lineTo(199.485f, 227.477f);
        path.lineTo(199.635f, 226.977f);
        path.quadTo(200.035f, 225.477f, 200.535f, 224.527f);
        path.lineTo(201.085f, 225.227f);
        path.lineTo(201.235f, 224.727f);
        path.lineTo(200.885f, 223.827f);
        path.lineTo(201.235f, 223.277f);
        path.lineTo(200.735f, 223.377f);
        path.quadTo(200.285f, 221.877f, 199.985f, 219.677f);
        path.lineTo(199.285f, 215.727f);
        path.lineTo(202.185f, 215.627f);
        path.close();
        path.moveTo(177.557f, 256.138f);
        path.lineTo(177.307f, 256.288f);
        path.lineTo(174.157f, 258.788f);
        path.quadTo(172.857f, 257.188f, 175.007f, 253.888f);
        path.lineTo(177.007f, 251.038f);
        path.quadTo(177.957f, 249.438f, 177.957f, 248.588f);
        path.quadTo(174.707f, 251.438f, 173.857f, 252.638f);
        path.quadTo(172.657f, 254.288f, 172.657f, 256.738f);
        path.lineTo(172.657f, 258.438f);
        path.lineTo(172.957f, 259.638f);
        path.lineTo(174.107f, 259.488f);
        path.quadTo(175.157f, 259.938f, 175.507f, 260.288f);
        path.lineTo(177.757f, 257.238f);
        path.lineTo(177.557f, 256.138f);
        path.close();
    }

    private static void draw_2(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_2(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_3(Path path)
    {
        path.reset();
        path.moveTo(176.36f, 300.332f);
        path.quadTo(176.86f, 301.882f, 177.61f, 303.032f);
        path.quadTo(180.26f, 306.932f, 187.81f, 309.832f);
        path.quadTo(211.36f, 318.982f, 280.86f, 318.982f);
        path.lineTo(289.06f, 318.132f);
        path.lineTo(295.06f, 329.282f);
        path.lineTo(293.96f, 329.132f);
        path.lineTo(284.26f, 329.732f);
        path.quadTo(259.41f, 331.532f, 221.21f, 329.332f);
        path.lineTo(198.51f, 328.132f);
        path.lineTo(190.61f, 327.732f);
        path.quadTo(177.06f, 326.732f, 170.96f, 323.782f);
        path.lineTo(169.91f, 323.232f);
        path.quadTo(176.36f, 322.582f, 177.51f, 321.282f);
        path.quadTo(177.06f, 320.832f, 168.11f, 320.282f);
        path.lineTo(165.41f, 320.082f);
        path.lineTo(162.31f, 317.832f);
        path.quadTo(154.81f, 312.782f, 152.46f, 303.482f);
        path.quadTo(151.71f, 300.482f, 151.11f, 295.482f);
        path.lineTo(150.11f, 287.682f);
        path.lineTo(149.56f, 284.832f);
        path.quadTo(153.56f, 280.932f, 157.61f, 274.632f);
        path.quadTo(163.21f, 266.032f, 163.21f, 261.082f);
        path.quadTo(163.21f, 257.882f, 159.71f, 257.332f);
        path.quadTo(156.61f, 256.832f, 152.06f, 258.582f);
        path.quadTo(148.41f, 260.032f, 145.71f, 262.232f);
        path.lineTo(144.91f, 256.632f);
        path.quadTo(142.76f, 239.782f, 142.76f, 225.182f);
        path.quadTo(142.76f, 217.582f, 147.56f, 204.932f);
        path.quadTo(153.36f, 189.782f, 160.91f, 185.932f);
        path.lineTo(184.86f, 179.782f);
        path.quadTo(201.61f, 175.882f, 218.81f, 173.582f);
        path.quadTo(266.56f, 167.182f, 328.96f, 171.232f);
        path.quadTo(357.01f, 172.982f, 371.51f, 177.482f);
        path.quadTo(386.16f, 182.032f, 392.46f, 191.082f);
        path.quadTo(398.16f, 199.132f, 399.41f, 214.632f);
        path.quadTo(399.96f, 220.932f, 400.06f, 243.382f);
        path.lineTo(398.61f, 241.732f);
        path.quadTo(396.01f, 239.532f, 392.26f, 239.682f);
        path.quadTo(388.56f, 239.732f, 385.96f, 241.932f);
        path.quadTo(383.91f, 243.582f, 383.31f, 245.882f);
        path.lineTo(383.51f, 239.182f);
        path.quadTo(383.51f, 214.932f, 373.81f, 202.032f);
        path.quadTo(365.06f, 190.432f, 346.56f, 185.732f);
        path.quadTo(332.41f, 182.182f, 304.76f, 181.382f);
        path.quadTo(270.76f, 180.932f, 251.36f, 179.982f);
        path.quadTo(187.61f, 178.532f, 169.26f, 197.182f);
        path.quadTo(163.01f, 203.482f, 161.96f, 212.332f);
        path.quadTo(161.41f, 217.132f, 162.06f, 223.932f);
        path.quadTo(162.06f, 230.532f, 164.81f, 249.782f);
        path.quadTo(163.91f, 238.132f, 163.91f, 223.532f);
        path.quadTo(163.91f, 216.982f, 165.41f, 210.432f);
        path.quadTo(167.86f, 200.132f, 173.36f, 195.632f);
        path.quadTo(180.76f, 189.482f, 187.41f, 187.582f);
        path.quadTo(190.31f, 186.782f, 209.01f, 183.882f);
        path.lineTo(230.36f, 182.882f);
        path.lineTo(251.61f, 182.032f);
        path.quadTo(298.91f, 181.482f, 316.76f, 183.932f);
        path.lineTo(324.81f, 185.582f);
        path.lineTo(328.96f, 186.182f);
        path.quadTo(359.66f, 183.732f, 372.96f, 208.232f);
        path.quadTo(377.41f, 216.482f, 379.46f, 226.982f);
        path.quadTo(380.76f, 233.832f, 380.76f, 239.332f);
        path.quadTo(380.76f, 248.332f, 378.71f, 262.032f);
        path.quadTo(376.71f, 275.482f, 374.51f, 282.132f);
        path.quadTo(373.61f, 284.932f, 371.96f, 287.432f);
        path.lineTo(330.91f, 289.232f);
        path.lineTo(295.26f, 291.082f);
        path.quadTo(290.66f, 290.682f, 219.61f, 292.982f);
        path.quadTo(214.31f, 292.982f, 205.66f, 291.282f);
        path.quadTo(197.06f, 289.532f, 190.16f, 289.532f);
        path.lineTo(173.61f, 289.682f);
        path.quadTo(170.81f, 284.182f, 168.91f, 277.282f);
        path.lineTo(170.61f, 287.382f);
        path.lineTo(170.61f, 287.432f);
        path.lineTo(170.11f, 287.432f);
        path.lineTo(167.91f, 283.432f);
        path.lineTo(166.01f, 279.832f);
        path.lineTo(165.31f, 280.082f);
        path.quadTo(166.36f, 284.582f, 168.66f, 289.732f);
        path.lineTo(168.16f, 289.732f);
        path.lineTo(168.66f, 289.782f);
        path.quadTo(169.91f, 292.632f, 171.56f, 295.682f);
        path.quadTo(175.71f, 303.432f, 180.71f, 309.782f);
        path.lineTo(180.51f, 309.082f);
        path.lineTo(177.46f, 303.932f);
        path.quadTo(176.46f, 302.032f, 175.96f, 300.482f);
        path.lineTo(175.91f, 300.382f);
        path.lineTo(175.66f, 298.732f);
        path.lineTo(176.36f, 300.332f);
        path.close();
        path.moveTo(387.061f, 180.088f);
        path.quadTo(375.911f, 172.938f, 347.711f, 169.738f);
        path.quadTo(332.411f, 168.038f, 271.461f, 164.639f);
        path.quadTo(184.061f, 169.889f, 156.961f, 187.939f);
        path.quadTo(146.111f, 195.139f, 142.811f, 205.689f);
        path.quadTo(140.911f, 211.789f, 140.911f, 225.089f);
        path.lineTo(140.911f, 227.439f);
        path.quadTo(129.561f, 240.689f, 127.311f, 247.239f);
        path.quadTo(126.161f, 250.489f, 125.961f, 254.989f);
        path.lineTo(125.961f, 265.339f);
        path.lineTo(125.961f, 279.189f);
        path.quadTo(126.461f, 285.489f, 129.611f, 294.339f);
        path.quadTo(130.261f, 296.189f, 130.561f, 302.239f);
        path.quadTo(130.861f, 308.589f, 131.811f, 311.889f);
        path.quadTo(132.511f, 314.339f, 133.811f, 316.339f);
        path.quadTo(136.911f, 327.889f, 139.161f, 342.589f);
        path.lineTo(144.111f, 377.339f);
        path.lineTo(145.261f, 377.089f);
        path.lineTo(145.461f, 376.839f);
        path.lineTo(145.511f, 375.389f);
        path.quadTo(145.511f, 370.589f, 140.111f, 342.839f);
        path.lineTo(136.411f, 324.739f);
        path.quadTo(137.211f, 325.039f, 137.211f, 325.189f);
        path.lineTo(164.261f, 323.589f);
        path.lineTo(167.861f, 323.388f);
        path.quadTo(171.211f, 324.938f, 175.311f, 326.138f);
        path.quadTo(199.761f, 333.589f, 250.461f, 333.589f);
        path.lineTo(297.661f, 333.789f);
        path.lineTo(299.411f, 336.839f);
        path.quadTo(296.311f, 337.439f, 293.961f, 343.789f);
        path.quadTo(291.911f, 349.339f, 291.911f, 353.589f);
        path.quadTo(291.911f, 357.738f, 293.261f, 359.888f);
        path.quadTo(296.761f, 365.339f, 307.911f, 365.339f);
        path.quadTo(310.211f, 365.339f, 312.161f, 364.638f);
        path.lineTo(303.111f, 362.238f);
        path.lineTo(299.611f, 360.089f);
        path.quadTo(296.511f, 358.189f, 296.511f, 355.238f);
        path.quadTo(296.511f, 353.038f, 298.361f, 347.588f);
        path.lineTo(300.411f, 341.388f);
        path.quadTo(299.011f, 342.488f, 296.811f, 348.038f);
        path.quadTo(294.661f, 353.488f, 294.661f, 355.438f);
        path.quadTo(294.661f, 357.438f, 295.311f, 358.888f);
        path.quadTo(294.211f, 357.938f, 293.861f, 356.688f);
        path.quadTo(293.711f, 355.988f, 293.711f, 353.388f);
        path.quadTo(293.711f, 349.888f, 295.711f, 345.088f);
        path.lineTo(299.461f, 336.938f);
        path.lineTo(302.461f, 342.088f);
        path.lineTo(303.161f, 341.838f);
        path.lineTo(303.161f, 341.888f);
        path.quadTo(303.161f, 343.438f, 303.611f, 344.188f);
        path.lineTo(304.761f, 345.088f);
        path.lineTo(305.511f, 344.338f);
        path.lineTo(305.711f, 343.938f);
        path.quadTo(305.561f, 343.088f, 304.911f, 341.938f);
        path.lineTo(304.111f, 340.488f);
        path.lineTo(303.411f, 340.488f);
        path.lineTo(303.311f, 340.638f);
        path.lineTo(299.411f, 333.788f);
        path.lineTo(303.511f, 333.788f);
        path.lineTo(315.811f, 333.038f);
        path.lineTo(319.111f, 332.738f);
        path.quadTo(322.211f, 336.538f, 324.561f, 338.888f);
        path.lineTo(320.511f, 332.638f);
        path.lineTo(333.061f, 330.988f);
        path.quadTo(335.611f, 333.388f, 337.861f, 336.888f);
        path.lineTo(340.711f, 341.638f);
        path.quadTo(341.611f, 341.188f, 341.861f, 340.488f);
        path.quadTo(341.711f, 337.888f, 338.561f, 334.038f);
        path.lineTo(335.411f, 330.638f);
        path.lineTo(343.661f, 329.138f);
        path.lineTo(354.011f, 326.688f);
        path.lineTo(356.061f, 328.938f);
        path.lineTo(360.661f, 334.888f);
        path.lineTo(360.261f, 335.238f);
        path.quadTo(359.561f, 335.938f, 359.561f, 336.338f);
        path.quadTo(361.161f, 337.438f, 362.161f, 339.338f);
        path.lineTo(361.811f, 339.488f);
        path.quadTo(361.411f, 339.688f, 361.411f, 340.038f);
        path.lineTo(362.561f, 340.188f);
        path.quadTo(363.911f, 343.288f, 363.811f, 348.188f);
        path.lineTo(363.311f, 353.338f);
        path.quadTo(356.411f, 354.838f, 349.361f, 357.588f);
        path.quadTo(340.061f, 361.238f, 328.011f, 368.088f);
        path.quadTo(328.261f, 368.788f, 329.661f, 369.038f);
        path.quadTo(330.911f, 368.638f, 337.461f, 364.938f);
        path.quadTo(343.861f, 361.338f, 348.061f, 360.038f);
        path.lineTo(362.411f, 356.438f);
        path.lineTo(362.961f, 356.338f);
        path.lineTo(362.311f, 362.138f);
        path.lineTo(363.461f, 361.888f);
        path.quadTo(364.261f, 359.388f, 364.911f, 355.838f);
        path.lineTo(370.611f, 354.088f);
        path.quadTo(372.661f, 357.288f, 377.411f, 366.188f);
        path.quadTo(383.011f, 376.638f, 385.011f, 376.638f);
        path.lineTo(386.611f, 376.388f);
        path.quadTo(386.711f, 376.288f, 386.511f, 376.188f);
        path.lineTo(386.511f, 375.488f);
        path.lineTo(379.311f, 362.238f);
        path.quadTo(376.161f, 356.538f, 372.561f, 353.388f);
        path.quadTo(375.211f, 352.338f, 375.911f, 351.538f);
        path.lineTo(370.811f, 351.988f);
        path.lineTo(369.711f, 351.288f);
        path.lineTo(369.511f, 352.038f);
        path.lineTo(369.511f, 352.188f);
        path.lineTo(365.361f, 352.888f);
        path.lineTo(365.761f, 348.238f);
        path.quadTo(365.761f, 342.538f, 365.511f, 341.288f);
        path.lineTo(365.361f, 340.688f);
        path.lineTo(365.561f, 340.738f);
        path.lineTo(366.461f, 340.688f);
        path.quadTo(366.711f, 340.638f, 366.711f, 339.238f);
        path.lineTo(366.611f, 337.888f);
        path.lineTo(366.461f, 338.188f);
        path.quadTo(364.661f, 337.138f, 361.211f, 332.038f);
        path.quadTo(358.711f, 328.288f, 356.611f, 325.938f);
        path.quadTo(385.661f, 317.538f, 391.811f, 301.938f);
        path.quadTo(397.261f, 288.238f, 399.961f, 276.888f);
        path.quadTo(403.061f, 264.038f, 403.061f, 252.238f);
        path.quadTo(403.061f, 215.488f, 401.211f, 204.538f);
        path.quadTo(398.294f, 187.316f, 387.061f, 180.088f);
        path.close();
        path.moveTo(397.557f, 246.056f);
        path.lineTo(397.307f, 246.206f);
        path.quadTo(390.657f, 245.756f, 389.157f, 246.706f);
        path.quadTo(388.557f, 247.056f, 388.557f, 249.056f);
        path.lineTo(388.607f, 252.756f);
        path.quadTo(388.907f, 254.756f, 390.407f, 254.756f);
        path.quadTo(397.757f, 254.756f, 397.757f, 247.606f);
        path.quadTo(397.787f, 246.195f, 397.557f, 246.056f);
        path.close();
        path.moveTo(397.327f, 243.755f);
        path.quadTo(399.627f, 245.555f, 399.627f, 249.005f);
        path.quadTo(399.627f, 251.105f, 397.827f, 253.805f);
        path.quadTo(395.227f, 257.705f, 390.677f, 257.705f);
        path.quadTo(388.527f, 257.705f, 386.577f, 253.105f);
        path.quadTo(384.877f, 249.355f, 384.877f, 247.605f);
        path.quadTo(384.877f, 245.155f, 387.177f, 243.605f);
        path.quadTo(389.327f, 242.105f, 392.277f, 242.105f);
        path.quadTo(395.302f, 242.144f, 397.327f, 243.755f);
        path.close();
        path.moveTo(392.309f, 248.266f);
        path.lineTo(395.259f, 248.066f);
        path.quadTo(395.009f, 249.216f, 395.009f, 251.316f);
        path.quadTo(394.359f, 251.766f, 392.709f, 252.116f);
        path.lineTo(390.409f, 252.466f);
        path.lineTo(390.159f, 251.966f);
        path.lineTo(390.259f, 250.066f);
        path.lineTo(390.159f, 248.766f);
        path.lineTo(392.309f, 248.266f);
        path.close();
        path.moveTo(393.184f, 260.051f);
        path.quadTo(397.084f, 260.051f, 399.634f, 255.001f);
        path.lineTo(399.984f, 254.401f);
        path.lineTo(398.634f, 266.251f);
        path.lineTo(397.084f, 277.751f);
        path.quadTo(397.084f, 280.951f, 389.184f, 297.051f);
        path.quadTo(381.134f, 313.251f, 378.484f, 315.051f);
        path.quadTo(372.984f, 318.751f, 357.784f, 322.001f);
        path.lineTo(353.384f, 322.901f);
        path.quadTo(343.434f, 315.701f, 326.884f, 324.801f);
        path.quadTo(319.684f, 321.151f, 313.384f, 322.401f);
        path.lineTo(307.684f, 315.151f);
        path.lineTo(319.884f, 312.951f);
        path.quadTo(352.284f, 307.051f, 355.434f, 305.851f);
        path.quadTo(366.034f, 301.451f, 371.584f, 294.651f);
        path.quadTo(373.684f, 292.051f, 375.234f, 288.751f);
        path.lineTo(377.084f, 288.551f);
        path.quadTo(376.934f, 288.151f, 375.834f, 287.751f);
        path.lineTo(375.684f, 287.701f);
        path.lineTo(377.084f, 283.751f);
        path.quadTo(379.784f, 275.001f, 381.634f, 262.101f);
        path.quadTo(382.634f, 255.151f, 383.134f, 249.051f);
        path.quadTo(383.384f, 251.601f, 384.884f, 254.551f);
        path.quadTo(387.706f, 260.051f, 393.184f, 260.051f);
        path.close();
        path.moveTo(311.242f, 292.644f);
        path.lineTo(323.442f, 293.394f);
        path.lineTo(370.642f, 289.244f);
        path.quadTo(358.792f, 303.944f, 318.692f, 311.094f);
        path.lineTo(305.992f, 313.094f);
        path.lineTo(300.042f, 306.294f);
        path.quadTo(282.742f, 287.494f, 282.742f, 301.844f);
        path.quadTo(282.742f, 305.244f, 287.542f, 315.144f);
        path.lineTo(253.492f, 316.444f);
        path.quadTo(224.542f, 316.444f, 210.142f, 313.944f);
        path.quadTo(192.192f, 310.744f, 182.642f, 301.944f);
        path.quadTo(177.542f, 297.244f, 173.892f, 290.194f);
        path.quadTo(187.942f, 291.194f, 196.842f, 293.194f);
        path.quadTo(203.442f, 294.594f, 234.842f, 294.594f);
        path.lineTo(252.992f, 293.344f);
        path.lineTo(274.442f, 292.044f);
        path.quadTo(298.168f, 292.045f, 311.242f, 292.644f);
        path.close();
        path.moveTo(328.459f, 324.592f);
        path.quadTo(329.359f, 323.842f, 330.509f, 323.392f);
        path.quadTo(334.259f, 321.992f, 345.959f, 321.992f);
        path.quadTo(347.909f, 321.992f, 350.259f, 323.492f);
        path.quadTo(340.409f, 325.242f, 329.609f, 326.292f);
        path.lineTo(327.709f, 325.242f);
        path.lineTo(328.459f, 324.592f);
        path.close();
        path.moveTo(326.111f, 326.71f);
        path.quadTo(322.311f, 327.16f, 320.611f, 327.96f);
        path.quadTo(319.461f, 328.71f, 318.211f, 329.16f);
        path.lineTo(315.111f, 324.76f);
        path.quadTo(321.231f, 324.776f, 326.111f, 326.71f);
        path.close();
        path.moveTo(311.242f, 324.96f);
        path.lineTo(312.842f, 324.86f);
        path.lineTo(316.642f, 329.71f);
        path.quadTo(312.442f, 330.71f, 297.892f, 331.01f);
        path.lineTo(293.842f, 323.66f);
        path.lineTo(290.842f, 317.86f);
        path.lineTo(305.192f, 315.61f);
        path.lineTo(308.192f, 319.11f);
        path.lineTo(311.292f, 322.96f);
        path.lineTo(308.742f, 324.01f);
        path.quadTo(308.94f, 324.73f, 311.242f, 324.96f);
        path.close();
        path.moveTo(304.106f, 345.768f);
        path.lineTo(303.156f, 345.968f);
        path.lineTo(304.706f, 348.418f);
        path.quadTo(304.206f, 348.618f, 303.806f, 348.868f);
        path.quadTo(302.006f, 350.068f, 302.006f, 351.668f);
        path.quadTo(302.006f, 352.568f, 303.656f, 353.168f);
        path.quadTo(306.156f, 354.068f, 308.006f, 355.868f);
        path.quadTo(308.806f, 355.718f, 309.106f, 355.168f);
        path.lineTo(309.406f, 355.418f);
        path.lineTo(310.006f, 354.918f);
        path.lineTo(310.306f, 354.068f);
        path.quadTo(308.756f, 351.468f, 306.706f, 348.918f);
        path.lineTo(307.556f, 348.068f);
        path.quadTo(306.756f, 347.918f, 306.006f, 348.068f);
        path.lineTo(304.106f, 345.768f);
        path.close();
        path.moveTo(305.119f, 350.786f);
        path.quadTo(305.419f, 351.286f, 306.519f, 351.536f);
        path.lineTo(308.369f, 354.336f);
        path.lineTo(304.569f, 351.536f);
        path.lineTo(305.119f, 350.786f);
        path.close();
        path.moveTo(134.836f, 239.381f);
        path.lineTo(139.486f, 232.731f);
        path.lineTo(140.986f, 230.281f);
        path.quadTo(141.186f, 243.131f, 142.586f, 256.281f);
        path.lineTo(143.536f, 264.231f);
        path.quadTo(140.936f, 267.081f, 140.936f, 270.031f);
        path.quadTo(140.936f, 271.581f, 141.086f, 271.831f);
        path.lineTo(141.836f, 272.281f);
        path.lineTo(144.136f, 268.631f);
        path.quadTo(145.286f, 276.431f, 146.836f, 283.931f);
        path.lineTo(145.536f, 285.631f);
        path.quadTo(145.536f, 287.031f, 146.436f, 287.031f);
        path.lineTo(147.386f, 286.781f);
        path.lineTo(147.436f, 286.781f);
        path.quadTo(148.536f, 291.831f, 149.886f, 301.731f);
        path.quadTo(151.786f, 310.331f, 156.786f, 315.781f);
        path.quadTo(158.886f, 317.981f, 161.686f, 319.881f);
        path.lineTo(159.536f, 319.881f);
        path.lineTo(158.736f, 319.631f);
        path.lineTo(157.486f, 319.431f);
        path.lineTo(156.536f, 320.081f);
        path.lineTo(150.786f, 320.081f);
        path.lineTo(142.986f, 320.081f);
        path.quadTo(137.586f, 315.631f, 133.786f, 302.881f);
        path.quadTo(128.036f, 283.531f, 128.036f, 259.581f);
        path.quadTo(128.023f, 249.739f, 134.836f, 239.381f);
        path.close();
        path.moveTo(146.989f, 322.244f);
        path.lineTo(144.789f, 321.344f);
        path.lineTo(151.039f, 321.994f);
        path.lineTo(146.989f, 322.244f);
        path.close();
        path.moveTo(137.552f, 323.441f);
        path.quadTo(136.602f, 323.741f, 136.252f, 324.041f);
        path.lineTo(134.752f, 317.641f);
        path.quadTo(137.652f, 321.141f, 142.802f, 322.591f);
        path.quadTo(139.302f, 322.935f, 137.552f, 323.441f);
        path.close();
        path.moveTo(148.923f, 281.227f);
        path.lineTo(146.273f, 265.627f);
        path.lineTo(151.023f, 259.377f);
        path.lineTo(160.923f, 259.377f);
        path.lineTo(161.073f, 260.727f);
        path.lineTo(161.173f, 262.827f);
        path.quadTo(161.173f, 264.927f, 153.323f, 275.377f);
        path.lineTo(148.923f, 281.227f);
        path.close();
        path.moveTo(171.066f, 321.968f);
        path.lineTo(168.116f, 322.118f);
        path.lineTo(167.766f, 321.868f);
        path.lineTo(171.066f, 321.968f);
        path.close();
        path.moveTo(164.713f, 321.784f);
        path.lineTo(165.413f, 322.184f);
        path.lineTo(159.313f, 322.184f);
        path.lineTo(159.563f, 321.784f);
        path.lineTo(160.213f, 321.734f);
        path.lineTo(164.713f, 321.784f);
        path.close();
        path.moveTo(191.781f, 345.722f);
        path.quadTo(195.231f, 357.872f, 195.231f, 360.022f);
        path.quadTo(195.231f, 361.172f, 196.181f, 366.922f);
        path.quadTo(197.081f, 372.672f, 197.081f, 373.822f);
        path.lineTo(196.981f, 375.222f);
        path.lineTo(198.231f, 375.222f);
        path.lineTo(198.881f, 374.322f);
        path.lineTo(199.131f, 372.122f);
        path.quadTo(199.131f, 366.872f, 195.781f, 352.972f);
        path.quadTo(191.931f, 337.072f, 188.331f, 334.022f);
        path.lineTo(191.781f, 345.722f);
        path.close();
        path.moveTo(271.514f, 298.536f);
        path.quadTo(274.414f, 300.686f, 274.414f, 305.936f);
        path.lineTo(274.514f, 307.836f);
        path.quadTo(274.514f, 308.836f, 273.864f, 309.436f);
        path.quadTo(272.264f, 311.036f, 264.264f, 312.986f);
        path.lineTo(264.464f, 311.136f);
        path.lineTo(266.114f, 311.136f);
        path.quadTo(269.864f, 311.136f, 271.464f, 308.636f);
        path.quadTo(272.314f, 307.236f, 272.314f, 305.886f);
        path.quadTo(272.314f, 301.686f, 267.814f, 301.936f);
        path.lineTo(264.514f, 302.536f);
        path.lineTo(264.564f, 303.186f);
        path.lineTo(264.714f, 304.386f);
        path.quadTo(263.364f, 304.436f, 262.614f, 304.886f);
        path.quadTo(262.764f, 303.786f, 263.414f, 302.986f);
        path.quadTo(261.414f, 303.686f, 259.214f, 304.936f);
        path.quadTo(259.214f, 303.336f, 258.714f, 304.086f);
        path.lineTo(257.164f, 306.086f);
        path.quadTo(258.314f, 306.636f, 258.314f, 307.686f);
        path.lineTo(258.264f, 309.336f);
        path.quadTo(258.464f, 310.586f, 262.014f, 310.986f);
        path.lineTo(261.914f, 311.086f);
        path.quadTo(257.964f, 314.836f, 256.464f, 310.236f);
        path.quadTo(255.764f, 308.186f, 255.764f, 305.386f);
        path.quadTo(255.764f, 302.986f, 258.664f, 300.536f);
        path.quadTo(261.514f, 298.186f, 265.114f, 297.486f);
        path.quadTo(269.028f, 296.695f, 271.514f, 298.536f);
        path.close();
        path.moveTo(276.255f, 306.086f);
        path.quadTo(276.255f, 300.236f, 272.805f, 297.486f);
        path.quadTo(269.855f, 295.086f, 265.305f, 295.636f);
        path.quadTo(261.005f, 296.136f, 257.755f, 298.886f);
        path.quadTo(254.355f, 301.786f, 254.355f, 305.486f);
        path.quadTo(254.355f, 312.636f, 257.355f, 314.136f);
        path.quadTo(259.205f, 315.086f, 268.855f, 315.086f);
        path.quadTo(273.205f, 315.086f, 275.155f, 310.936f);
        path.quadTo(276.255f, 308.48f, 276.255f, 306.086f);
        path.close();
        path.moveTo(261.754f, 306.408f);
        path.lineTo(261.754f, 306.508f);
        path.quadTo(261.754f, 308.808f, 261.954f, 307.908f);
        path.lineTo(264.254f, 308.358f);
        path.quadTo(265.654f, 308.358f, 266.254f, 307.808f);
        path.lineTo(266.804f, 307.208f);
        path.lineTo(266.754f, 305.558f);
        path.lineTo(266.354f, 304.458f);
        path.lineTo(265.004f, 304.358f);
        path.quadTo(268.404f, 303.158f, 269.404f, 303.658f);
        path.quadTo(270.054f, 303.958f, 270.954f, 306.308f);
        path.lineTo(268.754f, 308.208f);
        path.quadTo(266.254f, 309.508f, 260.354f, 309.508f);
        path.quadTo(258.954f, 309.508f, 259.104f, 308.508f);
        path.lineTo(259.454f, 307.008f);
        path.lineTo(261.754f, 306.408f);
        path.close();
        path.moveTo(284.542f, 302.265f);
        path.quadTo(284.542f, 300.315f, 284.692f, 299.665f);
        path.quadTo(284.842f, 298.765f, 285.492f, 297.765f);
        path.quadTo(294.342f, 303.665f, 303.192f, 313.465f);
        path.lineTo(289.342f, 314.915f);
        path.quadTo(284.542f, 305.165f, 284.542f, 302.265f);
        path.close();
        path.moveTo(295.912f, 330.715f);
        path.lineTo(296.062f, 331.065f);
        path.lineTo(270.412f, 331.165f);
        path.lineTo(295.912f, 330.715f);
        path.close();
    }

    private static void draw_3(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_3(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_4(Path path)
    {
        path.reset();
        path.moveTo(170.605f, 287.396f);
        path.lineTo(168.905f, 277.296f);
        path.quadTo(170.805f, 284.196f, 173.605f, 289.696f);
        path.lineTo(190.155f, 289.546f);
        path.quadTo(197.055f, 289.546f, 205.655f, 291.296f);
        path.quadTo(214.305f, 292.996f, 219.605f, 292.996f);
        path.quadTo(290.655f, 290.696f, 295.255f, 291.096f);
        path.lineTo(330.905f, 289.246f);
        path.lineTo(371.955f, 287.446f);
        path.quadTo(373.605f, 284.946f, 374.505f, 282.146f);
        path.quadTo(376.705f, 275.496f, 378.705f, 262.046f);
        path.quadTo(380.755f, 248.346f, 380.755f, 239.346f);
        path.quadTo(380.755f, 233.846f, 379.455f, 226.996f);
        path.quadTo(377.405f, 216.496f, 372.955f, 208.246f);
        path.quadTo(359.655f, 183.746f, 328.955f, 186.196f);
        path.lineTo(324.805f, 185.596f);
        path.lineTo(316.755f, 183.946f);
        path.quadTo(298.905f, 181.496f, 251.605f, 182.046f);
        path.lineTo(230.355f, 182.896f);
        path.lineTo(209.005f, 183.896f);
        path.quadTo(190.305f, 186.796f, 187.405f, 187.596f);
        path.quadTo(180.755f, 189.496f, 173.355f, 195.646f);
        path.quadTo(167.855f, 200.146f, 165.405f, 210.446f);
        path.quadTo(163.905f, 216.996f, 163.905f, 223.546f);
        path.quadTo(163.905f, 238.146f, 164.805f, 249.796f);
        path.quadTo(162.055f, 230.546f, 162.055f, 223.946f);
        path.quadTo(161.405f, 217.146f, 161.955f, 212.346f);
        path.quadTo(163.005f, 203.496f, 169.255f, 197.196f);
        path.quadTo(187.605f, 178.546f, 251.355f, 179.996f);
        path.quadTo(270.755f, 180.946f, 304.755f, 181.396f);
        path.quadTo(332.405f, 182.196f, 346.555f, 185.746f);
        path.quadTo(365.055f, 190.446f, 373.805f, 202.046f);
        path.quadTo(383.505f, 214.946f, 383.505f, 239.196f);
        path.lineTo(383.305f, 245.896f);
        path.quadTo(383.905f, 243.596f, 385.955f, 241.946f);
        path.quadTo(388.555f, 239.746f, 392.255f, 239.696f);
        path.quadTo(396.005f, 239.546f, 398.605f, 241.746f);
        path.lineTo(400.055f, 243.396f);
        path.quadTo(399.955f, 220.946f, 399.405f, 214.646f);
        path.quadTo(398.155f, 199.146f, 392.455f, 191.096f);
        path.quadTo(386.155f, 182.046f, 371.505f, 177.496f);
        path.quadTo(357.005f, 172.996f, 328.955f, 171.246f);
        path.quadTo(266.555f, 167.196f, 218.805f, 173.596f);
        path.quadTo(201.605f, 175.896f, 184.855f, 179.796f);
        path.lineTo(160.905f, 185.946f);
        path.quadTo(153.355f, 189.796f, 147.555f, 204.946f);
        path.quadTo(142.755f, 217.596f, 142.755f, 225.196f);
        path.quadTo(142.755f, 239.796f, 144.905f, 256.646f);
        path.lineTo(145.705f, 262.246f);
        path.quadTo(148.405f, 260.046f, 152.055f, 258.596f);
        path.quadTo(156.605f, 256.846f, 159.705f, 257.346f);
        path.quadTo(163.205f, 257.896f, 163.205f, 261.096f);
        path.quadTo(163.205f, 266.046f, 157.605f, 274.646f);
        path.quadTo(153.555f, 280.946f, 149.555f, 284.846f);
        path.lineTo(150.105f, 287.696f);
        path.lineTo(151.105f, 295.496f);
        path.quadTo(151.705f, 300.496f, 152.455f, 303.496f);
        path.quadTo(154.805f, 312.796f, 162.305f, 317.846f);
        path.lineTo(165.405f, 320.096f);
        path.lineTo(168.105f, 320.296f);
        path.quadTo(177.055f, 320.846f, 177.505f, 321.296f);
        path.quadTo(176.355f, 322.596f, 169.905f, 323.246f);
        path.lineTo(170.955f, 323.796f);
        path.quadTo(177.055f, 326.746f, 190.605f, 327.746f);
        path.lineTo(198.505f, 328.146f);
        path.lineTo(221.205f, 329.346f);
        path.quadTo(259.405f, 331.546f, 284.255f, 329.746f);
        path.lineTo(293.955f, 329.146f);
        path.lineTo(295.055f, 329.296f);
        path.lineTo(289.055f, 318.146f);
        path.lineTo(280.855f, 318.996f);
        path.quadTo(211.355f, 318.996f, 187.805f, 309.846f);
        path.quadTo(180.255f, 306.946f, 177.605f, 303.046f);
        path.quadTo(176.855f, 301.896f, 176.355f, 300.346f);
        path.lineTo(175.905f, 300.396f);
        path.lineTo(175.955f, 300.496f);
        path.quadTo(176.455f, 302.046f, 177.455f, 303.946f);
        path.lineTo(180.505f, 309.096f);
        path.lineTo(180.705f, 309.796f);
        path.quadTo(175.705f, 303.446f, 171.555f, 295.696f);
        path.quadTo(169.905f, 292.646f, 168.655f, 289.796f);
        path.lineTo(168.155f, 289.746f);
        path.lineTo(168.655f, 289.746f);
        path.quadTo(166.355f, 284.596f, 165.305f, 280.096f);
        path.lineTo(166.005f, 279.846f);
        path.lineTo(167.905f, 283.446f);
        path.lineTo(170.105f, 287.446f);
        path.lineTo(170.605f, 287.396f);
        path.close();
    }

    private static void draw_4(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_4(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_5(Path path)
    {
        path.reset();
        path.moveTo(377.486f, 245.136f);
        path.quadTo(376.686f, 244.386f, 374.486f, 243.736f);
        path.lineTo(371.036f, 242.836f);
        path.lineTo(370.586f, 241.536f);
        path.lineTo(369.686f, 240.336f);
        path.lineTo(368.286f, 242.136f);
        path.lineTo(368.286f, 241.986f);
        path.quadTo(368.286f, 240.986f, 367.586f, 240.336f);
        path.lineTo(366.886f, 240.336f);
        path.lineTo(366.736f, 241.586f);
        path.lineTo(366.486f, 242.736f);
        path.quadTo(364.436f, 241.836f, 360.936f, 241.586f);
        path.quadTo(360.436f, 241.036f, 359.336f, 240.386f);
        path.lineTo(357.236f, 239.036f);
        path.quadTo(357.236f, 237.986f, 357.636f, 237.686f);
        path.quadTo(358.236f, 237.286f, 360.736f, 236.786f);
        path.lineTo(361.236f, 236.986f);
        path.quadTo(362.386f, 237.486f, 364.136f, 237.836f);
        path.lineTo(364.436f, 237.536f);
        path.quadTo(364.236f, 236.136f, 362.836f, 234.786f);
        path.quadTo(361.986f, 233.936f, 361.036f, 233.836f);
        path.lineTo(363.186f, 232.836f);
        path.quadTo(365.086f, 231.886f, 365.086f, 230.886f);
        path.lineTo(365.036f, 230.036f);
        path.lineTo(364.836f, 229.786f);
        path.quadTo(357.586f, 230.186f, 356.986f, 229.136f);
        path.quadTo(356.786f, 228.836f, 356.886f, 227.836f);
        path.quadTo(357.036f, 226.786f, 356.536f, 226.086f);
        path.lineTo(355.436f, 226.536f);
        path.lineTo(355.386f, 227.436f);
        path.quadTo(355.386f, 228.136f, 355.636f, 228.536f);
        path.lineTo(355.836f, 229.036f);
        path.lineTo(354.936f, 229.086f);
        path.lineTo(354.186f, 227.636f);
        path.lineTo(353.336f, 226.086f);
        path.lineTo(352.686f, 226.086f);
        path.lineTo(352.086f, 228.386f);
        path.lineTo(351.736f, 230.486f);
        path.lineTo(351.786f, 231.536f);
        path.lineTo(352.186f, 231.786f);
        path.quadTo(353.086f, 229.986f, 353.086f, 228.136f);
        path.lineTo(353.386f, 228.136f);
        path.lineTo(353.886f, 229.736f);
        path.quadTo(354.186f, 230.636f, 354.936f, 230.636f);
        path.lineTo(356.236f, 230.336f);
        path.lineTo(356.786f, 229.986f);
        path.lineTo(356.786f, 229.036f);
        path.quadTo(357.386f, 229.886f, 356.886f, 230.936f);
        path.lineTo(364.136f, 230.686f);
        path.lineTo(363.436f, 231.386f);
        path.quadTo(363.236f, 231.536f, 359.936f, 233.086f);
        path.quadTo(357.686f, 234.136f, 357.236f, 234.786f);
        path.quadTo(357.586f, 235.186f, 359.336f, 235.886f);
        path.lineTo(359.486f, 235.986f);
        path.lineTo(358.636f, 236.186f);
        path.quadTo(356.886f, 236.486f, 356.436f, 237.286f);
        path.quadTo(356.336f, 237.586f, 356.336f, 239.036f);
        path.quadTo(356.336f, 240.486f, 356.536f, 240.686f);
        path.lineTo(358.386f, 241.586f);
        path.lineTo(358.386f, 242.186f);
        path.lineTo(359.136f, 242.436f);
        path.quadTo(355.636f, 242.786f, 355.386f, 245.986f);
        path.lineTo(355.436f, 248.936f);
        path.lineTo(355.436f, 250.486f);
        path.lineTo(354.836f, 250.486f);
        path.lineTo(354.636f, 249.336f);
        path.quadTo(354.336f, 248.236f, 353.336f, 247.286f);
        path.lineTo(352.636f, 247.936f);
        path.lineTo(352.386f, 249.536f);
        path.lineTo(351.986f, 250.936f);
        path.quadTo(351.536f, 250.186f, 351.136f, 246.136f);
        path.lineTo(350.886f, 243.186f);
        path.quadTo(354.536f, 241.786f, 353.136f, 241.986f);
        path.quadTo(351.686f, 242.286f, 350.786f, 240.836f);
        path.lineTo(350.786f, 240.636f);
        path.quadTo(350.786f, 234.336f, 351.036f, 231.136f);
        path.lineTo(350.586f, 231.136f);
        path.quadTo(350.036f, 233.786f, 349.936f, 238.636f);
        path.lineTo(348.936f, 236.686f);
        path.lineTo(348.336f, 237.886f);
        path.quadTo(348.086f, 238.786f, 348.086f, 239.636f);
        path.lineTo(348.086f, 241.486f);
        path.quadTo(348.436f, 243.036f, 349.886f, 243.236f);
        path.lineTo(350.036f, 247.286f);
        path.quadTo(350.186f, 249.086f, 350.636f, 250.386f);
        path.lineTo(349.686f, 250.136f);
        path.lineTo(347.586f, 249.586f);
        path.quadTo(347.586f, 249.736f, 347.186f, 249.786f);
        path.lineTo(347.136f, 249.786f);
        path.lineTo(345.286f, 249.986f);
        path.lineTo(346.336f, 250.386f);
        path.quadTo(346.686f, 250.886f, 348.286f, 250.886f);
        path.lineTo(348.336f, 250.886f);
        path.lineTo(350.186f, 251.136f);
        path.quadTo(350.836f, 251.136f, 350.836f, 250.936f);
        path.quadTo(351.336f, 252.136f, 352.186f, 252.736f);
        path.lineTo(352.986f, 251.386f);
        path.lineTo(353.536f, 250.236f);
        path.lineTo(353.836f, 251.886f);
        path.quadTo(353.936f, 252.686f, 355.636f, 253.036f);
        path.lineTo(355.986f, 251.336f);
        path.lineTo(356.086f, 251.286f);
        path.lineTo(357.486f, 250.936f);
        path.quadTo(357.386f, 250.786f, 356.836f, 250.586f);
        path.lineTo(356.336f, 250.436f);
        path.lineTo(356.136f, 250.486f);
        path.lineTo(356.436f, 248.236f);
        path.lineTo(356.586f, 246.686f);
        path.lineTo(357.436f, 249.936f);
        path.quadTo(357.886f, 251.786f, 359.086f, 252.536f);
        path.lineTo(359.336f, 252.336f);
        path.lineTo(359.536f, 249.736f);
        path.lineTo(359.786f, 250.336f);
        path.quadTo(359.986f, 250.736f, 360.686f, 250.736f);
        path.quadTo(361.836f, 250.736f, 361.386f, 250.436f);
        path.quadTo(361.386f, 249.136f, 362.136f, 248.186f);
        path.quadTo(362.336f, 248.486f, 364.386f, 249.436f);
        path.lineTo(365.986f, 250.136f);
        path.lineTo(365.986f, 250.186f);
        path.lineTo(367.436f, 250.786f);
        path.quadTo(368.586f, 251.286f, 369.686f, 251.386f);
        path.lineTo(369.936f, 251.036f);
        path.lineTo(370.136f, 250.686f);
        path.lineTo(370.086f, 250.536f);
        path.lineTo(370.136f, 250.486f);
        path.quadTo(371.536f, 249.536f, 373.186f, 249.536f);
        path.quadTo(373.186f, 249.436f, 373.286f, 249.486f);
        path.lineTo(373.336f, 248.836f);
        path.quadTo(373.336f, 248.086f, 372.936f, 247.836f);
        path.lineTo(372.236f, 247.436f);
        path.quadTo(374.836f, 247.186f, 376.136f, 246.386f);
        path.lineTo(377.486f, 245.136f);
        path.close();
        path.moveTo(375.645f, 245.366f);
        path.lineTo(373.595f, 246.066f);
        path.lineTo(371.045f, 246.566f);
        path.quadTo(371.045f, 247.516f, 371.545f, 248.366f);
        path.lineTo(368.845f, 248.516f);
        path.lineTo(368.345f, 247.866f);
        path.quadTo(368.045f, 247.866f, 367.895f, 248.116f);
        path.quadTo(368.195f, 249.416f, 368.745f, 250.166f);
        path.lineTo(367.145f, 249.516f);
        path.lineTo(366.295f, 249.066f);
        path.quadTo(365.695f, 248.616f, 364.845f, 248.216f);
        path.quadTo(363.145f, 247.366f, 360.945f, 247.216f);
        path.lineTo(360.495f, 248.016f);
        path.lineTo(360.045f, 248.566f);
        path.quadTo(359.895f, 248.316f, 359.295f, 248.216f);
        path.lineTo(358.645f, 248.166f);
        path.quadTo(358.645f, 250.166f, 358.445f, 250.716f);
        path.lineTo(358.445f, 250.666f);
        path.lineTo(357.745f, 248.566f);
        path.lineTo(356.845f, 246.566f);
        path.lineTo(356.595f, 246.566f);
        path.lineTo(357.045f, 243.316f);
        path.lineTo(359.195f, 243.416f);
        path.lineTo(361.195f, 243.316f);
        path.lineTo(361.295f, 243.216f);
        path.lineTo(361.345f, 243.116f);
        path.lineTo(362.845f, 243.466f);
        path.lineTo(366.295f, 243.816f);
        path.lineTo(366.595f, 243.816f);
        path.lineTo(366.695f, 243.816f);
        path.lineTo(367.845f, 243.516f);
        path.lineTo(367.245f, 243.116f);
        path.lineTo(367.395f, 242.616f);
        path.lineTo(367.745f, 243.216f);
        path.lineTo(368.745f, 243.516f);
        path.quadTo(369.445f, 243.516f, 369.695f, 242.966f);
        path.lineTo(369.895f, 242.416f);
        path.quadTo(370.795f, 243.916f, 372.995f, 244.466f);
        path.lineTo(376.145f, 245.116f);
        path.lineTo(375.645f, 245.366f);
        path.close();
        path.moveTo(339.093f, 207.617f);
        path.lineTo(340.193f, 206.067f);
        path.lineTo(335.693f, 204.017f);
        path.quadTo(333.243f, 202.917f, 329.943f, 201.917f);
        path.lineTo(329.943f, 202.267f);
        path.lineTo(329.743f, 201.667f);
        path.quadTo(329.143f, 199.917f, 327.743f, 198.367f);
        path.lineTo(327.043f, 197.367f);
        path.quadTo(323.993f, 192.917f, 317.643f, 190.467f);
        path.quadTo(309.093f, 188.467f, 304.493f, 192.867f);
        path.quadTo(302.443f, 194.867f, 300.593f, 198.467f);
        path.lineTo(298.993f, 201.767f);
        path.quadTo(298.193f, 202.517f, 297.443f, 203.767f);
        path.lineTo(297.143f, 203.217f);
        path.quadTo(297.543f, 201.417f, 298.143f, 199.817f);
        path.lineTo(296.843f, 202.967f);
        path.quadTo(296.543f, 202.667f, 296.193f, 202.667f);
        path.lineTo(294.893f, 203.567f);
        path.lineTo(292.543f, 205.017f);
        path.lineTo(292.693f, 204.017f);
        path.quadTo(292.793f, 203.367f, 292.143f, 203.367f);
        path.lineTo(291.543f, 203.217f);
        path.lineTo(291.243f, 202.317f);
        path.quadTo(290.443f, 198.967f, 289.393f, 196.867f);
        path.quadTo(287.593f, 193.517f, 284.043f, 191.867f);
        path.quadTo(280.143f, 190.067f, 273.443f, 190.067f);
        path.quadTo(265.393f, 190.067f, 260.193f, 195.367f);
        path.lineTo(259.743f, 195.867f);
        path.quadTo(256.393f, 198.767f, 256.243f, 200.767f);
        path.lineTo(256.243f, 200.867f);
        path.quadTo(255.543f, 201.817f, 254.993f, 203.117f);
        path.quadTo(253.693f, 205.967f, 253.143f, 208.567f);
        path.lineTo(252.793f, 208.517f);
        path.lineTo(252.693f, 207.967f);
        path.quadTo(254.143f, 202.617f, 256.293f, 199.667f);
        path.lineTo(257.093f, 198.667f);
        path.quadTo(254.293f, 201.567f, 252.743f, 206.267f);
        path.lineTo(252.493f, 207.117f);
        path.lineTo(251.943f, 205.467f);
        path.quadTo(250.893f, 203.817f, 248.893f, 204.617f);
        path.lineTo(248.993f, 204.467f);
        path.quadTo(249.443f, 203.217f, 249.443f, 202.117f);
        path.quadTo(252.693f, 202.367f, 253.493f, 201.117f);
        path.lineTo(253.693f, 198.617f);
        path.quadTo(253.693f, 197.567f, 252.343f, 195.467f);
        path.quadTo(250.793f, 193.117f, 250.493f, 191.817f);
        path.quadTo(250.143f, 190.267f, 249.493f, 189.817f);
        path.lineTo(247.943f, 189.817f);
        path.lineTo(246.143f, 189.967f);
        path.quadTo(244.993f, 189.817f, 243.943f, 188.867f);
        path.quadTo(242.493f, 187.517f, 237.593f, 187.067f);
        path.lineTo(233.793f, 186.967f);
        path.quadTo(230.493f, 185.117f, 222.343f, 190.417f);
        path.quadTo(219.093f, 192.467f, 216.343f, 194.967f);
        path.quadTo(213.793f, 197.217f, 213.793f, 197.767f);
        path.quadTo(213.793f, 198.617f, 214.093f, 199.167f);
        path.lineTo(215.043f, 201.167f);
        path.quadTo(213.193f, 201.617f, 212.493f, 202.617f);
        path.quadTo(212.143f, 203.217f, 211.893f, 204.417f);
        path.lineTo(211.893f, 207.367f);
        path.quadTo(208.643f, 207.667f, 205.793f, 209.817f);
        path.quadTo(202.543f, 212.367f, 202.643f, 214.667f);
        path.quadTo(202.793f, 216.367f, 201.943f, 217.467f);
        path.quadTo(201.443f, 218.167f, 199.893f, 219.167f);
        path.quadTo(198.293f, 220.117f, 197.693f, 220.917f);
        path.quadTo(196.743f, 222.217f, 196.743f, 224.067f);
        path.quadTo(196.743f, 226.417f, 195.543f, 229.417f);
        path.quadTo(194.343f, 232.317f, 194.343f, 232.617f);
        path.quadTo(194.343f, 232.967f, 197.893f, 235.767f);
        path.quadTo(201.693f, 238.917f, 203.443f, 238.917f);
        path.quadTo(203.993f, 238.917f, 206.343f, 236.567f);
        path.quadTo(206.643f, 237.367f, 207.243f, 237.517f);
        path.lineTo(208.793f, 237.767f);
        path.lineTo(210.943f, 240.317f);
        path.lineTo(211.743f, 241.567f);
        path.quadTo(211.743f, 243.267f, 212.343f, 244.617f);
        path.quadTo(212.943f, 246.067f, 214.093f, 247.017f);
        path.lineTo(214.643f, 248.817f);
        path.quadTo(215.743f, 252.367f, 216.993f, 254.967f);
        path.quadTo(219.793f, 261.117f, 223.143f, 262.567f);
        path.quadTo(221.493f, 262.867f, 220.293f, 263.267f);
        path.lineTo(220.693f, 263.267f);
        path.quadTo(221.793f, 263.267f, 222.593f, 263.717f);
        path.lineTo(225.843f, 263.467f);
        path.quadTo(225.843f, 263.367f, 225.993f, 263.417f);
        path.lineTo(226.043f, 262.967f);
        path.quadTo(227.293f, 262.617f, 228.193f, 261.117f);
        path.quadTo(229.093f, 259.667f, 229.093f, 258.617f);
        path.lineTo(228.743f, 256.017f);
        path.lineTo(228.593f, 255.367f);
        path.lineTo(228.693f, 255.417f);
        path.lineTo(228.993f, 255.317f);
        path.lineTo(227.993f, 253.167f);
        path.lineTo(228.043f, 251.767f);
        path.lineTo(228.243f, 252.367f);
        path.quadTo(228.543f, 252.817f, 229.393f, 252.817f);
        path.lineTo(230.343f, 252.667f);
        path.lineTo(230.643f, 252.517f);
        path.lineTo(230.743f, 251.067f);
        path.lineTo(230.643f, 250.117f);
        path.lineTo(230.443f, 249.617f);
        path.quadTo(231.643f, 249.517f, 232.093f, 248.817f);
        path.lineTo(232.293f, 249.117f);
        path.lineTo(232.693f, 249.517f);
        path.lineTo(234.193f, 249.617f);
        path.lineTo(234.793f, 248.817f);
        path.lineTo(234.093f, 248.817f);
        path.lineTo(232.243f, 247.867f);
        path.lineTo(232.243f, 247.617f);
        path.quadTo(232.243f, 246.117f, 230.793f, 245.167f);
        path.quadTo(229.943f, 244.667f, 227.393f, 243.817f);
        path.quadTo(225.043f, 243.017f, 224.093f, 242.317f);
        path.quadTo(222.493f, 241.217f, 222.493f, 239.367f);
        path.quadTo(222.493f, 238.267f, 223.793f, 237.167f);
        path.lineTo(225.893f, 235.417f);
        path.quadTo(229.843f, 237.917f, 235.193f, 238.417f);
        path.lineTo(237.043f, 238.517f);
        path.lineTo(237.393f, 238.517f);
        path.lineTo(238.043f, 238.517f);
        path.quadTo(244.693f, 238.517f, 248.093f, 231.767f);
        path.lineTo(248.893f, 229.967f);
        path.lineTo(249.493f, 229.217f);
        path.lineTo(249.293f, 229.767f);
        path.lineTo(249.193f, 229.867f);
        path.lineTo(249.243f, 229.867f);
        path.lineTo(248.743f, 231.317f);
        path.lineTo(249.543f, 230.167f);
        path.lineTo(250.693f, 231.367f);
        path.lineTo(249.043f, 231.417f);
        path.lineTo(249.343f, 231.817f);
        path.lineTo(249.543f, 232.167f);
        path.lineTo(251.393f, 232.167f);
        path.lineTo(251.443f, 232.267f);
        path.lineTo(251.743f, 233.667f);
        path.lineTo(251.843f, 236.617f);
        path.lineTo(251.843f, 236.867f);
        path.lineTo(251.843f, 239.017f);
        path.lineTo(251.843f, 239.467f);
        path.lineTo(251.843f, 239.667f);
        path.lineTo(250.193f, 239.817f);
        path.lineTo(250.043f, 239.717f);
        path.lineTo(250.143f, 239.867f);
        path.quadTo(249.193f, 240.117f, 248.843f, 240.617f);
        path.quadTo(248.493f, 241.117f, 248.543f, 241.617f);
        path.lineTo(246.543f, 241.667f);
        path.lineTo(246.543f, 242.667f);
        path.quadTo(246.543f, 243.867f, 247.943f, 245.117f);
        path.lineTo(249.793f, 246.867f);
        path.lineTo(248.243f, 247.667f);
        path.quadTo(246.693f, 250.917f, 246.093f, 251.317f);
        path.lineTo(246.343f, 252.417f);
        path.lineTo(247.293f, 251.067f);
        path.lineTo(247.543f, 255.167f);
        path.quadTo(247.793f, 258.317f, 248.543f, 260.067f);
        path.lineTo(248.893f, 259.967f);
        path.lineTo(248.993f, 261.017f);
        path.lineTo(247.993f, 260.067f);
        path.lineTo(246.643f, 258.917f);
        path.quadTo(245.693f, 258.217f, 245.343f, 258.267f);
        path.lineTo(245.343f, 258.917f);
        path.lineTo(246.593f, 259.417f);
        path.lineTo(246.243f, 261.567f);
        path.lineTo(246.743f, 262.117f);
        path.lineTo(248.843f, 263.917f);
        path.quadTo(250.343f, 264.967f, 250.943f, 265.867f);
        path.quadTo(251.943f, 267.117f, 251.943f, 268.867f);
        path.quadTo(251.943f, 272.967f, 251.293f, 275.167f);
        path.quadTo(250.593f, 277.317f, 248.843f, 278.567f);
        path.quadTo(249.693f, 275.767f, 249.693f, 274.567f);
        path.lineTo(250.193f, 271.067f);
        path.lineTo(250.643f, 267.617f);
        path.lineTo(250.193f, 265.167f);
        path.lineTo(247.893f, 273.967f);
        path.quadTo(246.543f, 279.817f, 246.543f, 283.617f);
        path.lineTo(246.643f, 284.417f);
        path.lineTo(246.593f, 284.717f);
        path.lineTo(246.643f, 285.467f);
        path.lineTo(246.793f, 285.717f);
        path.lineTo(246.843f, 285.717f);
        path.lineTo(246.743f, 286.767f);
        path.lineTo(245.043f, 289.367f);
        path.quadTo(245.193f, 289.667f, 246.143f, 289.767f);
        path.quadTo(247.793f, 288.867f, 247.793f, 287.967f);
        path.quadTo(247.793f, 286.267f, 247.243f, 285.167f);
        path.lineTo(248.543f, 282.417f);
        path.lineTo(249.743f, 279.367f);
        path.quadTo(251.493f, 278.017f, 252.243f, 275.517f);
        path.quadTo(252.743f, 273.867f, 252.843f, 271.167f);
        path.lineTo(253.043f, 271.117f);
        path.lineTo(253.343f, 267.317f);
        path.lineTo(253.743f, 275.917f);
        path.lineTo(254.193f, 275.817f);
        path.lineTo(254.243f, 276.417f);
        path.lineTo(253.943f, 278.567f);
        path.lineTo(253.293f, 274.567f);
        path.lineTo(253.043f, 274.567f);
        path.lineTo(253.043f, 276.567f);
        path.lineTo(253.693f, 279.667f);
        path.lineTo(253.343f, 282.267f);
        path.lineTo(251.893f, 292.967f);
        path.lineTo(252.893f, 292.967f);
        path.lineTo(254.293f, 282.317f);
        path.lineTo(254.543f, 283.667f);
        path.lineTo(254.343f, 281.967f);
        path.lineTo(254.543f, 280.467f);
        path.quadTo(255.143f, 286.067f, 256.593f, 289.217f);
        path.lineTo(254.993f, 277.267f);
        path.lineTo(256.793f, 264.467f);
        path.lineTo(256.843f, 264.717f);
        path.lineTo(257.093f, 264.717f);
        path.lineTo(257.193f, 263.417f);
        path.lineTo(257.193f, 262.167f);
        path.lineTo(257.593f, 259.067f);
        path.lineTo(258.093f, 263.967f);
        path.quadTo(258.093f, 270.667f, 257.543f, 279.067f);
        path.lineTo(256.393f, 292.217f);
        path.quadTo(255.493f, 289.817f, 255.593f, 288.517f);
        path.lineTo(255.393f, 288.517f);
        path.lineTo(255.393f, 290.567f);
        path.lineTo(256.293f, 292.967f);
        path.lineTo(257.843f, 292.967f);
        path.quadTo(258.143f, 288.717f, 258.893f, 285.917f);
        path.lineTo(259.043f, 286.417f);
        path.lineTo(259.493f, 292.967f);
        path.lineTo(261.543f, 292.967f);
        path.lineTo(261.943f, 285.667f);
        path.lineTo(262.643f, 268.717f);
        path.lineTo(263.943f, 284.167f);
        path.lineTo(264.543f, 292.967f);
        path.lineTo(270.143f, 292.967f);
        path.lineTo(270.493f, 284.567f);
        path.lineTo(270.493f, 284.467f);
        path.lineTo(270.993f, 292.967f);
        path.lineTo(272.243f, 292.967f);
        path.quadTo(271.443f, 283.967f, 271.443f, 274.767f);
        path.quadTo(271.443f, 272.417f, 272.493f, 267.117f);
        path.lineTo(274.043f, 260.317f);
        path.lineTo(274.143f, 260.517f);
        path.quadTo(275.193f, 268.517f, 275.143f, 283.017f);
        path.lineTo(275.193f, 292.967f);
        path.lineTo(276.943f, 292.967f);
        path.lineTo(276.543f, 285.167f);
        path.lineTo(276.693f, 285.367f);
        path.lineTo(277.493f, 285.667f);
        path.lineTo(278.093f, 285.467f);
        path.lineTo(278.093f, 280.467f);
        path.quadTo(277.443f, 276.367f, 277.293f, 274.617f);
        path.lineTo(277.443f, 274.867f);
        path.lineTo(281.643f, 291.567f);
        path.lineTo(282.043f, 292.967f);
        path.lineTo(285.343f, 292.967f);
        path.quadTo(283.293f, 286.267f, 282.693f, 278.067f);
        path.quadTo(282.293f, 273.317f, 282.293f, 261.367f);
        path.quadTo(283.793f, 263.917f, 283.943f, 268.667f);
        path.lineTo(283.993f, 272.667f);
        path.quadTo(283.993f, 275.067f, 284.143f, 276.567f);
        path.quadTo(284.393f, 278.317f, 285.793f, 285.217f);
        path.lineTo(287.193f, 292.367f);
        path.lineTo(287.093f, 292.967f);
        path.lineTo(290.243f, 292.967f);
        path.lineTo(289.693f, 289.167f);
        path.lineTo(289.843f, 287.467f);
        path.lineTo(290.143f, 285.717f);
        path.lineTo(292.543f, 292.967f);
        path.lineTo(297.243f, 292.967f);
        path.lineTo(297.043f, 292.217f);
        path.quadTo(296.543f, 289.467f, 296.543f, 285.317f);
        path.lineTo(296.643f, 278.567f);
        path.lineTo(296.643f, 277.017f);
        path.lineTo(297.393f, 277.667f);
        path.lineTo(297.593f, 277.367f);
        path.lineTo(297.393f, 274.667f);
        path.quadTo(297.243f, 273.317f, 296.643f, 272.267f);
        path.lineTo(296.493f, 264.767f);
        path.lineTo(296.193f, 260.667f);
        path.quadTo(296.093f, 255.417f, 295.093f, 249.217f);
        path.lineTo(296.893f, 247.367f);
        path.lineTo(298.143f, 246.317f);
        path.quadTo(298.393f, 254.017f, 301.093f, 277.567f);
        path.lineTo(298.893f, 277.667f);
        path.lineTo(301.193f, 278.267f);
        path.lineTo(301.193f, 278.467f);
        path.lineTo(300.943f, 278.467f);
        path.lineTo(300.843f, 278.617f);
        path.lineTo(300.843f, 279.217f);
        path.quadTo(300.843f, 282.117f, 302.393f, 291.617f);
        path.lineTo(302.593f, 292.967f);
        path.lineTo(303.943f, 292.967f);
        path.lineTo(303.593f, 290.217f);
        path.lineTo(303.043f, 286.817f);
        path.lineTo(302.393f, 278.467f);
        path.lineTo(303.693f, 278.567f);
        path.lineTo(304.193f, 278.617f);
        path.lineTo(303.843f, 277.717f);
        path.lineTo(303.543f, 277.667f);
        path.lineTo(302.343f, 277.617f);
        path.lineTo(301.093f, 265.317f);
        path.lineTo(298.993f, 245.617f);
        path.lineTo(299.643f, 245.117f);
        path.lineTo(298.993f, 245.317f);
        path.lineTo(298.543f, 241.217f);
        path.lineTo(298.293f, 241.217f);
        path.lineTo(298.093f, 244.967f);
        path.lineTo(298.093f, 245.617f);
        path.quadTo(296.643f, 246.317f, 294.893f, 248.017f);
        path.lineTo(294.343f, 244.867f);
        path.lineTo(293.543f, 240.367f);
        path.lineTo(293.593f, 239.767f);
        path.lineTo(294.143f, 240.017f);
        path.lineTo(294.443f, 239.317f);
        path.lineTo(294.493f, 239.317f);
        path.lineTo(294.493f, 239.567f);
        path.lineTo(294.693f, 239.867f);
        path.quadTo(295.493f, 239.867f, 295.843f, 239.267f);
        path.quadTo(294.643f, 238.317f, 296.543f, 235.267f);
        path.lineTo(297.393f, 233.917f);
        path.quadTo(298.843f, 234.767f, 300.193f, 234.817f);
        path.lineTo(300.693f, 235.617f);
        path.lineTo(301.193f, 236.267f);
        path.lineTo(302.143f, 236.717f);
        path.lineTo(301.643f, 235.717f);
        path.lineTo(301.193f, 234.767f);
        path.lineTo(301.493f, 234.517f);
        path.lineTo(300.893f, 234.217f);
        path.lineTo(300.593f, 233.517f);
        path.quadTo(302.343f, 235.367f, 304.643f, 236.517f);
        path.lineTo(304.543f, 238.017f);
        path.lineTo(304.493f, 239.117f);
        path.lineTo(304.593f, 240.067f);
        path.lineTo(304.843f, 240.867f);
        path.lineTo(305.193f, 241.817f);
        path.quadTo(305.693f, 242.867f, 306.693f, 243.467f);
        path.quadTo(306.743f, 244.617f, 307.193f, 246.767f);
        path.lineTo(307.943f, 247.617f);
        path.lineTo(308.043f, 247.467f);
        path.lineTo(307.993f, 247.367f);
        path.lineTo(307.393f, 243.817f);
        path.lineTo(310.293f, 244.367f);
        path.lineTo(312.193f, 244.217f);
        path.lineTo(312.593f, 244.817f);
        path.lineTo(313.443f, 244.717f);
        path.lineTo(313.293f, 244.617f);
        path.quadTo(312.943f, 244.267f, 312.343f, 244.217f);
        path.quadTo(315.193f, 243.717f, 316.493f, 241.817f);
        path.lineTo(315.693f, 243.467f);
        path.lineTo(315.143f, 244.717f);
        path.lineTo(316.043f, 244.767f);
        path.lineTo(316.143f, 244.467f);
        path.quadTo(316.993f, 242.517f, 316.993f, 241.817f);
        path.lineTo(316.943f, 241.167f);
        path.lineTo(316.793f, 241.367f);
        path.lineTo(316.593f, 241.517f);
        path.quadTo(317.443f, 240.217f, 317.543f, 238.217f);
        path.lineTo(318.893f, 238.017f);
        path.lineTo(319.893f, 237.867f);
        path.lineTo(318.443f, 243.767f);
        path.lineTo(318.143f, 244.967f);
        path.lineTo(319.243f, 245.067f);
        path.quadTo(319.743f, 242.817f, 320.343f, 241.117f);
        path.lineTo(321.043f, 237.417f);
        path.lineTo(322.643f, 236.517f);
        path.lineTo(323.393f, 235.867f);
        path.quadTo(324.643f, 234.717f, 325.693f, 233.017f);
        path.lineTo(327.243f, 230.267f);
        path.quadTo(327.143f, 232.417f, 325.693f, 234.917f);
        path.lineTo(325.143f, 235.667f);
        path.quadTo(325.693f, 235.867f, 326.243f, 236.317f);
        path.lineTo(326.393f, 236.017f);
        path.quadTo(327.993f, 232.917f, 327.993f, 231.667f);
        path.lineTo(327.993f, 230.717f);
        path.lineTo(327.793f, 229.917f);
        path.lineTo(327.343f, 229.917f);
        path.lineTo(328.193f, 226.667f);
        path.lineTo(327.993f, 226.467f);
        path.lineTo(328.393f, 226.017f);
        path.lineTo(329.143f, 224.917f);
        path.lineTo(328.643f, 230.967f);
        path.lineTo(328.693f, 231.017f);
        path.quadTo(327.293f, 233.717f, 327.243f, 237.317f);
        path.lineTo(327.643f, 237.817f);
        path.lineTo(329.043f, 239.917f);
        path.lineTo(329.343f, 237.817f);
        path.lineTo(329.743f, 235.217f);
        path.quadTo(329.943f, 235.567f, 330.393f, 235.417f);
        path.lineTo(330.893f, 235.317f);
        path.lineTo(330.893f, 237.367f);
        path.lineTo(331.793f, 237.017f);
        path.lineTo(332.293f, 236.567f);
        path.lineTo(332.643f, 238.017f);
        path.quadTo(332.693f, 238.917f, 333.393f, 239.717f);
        path.quadTo(334.093f, 238.217f, 334.143f, 236.017f);
        path.lineTo(334.293f, 238.117f);
        path.lineTo(334.393f, 239.767f);
        path.lineTo(334.293f, 239.767f);
        path.lineTo(333.943f, 239.867f);
        path.lineTo(334.393f, 240.667f);
        path.lineTo(334.293f, 241.067f);
        path.lineTo(333.093f, 239.867f);
        path.quadTo(332.443f, 239.017f, 331.893f, 238.817f);
        path.lineTo(331.493f, 240.017f);
        path.lineTo(331.093f, 241.217f);
        path.lineTo(330.493f, 239.567f);
        path.quadTo(330.193f, 238.467f, 329.743f, 238.117f);
        path.quadTo(329.143f, 238.567f, 329.143f, 240.117f);
        path.lineTo(329.143f, 240.267f);
        path.lineTo(329.843f, 241.667f);
        path.lineTo(329.893f, 241.667f);
        path.lineTo(329.943f, 241.367f);
        path.lineTo(330.343f, 241.717f);
        path.quadTo(330.893f, 241.817f, 331.643f, 242.167f);
        path.lineTo(332.043f, 241.567f);
        path.lineTo(332.443f, 240.917f);
        path.lineTo(333.093f, 241.917f);
        path.quadTo(333.243f, 242.217f, 333.743f, 242.267f);
        path.lineTo(333.493f, 243.267f);
        path.lineTo(335.093f, 244.717f);
        path.lineTo(335.093f, 245.117f);
        path.lineTo(335.343f, 248.517f);
        path.quadTo(335.343f, 250.167f, 335.543f, 250.867f);
        path.lineTo(336.693f, 250.617f);
        path.quadTo(335.993f, 245.567f, 336.293f, 241.217f);
        path.quadTo(335.543f, 241.817f, 335.243f, 243.317f);
        path.lineTo(334.593f, 243.067f);
        path.lineTo(334.393f, 243.617f);
        path.lineTo(334.993f, 242.067f);
        path.lineTo(335.143f, 242.067f);
        path.lineTo(335.493f, 241.717f);
        path.lineTo(335.493f, 241.467f);
        path.lineTo(335.793f, 241.617f);
        path.quadTo(335.993f, 240.867f, 336.293f, 240.317f);
        path.lineTo(335.493f, 240.117f);
        path.lineTo(335.493f, 237.917f);
        path.lineTo(336.543f, 239.717f);
        path.lineTo(336.543f, 239.967f);
        path.lineTo(336.793f, 239.667f);
        path.lineTo(337.293f, 239.267f);
        path.quadTo(337.093f, 238.517f, 335.993f, 237.417f);
        path.lineTo(335.493f, 236.867f);
        path.lineTo(335.493f, 235.617f);
        path.lineTo(334.743f, 234.867f);
        path.lineTo(334.693f, 234.717f);
        path.quadTo(334.893f, 234.317f, 335.543f, 233.467f);
        path.lineTo(335.893f, 233.167f);
        path.lineTo(336.343f, 233.067f);
        path.lineTo(336.343f, 233.167f);
        path.lineTo(335.543f, 234.267f);
        path.lineTo(337.193f, 234.067f);
        path.lineTo(337.693f, 235.867f);
        path.quadTo(336.943f, 236.017f, 336.943f, 236.567f);
        path.lineTo(337.043f, 237.217f);
        path.lineTo(337.143f, 237.167f);
        path.lineTo(337.993f, 237.167f);
        path.lineTo(338.443f, 239.017f);
        path.lineTo(339.093f, 239.167f);
        path.lineTo(338.843f, 237.667f);
        path.lineTo(338.693f, 237.117f);
        path.quadTo(339.593f, 236.967f, 339.893f, 236.517f);
        path.lineTo(339.943f, 236.417f);
        path.lineTo(340.793f, 236.467f);
        path.lineTo(340.843f, 236.467f);
        path.quadTo(340.443f, 237.417f, 340.443f, 238.267f);
        path.lineTo(340.443f, 238.917f);
        path.lineTo(340.693f, 239.167f);
        path.lineTo(341.993f, 239.217f);
        path.lineTo(343.093f, 238.017f);
        path.lineTo(343.743f, 236.967f);
        path.quadTo(343.093f, 237.017f, 342.243f, 237.617f);
        path.lineTo(341.243f, 238.317f);
        path.lineTo(341.243f, 238.267f);
        path.lineTo(341.193f, 238.117f);
        path.lineTo(341.143f, 237.417f);
        path.quadTo(341.143f, 236.917f, 341.643f, 236.067f);
        path.lineTo(342.493f, 234.817f);
        path.lineTo(342.043f, 234.917f);
        path.lineTo(342.093f, 234.817f);
        path.lineTo(340.043f, 235.567f);
        path.lineTo(340.043f, 235.317f);
        path.lineTo(339.843f, 234.517f);
        path.quadTo(340.093f, 233.567f, 340.893f, 232.717f);
        path.lineTo(342.193f, 231.267f);
        path.lineTo(342.143f, 230.667f);
        path.lineTo(342.093f, 230.817f);
        path.lineTo(340.793f, 232.217f);
        path.lineTo(339.493f, 233.767f);
        path.lineTo(338.843f, 232.867f);
        path.quadTo(338.143f, 232.167f, 337.393f, 232.417f);
        path.lineTo(336.693f, 230.517f);
        path.lineTo(336.643f, 230.517f);
        path.lineTo(335.393f, 226.717f);
        path.lineTo(335.443f, 226.167f);
        path.lineTo(335.493f, 226.017f);
        path.quadTo(336.293f, 226.767f, 336.893f, 228.717f);
        path.lineTo(337.743f, 231.417f);
        path.lineTo(338.193f, 231.117f);
        path.lineTo(338.493f, 230.917f);
        path.lineTo(339.143f, 228.417f);
        path.quadTo(339.593f, 227.167f, 341.643f, 226.417f);
        path.lineTo(341.643f, 226.767f);
        path.lineTo(340.843f, 229.367f);
        path.quadTo(340.093f, 231.267f, 339.943f, 232.017f);
        path.lineTo(340.443f, 232.167f);
        path.lineTo(341.743f, 229.717f);
        path.quadTo(342.493f, 228.117f, 342.493f, 226.867f);
        path.lineTo(342.493f, 225.967f);
        path.lineTo(342.193f, 225.567f);
        path.lineTo(340.043f, 225.567f);
        path.lineTo(339.443f, 226.217f);
        path.lineTo(339.493f, 225.517f);
        path.lineTo(339.493f, 223.467f);
        path.quadTo(339.393f, 222.267f, 338.893f, 221.367f);
        path.quadTo(337.343f, 219.167f, 332.193f, 218.817f);
        path.lineTo(332.143f, 216.867f);
        path.lineTo(334.743f, 215.167f);
        path.lineTo(336.143f, 214.017f);
        path.quadTo(336.143f, 213.267f, 335.493f, 212.467f);
        path.lineTo(335.493f, 213.017f);
        path.quadTo(335.493f, 213.367f, 334.143f, 214.217f);
        path.lineTo(332.093f, 215.717f);
        path.lineTo(332.043f, 213.867f);
        path.lineTo(331.593f, 211.967f);
        path.quadTo(332.443f, 211.617f, 334.243f, 211.567f);
        path.quadTo(333.793f, 211.317f, 333.293f, 211.167f);
        path.lineTo(332.893f, 211.067f);
        path.quadTo(334.693f, 210.217f, 336.043f, 209.967f);
        path.quadTo(337.193f, 209.717f, 338.193f, 208.967f);
        path.quadTo(338.264f, 208.492f, 339.093f, 207.617f);
        path.close();
        path.moveTo(337.021f, 205.914f);
        path.lineTo(337.621f, 205.464f);
        path.lineTo(337.921f, 206.064f);
        path.lineTo(337.621f, 206.464f);
        path.lineTo(337.271f, 206.664f);
        path.lineTo(337.021f, 206.514f);
        path.lineTo(337.021f, 205.914f);
        path.close();
        path.moveTo(336.147f, 223.637f);
        path.lineTo(336.097f, 224.687f);
        path.quadTo(335.997f, 225.287f, 336.547f, 225.287f);
        path.quadTo(337.147f, 225.287f, 337.397f, 225.637f);
        path.lineTo(337.947f, 225.988f);
        path.lineTo(338.297f, 225.637f);
        path.lineTo(338.197f, 226.037f);
        path.quadTo(337.047f, 226.037f, 336.947f, 226.387f);
        path.lineTo(337.097f, 226.688f);
        path.lineTo(337.047f, 226.637f);
        path.quadTo(336.397f, 225.837f, 335.597f, 225.537f);
        path.lineTo(335.897f, 225.287f);
        path.quadTo(335.897f, 224.287f, 335.547f, 223.837f);
        path.lineTo(336.147f, 223.637f);
        path.close();
        path.moveTo(338.08f, 227.735f);
        path.lineTo(338.58f, 227.585f);
        path.lineTo(337.93f, 228.885f);
        path.lineTo(337.73f, 228.835f);
        path.quadTo(337.98f, 228.085f, 337.38f, 227.135f);
        path.lineTo(338.08f, 227.735f);
        path.close();
        path.moveTo(364.504f, 213.878f);
        path.lineTo(364.404f, 213.378f);
        path.lineTo(363.404f, 213.378f);
        path.lineTo(362.904f, 213.978f);
        path.lineTo(362.554f, 214.328f);
        path.lineTo(362.104f, 213.728f);
        path.quadTo(361.554f, 213.328f, 360.904f, 213.178f);
        path.lineTo(360.704f, 213.278f);
        path.quadTo(360.454f, 213.378f, 360.454f, 214.078f);
        path.quadTo(360.454f, 214.678f, 361.104f, 215.678f);
        path.quadTo(362.054f, 217.128f, 363.504f, 217.128f);
        path.quadTo(364.654f, 217.128f, 364.354f, 216.828f);
        path.lineTo(364.554f, 215.078f);
        path.lineTo(364.504f, 213.878f);
        path.close();
        path.moveTo(363.261f, 216.364f);
        path.lineTo(361.961f, 215.014f);
        path.lineTo(361.161f, 214.114f);
        path.lineTo(363.211f, 215.714f);
        path.lineTo(363.411f, 215.464f);
        path.lineTo(363.461f, 214.514f);
        path.lineTo(363.661f, 214.764f);
        path.quadTo(363.676f, 215.95f, 363.261f, 216.364f);
        path.close();
        path.moveTo(366.484f, 221.75f);
        path.lineTo(365.534f, 220.55f);
        path.quadTo(365.134f, 220.95f, 365.134f, 222.65f);
        path.quadTo(365.134f, 225.0f, 366.434f, 226.25f);
        path.lineTo(366.684f, 226.05f);
        path.lineTo(366.184f, 225.8f);
        path.quadTo(365.734f, 225.45f, 365.734f, 224.75f);
        path.lineTo(365.784f, 221.7f);
        path.lineTo(366.034f, 221.9f);
        path.lineTo(367.434f, 224.4f);
        path.quadTo(368.634f, 223.05f, 369.184f, 222.8f);
        path.lineTo(369.234f, 223.45f);
        path.quadTo(369.284f, 223.9f, 368.284f, 224.95f);
        path.quadTo(367.234f, 226.1f, 367.134f, 226.5f);
        path.lineTo(367.834f, 226.75f);
        path.lineTo(369.434f, 225.0f);
        path.quadTo(369.934f, 224.15f, 369.934f, 223.25f);
        path.lineTo(369.884f, 222.3f);
        path.lineTo(369.734f, 222.1f);
        path.quadTo(368.734f, 222.3f, 367.934f, 222.7f);
        path.lineTo(367.184f, 223.05f);
        path.lineTo(366.484f, 221.75f);
        path.close();
        path.moveTo(321.231f, 204.717f);
        path.quadTo(320.981f, 204.817f, 320.981f, 205.017f);
        path.lineTo(321.381f, 205.467f);
        path.quadTo(321.581f, 205.667f, 322.131f, 205.717f);
        path.lineTo(322.431f, 205.217f);
        path.lineTo(321.931f, 204.617f);
        path.lineTo(321.231f, 204.717f);
        path.close();
        path.moveTo(320.357f, 204.947f);
        path.lineTo(319.907f, 204.647f);
        path.quadTo(319.207f, 204.647f, 318.957f, 204.947f);
        path.lineTo(319.607f, 205.197f);
        path.lineTo(320.357f, 204.947f);
        path.close();
        path.moveTo(328.965f, 201.265f);
        path.lineTo(329.165f, 201.865f);
        path.lineTo(329.415f, 202.615f);
        path.lineTo(328.965f, 201.265f);
        path.close();
        path.moveTo(328.597f, 203.612f);
        path.lineTo(328.497f, 203.512f);
        path.lineTo(328.197f, 203.562f);
        path.lineTo(328.697f, 204.162f);
        path.lineTo(328.897f, 205.362f);
        path.lineTo(329.297f, 208.462f);
        path.lineTo(328.697f, 212.912f);
        path.quadTo(329.447f, 212.362f, 329.797f, 211.512f);
        path.lineTo(329.797f, 212.612f);
        path.lineTo(329.747f, 212.712f);
        path.lineTo(329.747f, 214.212f);
        path.lineTo(329.347f, 221.812f);
        path.lineTo(329.197f, 223.612f);
        path.lineTo(327.897f, 225.512f);
        path.lineTo(320.797f, 233.062f);
        path.lineTo(322.147f, 232.962f);
        path.lineTo(327.697f, 226.962f);
        path.lineTo(327.447f, 228.562f);
        path.quadTo(326.997f, 230.412f, 325.997f, 231.812f);
        path.quadTo(324.297f, 234.212f, 321.147f, 235.662f);
        path.lineTo(321.147f, 235.662f);
        path.lineTo(321.097f, 235.112f);
        path.lineTo(321.047f, 235.212f);
        path.lineTo(320.697f, 235.312f);
        path.lineTo(320.447f, 236.012f);
        path.lineTo(317.547f, 236.962f);
        path.quadTo(317.547f, 233.412f, 316.947f, 232.112f);
        path.quadTo(317.547f, 231.062f, 317.547f, 230.362f);
        path.lineTo(317.547f, 229.512f);
        path.lineTo(317.247f, 229.162f);
        path.lineTo(316.197f, 230.362f);
        path.quadTo(315.347f, 231.312f, 314.347f, 231.312f);
        path.lineTo(313.497f, 231.262f);
        path.lineTo(312.997f, 231.062f);
        path.lineTo(313.197f, 231.212f);
        path.lineTo(312.147f, 231.162f);
        path.lineTo(312.347f, 230.962f);
        path.lineTo(312.447f, 230.962f);
        path.lineTo(311.047f, 230.912f);
        path.lineTo(307.997f, 230.812f);
        path.quadTo(305.747f, 230.812f, 304.447f, 231.962f);
        path.lineTo(305.097f, 232.162f);
        path.lineTo(305.047f, 232.762f);
        path.lineTo(304.847f, 232.762f);
        path.lineTo(304.597f, 233.162f);
        path.lineTo(304.597f, 233.562f);
        path.lineTo(304.597f, 233.612f);
        path.lineTo(303.547f, 233.062f);
        path.quadTo(302.647f, 232.512f, 301.597f, 231.212f);
        path.lineTo(301.897f, 231.312f);
        path.lineTo(301.897f, 230.262f);
        path.lineTo(300.497f, 229.912f);
        path.lineTo(300.147f, 229.712f);
        path.quadTo(298.847f, 225.012f, 296.647f, 221.912f);
        path.lineTo(296.597f, 220.612f);
        path.lineTo(296.697f, 218.412f);
        path.lineTo(296.397f, 219.112f);
        path.quadTo(296.097f, 215.612f, 296.097f, 212.162f);
        path.lineTo(296.247f, 212.212f);
        path.lineTo(296.647f, 212.362f);
        path.lineTo(296.347f, 212.012f);
        path.lineTo(296.147f, 211.912f);
        path.lineTo(296.147f, 210.962f);
        path.lineTo(296.247f, 209.712f);
        path.quadTo(296.647f, 208.362f, 297.397f, 207.912f);
        path.quadTo(298.247f, 207.462f, 298.247f, 206.062f);
        path.lineTo(298.047f, 205.312f);
        path.quadTo(300.597f, 201.362f, 306.297f, 198.512f);
        path.quadTo(301.447f, 199.362f, 298.397f, 203.912f);
        path.lineTo(300.747f, 198.762f);
        path.quadTo(302.297f, 195.812f, 303.647f, 194.462f);
        path.quadTo(305.147f, 192.862f, 307.797f, 192.062f);
        path.quadTo(310.247f, 191.262f, 315.347f, 190.562f);
        path.quadTo(319.247f, 190.062f, 323.747f, 195.012f);
        path.quadTo(327.446f, 199.147f, 328.597f, 203.612f);
        path.close();
        path.moveTo(330.899f, 203.474f);
        path.lineTo(330.199f, 203.674f);
        path.lineTo(330.049f, 202.724f);
        path.lineTo(330.899f, 203.474f);
        path.close();
        path.moveTo(331.912f, 203.152f);
        path.lineTo(331.462f, 202.752f);
        path.lineTo(331.362f, 202.652f);
        path.lineTo(332.112f, 202.952f);
        path.lineTo(332.612f, 203.202f);
        path.lineTo(331.912f, 203.152f);
        path.close();
        path.moveTo(305.764f, 204.487f);
        path.lineTo(305.764f, 204.187f);
        path.lineTo(305.564f, 203.887f);
        path.lineTo(304.264f, 204.087f);
        path.lineTo(304.414f, 204.337f);
        path.lineTo(305.164f, 204.537f);
        path.lineTo(305.764f, 204.487f);
        path.close();
        path.moveTo(303.83f, 204.947f);
        path.lineTo(302.38f, 204.897f);
        path.quadTo(302.43f, 205.197f, 303.03f, 205.347f);
        path.quadTo(303.646f, 205.224f, 303.83f, 204.947f);
        path.close();
        path.moveTo(310.091f, 212.083f);
        path.quadTo(310.841f, 212.383f, 311.191f, 212.983f);
        path.lineTo(311.391f, 213.833f);
        path.quadTo(311.641f, 215.133f, 311.341f, 218.183f);
        path.quadTo(311.141f, 221.133f, 311.291f, 222.583f);
        path.lineTo(312.191f, 224.833f);
        path.quadTo(313.041f, 226.433f, 313.091f, 227.033f);
        path.quadTo(313.191f, 227.633f, 312.941f, 227.583f);
        path.lineTo(312.641f, 227.533f);
        path.lineTo(312.141f, 227.083f);
        path.lineTo(311.141f, 226.933f);
        path.quadTo(310.541f, 226.983f, 310.391f, 227.183f);
        path.lineTo(310.391f, 227.283f);
        path.quadTo(310.491f, 228.033f, 309.841f, 229.033f);
        path.lineTo(309.691f, 228.833f);
        path.lineTo(309.441f, 228.733f);
        path.lineTo(309.041f, 226.183f);
        path.quadTo(308.691f, 224.933f, 306.541f, 225.583f);
        path.lineTo(306.541f, 225.383f);
        path.lineTo(307.591f, 223.983f);
        path.lineTo(308.541f, 222.433f);
        path.lineTo(308.791f, 222.633f);
        path.quadTo(308.891f, 223.483f, 309.091f, 223.633f);
        path.lineTo(309.241f, 223.183f);
        path.quadTo(308.741f, 220.233f, 308.841f, 217.733f);
        path.quadTo(308.986f, 214.43f, 310.091f, 212.083f);
        path.close();
        path.moveTo(312.024f, 213.924f);
        path.quadTo(311.224f, 208.424f, 309.924f, 210.974f);
        path.quadTo(308.674f, 213.024f, 308.224f, 216.974f);
        path.lineTo(308.224f, 219.274f);
        path.lineTo(308.424f, 221.574f);
        path.lineTo(306.775f, 223.774f);
        path.quadTo(305.424f, 225.624f, 305.525f, 226.324f);
        path.quadTo(305.574f, 226.974f, 305.874f, 227.024f);
        path.lineTo(306.774f, 227.024f);
        path.quadTo(306.974f, 226.724f, 307.574f, 226.474f);
        path.lineTo(308.224f, 226.374f);
        path.quadTo(308.624f, 227.024f, 308.474f, 228.624f);
        path.quadTo(308.624f, 229.924f, 310.374f, 230.024f);
        path.quadTo(310.924f, 229.574f, 311.124f, 228.724f);
        path.lineTo(311.224f, 227.724f);
        path.lineTo(311.824f, 228.224f);
        path.lineTo(312.874f, 228.424f);
        path.quadTo(313.474f, 228.374f, 313.774f, 228.024f);
        path.lineTo(313.974f, 227.674f);
        path.quadTo(313.624f, 225.424f, 312.924f, 224.474f);
        path.quadTo(312.224f, 223.474f, 312.074f, 222.474f);
        path.quadTo(311.824f, 221.024f, 312.074f, 218.374f);
        path.quadTo(312.255f, 215.719f, 312.024f, 213.924f);
        path.close();
        path.moveTo(301.805f, 213.095f);
        path.lineTo(301.055f, 212.945f);
        path.lineTo(300.555f, 212.945f);
        path.lineTo(300.355f, 212.995f);
        path.lineTo(300.155f, 212.995f);
        path.lineTo(300.405f, 212.395f);
        path.quadTo(300.655f, 211.895f, 303.405f, 212.945f);
        path.quadTo(302.855f, 214.595f, 301.355f, 214.795f);
        path.quadTo(300.205f, 214.895f, 299.505f, 214.145f);
        path.lineTo(299.955f, 214.245f);
        path.lineTo(300.255f, 213.846f);
        path.quadTo(300.355f, 214.396f, 300.605f, 214.546f);
        path.lineTo(301.155f, 214.646f);
        path.lineTo(301.805f, 214.046f);
        path.lineTo(301.805f, 213.095f);
        path.close();
        path.moveTo(298.352f, 213.97f);
        path.quadTo(298.402f, 214.87f, 299.502f, 215.32f);
        path.lineTo(301.852f, 215.47f);
        path.quadTo(302.902f, 215.32f, 303.602f, 214.77f);
        path.quadTo(304.202f, 214.17f, 304.152f, 213.22f);
        path.quadTo(303.802f, 211.07f, 301.002f, 211.87f);
        path.quadTo(299.952f, 212.17f, 299.102f, 212.82f);
        path.quadTo(298.26f, 213.464f, 298.352f, 213.97f);
        path.close();
        path.moveTo(298.72f, 221.382f);
        path.lineTo(299.17f, 221.182f);
        path.quadTo(299.62f, 220.532f, 299.92f, 219.132f);
        path.quadTo(298.52f, 220.132f, 298.52f, 220.782f);
        path.quadTo(298.536f, 221.934f, 298.72f, 221.382f);
        path.close();
        path.moveTo(302.219f, 219.586f);
        path.lineTo(301.469f, 219.586f);
        path.lineTo(301.269f, 220.536f);
        path.lineTo(301.019f, 221.686f);
        path.lineTo(301.269f, 221.686f);
        path.lineTo(301.869f, 220.636f);
        path.lineTo(302.219f, 219.586f);
        path.close();
        path.moveTo(334.812f, 207.755f);
        path.lineTo(334.462f, 207.455f);
        path.lineTo(334.112f, 207.055f);
        path.lineTo(334.162f, 206.505f);
        path.lineTo(334.162f, 206.355f);
        path.lineTo(334.612f, 206.755f);
        path.lineTo(335.112f, 207.555f);
        path.lineTo(334.812f, 207.755f);
        path.close();
        path.moveTo(332.74f, 209.09f);
        path.lineTo(332.29f, 209.09f);
        path.lineTo(330.99f, 208.29f);
        path.lineTo(331.94f, 208.54f);
        path.lineTo(332.74f, 209.09f);
        path.close();
        path.moveTo(331.037f, 209.459f);
        path.lineTo(331.687f, 210.259f);
        path.lineTo(331.237f, 210.359f);
        path.lineTo(331.137f, 210.209f);
        path.lineTo(331.037f, 209.459f);
        path.close();
        path.moveTo(330.346f, 209.367f);
        path.lineTo(330.346f, 208.817f);
        path.lineTo(330.396f, 210.717f);
        path.lineTo(330.296f, 210.117f);
        path.lineTo(330.346f, 209.367f);
        path.close();
        path.moveTo(331.083f, 205.5f);
        path.lineTo(330.583f, 206.15f);
        path.lineTo(330.383f, 204.85f);
        path.lineTo(331.083f, 205.5f);
        path.close();
        path.moveTo(330.807f, 216.41f);
        path.lineTo(331.007f, 214.76f);
        path.lineTo(330.957f, 220.11f);
        path.lineTo(330.907f, 220.11f);
        path.lineTo(330.907f, 218.26f);
        path.lineTo(330.857f, 217.66f);
        path.lineTo(330.757f, 217.76f);
        path.lineTo(330.807f, 216.41f);
        path.close();
        path.moveTo(324.684f, 206.605f);
        path.lineTo(324.484f, 206.105f);
        path.quadTo(324.284f, 205.805f, 322.984f, 205.805f);
        path.lineTo(322.884f, 206.105f);
        path.lineTo(323.084f, 206.655f);
        path.lineTo(324.684f, 206.605f);
        path.close();
        path.moveTo(321.093f, 213.234f);
        path.lineTo(321.043f, 213.084f);
        path.lineTo(321.843f, 212.834f);
        path.lineTo(321.843f, 212.984f);
        path.lineTo(321.643f, 212.984f);
        path.lineTo(321.093f, 213.234f);
        path.close();
        path.moveTo(320.311f, 213.694f);
        path.quadTo(320.361f, 214.244f, 320.611f, 214.544f);
        path.quadTo(321.461f, 215.594f, 323.661f, 215.294f);
        path.quadTo(324.661f, 215.194f, 325.461f, 214.444f);
        path.quadTo(326.211f, 213.794f, 326.111f, 213.194f);
        path.quadTo(326.011f, 212.394f, 325.061f, 211.894f);
        path.quadTo(324.061f, 211.294f, 322.561f, 211.544f);
        path.quadTo(321.011f, 211.744f, 320.511f, 212.194f);
        path.quadTo(320.161f, 212.544f, 320.261f, 213.344f);
        path.lineTo(320.311f, 213.694f);
        path.close();
        path.moveTo(322.152f, 212.773f);
        path.lineTo(322.102f, 212.723f);
        path.lineTo(323.002f, 212.523f);
        path.quadTo(324.552f, 212.473f, 325.302f, 213.273f);
        path.quadTo(323.752f, 214.373f, 322.452f, 214.573f);
        path.quadTo(321.702f, 214.673f, 321.352f, 213.973f);
        path.lineTo(321.902f, 213.623f);
        path.lineTo(322.102f, 213.823f);
        path.lineTo(323.002f, 213.773f);
        path.quadTo(323.402f, 213.473f, 323.302f, 212.973f);
        path.lineTo(322.652f, 212.773f);
        path.lineTo(322.152f, 212.773f);
        path.close();
        path.moveTo(323.119f, 221.198f);
        path.lineTo(323.819f, 221.398f);
        path.lineTo(324.769f, 219.598f);
        path.quadTo(324.019f, 219.898f, 323.619f, 220.448f);
        path.lineTo(323.119f, 221.198f);
        path.close();
        path.moveTo(322.014f, 221.842f);
        path.lineTo(322.864f, 220.392f);
        path.lineTo(323.364f, 218.692f);
        path.quadTo(322.514f, 218.942f, 321.964f, 219.992f);
        path.quadTo(321.564f, 220.692f, 321.564f, 221.092f);
        path.quadTo(321.564f, 222.242f, 321.714f, 221.842f);
        path.lineTo(322.014f, 221.842f);
        path.close();
        path.moveTo(320.449f, 219.725f);
        path.lineTo(319.299f, 221.425f);
        path.quadTo(319.449f, 221.825f, 320.149f, 221.875f);
        path.lineTo(321.199f, 219.975f);
        path.lineTo(322.049f, 218.225f);
        path.quadTo(321.185f, 218.436f, 320.449f, 219.725f);
        path.close();
        path.moveTo(333.201f, 220.231f);
        path.lineTo(332.6f, 220.931f);
        path.lineTo(333.35f, 222.831f);
        path.lineTo(332.0f, 221.031f);
        path.lineTo(332.05f, 220.231f);
        path.lineTo(333.201f, 220.231f);
        path.close();
        path.moveTo(330.945f, 220.415f);
        path.lineTo(330.995f, 220.415f);
        path.lineTo(330.645f, 223.915f);
        path.lineTo(329.995f, 228.115f);
        path.lineTo(329.945f, 228.515f);
        path.quadTo(329.595f, 228.965f, 329.245f, 230.015f);
        path.lineTo(330.195f, 225.215f);
        path.lineTo(330.695f, 221.415f);
        path.lineTo(330.945f, 220.415f);
        path.close();
        path.moveTo(331.681f, 226.538f);
        path.lineTo(331.031f, 227.438f);
        path.lineTo(331.531f, 224.238f);
        path.lineTo(331.981f, 221.388f);
        path.lineTo(333.481f, 223.588f);
        path.lineTo(331.681f, 226.538f);
        path.close();
        path.moveTo(334.812f, 225.341f);
        path.lineTo(334.812f, 225.291f);
        path.lineTo(334.662f, 225.091f);
        path.lineTo(335.212f, 225.441f);
        path.lineTo(334.862f, 225.391f);
        path.lineTo(334.812f, 225.341f);
        path.close();
        path.moveTo(334.213f, 225.295f);
        path.lineTo(333.963f, 225.295f);
        path.lineTo(334.113f, 225.045f);
        path.lineTo(334.213f, 225.295f);
        path.close();
        path.moveTo(334.582f, 226.261f);
        path.lineTo(334.582f, 227.611f);
        path.lineTo(335.332f, 230.761f);
        path.lineTo(335.132f, 230.461f);
        path.quadTo(334.282f, 228.811f, 334.282f, 228.361f);
        path.quadTo(334.259f, 227.689f, 334.582f, 226.261f);
        path.close();
        path.moveTo(331.681f, 229.852f);
        path.quadTo(331.381f, 229.802f, 331.081f, 229.402f);
        path.lineTo(332.131f, 228.052f);
        path.lineTo(332.431f, 227.602f);
        path.lineTo(332.431f, 228.102f);
        path.quadTo(332.28f, 229.07f, 331.681f, 229.852f);
        path.close();
        path.moveTo(334.95f, 232.89f);
        path.lineTo(334.6f, 233.49f);
        path.lineTo(334.15f, 234.29f);
        path.lineTo(334.15f, 231.04f);
        path.lineTo(334.5f, 231.34f);
        path.quadTo(334.489f, 232.43f, 334.95f, 232.89f);
        path.close();
        path.moveTo(327.953f, 236.757f);
        path.lineTo(327.953f, 234.357f);
        path.lineTo(328.453f, 233.357f);
        path.lineTo(328.403f, 233.757f);
        path.lineTo(327.953f, 236.757f);
        path.close();
        path.moveTo(323.303f, 232.062f);
        path.lineTo(323.403f, 232.412f);
        path.quadTo(323.503f, 232.962f, 323.803f, 232.962f);
        path.lineTo(324.053f, 232.812f);
        path.lineTo(325.553f, 231.612f);
        path.lineTo(323.853f, 232.162f);
        path.lineTo(323.303f, 232.062f);
        path.close();
        path.moveTo(320.173f, 228.701f);
        path.lineTo(319.923f, 228.401f);
        path.quadTo(318.373f, 228.401f, 318.223f, 228.701f);
        path.lineTo(319.323f, 230.151f);
        path.lineTo(319.823f, 230.901f);
        path.lineTo(320.073f, 230.701f);
        path.lineTo(320.173f, 230.401f);
        path.lineTo(320.173f, 229.551f);
        path.lineTo(320.173f, 228.701f);
        path.close();
        path.moveTo(325.697f, 238.461f);
        path.lineTo(325.447f, 238.461f);
        path.lineTo(325.847f, 243.811f);
        path.lineTo(325.697f, 243.511f);
        path.lineTo(325.447f, 243.511f);
        path.lineTo(326.047f, 245.711f);
        path.lineTo(326.947f, 256.861f);
        path.lineTo(326.797f, 261.211f);
        path.quadTo(326.147f, 272.861f, 326.147f, 275.761f);
        path.lineTo(326.197f, 276.561f);
        path.lineTo(326.347f, 276.661f);
        path.lineTo(326.847f, 276.611f);
        path.lineTo(327.997f, 267.411f);
        path.lineTo(328.247f, 267.161f);
        path.lineTo(328.247f, 264.861f);
        path.lineTo(328.447f, 262.011f);
        path.quadTo(328.447f, 258.561f, 327.947f, 252.561f);
        path.lineTo(327.647f, 249.311f);
        path.lineTo(329.547f, 252.211f);
        path.quadTo(330.597f, 253.661f, 331.797f, 254.811f);
        path.lineTo(331.047f, 256.561f);
        path.lineTo(330.697f, 257.161f);
        path.lineTo(331.097f, 264.461f);
        path.lineTo(331.597f, 272.411f);
        path.lineTo(331.547f, 272.561f);
        path.quadTo(331.547f, 272.861f, 331.697f, 273.011f);
        path.lineTo(331.947f, 276.861f);
        path.lineTo(331.547f, 276.811f);
        path.quadTo(331.347f, 276.811f, 331.247f, 276.961f);
        path.lineTo(331.397f, 277.561f);
        path.lineTo(327.047f, 277.911f);
        path.lineTo(326.847f, 278.461f);
        path.lineTo(326.797f, 278.561f);
        path.lineTo(331.747f, 278.111f);
        path.lineTo(331.997f, 278.061f);
        path.lineTo(332.097f, 279.511f);
        path.lineTo(332.347f, 279.511f);
        path.lineTo(332.647f, 272.961f);
        path.lineTo(333.097f, 272.861f);
        path.lineTo(333.047f, 272.511f);
        path.lineTo(333.097f, 272.461f);
        path.lineTo(333.197f, 267.411f);
        path.lineTo(333.097f, 260.411f);
        path.lineTo(332.247f, 255.261f);
        path.lineTo(333.747f, 256.461f);
        path.lineTo(333.797f, 256.611f);
        path.quadTo(335.747f, 259.461f, 339.047f, 259.461f);
        path.quadTo(340.247f, 259.461f, 341.297f, 258.911f);
        path.lineTo(341.347f, 258.911f);
        path.quadTo(343.297f, 258.911f, 344.097f, 257.261f);
        path.quadTo(344.547f, 256.361f, 344.547f, 255.311f);
        path.lineTo(344.447f, 254.411f);
        path.lineTo(344.347f, 254.111f);
        path.lineTo(344.247f, 254.111f);
        path.quadTo(344.847f, 252.111f, 344.847f, 250.111f);
        path.lineTo(344.797f, 247.861f);
        path.lineTo(344.347f, 246.861f);
        path.lineTo(344.297f, 246.611f);
        path.lineTo(344.747f, 242.411f);
        path.quadTo(345.397f, 242.411f, 345.897f, 242.061f);
        path.lineTo(346.447f, 241.461f);
        path.lineTo(345.997f, 241.111f);
        path.lineTo(345.147f, 241.061f);
        path.lineTo(344.647f, 240.961f);
        path.lineTo(344.447f, 240.161f);
        path.lineTo(344.347f, 240.161f);
        path.lineTo(345.847f, 237.411f);
        path.quadTo(346.897f, 235.111f, 346.897f, 233.361f);
        path.quadTo(346.897f, 232.611f, 345.347f, 231.061f);
        path.quadTo(343.647f, 229.411f, 342.447f, 229.261f);
        path.lineTo(342.447f, 229.561f);
        path.lineTo(344.247f, 231.261f);
        path.quadTo(345.697f, 232.661f, 345.697f, 233.211f);
        path.quadTo(345.697f, 234.011f, 344.247f, 236.711f);
        path.quadTo(342.747f, 239.361f, 342.747f, 240.311f);
        path.lineTo(342.797f, 240.661f);
        path.lineTo(341.347f, 240.611f);
        path.quadTo(341.947f, 241.361f, 342.447f, 242.411f);
        path.lineTo(342.497f, 242.411f);
        path.lineTo(342.597f, 242.761f);
        path.quadTo(343.247f, 244.561f, 343.397f, 247.111f);
        path.lineTo(343.497f, 248.211f);
        path.quadTo(343.497f, 249.611f, 343.097f, 251.011f);
        path.lineTo(342.947f, 252.661f);
        path.quadTo(342.447f, 254.961f, 341.397f, 256.011f);
        path.lineTo(341.547f, 256.411f);
        path.lineTo(341.997f, 256.411f);
        path.lineTo(342.197f, 256.361f);
        path.lineTo(341.147f, 257.711f);
        path.lineTo(339.047f, 257.761f);
        path.quadTo(337.347f, 257.761f, 335.697f, 256.911f);
        path.lineTo(335.897f, 256.711f);
        path.lineTo(335.497f, 254.461f);
        path.lineTo(334.897f, 254.511f);
        path.quadTo(333.747f, 254.511f, 332.597f, 253.761f);
        path.lineTo(332.797f, 254.711f);
        path.lineTo(330.897f, 252.511f);
        path.quadTo(329.147f, 250.161f, 327.447f, 247.061f);
        path.lineTo(327.297f, 245.361f);
        path.lineTo(327.297f, 245.311f);
        path.lineTo(327.097f, 243.061f);
        path.lineTo(326.847f, 243.061f);
        path.lineTo(326.847f, 245.861f);
        path.lineTo(326.797f, 245.761f);
        path.quadTo(326.341f, 241.223f, 325.697f, 238.461f);
        path.close();
        path.moveTo(318.331f, 249.463f);
        path.lineTo(317.881f, 249.463f);
        path.lineTo(317.831f, 251.613f);
        path.quadTo(317.831f, 252.913f, 318.081f, 253.163f);
        path.lineTo(318.531f, 253.163f);
        path.lineTo(318.681f, 252.863f);
        path.lineTo(318.731f, 251.863f);
        path.lineTo(318.331f, 249.463f);
        path.close();
        path.moveTo(317.365f, 238.231f);
        path.lineTo(317.115f, 239.931f);
        path.quadTo(316.215f, 243.381f, 310.265f, 243.381f);
        path.quadTo(308.315f, 243.381f, 307.165f, 242.681f);
        path.lineTo(306.915f, 241.231f);
        path.lineTo(306.665f, 242.081f);
        path.lineTo(306.665f, 242.281f);
        path.lineTo(306.365f, 241.981f);
        path.quadTo(305.465f, 240.931f, 305.465f, 239.431f);
        path.lineTo(305.465f, 238.731f);
        path.lineTo(305.565f, 238.531f);
        path.lineTo(307.215f, 240.381f);
        path.quadTo(308.215f, 241.231f, 309.865f, 241.231f);
        path.quadTo(313.365f, 241.231f, 314.465f, 239.381f);
        path.lineTo(314.965f, 238.381f);
        path.lineTo(317.365f, 238.231f);
        path.close();
        path.moveTo(314.418f, 231.97f);
        path.lineTo(314.318f, 231.82f);
        path.lineTo(315.618f, 232.07f);
        path.lineTo(315.618f, 232.17f);
        path.lineTo(314.968f, 232.62f);
        path.lineTo(314.418f, 231.97f);
        path.close();
        path.moveTo(313.544f, 231.74f);
        path.lineTo(314.294f, 232.99f);
        path.lineTo(313.544f, 233.39f);
        path.lineTo(312.944f, 233.64f);
        path.lineTo(312.694f, 233.79f);
        path.lineTo(311.344f, 234.09f);
        path.lineTo(311.344f, 233.94f);
        path.lineTo(310.944f, 233.94f);
        path.lineTo(310.944f, 234.24f);
        path.lineTo(310.544f, 234.29f);
        path.lineTo(309.994f, 234.34f);
        path.lineTo(309.894f, 233.84f);
        path.lineTo(309.794f, 233.94f);
        path.lineTo(309.594f, 234.34f);
        path.lineTo(309.494f, 234.34f);
        path.quadTo(308.344f, 234.04f, 307.244f, 233.14f);
        path.lineTo(305.944f, 231.84f);
        path.quadTo(308.294f, 230.69f, 308.644f, 231.34f);
        path.lineTo(308.844f, 232.09f);
        path.quadTo(309.044f, 232.49f, 309.844f, 232.44f);
        path.lineTo(309.794f, 232.89f);
        path.quadTo(309.794f, 233.89f, 309.894f, 233.49f);
        path.lineTo(310.144f, 233.49f);
        path.lineTo(310.394f, 232.24f);
        path.lineTo(311.494f, 231.69f);
        path.lineTo(311.744f, 231.54f);
        path.lineTo(313.544f, 231.74f);
        path.close();
        path.moveTo(310.874f, 235.422f);
        path.lineTo(310.874f, 235.622f);
        path.lineTo(310.324f, 235.722f);
        path.lineTo(309.924f, 235.772f);
        path.lineTo(309.924f, 235.322f);
        path.lineTo(310.874f, 235.422f);
        path.close();
        path.moveTo(311.426f, 235.468f);
        path.lineTo(311.426f, 235.418f);
        path.lineTo(311.626f, 235.418f);
        path.lineTo(311.676f, 235.418f);
        path.lineTo(311.426f, 235.468f);
        path.close();
        path.moveTo(309.078f, 235.837f);
        path.lineTo(308.328f, 235.787f);
        path.lineTo(307.628f, 235.387f);
        path.lineTo(306.678f, 234.837f);
        path.lineTo(307.278f, 234.837f);
        path.lineTo(309.228f, 235.287f);
        path.lineTo(309.078f, 235.837f);
        path.close();
        path.moveTo(309.539f, 237.264f);
        path.lineTo(309.639f, 237.114f);
        path.lineTo(310.789f, 237.214f);
        path.lineTo(310.789f, 237.764f);
        path.lineTo(309.489f, 237.564f);
        path.lineTo(309.539f, 237.264f);
        path.close();
        path.moveTo(308.664f, 236.988f);
        path.lineTo(308.564f, 237.438f);
        path.lineTo(305.914f, 236.588f);
        path.lineTo(305.864f, 236.088f);
        path.lineTo(306.814f, 236.488f);
        path.lineTo(308.664f, 236.988f);
        path.close();
        path.moveTo(311.61f, 237.77f);
        path.lineTo(311.56f, 237.22f);
        path.lineTo(312.76f, 237.27f);
        path.lineTo(312.76f, 237.67f);
        path.lineTo(311.61f, 237.77f);
        path.close();
        path.moveTo(309.354f, 238.0f);
        path.lineTo(310.704f, 238.2f);
        path.lineTo(310.604f, 239.6f);
        path.lineTo(310.654f, 240.15f);
        path.lineTo(309.104f, 240.25f);
        path.lineTo(308.904f, 240.25f);
        path.quadTo(309.078f, 239.105f, 309.354f, 238.0f);
        path.close();
        path.moveTo(316.122f, 234.916f);
        path.lineTo(316.122f, 234.866f);
        path.quadTo(316.922f, 235.966f, 317.122f, 237.016f);
        path.lineTo(315.322f, 237.416f);
        path.lineTo(316.122f, 234.916f);
        path.close();
        path.moveTo(314.694f, 234.41f);
        path.lineTo(315.494f, 233.76f);
        path.lineTo(315.394f, 234.86f);
        path.lineTo(314.244f, 234.91f);
        path.lineTo(314.694f, 234.41f);
        path.close();
        path.moveTo(315.339f, 234.962f);
        path.lineTo(315.039f, 236.262f);
        path.lineTo(314.439f, 237.512f);
        path.lineTo(314.239f, 237.562f);
        path.lineTo(313.539f, 237.612f);
        path.lineTo(313.539f, 236.862f);
        path.lineTo(315.189f, 235.662f);
        path.lineTo(314.689f, 235.362f);
        path.lineTo(314.339f, 235.312f);
        path.lineTo(313.539f, 235.862f);
        path.lineTo(313.489f, 235.962f);
        path.lineTo(313.489f, 235.712f);
        path.lineTo(314.089f, 235.112f);
        path.lineTo(315.339f, 234.962f);
        path.close();
        path.moveTo(312.761f, 238.369f);
        path.lineTo(312.761f, 239.169f);
        path.lineTo(312.811f, 239.269f);
        path.quadTo(312.311f, 239.669f, 311.711f, 239.819f);
        path.lineTo(311.611f, 238.319f);
        path.lineTo(312.761f, 238.369f);
        path.close();
        path.moveTo(313.866f, 238.415f);
        path.lineTo(313.516f, 238.715f);
        path.lineTo(313.516f, 238.415f);
        path.lineTo(313.866f, 238.415f);
        path.close();
        path.moveTo(303.508f, 233.443f);
        path.lineTo(303.558f, 233.493f);
        path.lineTo(302.358f, 233.393f);
        path.lineTo(302.358f, 233.493f);
        path.lineTo(304.358f, 234.543f);
        path.lineTo(304.808f, 234.693f);
        path.lineTo(304.708f, 235.593f);
        path.lineTo(304.658f, 235.893f);
        path.quadTo(303.008f, 234.893f, 301.608f, 233.393f);
        path.lineTo(301.858f, 233.393f);
        path.lineTo(302.408f, 233.243f);
        path.lineTo(302.358f, 233.193f);
        path.lineTo(301.958f, 232.793f);
        path.lineTo(302.008f, 232.793f);
        path.lineTo(302.408f, 232.693f);
        path.lineTo(303.508f, 233.443f);
        path.close();
        path.moveTo(305.303f, 232.154f);
        path.lineTo(305.303f, 232.154f);
        path.lineTo(305.153f, 232.154f);
        path.lineTo(305.303f, 232.154f);
        path.close();
        path.moveTo(298.582f, 231.095f);
        path.lineTo(298.332f, 230.995f);
        path.lineTo(298.032f, 231.045f);
        path.lineTo(298.032f, 230.095f);
        path.lineTo(298.632f, 231.095f);
        path.lineTo(298.582f, 231.095f);
        path.close();
        path.moveTo(298.812f, 232.062f);
        path.lineTo(298.562f, 232.012f);
        path.lineTo(298.662f, 231.762f);
        path.lineTo(299.062f, 231.762f);
        path.lineTo(299.112f, 231.862f);
        path.lineTo(299.112f, 231.962f);
        path.lineTo(298.812f, 232.062f);
        path.close();
        path.moveTo(298.905f, 231.555f);
        path.lineTo(298.755f, 231.555f);
        path.lineTo(298.805f, 231.355f);
        path.lineTo(298.905f, 231.555f);
        path.close();
        path.moveTo(298.444f, 232.89f);
        path.lineTo(299.294f, 232.89f);
        path.lineTo(299.544f, 233.54f);
        path.lineTo(298.194f, 232.79f);
        path.lineTo(298.244f, 232.74f);
        path.lineTo(298.444f, 232.89f);
        path.close();
        path.moveTo(300.838f, 231.141f);
        path.lineTo(300.738f, 231.041f);
        path.lineTo(300.838f, 231.091f);
        path.lineTo(300.888f, 231.141f);
        path.lineTo(300.838f, 231.141f);
        path.close();
        path.moveTo(306.454f, 238.046f);
        path.lineTo(306.054f, 237.196f);
        path.lineTo(308.404f, 237.896f);
        path.quadTo(308.054f, 239.346f, 308.004f, 240.046f);
        path.quadTo(307.099f, 239.427f, 306.454f, 238.046f);
        path.close();
        path.moveTo(312.163f, 244.906f);
        path.lineTo(310.513f, 244.756f);
        path.lineTo(310.513f, 245.306f);
        path.lineTo(312.163f, 244.906f);
        path.close();
        path.moveTo(305.441f, 255.448f);
        path.lineTo(305.691f, 255.048f);
        path.lineTo(305.441f, 253.698f);
        path.lineTo(304.491f, 252.548f);
        path.lineTo(304.291f, 252.548f);
        path.quadTo(304.091f, 252.548f, 304.091f, 253.198f);
        path.quadTo(304.091f, 253.648f, 304.541f, 254.348f);
        path.lineTo(305.441f, 255.448f);
        path.close();
        path.moveTo(308.802f, 272.066f);
        path.lineTo(308.602f, 272.266f);
        path.lineTo(308.602f, 278.716f);
        path.lineTo(310.852f, 281.966f);
        path.quadTo(312.652f, 284.366f, 314.102f, 285.166f);
        path.quadTo(318.302f, 280.866f, 318.302f, 275.966f);
        path.quadTo(318.302f, 271.566f, 317.902f, 270.816f);
        path.quadTo(316.802f, 269.066f, 312.752f, 275.066f);
        path.lineTo(311.802f, 273.016f);
        path.quadTo(311.102f, 271.816f, 309.602f, 271.816f);
        path.lineTo(308.802f, 272.066f);
        path.close();
        path.moveTo(309.539f, 272.941f);
        path.lineTo(310.289f, 272.941f);
        path.lineTo(311.389f, 275.741f);
        path.quadTo(311.889f, 277.191f, 312.789f, 277.591f);
        path.lineTo(313.689f, 277.091f);
        path.quadTo(313.539f, 275.341f, 314.689f, 273.291f);
        path.quadTo(315.989f, 271.091f, 317.389f, 271.641f);
        path.lineTo(317.389f, 274.091f);
        path.quadTo(317.089f, 280.991f, 313.489f, 283.841f);
        path.lineTo(310.039f, 279.941f);
        path.quadTo(309.389f, 279.041f, 309.389f, 276.691f);
        path.lineTo(309.539f, 272.941f);
        path.close();
        path.moveTo(331.221f, 261.018f);
        path.lineTo(331.371f, 263.168f);
        path.lineTo(331.071f, 261.568f);
        path.lineTo(331.221f, 261.018f);
        path.close();
        path.moveTo(356.54f, 232.476f);
        path.quadTo(356.09f, 232.076f, 355.44f, 232.076f);
        path.lineTo(355.39f, 232.226f);
        path.quadTo(355.39f, 233.426f, 355.84f, 233.676f);
        path.lineTo(356.14f, 233.426f);
        path.lineTo(356.54f, 232.476f);
        path.close();
        path.moveTo(354.284f, 232.983f);
        path.lineTo(354.384f, 232.883f);
        path.lineTo(354.484f, 232.133f);
        path.lineTo(354.335f, 231.383f);
        path.lineTo(354.085f, 231.333f);
        path.lineTo(353.585f, 231.333f);
        path.lineTo(353.535f, 232.483f);
        path.lineTo(353.585f, 233.233f);
        path.lineTo(354.035f, 233.233f);
        path.lineTo(354.284f, 232.983f);
        path.close();
        path.moveTo(359.532f, 234.318f);
        path.lineTo(359.932f, 234.218f);
        path.quadTo(361.282f, 234.518f, 361.882f, 235.168f);
        path.lineTo(363.232f, 236.618f);
        path.lineTo(362.282f, 236.368f);
        path.quadTo(361.632f, 235.568f, 360.482f, 235.118f);
        path.lineTo(358.882f, 234.518f);
        path.lineTo(359.532f, 234.318f);
        path.close();
        path.moveTo(370.489f, 244.307f);
        path.lineTo(370.389f, 244.457f);
        path.lineTo(369.539f, 244.657f);
        path.quadTo(369.189f, 244.907f, 369.189f, 245.657f);
        path.lineTo(369.239f, 246.457f);
        path.lineTo(369.439f, 246.557f);
        path.lineTo(369.889f, 246.557f);
        path.lineTo(370.389f, 246.107f);
        path.lineTo(370.589f, 244.957f);
        path.lineTo(370.489f, 244.307f);
        path.close();
        path.moveTo(371.778f, 244.123f);
        path.lineTo(371.528f, 244.223f);
        path.lineTo(371.078f, 244.223f);
        path.lineTo(371.028f, 245.373f);
        path.lineTo(371.078f, 246.123f);
        path.lineTo(371.528f, 246.123f);
        path.lineTo(371.778f, 245.573f);
        path.quadTo(371.978f, 246.073f, 371.978f, 244.923f);
        path.quadTo(371.962f, 244.169f, 371.778f, 244.123f);
        path.close();
        path.moveTo(348.76f, 238.046f);
        path.lineTo(348.76f, 238.046f);
        path.lineTo(349.31f, 239.996f);
        path.lineTo(349.86f, 241.296f);
        path.lineTo(349.86f, 242.496f);
        path.quadTo(348.86f, 241.896f, 348.76f, 240.346f);
        path.lineTo(348.76f, 238.046f);
        path.close();
        path.moveTo(337.988f, 234.087f);
        path.lineTo(338.938f, 234.437f);
        path.lineTo(338.938f, 235.737f);
        path.lineTo(338.438f, 235.787f);
        path.lineTo(337.988f, 234.087f);
        path.close();
        path.moveTo(344.019f, 240.762f);
        path.lineTo(344.019f, 240.812f);
        path.lineTo(343.969f, 240.912f);
        path.lineTo(344.019f, 240.762f);
        path.close();
        path.moveTo(343.835f, 241.131f);
        path.lineTo(343.885f, 241.031f);
        path.lineTo(343.835f, 241.281f);
        path.lineTo(343.835f, 241.131f);
        path.close();
        path.moveTo(343.973f, 244.123f);
        path.lineTo(343.673f, 242.423f);
        path.lineTo(343.973f, 242.423f);
        path.lineTo(343.973f, 244.123f);
        path.close();
        path.moveTo(351.246f, 242.604f);
        path.lineTo(350.896f, 242.604f);
        path.lineTo(350.846f, 242.304f);
        path.lineTo(351.246f, 242.604f);
        path.close();
        path.moveTo(351.753f, 252.547f);
        path.lineTo(351.403f, 252.547f);
        path.lineTo(351.453f, 252.347f);
        path.lineTo(350.803f, 251.947f);
        path.lineTo(350.303f, 251.847f);
        path.lineTo(347.553f, 251.397f);
        path.quadTo(347.553f, 251.597f, 347.103f, 251.647f);
        path.lineTo(348.753f, 252.497f);
        path.lineTo(347.303f, 252.547f);
        path.lineTo(351.903f, 252.797f);
        path.lineTo(351.753f, 252.547f);
        path.close();
        path.moveTo(343.604f, 251.397f);
        path.lineTo(343.704f, 251.347f);
        path.lineTo(343.254f, 253.597f);
        path.lineTo(343.604f, 251.497f);
        path.lineTo(343.604f, 251.397f);
        path.close();
        path.moveTo(343.927f, 255.079f);
        path.lineTo(343.977f, 254.979f);
        path.lineTo(343.827f, 256.379f);
        path.quadTo(343.677f, 256.929f, 342.927f, 257.279f);
        path.quadTo(343.512f, 256.368f, 343.927f, 255.079f);
        path.close();
        path.moveTo(354.929f, 251.397f);
        path.lineTo(355.229f, 251.397f);
        path.lineTo(355.179f, 251.397f);
        path.lineTo(354.929f, 251.397f);
        path.close();
        path.moveTo(326.986f, 278.971f);
        path.lineTo(326.436f, 279.021f);
        path.lineTo(326.286f, 285.071f);
        path.lineTo(325.936f, 291.021f);
        path.quadTo(325.686f, 291.621f, 325.636f, 292.971f);
        path.lineTo(326.886f, 292.971f);
        path.lineTo(327.286f, 287.171f);
        path.lineTo(327.336f, 283.871f);
        path.quadTo(327.308f, 280.398f, 326.986f, 278.971f);
        path.close();
        path.moveTo(315.385f, 288.777f);
        path.lineTo(315.485f, 288.877f);
        path.lineTo(316.035f, 292.977f);
        path.lineTo(317.585f, 292.977f);
        path.quadTo(316.885f, 287.927f, 314.335f, 287.927f);
        path.quadTo(313.285f, 287.927f, 312.985f, 290.827f);
        path.lineTo(312.785f, 292.977f);
        path.lineTo(313.635f, 292.977f);
        path.quadTo(314.142f, 290.434f, 315.385f, 288.777f);
        path.close();
        path.moveTo(282.7f, 197.444f);
        path.lineTo(282.6f, 196.844f);
        path.lineTo(283.95f, 197.644f);
        path.lineTo(283.55f, 197.644f);
        path.lineTo(282.7f, 197.444f);
        path.close();
        path.moveTo(285.969f, 202.507f);
        path.lineTo(285.819f, 202.457f);
        path.lineTo(285.819f, 202.357f);
        path.quadTo(284.319f, 200.307f, 281.269f, 199.107f);
        path.quadTo(283.569f, 200.357f, 285.419f, 202.957f);
        path.quadTo(281.219f, 198.707f, 272.119f, 198.257f);
        path.lineTo(277.069f, 197.707f);
        path.lineTo(280.019f, 198.457f);
        path.quadTo(284.119f, 198.557f, 284.969f, 200.257f);
        path.lineTo(285.969f, 202.507f);
        path.close();
        path.moveTo(286.429f, 203.52f);
        path.lineTo(286.379f, 203.67f);
        path.lineTo(287.029f, 204.77f);
        path.lineTo(287.129f, 204.92f);
        path.lineTo(287.329f, 205.47f);
        path.lineTo(286.179f, 203.77f);
        path.lineTo(285.879f, 202.62f);
        path.lineTo(286.129f, 202.67f);
        path.lineTo(286.429f, 203.52f);
        path.close();
        path.moveTo(287.212f, 196.431f);
        path.quadTo(285.462f, 195.031f, 282.712f, 194.431f);
        path.quadTo(279.912f, 193.631f, 278.212f, 192.381f);
        path.quadTo(272.962f, 190.181f, 270.862f, 191.581f);
        path.lineTo(269.912f, 192.281f);
        path.lineTo(269.862f, 192.181f);
        path.lineTo(269.362f, 191.331f);
        path.lineTo(269.262f, 191.331f);
        path.lineTo(275.762f, 190.581f);
        path.quadTo(282.976f, 190.584f, 287.212f, 196.431f);
        path.close();
        path.moveTo(294.439f, 204.625f);
        path.lineTo(294.889f, 204.975f);
        path.lineTo(295.289f, 205.475f);
        path.lineTo(294.339f, 204.975f);
        path.lineTo(294.439f, 204.775f);
        path.lineTo(294.439f, 204.625f);
        path.close();
        path.moveTo(296.557f, 203.612f);
        path.lineTo(296.557f, 203.662f);
        path.lineTo(296.307f, 204.762f);
        path.lineTo(296.157f, 204.412f);
        path.lineTo(296.057f, 203.562f);
        path.lineTo(296.557f, 203.612f);
        path.close();
        path.moveTo(266.22f, 192.932f);
        path.lineTo(265.82f, 192.482f);
        path.quadTo(267.12f, 191.882f, 268.72f, 191.482f);
        path.lineTo(268.72f, 193.182f);
        path.lineTo(266.72f, 193.582f);
        path.quadTo(266.266f, 193.577f, 266.22f, 192.932f);
        path.close();
        path.moveTo(266.128f, 195.326f);
        path.lineTo(266.578f, 195.176f);
        path.lineTo(266.828f, 195.326f);
        path.lineTo(266.128f, 195.326f);
        path.close();
        path.moveTo(266.864f, 195.326f);
        path.lineTo(266.964f, 195.126f);
        path.lineTo(267.164f, 195.076f);
        path.lineTo(268.714f, 195.176f);
        path.lineTo(267.014f, 195.326f);
        path.lineTo(266.864f, 195.326f);
        path.close();
        path.moveTo(267.739f, 197.444f);
        path.quadTo(267.739f, 197.194f, 266.439f, 197.094f);
        path.lineTo(266.239f, 196.344f);
        path.lineTo(268.739f, 196.894f);
        path.lineTo(268.739f, 197.394f);
        path.lineTo(267.639f, 197.594f);
        path.lineTo(267.739f, 197.444f);
        path.close();
        path.moveTo(269.626f, 197.306f);
        path.lineTo(269.626f, 197.106f);
        path.lineTo(270.426f, 197.256f);
        path.lineTo(269.626f, 197.306f);
        path.close();
        path.moveTo(265.713f, 196.247f);
        path.lineTo(265.863f, 197.097f);
        path.lineTo(265.663f, 197.097f);
        path.lineTo(263.863f, 197.447f);
        path.lineTo(262.363f, 198.047f);
        path.lineTo(262.563f, 197.397f);
        path.lineTo(262.513f, 197.197f);
        path.quadTo(263.863f, 196.247f, 265.263f, 196.247f);
        path.lineTo(265.713f, 196.247f);
        path.close();
        path.moveTo(264.194f, 194.682f);
        path.lineTo(264.044f, 194.782f);
        path.quadTo(263.844f, 194.782f, 263.694f, 194.932f);
        path.lineTo(264.994f, 193.582f);
        path.quadTo(264.747f, 194.221f, 264.194f, 194.682f);
        path.close();
        path.moveTo(261.662f, 199.699f);
        path.lineTo(261.262f, 200.049f);
        path.quadTo(259.862f, 201.099f, 259.162f, 202.549f);
        path.lineTo(258.462f, 203.699f);
        path.lineTo(259.012f, 201.849f);
        path.lineTo(258.912f, 201.749f);
        path.lineTo(259.962f, 200.049f);
        path.lineTo(260.062f, 199.899f);
        path.lineTo(261.662f, 199.699f);
        path.close();
        path.moveTo(262.261f, 201.357f);
        path.lineTo(263.611f, 200.757f);
        path.quadTo(268.411f, 198.807f, 273.411f, 199.107f);
        path.quadTo(287.711f, 199.807f, 287.711f, 217.107f);
        path.lineTo(287.761f, 221.757f);
        path.quadTo(287.611f, 226.757f, 286.611f, 230.807f);
        path.quadTo(284.761f, 237.957f, 280.511f, 241.057f);
        path.quadTo(283.361f, 239.357f, 285.061f, 237.007f);
        path.quadTo(282.761f, 240.957f, 279.461f, 244.307f);
        path.lineTo(278.211f, 242.807f);
        path.lineTo(275.361f, 243.507f);
        path.lineTo(278.211f, 244.157f);
        path.lineTo(278.111f, 244.457f);
        path.lineTo(276.361f, 244.957f);
        path.lineTo(274.211f, 245.107f);
        path.quadTo(273.161f, 245.107f, 272.961f, 244.507f);
        path.lineTo(273.011f, 244.007f);
        path.lineTo(275.911f, 243.157f);
        path.lineTo(272.461f, 243.507f);
        path.quadTo(257.061f, 243.507f, 257.061f, 214.607f);
        path.quadTo(257.061f, 211.857f, 258.561f, 208.107f);
        path.lineTo(260.061f, 204.607f);
        path.quadTo(260.061f, 204.057f, 259.611f, 204.357f);
        path.quadTo(259.161f, 204.707f, 259.161f, 204.107f);
        path.quadTo(259.161f, 203.607f, 259.611f, 203.107f);
        path.quadTo(260.788f, 202.139f, 262.261f, 201.357f);
        path.close();
        path.moveTo(277.821f, 212.865f);
        path.lineTo(277.871f, 213.465f);
        path.lineTo(277.321f, 213.765f);
        path.quadTo(279.921f, 214.765f, 281.921f, 214.765f);
        path.quadTo(283.071f, 214.765f, 282.421f, 214.215f);
        path.lineTo(282.171f, 212.915f);
        path.lineTo(282.171f, 212.615f);
        path.quadTo(281.921f, 212.115f, 281.921f, 211.515f);
        path.quadTo(277.821f, 211.208f, 277.821f, 212.865f);
        path.close();
        path.moveTo(262.583f, 214.707f);
        path.quadTo(262.983f, 215.207f, 265.133f, 215.207f);
        path.lineTo(266.733f, 214.807f);
        path.lineTo(267.633f, 214.207f);
        path.quadTo(265.883f, 211.157f, 264.183f, 212.357f);
        path.quadTo(263.089f, 213.095f, 262.583f, 214.707f);
        path.close();
        path.moveTo(266.128f, 217.745f);
        path.quadTo(267.278f, 217.745f, 267.178f, 217.495f);
        path.lineTo(266.428f, 216.995f);
        path.lineTo(265.878f, 216.595f);
        path.lineTo(263.978f, 216.595f);
        path.quadTo(263.978f, 217.245f, 264.178f, 217.545f);
        path.lineTo(264.728f, 217.695f);
        path.lineTo(266.128f, 217.745f);
        path.close();
        path.moveTo(266.266f, 219.31f);
        path.lineTo(266.016f, 218.86f);
        path.quadTo(265.116f, 218.41f, 263.516f, 218.41f);
        path.lineTo(263.516f, 218.81f);
        path.lineTo(263.716f, 219.36f);
        path.lineTo(265.316f, 219.56f);
        path.quadTo(266.496f, 219.586f, 266.266f, 219.31f);
        path.close();
        path.moveTo(264.378f, 222.21f);
        path.quadTo(262.378f, 223.31f, 262.378f, 225.66f);
        path.quadTo(262.378f, 227.56f, 262.928f, 229.81f);
        path.lineTo(263.978f, 233.86f);
        path.lineTo(265.128f, 233.86f);
        path.quadTo(266.328f, 227.96f, 266.328f, 222.81f);
        path.quadTo(266.312f, 221.106f, 264.378f, 222.21f);
        path.close();
        path.moveTo(296.833f, 207.709f);
        path.lineTo(296.883f, 207.509f);
        path.quadTo(297.183f, 206.709f, 297.583f, 206.059f);
        path.lineTo(297.633f, 205.959f);
        path.lineTo(297.733f, 205.859f);
        path.lineTo(297.633f, 206.559f);
        path.quadTo(297.477f, 207.525f, 296.833f, 207.709f);
        path.close();
        path.moveTo(294.761f, 206.697f);
        path.lineTo(295.911f, 206.597f);
        path.lineTo(295.711f, 207.397f);
        path.lineTo(294.761f, 206.697f);
        path.close();
        path.moveTo(293.887f, 207.617f);
        path.lineTo(294.437f, 207.667f);
        path.lineTo(294.437f, 207.967f);
        path.lineTo(293.937f, 208.367f);
        path.lineTo(293.587f, 208.867f);
        path.lineTo(293.437f, 208.767f);
        path.lineTo(293.337f, 207.567f);
        path.lineTo(293.337f, 207.467f);
        path.lineTo(293.887f, 207.617f);
        path.close();
        path.moveTo(290.802f, 207.525f);
        path.lineTo(291.202f, 206.925f);
        path.lineTo(291.202f, 207.125f);
        path.lineTo(291.402f, 207.475f);
        path.lineTo(291.752f, 214.225f);
        path.lineTo(291.702f, 214.375f);
        path.quadTo(290.352f, 209.275f, 290.352f, 208.475f);
        path.quadTo(290.388f, 207.986f, 290.802f, 207.525f);
        path.close();
        path.moveTo(291.769f, 208.124f);
        path.lineTo(292.119f, 209.974f);
        path.lineTo(292.469f, 211.974f);
        path.lineTo(292.319f, 211.974f);
        path.lineTo(292.219f, 212.624f);
        path.lineTo(291.969f, 213.374f);
        path.lineTo(291.619f, 207.874f);
        path.lineTo(291.769f, 208.124f);
        path.close();
        path.moveTo(292.229f, 208.722f);
        path.lineTo(292.479f, 208.972f);
        path.lineTo(292.829f, 211.872f);
        path.lineTo(292.679f, 211.972f);
        path.lineTo(292.229f, 208.722f);
        path.close();
        path.moveTo(292.874f, 213.049f);
        path.lineTo(292.924f, 212.999f);
        path.lineTo(292.974f, 213.649f);
        path.lineTo(292.874f, 213.049f);
        path.close();
        path.moveTo(293.426f, 213.786f);
        path.lineTo(293.376f, 213.786f);
        path.lineTo(293.276f, 212.536f);
        path.quadTo(293.976f, 211.986f, 295.176f, 211.936f);
        path.quadTo(294.876f, 213.936f, 294.826f, 215.686f);
        path.lineTo(293.476f, 214.786f);
        path.lineTo(293.426f, 213.786f);
        path.close();
        path.moveTo(292.69f, 214.43f);
        path.lineTo(292.54f, 214.281f);
        path.lineTo(292.54f, 213.68f);
        path.lineTo(292.59f, 213.48f);
        path.lineTo(292.69f, 214.43f);
        path.close();
        path.moveTo(292.506f, 216.318f);
        path.lineTo(292.906f, 216.418f);
        path.lineTo(293.056f, 219.268f);
        path.lineTo(292.556f, 217.318f);
        path.lineTo(292.506f, 216.768f);
        path.lineTo(292.506f, 216.318f);
        path.close();
        path.moveTo(295.268f, 215.719f);
        path.lineTo(295.368f, 216.169f);
        path.lineTo(295.368f, 216.469f);
        path.lineTo(295.268f, 216.219f);
        path.lineTo(295.268f, 215.719f);
        path.close();
        path.moveTo(295.314f, 210.702f);
        path.lineTo(295.214f, 211.402f);
        path.lineTo(293.214f, 211.552f);
        path.lineTo(292.914f, 209.302f);
        path.quadTo(293.887f, 210.149f, 295.314f, 210.702f);
        path.close();
        path.moveTo(288.777f, 209.505f);
        path.quadTo(290.127f, 213.105f, 290.777f, 216.305f);
        path.quadTo(288.977f, 227.355f, 287.927f, 230.455f);
        path.lineTo(286.827f, 233.455f);
        path.quadTo(288.877f, 226.905f, 288.877f, 217.105f);
        path.lineTo(289.027f, 212.455f);
        path.lineTo(288.627f, 209.105f);
        path.lineTo(288.777f, 209.505f);
        path.close();
        path.moveTo(280.583f, 221.428f);
        path.lineTo(280.783f, 221.828f);
        path.lineTo(282.833f, 222.128f);
        path.quadTo(283.983f, 222.128f, 283.283f, 221.828f);
        path.lineTo(283.333f, 221.428f);
        path.lineTo(281.933f, 221.228f);
        path.lineTo(280.583f, 221.428f);
        path.close();
        path.moveTo(282.838f, 219.817f);
        path.lineTo(283.288f, 219.767f);
        path.lineTo(283.338f, 219.117f);
        path.lineTo(281.838f, 218.867f);
        path.lineTo(279.638f, 219.317f);
        path.lineTo(280.538f, 219.817f);
        path.lineTo(282.838f, 219.817f);
        path.close();
        path.moveTo(283.805f, 227.044f);
        path.quadTo(283.805f, 223.494f, 281.405f, 223.244f);
        path.quadTo(278.955f, 222.944f, 278.955f, 226.544f);
        path.lineTo(279.505f, 231.744f);
        path.lineTo(280.055f, 236.894f);
        path.lineTo(280.055f, 238.494f);
        path.quadTo(281.705f, 236.544f, 282.805f, 232.994f);
        path.quadTo(283.805f, 229.714f, 283.805f, 227.044f);
        path.close();
        path.moveTo(295.268f, 216.548f);
        path.lineTo(295.368f, 216.548f);
        path.lineTo(295.818f, 221.448f);
        path.lineTo(295.668f, 221.548f);
        path.quadTo(295.222f, 219.126f, 295.268f, 216.548f);
        path.close();
        path.moveTo(293.887f, 218.62f);
        path.lineTo(293.787f, 218.77f);
        path.lineTo(293.687f, 218.87f);
        path.lineTo(293.537f, 216.52f);
        path.lineTo(294.787f, 216.52f);
        path.quadTo(294.737f, 218.42f, 294.987f, 220.12f);
        path.lineTo(295.087f, 220.82f);
        path.lineTo(294.437f, 220.02f);
        path.lineTo(294.187f, 220.17f);
        path.lineTo(293.987f, 220.27f);
        path.lineTo(293.837f, 222.02f);
        path.lineTo(293.737f, 221.52f);
        path.lineTo(293.687f, 220.82f);
        path.lineTo(293.737f, 221.17f);
        path.lineTo(293.737f, 220.57f);
        path.lineTo(293.687f, 220.02f);
        path.lineTo(293.987f, 219.17f);
        path.lineTo(293.887f, 218.62f);
        path.close();
        path.moveTo(291.125f, 226.722f);
        path.lineTo(291.425f, 225.222f);
        path.lineTo(291.225f, 227.322f);
        path.lineTo(291.125f, 226.722f);
        path.close();
        path.moveTo(294.393f, 224.19f);
        path.lineTo(294.443f, 223.24f);
        path.lineTo(294.743f, 226.74f);
        path.lineTo(294.393f, 226.19f);
        path.lineTo(294.393f, 224.19f);
        path.close();
        path.moveTo(243.202f, 189.664f);
        path.lineTo(243.552f, 191.714f);
        path.lineTo(244.352f, 191.264f);
        path.lineTo(244.352f, 190.964f);
        path.lineTo(247.952f, 190.714f);
        path.quadTo(248.702f, 190.714f, 249.202f, 191.914f);
        path.quadTo(249.602f, 192.764f, 249.602f, 193.314f);
        path.quadTo(249.602f, 194.014f, 249.302f, 194.264f);
        path.lineTo(247.952f, 195.314f);
        path.quadTo(251.402f, 196.564f, 252.202f, 197.314f);
        path.quadTo(252.702f, 197.714f, 252.702f, 198.964f);
        path.lineTo(252.702f, 200.114f);
        path.quadTo(252.452f, 201.264f, 250.902f, 201.264f);
        path.lineTo(249.302f, 200.964f);
        path.lineTo(248.402f, 200.764f);
        path.lineTo(248.502f, 202.014f);
        path.lineTo(248.402f, 203.514f);
        path.lineTo(247.852f, 204.614f);
        path.quadTo(246.502f, 201.314f, 244.302f, 198.314f);
        path.quadTo(240.302f, 194.914f, 235.252f, 194.464f);
        path.quadTo(230.452f, 193.964f, 226.052f, 196.264f);
        path.quadTo(221.652f, 198.564f, 218.952f, 203.064f);
        path.quadTo(216.052f, 207.814f, 216.052f, 213.814f);
        path.lineTo(216.302f, 217.764f);
        path.lineTo(216.352f, 218.264f);
        path.lineTo(216.052f, 218.664f);
        path.lineTo(216.402f, 218.714f);
        path.lineTo(216.802f, 220.964f);
        path.quadTo(216.052f, 221.764f, 216.052f, 222.214f);
        path.quadTo(216.052f, 222.564f, 217.752f, 224.514f);
        path.lineTo(218.402f, 226.264f);
        path.lineTo(219.502f, 228.514f);
        path.lineTo(219.402f, 228.664f);
        path.quadTo(219.002f, 229.614f, 217.352f, 229.864f);
        path.lineTo(217.852f, 230.664f);
        path.quadTo(216.752f, 229.814f, 214.802f, 230.014f);
        path.lineTo(217.852f, 232.664f);
        path.quadTo(218.352f, 233.164f, 218.502f, 233.764f);
        path.lineTo(218.152f, 233.764f);
        path.lineTo(218.102f, 234.514f);
        path.lineTo(216.852f, 235.114f);
        path.lineTo(216.802f, 234.914f);
        path.lineTo(216.302f, 234.914f);
        path.lineTo(216.002f, 235.564f);
        path.lineTo(214.752f, 236.414f);
        path.lineTo(213.202f, 237.964f);
        path.quadTo(212.602f, 237.414f, 212.302f, 236.564f);
        path.quadTo(213.952f, 236.264f, 215.052f, 234.864f);
        path.quadTo(215.902f, 233.614f, 215.902f, 232.764f);
        path.lineTo(215.852f, 231.764f);
        path.lineTo(215.402f, 231.314f);
        path.quadTo(214.852f, 231.614f, 214.852f, 231.864f);
        path.quadTo(214.752f, 233.014f, 213.652f, 234.214f);
        path.lineTo(212.002f, 235.314f);
        path.lineTo(211.702f, 234.114f);
        path.lineTo(210.802f, 235.464f);
        path.lineTo(210.102f, 235.264f);
        path.lineTo(210.102f, 235.014f);
        path.quadTo(211.102f, 232.614f, 212.302f, 231.264f);
        path.quadTo(212.802f, 230.714f, 212.802f, 228.714f);
        path.quadTo(212.802f, 226.714f, 212.452f, 224.814f);
        path.quadTo(211.702f, 221.214f, 209.952f, 221.214f);
        path.quadTo(208.352f, 221.214f, 207.902f, 225.364f);
        path.quadTo(207.652f, 227.564f, 207.652f, 230.014f);
        path.lineTo(206.052f, 227.864f);
        path.quadTo(204.552f, 226.264f, 203.002f, 226.264f);
        path.lineTo(202.352f, 226.314f);
        path.lineTo(202.552f, 226.364f);
        path.quadTo(202.602f, 229.814f, 206.202f, 234.614f);
        path.lineTo(205.952f, 236.014f);
        path.quadTo(205.302f, 237.864f, 201.352f, 237.864f);
        path.quadTo(200.252f, 237.864f, 199.502f, 236.764f);
        path.quadTo(198.952f, 236.014f, 198.852f, 235.214f);
        path.lineTo(200.852f, 234.714f);
        path.quadTo(201.152f, 234.464f, 201.152f, 233.664f);
        path.lineTo(201.102f, 233.064f);
        path.quadTo(201.002f, 233.114f, 200.852f, 232.964f);
        path.lineTo(199.152f, 232.964f);
        path.lineTo(198.652f, 233.564f);
        path.quadTo(198.252f, 233.914f, 197.652f, 233.914f);
        path.quadTo(196.202f, 233.914f, 195.752f, 233.464f);
        path.lineTo(195.302f, 232.764f);
        path.quadTo(196.052f, 231.564f, 197.802f, 229.464f);
        path.lineTo(201.152f, 225.064f);
        path.quadTo(200.102f, 224.914f, 199.052f, 225.064f);
        path.quadTo(198.102f, 225.214f, 197.652f, 225.064f);
        path.lineTo(197.652f, 222.764f);
        path.quadTo(198.202f, 221.814f, 200.452f, 220.014f);
        path.quadTo(203.052f, 217.964f, 204.052f, 217.964f);
        path.lineTo(204.702f, 218.364f);
        path.quadTo(205.452f, 218.614f, 207.002f, 217.314f);
        path.quadTo(205.402f, 215.714f, 204.152f, 215.764f);
        path.lineTo(203.552f, 215.764f);
        path.quadTo(203.402f, 215.714f, 203.402f, 215.314f);
        path.quadTo(203.402f, 212.864f, 205.852f, 210.764f);
        path.quadTo(208.052f, 208.864f, 211.852f, 207.814f);
        path.lineTo(211.852f, 208.514f);
        path.lineTo(213.202f, 208.864f);
        path.quadTo(214.202f, 208.864f, 214.302f, 208.514f);
        path.lineTo(214.202f, 208.264f);
        path.lineTo(213.452f, 207.414f);
        path.lineTo(213.652f, 207.364f);
        path.lineTo(213.402f, 207.364f);
        path.quadTo(212.802f, 206.614f, 212.802f, 206.264f);
        path.quadTo(212.802f, 205.464f, 213.802f, 204.164f);
        path.lineTo(216.652f, 200.914f);
        path.quadTo(215.752f, 200.264f, 215.202f, 199.164f);
        path.quadTo(214.752f, 198.264f, 214.752f, 197.714f);
        path.quadTo(214.752f, 197.114f, 215.402f, 196.264f);
        path.quadTo(216.502f, 195.014f, 218.402f, 195.014f);
        path.lineTo(219.552f, 195.214f);
        path.lineTo(220.152f, 195.314f);
        path.lineTo(220.152f, 194.714f);
        path.lineTo(219.002f, 193.564f);
        path.lineTo(220.052f, 192.364f);
        path.quadTo(221.402f, 191.164f, 223.202f, 191.164f);
        path.lineTo(224.852f, 191.614f);
        path.lineTo(226.302f, 192.164f);
        path.lineTo(226.802f, 191.714f);
        path.lineTo(226.352f, 191.364f);
        path.quadTo(226.002f, 191.064f, 226.002f, 190.514f);
        path.quadTo(226.002f, 189.714f, 227.202f, 189.114f);
        path.quadTo(229.002f, 188.014f, 233.002f, 188.014f);
        path.quadTo(234.952f, 188.014f, 235.152f, 189.314f);
        path.lineTo(235.152f, 190.964f);
        path.lineTo(236.402f, 191.314f);
        path.quadTo(237.002f, 191.314f, 237.202f, 191.114f);
        path.lineTo(237.352f, 190.964f);
        path.lineTo(237.202f, 189.714f);
        path.quadTo(236.952f, 188.964f, 236.252f, 188.364f);
        path.lineTo(237.952f, 188.064f);
        path.lineTo(240.252f, 188.014f);
        path.quadTo(242.512f, 188.006f, 243.202f, 189.664f);
        path.close();
        path.moveTo(258.026f, 204.579f);
        path.lineTo(257.926f, 204.779f);
        path.quadTo(256.276f, 208.379f, 255.726f, 211.579f);
        path.quadTo(255.176f, 213.429f, 254.926f, 215.929f);
        path.lineTo(254.776f, 223.279f);
        path.lineTo(254.576f, 223.279f);
        path.lineTo(254.126f, 219.629f);
        path.lineTo(253.676f, 217.529f);
        path.quadTo(253.676f, 214.129f, 254.376f, 211.379f);
        path.quadTo(255.176f, 208.379f, 256.626f, 206.229f);
        path.lineTo(258.026f, 204.579f);
        path.close();
        path.moveTo(234.732f, 202.692f);
        path.lineTo(234.032f, 202.992f);
        path.lineTo(233.782f, 203.142f);
        path.quadTo(233.782f, 204.292f, 232.832f, 206.142f);
        path.quadTo(231.632f, 208.792f, 229.782f, 208.792f);
        path.quadTo(227.582f, 208.792f, 225.982f, 207.442f);
        path.lineTo(224.032f, 205.492f);
        path.lineTo(223.732f, 206.092f);
        path.lineTo(223.332f, 205.492f);
        path.lineTo(222.932f, 205.642f);
        path.quadTo(223.482f, 206.842f, 223.082f, 207.892f);
        path.quadTo(222.432f, 209.292f, 220.032f, 208.892f);
        path.lineTo(220.032f, 209.642f);
        path.lineTo(220.582f, 210.292f);
        path.lineTo(220.782f, 211.242f);
        path.lineTo(219.982f, 212.942f);
        path.lineTo(217.332f, 216.892f);
        path.quadTo(217.082f, 215.042f, 217.082f, 213.842f);
        path.quadTo(217.082f, 205.842f, 222.132f, 200.442f);
        path.quadTo(226.832f, 195.392f, 233.182f, 195.192f);
        path.quadTo(239.882f, 195.042f, 244.282f, 200.542f);
        path.quadTo(245.882f, 202.592f, 246.982f, 205.242f);
        path.lineTo(245.432f, 205.442f);
        path.quadTo(244.082f, 205.442f, 243.232f, 204.342f);
        path.quadTo(242.432f, 203.242f, 241.232f, 203.392f);
        path.quadTo(241.032f, 203.742f, 241.082f, 205.342f);
        path.quadTo(240.932f, 206.692f, 239.282f, 206.692f);
        path.quadTo(236.782f, 206.692f, 235.732f, 205.192f);
        path.quadTo(235.382f, 204.642f, 235.132f, 203.842f);
        path.lineTo(234.732f, 202.692f);
        path.close();
        path.moveTo(240.348f, 207.755f);
        path.quadTo(241.398f, 207.755f, 241.598f, 206.705f);
        path.quadTo(241.848f, 205.355f, 242.098f, 204.755f);
        path.lineTo(242.348f, 205.205f);
        path.lineTo(242.798f, 205.805f);
        path.quadTo(243.748f, 206.605f, 246.598f, 206.605f);
        path.lineTo(247.448f, 206.455f);
        path.quadTo(249.298f, 211.555f, 249.298f, 218.805f);
        path.lineTo(249.448f, 221.905f);
        path.quadTo(249.298f, 225.405f, 248.248f, 228.255f);
        path.quadTo(246.298f, 233.605f, 241.548f, 235.855f);
        path.lineTo(242.098f, 235.005f);
        path.quadTo(243.598f, 232.305f, 243.598f, 230.005f);
        path.lineTo(243.848f, 228.855f);
        path.lineTo(244.348f, 227.405f);
        path.lineTo(242.698f, 226.855f);
        path.quadTo(242.548f, 226.905f, 242.498f, 227.205f);
        path.lineTo(242.348f, 227.805f);
        path.quadTo(241.998f, 228.605f, 240.348f, 228.605f);
        path.lineTo(239.648f, 228.105f);
        path.lineTo(238.048f, 227.105f);
        path.lineTo(237.548f, 227.705f);
        path.lineTo(237.148f, 228.405f);
        path.lineTo(236.298f, 227.855f);
        path.quadTo(235.498f, 227.555f, 234.898f, 227.555f);
        path.quadTo(231.998f, 228.955f, 231.398f, 228.955f);
        path.quadTo(229.998f, 228.955f, 227.848f, 227.005f);
        path.quadTo(225.848f, 225.155f, 224.698f, 225.455f);
        path.lineTo(225.648f, 228.605f);
        path.quadTo(226.448f, 231.155f, 227.598f, 232.955f);
        path.quadTo(229.298f, 236.005f, 231.998f, 237.405f);
        path.quadTo(228.698f, 237.055f, 225.998f, 235.255f);
        path.lineTo(226.848f, 234.455f);
        path.lineTo(226.298f, 234.055f);
        path.lineTo(225.948f, 234.005f);
        path.lineTo(225.148f, 234.605f);
        path.lineTo(223.948f, 233.455f);
        path.quadTo(221.998f, 231.555f, 220.598f, 228.655f);
        path.lineTo(220.598f, 227.605f);
        path.quadTo(220.598f, 226.005f, 219.998f, 225.305f);
        path.lineTo(218.848f, 224.055f);
        path.lineTo(218.148f, 221.305f);
        path.lineTo(218.348f, 220.805f);
        path.lineTo(218.698f, 219.705f);
        path.quadTo(218.698f, 217.805f, 220.198f, 214.505f);
        path.lineTo(221.798f, 211.105f);
        path.lineTo(221.748f, 210.155f);
        path.lineTo(221.498f, 209.805f);
        path.quadTo(222.948f, 209.705f, 223.748f, 208.955f);
        path.quadTo(224.398f, 208.305f, 224.398f, 207.555f);
        path.lineTo(224.098f, 206.605f);
        path.lineTo(226.448f, 208.155f);
        path.quadTo(228.748f, 209.505f, 230.248f, 209.505f);
        path.quadTo(231.798f, 209.505f, 233.048f, 207.405f);
        path.lineTo(233.948f, 205.805f);
        path.quadTo(234.348f, 204.955f, 234.648f, 204.855f);
        path.quadTo(235.148f, 206.105f, 236.598f, 206.905f);
        path.quadTo(238.092f, 207.755f, 240.348f, 207.755f);
        path.close();
        path.moveTo(239.197f, 215.766f);
        path.quadTo(239.197f, 213.816f, 240.547f, 212.716f);
        path.quadTo(241.697f, 211.666f, 243.447f, 211.666f);
        path.quadTo(245.147f, 211.716f, 246.347f, 212.716f);
        path.quadTo(247.697f, 213.816f, 247.697f, 215.616f);
        path.lineTo(246.347f, 217.416f);
        path.quadTo(244.497f, 219.166f, 242.097f, 219.166f);
        path.quadTo(240.847f, 219.166f, 239.947f, 217.966f);
        path.quadTo(239.197f, 216.916f, 239.197f, 215.766f);
        path.close();
        path.moveTo(239.888f, 211.392f);
        path.quadTo(238.338f, 212.242f, 238.338f, 214.042f);
        path.lineTo(238.238f, 215.042f);
        path.quadTo(238.138f, 216.142f, 238.438f, 217.142f);
        path.quadTo(238.888f, 218.992f, 240.238f, 219.742f);
        path.quadTo(237.538f, 218.992f, 234.238f, 219.092f);
        path.lineTo(234.188f, 219.042f);
        path.quadTo(234.088f, 218.992f, 234.088f, 219.542f);
        path.quadTo(234.088f, 220.892f, 234.938f, 222.792f);
        path.lineTo(235.738f, 224.242f);
        path.lineTo(235.488f, 222.342f);
        path.lineTo(235.288f, 219.992f);
        path.quadTo(239.388f, 219.992f, 241.838f, 221.292f);
        path.quadTo(243.238f, 222.042f, 244.638f, 223.442f);
        path.lineTo(241.488f, 224.092f);
        path.lineTo(236.138f, 224.692f);
        path.quadTo(237.038f, 225.742f, 238.438f, 225.742f);
        path.quadTo(243.088f, 225.742f, 245.588f, 223.992f);
        path.quadTo(246.138f, 224.442f, 247.788f, 224.442f);
        path.quadTo(248.388f, 224.442f, 248.538f, 224.092f);
        path.lineTo(248.538f, 223.092f);
        path.quadTo(248.538f, 222.242f, 247.988f, 221.642f);
        path.quadTo(247.638f, 221.092f, 246.988f, 220.992f);
        path.quadTo(245.538f, 220.792f, 245.438f, 222.792f);
        path.quadTo(244.788f, 221.792f, 242.788f, 220.692f);
        path.lineTo(241.538f, 220.142f);
        path.lineTo(242.488f, 220.242f);
        path.quadTo(244.538f, 220.242f, 246.738f, 218.392f);
        path.quadTo(248.638f, 216.792f, 248.638f, 215.742f);
        path.quadTo(248.638f, 213.792f, 246.988f, 212.442f);
        path.quadTo(245.588f, 211.192f, 243.438f, 210.842f);
        path.quadTo(241.407f, 210.61f, 239.888f, 211.392f);
        path.close();
        path.moveTo(240.532f, 215.627f);
        path.lineTo(240.632f, 216.427f);
        path.quadTo(241.182f, 217.477f, 243.832f, 217.477f);
        path.quadTo(244.982f, 217.477f, 245.382f, 216.577f);
        path.lineTo(245.532f, 215.177f);
        path.quadTo(245.532f, 213.977f, 244.732f, 213.427f);
        path.quadTo(244.082f, 212.927f, 243.082f, 212.977f);
        path.quadTo(242.082f, 213.027f, 241.432f, 213.627f);
        path.quadTo(240.632f, 214.277f, 240.632f, 215.227f);
        path.lineTo(240.532f, 215.627f);
        path.close();
        path.moveTo(227.136f, 214.569f);
        path.quadTo(226.086f, 214.519f, 225.436f, 215.069f);
        path.quadTo(224.686f, 215.619f, 224.686f, 216.569f);
        path.quadTo(224.686f, 216.069f, 224.586f, 216.919f);
        path.lineTo(224.686f, 217.969f);
        path.quadTo(225.236f, 219.719f, 227.736f, 219.719f);
        path.lineTo(228.736f, 219.569f);
        path.lineTo(229.336f, 219.419f);
        path.lineTo(229.536f, 216.969f);
        path.quadTo(229.536f, 215.919f, 228.736f, 215.219f);
        path.quadTo(228.103f, 214.615f, 227.136f, 214.569f);
        path.close();
        path.moveTo(224.19f, 213.372f);
        path.quadTo(225.49f, 212.972f, 227.29f, 213.422f);
        path.quadTo(229.09f, 213.872f, 230.34f, 214.972f);
        path.quadTo(231.69f, 216.172f, 231.69f, 217.772f);
        path.quadTo(231.79f, 218.772f, 231.34f, 219.622f);
        path.quadTo(230.39f, 221.372f, 227.54f, 221.372f);
        path.quadTo(224.59f, 221.372f, 223.49f, 218.472f);
        path.quadTo(222.84f, 217.022f, 222.84f, 215.122f);
        path.quadTo(222.809f, 213.832f, 224.19f, 213.372f);
        path.close();
        path.moveTo(230.865f, 213.694f);
        path.quadTo(229.265f, 212.394f, 226.965f, 212.244f);
        path.quadTo(224.665f, 212.094f, 223.015f, 213.044f);
        path.quadTo(221.265f, 214.194f, 221.265f, 216.044f);
        path.lineTo(221.515f, 217.044f);
        path.quadTo(221.915f, 218.294f, 222.665f, 219.294f);
        path.lineTo(223.665f, 220.594f);
        path.lineTo(222.815f, 220.444f);
        path.quadTo(221.765f, 220.394f, 220.965f, 220.944f);
        path.quadTo(220.065f, 221.494f, 220.065f, 222.494f);
        path.lineTo(220.415f, 224.094f);
        path.quadTo(221.115f, 225.994f, 223.215f, 225.994f);
        path.quadTo(224.265f, 225.994f, 224.965f, 224.844f);
        path.quadTo(225.515f, 223.944f, 225.515f, 223.094f);
        path.quadTo(225.515f, 222.294f, 225.165f, 221.644f);
        path.quadTo(226.815f, 222.594f, 229.065f, 222.594f);
        path.quadTo(230.465f, 222.594f, 231.665f, 220.594f);
        path.quadTo(232.665f, 218.844f, 232.665f, 217.744f);
        path.quadTo(232.66f, 215.213f, 230.865f, 213.694f);
        path.close();
        path.moveTo(224.374f, 221.796f);
        path.lineTo(224.674f, 222.146f);
        path.lineTo(224.774f, 222.946f);
        path.lineTo(224.674f, 224.096f);
        path.quadTo(224.274f, 225.046f, 222.624f, 225.046f);
        path.lineTo(221.674f, 224.896f);
        path.lineTo(221.274f, 224.696f);
        path.lineTo(221.274f, 223.746f);
        path.lineTo(221.174f, 222.696f);
        path.lineTo(221.174f, 221.846f);
        path.lineTo(221.374f, 221.496f);
        path.lineTo(223.024f, 221.646f);
        path.quadTo(223.574f, 222.146f, 223.574f, 222.596f);
        path.lineTo(223.374f, 223.196f);
        path.lineTo(223.124f, 223.096f);
        path.lineTo(222.874f, 222.396f);
        path.lineTo(222.624f, 221.796f);
        path.lineTo(222.024f, 221.896f);
        path.lineTo(222.024f, 223.646f);
        path.lineTo(222.674f, 223.996f);
        path.lineTo(223.574f, 224.096f);
        path.quadTo(224.174f, 224.096f, 224.274f, 223.796f);
        path.lineTo(224.374f, 223.546f);
        path.quadTo(224.374f, 222.146f, 224.174f, 221.796f);
        path.lineTo(224.374f, 221.796f);
        path.close();
        path.moveTo(254.941f, 205.638f);
        path.lineTo(254.941f, 205.488f);
        path.quadTo(255.091f, 206.738f, 254.841f, 208.638f);
        path.lineTo(254.791f, 209.188f);
        path.lineTo(254.491f, 208.988f);
        path.lineTo(254.791f, 207.538f);
        path.lineTo(254.941f, 205.638f);
        path.close();
        path.moveTo(252.271f, 209.505f);
        path.lineTo(253.021f, 209.305f);
        path.lineTo(252.721f, 211.205f);
        path.quadTo(252.121f, 214.355f, 251.821f, 217.955f);
        path.lineTo(251.221f, 217.455f);
        path.lineTo(251.071f, 215.655f);
        path.quadTo(251.166f, 213.97f, 252.271f, 209.505f);
        path.close();
        path.moveTo(254.619f, 209.597f);
        path.lineTo(254.569f, 210.147f);
        path.lineTo(254.369f, 211.397f);
        path.lineTo(254.369f, 209.397f);
        path.lineTo(254.619f, 209.597f);
        path.close();
        path.moveTo(252.732f, 213.234f);
        path.lineTo(252.832f, 214.734f);
        path.lineTo(253.082f, 216.334f);
        path.lineTo(252.932f, 216.084f);
        path.lineTo(252.532f, 216.534f);
        path.lineTo(252.482f, 216.784f);
        path.lineTo(252.682f, 218.434f);
        path.lineTo(252.182f, 218.234f);
        path.lineTo(252.732f, 213.234f);
        path.close();
        path.moveTo(248.358f, 205.684f);
        path.lineTo(248.508f, 205.734f);
        path.quadTo(250.658f, 205.134f, 251.508f, 206.784f);
        path.lineTo(252.058f, 208.634f);
        path.quadTo(251.208f, 212.384f, 250.908f, 217.334f);
        path.lineTo(250.658f, 217.334f);
        path.lineTo(250.908f, 217.784f);
        path.lineTo(250.858f, 219.334f);
        path.lineTo(250.808f, 219.384f);
        path.lineTo(250.108f, 219.184f);
        path.quadTo(250.058f, 213.584f, 249.608f, 211.234f);
        path.quadTo(249.208f, 208.384f, 248.258f, 205.784f);
        path.lineTo(248.358f, 205.684f);
        path.close();
        path.moveTo(251.258f, 219.126f);
        path.lineTo(251.208f, 218.126f);
        path.lineTo(251.758f, 218.576f);
        path.lineTo(251.758f, 218.876f);
        path.lineTo(251.258f, 219.126f);
        path.close();
        path.moveTo(250.154f, 219.586f);
        path.lineTo(250.454f, 219.686f);
        path.lineTo(250.154f, 220.136f);
        path.lineTo(250.154f, 219.586f);
        path.close();
        path.moveTo(246.471f, 222.256f);
        path.lineTo(247.021f, 222.356f);
        path.lineTo(247.671f, 223.056f);
        path.lineTo(247.071f, 223.156f);
        path.quadTo(246.609f, 222.717f, 246.471f, 222.256f);
        path.close();
        path.moveTo(250.2f, 226.031f);
        path.lineTo(249.9f, 226.681f);
        path.lineTo(250.1f, 225.331f);
        path.lineTo(250.2f, 226.031f);
        path.close();
        path.moveTo(250.384f, 227.689f);
        path.lineTo(250.484f, 227.539f);
        path.lineTo(250.934f, 229.239f);
        path.lineTo(250.834f, 229.889f);
        path.quadTo(250.334f, 229.539f, 249.834f, 229.439f);
        path.lineTo(250.384f, 227.689f);
        path.close();
        path.moveTo(255.494f, 217.331f);
        path.lineTo(255.544f, 216.731f);
        path.quadTo(255.744f, 224.931f, 257.344f, 230.481f);
        path.quadTo(258.444f, 234.231f, 260.344f, 237.331f);
        path.lineTo(260.144f, 237.281f);
        path.quadTo(257.294f, 237.281f, 256.144f, 228.331f);
        path.quadTo(255.494f, 223.361f, 255.494f, 217.331f);
        path.close();
        path.moveTo(252.179f, 218.804f);
        path.lineTo(252.829f, 219.104f);
        path.lineTo(252.979f, 220.004f);
        path.lineTo(252.229f, 219.754f);
        path.lineTo(252.179f, 218.804f);
        path.close();
        path.moveTo(251.995f, 220.553f);
        path.lineTo(252.095f, 220.553f);
        path.lineTo(251.995f, 221.253f);
        path.lineTo(251.995f, 221.203f);
        path.lineTo(251.995f, 220.553f);
        path.close();
        path.moveTo(252.317f, 222.026f);
        path.lineTo(252.317f, 221.826f);
        path.lineTo(252.267f, 220.676f);
        path.lineTo(252.767f, 220.976f);
        path.lineTo(253.067f, 221.126f);
        path.lineTo(252.967f, 222.326f);
        path.lineTo(252.767f, 222.276f);
        path.lineTo(252.317f, 222.026f);
        path.close();
        path.moveTo(255.033f, 229.898f);
        path.lineTo(255.083f, 230.148f);
        path.quadTo(254.733f, 228.798f, 254.483f, 227.398f);
        path.lineTo(255.033f, 229.898f);
        path.close();
        path.moveTo(254.481f, 232.752f);
        path.lineTo(254.581f, 232.652f);
        path.lineTo(254.581f, 234.502f);
        path.lineTo(254.481f, 232.752f);
        path.close();
        path.moveTo(254.573f, 232.66f);
        path.lineTo(254.823f, 232.16f);
        path.lineTo(254.823f, 233.06f);
        path.lineTo(254.773f, 232.66f);
        path.lineTo(254.573f, 232.66f);
        path.close();
        path.moveTo(254.941f, 231.648f);
        path.lineTo(254.941f, 231.598f);
        path.lineTo(255.391f, 233.098f);
        path.lineTo(255.591f, 235.148f);
        path.lineTo(255.641f, 235.498f);
        path.lineTo(255.641f, 235.598f);
        path.lineTo(255.691f, 236.048f);
        path.lineTo(255.291f, 236.048f);
        path.lineTo(255.041f, 235.648f);
        path.lineTo(254.991f, 235.148f);
        path.lineTo(254.941f, 231.798f);
        path.lineTo(254.941f, 231.648f);
        path.close();
        path.moveTo(252.409f, 233.995f);
        path.lineTo(253.009f, 235.745f);
        path.lineTo(253.109f, 237.795f);
        path.lineTo(252.409f, 233.995f);
        path.close();
        path.moveTo(253.514f, 237.448f);
        path.lineTo(253.514f, 237.098f);
        path.lineTo(254.164f, 239.048f);
        path.lineTo(254.764f, 242.748f);
        path.quadTo(254.814f, 248.698f, 255.114f, 251.748f);
        path.lineTo(255.814f, 256.298f);
        path.lineTo(256.564f, 262.248f);
        path.lineTo(254.614f, 273.748f);
        path.lineTo(254.264f, 270.148f);
        path.lineTo(254.264f, 268.398f);
        path.lineTo(253.864f, 264.848f);
        path.lineTo(253.664f, 263.598f);
        path.lineTo(254.264f, 256.848f);
        path.lineTo(254.114f, 250.598f);
        path.lineTo(254.264f, 247.498f);
        path.lineTo(253.914f, 241.698f);
        path.lineTo(253.864f, 241.648f);
        path.lineTo(253.514f, 237.448f);
        path.close();
        path.moveTo(260.005f, 238.783f);
        path.lineTo(259.605f, 238.183f);
        path.quadTo(260.405f, 238.633f, 261.005f, 239.833f);
        path.lineTo(260.955f, 239.833f);
        path.lineTo(260.005f, 238.783f);
        path.close();
        path.moveTo(247.391f, 238.277f);
        path.lineTo(242.041f, 237.977f);
        path.lineTo(242.091f, 238.277f);
        path.lineTo(245.891f, 238.827f);
        path.lineTo(247.391f, 238.277f);
        path.close();
        path.moveTo(249.693f, 240.716f);
        path.lineTo(250.293f, 240.616f);
        path.lineTo(250.393f, 241.966f);
        path.quadTo(250.793f, 242.966f, 250.793f, 244.366f);
        path.lineTo(250.743f, 245.366f);
        path.lineTo(249.543f, 245.566f);
        path.quadTo(249.093f, 245.566f, 248.243f, 244.216f);
        path.lineTo(247.243f, 242.366f);
        path.lineTo(248.343f, 242.366f);
        path.quadTo(247.393f, 242.566f, 248.893f, 242.916f);
        path.quadTo(250.443f, 243.316f, 249.693f, 242.766f);
        path.quadTo(249.643f, 242.366f, 249.643f, 241.766f);
        path.lineTo(249.693f, 240.716f);
        path.close();
        path.moveTo(250.798f, 240.578f);
        path.lineTo(251.548f, 240.528f);
        path.lineTo(251.548f, 242.378f);
        path.lineTo(250.798f, 240.578f);
        path.close();
        path.moveTo(243.939f, 244.215f);
        path.lineTo(243.839f, 244.215f);
        path.quadTo(242.939f, 241.215f, 240.189f, 241.615f);
        path.lineTo(239.689f, 241.615f);
        path.lineTo(239.689f, 241.565f);
        path.lineTo(239.639f, 241.765f);
        path.lineTo(239.189f, 241.865f);
        path.lineTo(239.339f, 242.565f);
        path.lineTo(239.689f, 242.565f);
        path.lineTo(240.039f, 243.165f);
        path.lineTo(240.489f, 242.715f);
        path.quadTo(241.689f, 243.065f, 242.389f, 244.265f);
        path.quadTo(240.689f, 244.715f, 240.489f, 247.215f);
        path.quadTo(240.139f, 247.015f, 239.189f, 246.765f);
        path.lineTo(237.789f, 246.715f);
        path.lineTo(237.789f, 248.815f);
        path.lineTo(238.839f, 250.665f);
        path.quadTo(239.489f, 251.665f, 240.339f, 251.915f);
        path.lineTo(237.739f, 253.365f);
        path.lineTo(239.589f, 253.815f);
        path.quadTo(241.989f, 253.065f, 243.239f, 251.215f);
        path.quadTo(244.189f, 249.765f, 244.189f, 248.165f);
        path.lineTo(244.239f, 247.715f);
        path.lineTo(244.639f, 246.465f);
        path.lineTo(244.389f, 245.165f);
        path.lineTo(243.939f, 244.215f);
        path.close();
        path.moveTo(242.788f, 245.09f);
        path.lineTo(242.838f, 245.29f);
        path.quadTo(243.238f, 246.54f, 243.238f, 247.89f);
        path.lineTo(242.438f, 249.09f);
        path.quadTo(241.188f, 250.69f, 240.338f, 250.89f);
        path.quadTo(239.538f, 250.49f, 238.988f, 249.19f);
        path.quadTo(238.488f, 248.14f, 238.488f, 247.44f);
        path.lineTo(239.588f, 247.39f);
        path.lineTo(240.988f, 249.04f);
        path.lineTo(241.388f, 246.69f);
        path.quadTo(241.683f, 245.228f, 242.788f, 245.09f);
        path.close();
        path.moveTo(248.22f, 250.338f);
        path.lineTo(247.92f, 250.338f);
        path.lineTo(247.87f, 249.938f);
        path.lineTo(247.77f, 249.938f);
        path.lineTo(247.87f, 249.188f);
        path.lineTo(247.87f, 249.138f);
        path.quadTo(250.32f, 249.038f, 251.27f, 247.638f);
        path.lineTo(251.22f, 248.188f);
        path.lineTo(250.77f, 253.638f);
        path.lineTo(250.67f, 254.488f);
        path.lineTo(250.77f, 254.488f);
        path.lineTo(250.57f, 259.088f);
        path.lineTo(250.67f, 261.988f);
        path.lineTo(250.92f, 261.988f);
        path.lineTo(251.77f, 252.688f);
        path.lineTo(252.27f, 244.738f);
        path.lineTo(252.32f, 244.488f);
        path.lineTo(252.47f, 241.738f);
        path.lineTo(252.22f, 239.688f);
        path.lineTo(252.22f, 239.638f);
        path.lineTo(252.22f, 239.388f);
        path.lineTo(252.22f, 237.038f);
        path.quadTo(253.12f, 244.838f, 253.47f, 246.138f);
        path.lineTo(253.62f, 246.138f);
        path.lineTo(253.67f, 247.788f);
        path.lineTo(253.27f, 254.438f);
        path.lineTo(252.87f, 261.488f);
        path.lineTo(252.97f, 262.138f);
        path.lineTo(252.57f, 266.488f);
        path.lineTo(251.37f, 264.738f);
        path.lineTo(249.62f, 263.438f);
        path.lineTo(249.67f, 262.888f);
        path.lineTo(250.17f, 263.738f);
        path.lineTo(250.42f, 263.338f);
        path.lineTo(249.67f, 261.888f);
        path.lineTo(249.67f, 261.588f);
        path.lineTo(249.02f, 255.688f);
        path.lineTo(248.22f, 250.338f);
        path.close();
        path.moveTo(257.98f, 242.097f);
        path.lineTo(257.98f, 241.697f);
        path.lineTo(258.73f, 244.397f);
        path.lineTo(258.68f, 244.997f);
        path.lineTo(258.03f, 242.447f);
        path.lineTo(257.98f, 242.097f);
        path.close();
        path.moveTo(253.238f, 239.796f);
        path.lineTo(253.288f, 240.996f);
        path.lineTo(253.088f, 239.196f);
        path.lineTo(253.238f, 239.796f);
        path.close();
        path.moveTo(255.402f, 243.663f);
        path.lineTo(255.352f, 242.613f);
        path.lineTo(255.352f, 242.413f);
        path.lineTo(256.852f, 247.463f);
        path.lineTo(256.902f, 250.013f);
        path.quadTo(255.954f, 247.484f, 255.402f, 243.663f);
        path.close();
        path.moveTo(255.54f, 246.287f);
        path.lineTo(256.94f, 250.487f);
        path.lineTo(257.54f, 258.287f);
        path.lineTo(257.59f, 258.987f);
        path.lineTo(257.19f, 259.087f);
        path.lineTo(256.94f, 260.137f);
        path.lineTo(256.34f, 255.937f);
        path.quadTo(255.54f, 251.737f, 255.44f, 248.487f);
        path.quadTo(255.74f, 250.887f, 256.39f, 252.637f);
        path.lineTo(256.59f, 252.537f);
        path.quadTo(255.862f, 250.062f, 255.54f, 246.287f);
        path.close();
        path.moveTo(240.716f, 229.576f);
        path.lineTo(240.616f, 229.726f);
        path.lineTo(238.916f, 230.476f);
        path.quadTo(237.316f, 231.226f, 235.366f, 231.226f);
        path.lineTo(232.166f, 230.976f);
        path.quadTo(232.116f, 230.476f, 231.266f, 230.026f);
        path.quadTo(232.016f, 229.926f, 233.866f, 229.126f);
        path.lineTo(235.666f, 228.426f);
        path.lineTo(236.416f, 228.926f);
        path.lineTo(237.566f, 229.876f);
        path.lineTo(238.016f, 229.076f);
        path.lineTo(238.416f, 228.176f);
        path.lineTo(239.316f, 229.126f);
        path.quadTo(239.888f, 229.622f, 240.716f, 229.576f);
        path.close();
        path.moveTo(241.223f, 231.648f);
        path.lineTo(240.673f, 233.098f);
        path.quadTo(239.623f, 234.648f, 235.823f, 234.648f);
        path.quadTo(233.023f, 234.648f, 231.673f, 233.098f);
        path.lineTo(230.323f, 230.848f);
        path.lineTo(233.573f, 231.648f);
        path.lineTo(238.023f, 232.298f);
        path.quadTo(238.573f, 232.298f, 240.223f, 231.348f);
        path.lineTo(241.823f, 230.398f);
        path.quadTo(241.499f, 230.727f, 241.223f, 231.648f);
        path.close();
        path.moveTo(242.097f, 231.878f);
        path.lineTo(242.247f, 232.178f);
        path.lineTo(240.997f, 235.178f);
        path.lineTo(239.697f, 236.628f);
        path.lineTo(234.797f, 237.428f);
        path.quadTo(231.647f, 236.928f, 229.647f, 234.378f);
        path.quadTo(228.297f, 232.678f, 226.747f, 228.428f);
        path.quadTo(227.397f, 228.728f, 228.147f, 230.028f);
        path.lineTo(229.747f, 232.578f);
        path.quadTo(232.247f, 235.778f, 237.597f, 235.778f);
        path.quadTo(239.197f, 235.778f, 240.347f, 234.328f);
        path.lineTo(242.097f, 231.878f);
        path.close();
        path.moveTo(224.926f, 244.721f);
        path.lineTo(225.076f, 244.871f);
        path.lineTo(224.926f, 247.221f);
        path.lineTo(224.026f, 245.571f);
        path.lineTo(222.626f, 242.721f);
        path.lineTo(222.326f, 243.021f);
        path.lineTo(221.676f, 241.971f);
        path.lineTo(221.826f, 241.421f);
        path.lineTo(222.026f, 241.871f);
        path.quadTo(222.426f, 242.521f, 223.676f, 243.221f);
        path.lineTo(226.676f, 244.771f);
        path.quadTo(228.976f, 246.071f, 231.276f, 247.921f);
        path.quadTo(230.376f, 248.971f, 229.726f, 249.021f);
        path.quadTo(229.426f, 249.021f, 229.376f, 249.171f);
        path.lineTo(228.176f, 246.871f);
        path.quadTo(226.826f, 244.571f, 225.526f, 244.571f);
        path.quadTo(224.926f, 244.583f, 224.926f, 244.721f);
        path.close();
        path.moveTo(225.847f, 248.957f);
        path.lineTo(225.797f, 248.707f);
        path.lineTo(225.847f, 248.107f);
        path.lineTo(226.047f, 245.707f);
        path.lineTo(227.347f, 248.057f);
        path.lineTo(228.147f, 249.107f);
        path.quadTo(227.447f, 248.807f, 226.347f, 248.807f);
        path.quadTo(225.985f, 248.819f, 225.847f, 248.957f);
        path.close();
        path.moveTo(228.885f, 249.877f);
        path.lineTo(228.835f, 249.777f);
        path.lineTo(229.135f, 249.927f);
        path.lineTo(229.385f, 249.577f);
        path.lineTo(229.535f, 250.677f);
        path.lineTo(229.535f, 251.777f);
        path.lineTo(229.135f, 250.827f);
        path.lineTo(228.885f, 249.877f);
        path.close();
        path.moveTo(226.952f, 252.778f);
        path.lineTo(226.702f, 253.328f);
        path.lineTo(226.002f, 253.778f);
        path.quadTo(225.152f, 253.078f, 224.902f, 252.128f);
        path.lineTo(224.652f, 250.528f);
        path.quadTo(224.352f, 249.178f, 222.452f, 248.528f);
        path.lineTo(222.852f, 246.128f);
        path.lineTo(223.452f, 247.228f);
        path.lineTo(223.802f, 248.328f);
        path.quadTo(224.352f, 249.978f, 225.152f, 250.878f);
        path.lineTo(225.502f, 250.678f);
        path.lineTo(225.552f, 250.578f);
        path.lineTo(226.952f, 252.778f);
        path.close();
        path.moveTo(228.011f, 254.527f);
        path.lineTo(228.111f, 255.777f);
        path.lineTo(228.261f, 258.377f);
        path.quadTo(228.111f, 262.077f, 225.511f, 262.077f);
        path.quadTo(221.111f, 262.077f, 218.111f, 255.327f);
        path.quadTo(217.111f, 253.077f, 216.061f, 249.577f);
        path.lineTo(215.661f, 248.077f);
        path.lineTo(216.511f, 248.377f);
        path.lineTo(221.311f, 249.977f);
        path.quadTo(222.711f, 250.527f, 223.111f, 251.327f);
        path.lineTo(223.261f, 252.077f);
        path.lineTo(223.661f, 253.277f);
        path.quadTo(224.561f, 254.877f, 227.111f, 254.877f);
        path.quadTo(227.561f, 254.877f, 227.761f, 254.127f);
        path.lineTo(228.011f, 254.377f);
        path.lineTo(228.011f, 254.527f);
        path.close();
        path.moveTo(234.732f, 270.639f);
        path.quadTo(234.532f, 271.239f, 234.532f, 273.039f);
        path.quadTo(234.532f, 275.689f, 235.582f, 277.289f);
        path.quadTo(236.332f, 278.539f, 238.232f, 279.839f);
        path.lineTo(238.232f, 279.939f);
        path.lineTo(239.432f, 282.389f);
        path.lineTo(241.182f, 285.389f);
        path.lineTo(241.632f, 285.189f);
        path.lineTo(240.032f, 282.189f);
        path.lineTo(239.182f, 280.539f);
        path.lineTo(240.032f, 281.039f);
        path.lineTo(243.632f, 275.139f);
        path.quadTo(245.082f, 272.739f, 245.082f, 270.189f);
        path.quadTo(245.082f, 266.739f, 243.682f, 266.289f);
        path.quadTo(242.032f, 265.789f, 239.582f, 270.889f);
        path.quadTo(237.732f, 269.039f, 236.832f, 269.039f);
        path.quadTo(235.192f, 269.028f, 234.732f, 270.639f);
        path.close();
        path.moveTo(235.238f, 271.744f);
        path.quadTo(235.588f, 270.194f, 236.888f, 270.194f);
        path.quadTo(237.688f, 270.194f, 238.738f, 271.694f);
        path.lineTo(240.038f, 273.444f);
        path.lineTo(240.338f, 273.244f);
        path.lineTo(240.538f, 270.094f);
        path.quadTo(240.738f, 268.194f, 242.388f, 267.244f);
        path.quadTo(243.788f, 267.794f, 244.038f, 268.644f);
        path.lineTo(244.188f, 270.094f);
        path.quadTo(244.188f, 272.944f, 239.588f, 279.444f);
        path.lineTo(238.738f, 279.244f);
        path.lineTo(238.688f, 278.994f);
        path.lineTo(238.438f, 278.994f);
        path.lineTo(238.438f, 279.094f);
        path.quadTo(237.088f, 278.444f, 236.238f, 276.894f);
        path.quadTo(235.238f, 275.244f, 235.238f, 273.444f);
        path.quadTo(235.1f, 272.527f, 235.238f, 271.744f);
        path.close();
        path.moveTo(246.701f, 260.327f);
        path.lineTo(246.651f, 259.477f);
        path.quadTo(247.751f, 260.077f, 248.651f, 261.377f);
        path.lineTo(249.001f, 261.877f);
        path.lineTo(249.151f, 263.077f);
        path.lineTo(248.701f, 262.727f);
        path.quadTo(246.747f, 261.294f, 246.701f, 260.327f);
        path.close();
        path.moveTo(297.017f, 228.655f);
        path.lineTo(296.917f, 228.605f);
        path.lineTo(296.517f, 228.255f);
        path.lineTo(296.517f, 228.005f);
        path.quadTo(296.617f, 228.505f, 297.017f, 228.505f);
        path.lineTo(297.017f, 228.655f);
        path.close();
        path.moveTo(296.925f, 229.806f);
        path.lineTo(296.225f, 229.906f);
        path.lineTo(296.175f, 229.856f);
        path.lineTo(296.425f, 228.956f);
        path.lineTo(297.075f, 229.456f);
        path.lineTo(297.175f, 230.456f);
        path.lineTo(297.225f, 230.956f);
        path.lineTo(296.575f, 230.456f);
        path.lineTo(296.925f, 229.806f);
        path.close();
        path.moveTo(294.025f, 228.563f);
        path.lineTo(294.125f, 228.163f);
        path.lineTo(294.875f, 229.413f);
        path.lineTo(294.875f, 230.463f);
        path.lineTo(293.975f, 229.613f);
        path.lineTo(294.025f, 228.563f);
        path.close();
        path.moveTo(293.979f, 232.338f);
        path.lineTo(294.329f, 232.338f);
        path.lineTo(294.429f, 232.538f);
        path.lineTo(294.729f, 232.338f);
        path.lineTo(294.229f, 233.838f);
        path.lineTo(293.979f, 232.338f);
        path.close();
        path.moveTo(297.293f, 232.108f);
        path.lineTo(297.493f, 232.108f);
        path.lineTo(297.593f, 232.158f);
        path.lineTo(297.443f, 232.258f);
        path.lineTo(297.193f, 232.108f);
        path.lineTo(297.293f, 232.108f);
        path.close();
        path.moveTo(296.511f, 231.187f);
        path.lineTo(296.111f, 231.237f);
        path.lineTo(296.311f, 230.987f);
        path.lineTo(296.511f, 231.187f);
        path.close();
        path.moveTo(295.544f, 232.66f);
        path.lineTo(296.544f, 233.41f);
        path.lineTo(295.594f, 234.76f);
        path.quadTo(294.794f, 236.21f, 294.594f, 237.61f);
        path.lineTo(294.344f, 235.01f);
        path.lineTo(294.394f, 235.01f);
        path.lineTo(295.544f, 232.66f);
        path.close();
        path.moveTo(292.229f, 233.305f);
        path.lineTo(292.179f, 233.105f);
        path.lineTo(292.379f, 231.955f);
        path.lineTo(292.929f, 235.455f);
        path.lineTo(292.679f, 235.605f);
        path.lineTo(292.579f, 234.955f);
        path.lineTo(292.429f, 234.205f);
        path.lineTo(292.579f, 233.805f);
        path.quadTo(292.552f, 233.351f, 292.229f, 233.305f);
        path.close();
        path.moveTo(291.079f, 237.908f);
        path.lineTo(291.179f, 238.308f);
        path.lineTo(291.129f, 239.108f);
        path.lineTo(291.179f, 240.358f);
        path.lineTo(291.329f, 240.358f);
        path.lineTo(291.229f, 241.408f);
        path.lineTo(291.179f, 242.058f);
        path.lineTo(290.879f, 239.458f);
        path.lineTo(291.079f, 237.908f);
        path.close();
        path.moveTo(283.805f, 242.097f);
        path.lineTo(283.955f, 241.947f);
        path.quadTo(283.705f, 243.947f, 280.955f, 244.447f);
        path.lineTo(281.255f, 244.197f);
        path.lineTo(282.655f, 243.197f);
        path.lineTo(283.805f, 242.097f);
        path.close();
        path.moveTo(281.273f, 246.056f);
        path.lineTo(281.023f, 246.506f);
        path.lineTo(280.573f, 245.956f);
        path.lineTo(281.273f, 246.056f);
        path.close();
        path.moveTo(280.583f, 247.069f);
        path.lineTo(280.683f, 247.169f);
        path.lineTo(279.883f, 248.469f);
        path.quadTo(279.883f, 249.619f, 280.133f, 249.219f);
        path.lineTo(281.233f, 249.269f);
        path.lineTo(281.133f, 251.269f);
        path.lineTo(280.333f, 251.819f);
        path.quadTo(280.033f, 250.969f, 279.683f, 250.969f);
        path.lineTo(278.283f, 250.919f);
        path.quadTo(277.183f, 250.519f, 277.183f, 249.119f);
        path.quadTo(277.183f, 247.919f, 277.783f, 247.219f);
        path.quadTo(278.383f, 246.469f, 279.233f, 246.469f);
        path.quadTo(280.03f, 246.425f, 280.583f, 247.069f);
        path.close();
        path.moveTo(283.575f, 247.898f);
        path.lineTo(283.575f, 248.798f);
        path.lineTo(283.175f, 249.248f);
        path.lineTo(282.725f, 248.548f);
        path.lineTo(283.575f, 247.898f);
        path.close();
        path.moveTo(283.575f, 250.108f);
        path.lineTo(283.475f, 249.858f);
        path.lineTo(283.575f, 249.708f);
        path.lineTo(283.575f, 250.108f);
        path.close();
        path.moveTo(286.199f, 247.852f);
        path.lineTo(286.249f, 247.102f);
        path.lineTo(286.499f, 246.802f);
        path.quadTo(287.599f, 250.352f, 288.749f, 260.302f);
        path.lineTo(288.649f, 260.402f);
        path.quadTo(286.199f, 248.588f, 286.199f, 247.852f);
        path.close();
        path.moveTo(288.501f, 247.207f);
        path.lineTo(287.701f, 245.507f);
        path.lineTo(288.851f, 243.807f);
        path.quadTo(288.851f, 243.007f, 290.151f, 239.707f);
        path.lineTo(289.801f, 244.607f);
        path.lineTo(289.751f, 244.357f);
        path.quadTo(289.051f, 244.857f, 289.051f, 246.357f);
        path.quadTo(289.051f, 247.907f, 289.651f, 251.457f);
        path.lineTo(289.651f, 251.457f);
        path.lineTo(288.501f, 247.207f);
        path.close();
        path.moveTo(291.539f, 241.177f);
        path.lineTo(291.589f, 240.827f);
        path.lineTo(291.739f, 241.627f);
        path.lineTo(291.989f, 243.827f);
        path.lineTo(291.989f, 246.977f);
        path.lineTo(291.939f, 250.677f);
        path.lineTo(291.989f, 252.427f);
        path.lineTo(291.539f, 247.227f);
        path.lineTo(291.339f, 244.077f);
        path.lineTo(291.539f, 241.177f);
        path.close();
        path.moveTo(292.506f, 243.294f);
        path.lineTo(292.556f, 243.194f);
        path.lineTo(293.056f, 246.394f);
        path.lineTo(293.656f, 249.644f);
        path.lineTo(294.006f, 252.694f);
        path.lineTo(294.356f, 256.294f);
        path.lineTo(294.306f, 256.294f);
        path.lineTo(294.306f, 261.044f);
        path.lineTo(294.756f, 263.644f);
        path.lineTo(294.756f, 270.294f);
        path.quadTo(294.606f, 264.044f, 293.356f, 251.394f);
        path.lineTo(292.506f, 243.344f);
        path.lineTo(292.506f, 243.294f);
        path.close();
        path.moveTo(292.414f, 248.773f);
        path.lineTo(292.414f, 248.523f);
        path.quadTo(293.564f, 261.323f, 294.414f, 276.723f);
        path.lineTo(294.564f, 276.573f);
        path.lineTo(294.214f, 285.573f);
        path.quadTo(293.164f, 280.873f, 292.614f, 275.173f);
        path.lineTo(291.714f, 259.773f);
        path.lineTo(290.764f, 249.973f);
        path.lineTo(290.964f, 247.873f);
        path.quadTo(291.714f, 258.872f, 292.164f, 262.073f);
        path.lineTo(292.364f, 261.923f);
        path.lineTo(292.414f, 261.123f);
        path.lineTo(292.114f, 255.773f);
        path.lineTo(292.314f, 255.723f);
        path.lineTo(292.414f, 248.773f);
        path.close();
        path.moveTo(290.618f, 248.68f);
        path.lineTo(290.218f, 246.63f);
        path.lineTo(290.618f, 242.93f);
        path.lineTo(290.818f, 245.88f);
        path.lineTo(290.618f, 248.68f);
        path.close();
        path.moveTo(273.171f, 237.77f);
        path.quadTo(273.971f, 237.77f, 274.571f, 237.32f);
        path.lineTo(275.071f, 236.57f);
        path.lineTo(275.021f, 235.02f);
        path.lineTo(270.171f, 234.52f);
        path.quadTo(269.921f, 234.47f, 269.271f, 234.97f);
        path.lineTo(269.421f, 236.82f);
        path.quadTo(269.995f, 237.77f, 273.171f, 237.77f);
        path.close();
        path.moveTo(266.312f, 244.261f);
        path.lineTo(266.212f, 244.361f);
        path.lineTo(265.412f, 243.261f);
        path.lineTo(266.712f, 244.311f);
        path.lineTo(266.312f, 244.261f);
        path.close();
        path.moveTo(261.708f, 246.471f);
        path.lineTo(261.858f, 246.471f);
        path.lineTo(262.358f, 247.271f);
        path.quadTo(262.158f, 248.971f, 261.558f, 250.171f);
        path.lineTo(261.308f, 247.321f);
        path.lineTo(261.708f, 246.471f);
        path.close();
        path.moveTo(265.345f, 245.458f);
        path.lineTo(264.945f, 246.058f);
        path.lineTo(264.945f, 244.608f);
        path.lineTo(265.345f, 245.458f);
        path.close();
        path.moveTo(268.291f, 244.998f);
        path.lineTo(268.191f, 245.248f);
        path.lineTo(267.841f, 245.248f);
        path.lineTo(267.791f, 245.048f);
        path.lineTo(267.891f, 245.098f);
        path.lineTo(268.291f, 244.998f);
        path.close();
        path.moveTo(268.568f, 247.484f);
        path.lineTo(268.668f, 247.234f);
        path.lineTo(269.368f, 245.484f);
        path.lineTo(269.818f, 245.484f);
        path.quadTo(270.168f, 245.584f, 270.318f, 245.734f);
        path.lineTo(269.368f, 248.534f);
        path.lineTo(268.568f, 247.484f);
        path.close();
        path.moveTo(270.731f, 248.68f);
        path.lineTo(270.631f, 250.13f);
        path.lineTo(270.331f, 249.68f);
        path.lineTo(270.731f, 248.68f);
        path.close();
        path.moveTo(276.946f, 246.517f);
        path.lineTo(276.796f, 246.817f);
        path.lineTo(276.696f, 246.967f);
        path.lineTo(276.396f, 247.517f);
        path.lineTo(276.096f, 247.917f);
        path.lineTo(275.246f, 247.217f);
        path.lineTo(274.796f, 246.617f);
        path.lineTo(275.896f, 246.517f);
        path.lineTo(276.946f, 246.517f);
        path.close();
        path.moveTo(275.012f, 248.312f);
        path.quadTo(275.862f, 249.262f, 275.862f, 249.612f);
        path.quadTo(275.862f, 251.112f, 275.012f, 253.062f);
        path.lineTo(274.362f, 253.112f);
        path.quadTo(273.912f, 251.112f, 273.362f, 246.712f);
        path.lineTo(275.012f, 248.312f);
        path.close();
        path.moveTo(279.017f, 254.895f);
        path.lineTo(279.017f, 254.845f);
        path.quadTo(279.817f, 258.645f, 280.567f, 267.645f);
        path.quadTo(281.417f, 276.895f, 281.417f, 282.645f);
        path.quadTo(281.417f, 283.545f, 281.317f, 282.795f);
        path.lineTo(279.217f, 275.795f);
        path.quadTo(277.617f, 269.995f, 277.617f, 269.245f);
        path.lineTo(278.067f, 262.695f);
        path.quadTo(278.649f, 256.598f, 279.017f, 254.895f);
        path.close();
        path.moveTo(272.066f, 251.811f);
        path.lineTo(272.066f, 251.461f);
        path.lineTo(272.066f, 251.361f);
        path.lineTo(272.266f, 251.961f);
        path.lineTo(272.066f, 251.811f);
        path.close();
        path.moveTo(272.665f, 253.56f);
        path.lineTo(272.915f, 254.56f);
        path.lineTo(273.415f, 257.31f);
        path.quadTo(273.415f, 258.11f, 272.515f, 261.51f);
        path.lineTo(271.415f, 265.61f);
        path.lineTo(271.415f, 262.91f);
        path.lineTo(272.015f, 253.31f);
        path.lineTo(272.665f, 253.56f);
        path.close();
        path.moveTo(276.393f, 259.775f);
        path.lineTo(276.393f, 256.575f);
        path.lineTo(276.543f, 255.075f);
        path.quadTo(276.793f, 257.225f, 276.443f, 259.775f);
        path.lineTo(276.393f, 259.775f);
        path.close();
        path.moveTo(268.199f, 251.304f);
        path.lineTo(268.199f, 250.804f);
        path.lineTo(268.399f, 251.004f);
        path.lineTo(268.199f, 251.304f);
        path.close();
        path.moveTo(268.706f, 255.309f);
        path.quadTo(268.706f, 254.809f, 269.556f, 252.009f);
        path.lineTo(270.456f, 252.559f);
        path.quadTo(270.056f, 257.959f, 269.806f, 266.559f);
        path.lineTo(269.256f, 261.159f);
        path.lineTo(268.706f, 255.309f);
        path.close();
        path.moveTo(262.537f, 251.212f);
        path.lineTo(262.637f, 251.062f);
        path.quadTo(262.837f, 252.362f, 262.637f, 253.612f);
        path.lineTo(262.137f, 253.312f);
        path.lineTo(261.987f, 253.212f);
        path.lineTo(262.537f, 251.212f);
        path.close();
        path.moveTo(267.923f, 259.084f);
        path.lineTo(267.923f, 258.984f);
        path.lineTo(268.623f, 270.984f);
        path.lineTo(268.823f, 278.834f);
        path.lineTo(268.673f, 283.734f);
        path.lineTo(268.373f, 290.834f);
        path.quadTo(266.623f, 273.784f, 266.623f, 269.884f);
        path.lineTo(266.673f, 265.434f);
        path.lineTo(267.923f, 259.084f);
        path.close();
        path.moveTo(264.286f, 269.12f);
        path.lineTo(264.036f, 262.67f);
        path.quadTo(264.036f, 257.47f, 264.136f, 256.47f);
        path.quadTo(264.336f, 255.37f, 266.136f, 248.67f);
        path.lineTo(265.586f, 263.62f);
        path.lineTo(264.986f, 278.97f);
        path.quadTo(264.609f, 275.427f, 264.286f, 269.12f);
        path.close();
        path.moveTo(294.715f, 259.729f);
        path.lineTo(294.865f, 261.729f);
        path.lineTo(294.865f, 261.729f);
        path.lineTo(294.715f, 259.729f);
        path.close();
        path.moveTo(282.286f, 251.304f);
        path.lineTo(282.286f, 251.204f);
        path.quadTo(283.086f, 252.404f, 283.236f, 255.404f);
        path.lineTo(283.486f, 259.954f);
        path.quadTo(282.186f, 258.804f, 282.236f, 255.804f);
        path.quadTo(282.516f, 252.547f, 282.286f, 251.304f);
        path.close();
        path.moveTo(280.491f, 252.686f);
        path.lineTo(281.091f, 252.135f);
        path.lineTo(280.891f, 255.085f);
        path.lineTo(280.791f, 254.985f);
        path.lineTo(280.491f, 252.686f);
        path.close();
        path.moveTo(287.948f, 267.14f);
        path.lineTo(287.798f, 263.39f);
        path.lineTo(287.798f, 263.29f);
        path.lineTo(288.198f, 265.14f);
        path.lineTo(288.648f, 267.39f);
        path.quadTo(288.547f, 267.555f, 287.948f, 267.14f);
        path.close();
        path.moveTo(285.232f, 272.02f);
        path.lineTo(285.232f, 271.92f);
        path.lineTo(286.132f, 277.42f);
        path.lineTo(286.782f, 283.62f);
        path.lineTo(286.732f, 283.72f);
        path.lineTo(285.782f, 277.87f);
        path.quadTo(285.278f, 274.184f, 285.232f, 272.02f);
        path.close();
        path.moveTo(288.731f, 269.212f);
        path.lineTo(288.931f, 269.212f);
        path.lineTo(289.081f, 270.162f);
        path.lineTo(288.481f, 269.312f);
        path.lineTo(288.731f, 269.212f);
        path.close();
        path.moveTo(289.467f, 272.25f);
        path.lineTo(289.517f, 272.7f);
        path.lineTo(289.967f, 275.45f);
        path.lineTo(289.517f, 280.3f);
        path.lineTo(289.417f, 280.3f);
        path.quadTo(289.167f, 279.8f, 288.717f, 277.25f);
        path.quadTo(288.217f, 274.7f, 288.217f, 274.0f);
        path.quadTo(288.217f, 273.5f, 288.617f, 273.0f);
        path.lineTo(289.417f, 272.25f);
        path.lineTo(289.467f, 272.25f);
        path.close();
        path.moveTo(290.296f, 268.429f);
        path.lineTo(290.246f, 268.429f);
        path.lineTo(290.146f, 261.979f);
        path.lineTo(290.296f, 268.429f);
        path.close();
        path.moveTo(291.631f, 272.388f);
        path.lineTo(291.631f, 272.338f);
        path.quadTo(291.981f, 273.938f, 291.731f, 276.888f);
        path.lineTo(291.731f, 276.838f);
        path.lineTo(291.581f, 275.938f);
        path.lineTo(291.481f, 274.738f);
        path.lineTo(291.631f, 272.388f);
        path.close();
        path.moveTo(222.487f, 215.535f);
        path.lineTo(222.637f, 215.585f);
        path.lineTo(222.337f, 216.685f);
        path.lineTo(222.037f, 216.585f);
        path.lineTo(221.937f, 216.485f);
        path.lineTo(222.337f, 215.585f);
        path.quadTo(222.395f, 215.489f, 222.487f, 215.535f);
        path.close();
        path.moveTo(210.333f, 222.21f);
        path.quadTo(210.833f, 222.76f, 211.383f, 225.51f);
        path.lineTo(211.883f, 228.71f);
        path.quadTo(211.883f, 229.81f, 210.533f, 231.51f);
        path.quadTo(209.183f, 233.16f, 209.183f, 235.16f);
        path.lineTo(209.183f, 235.86f);
        path.lineTo(209.833f, 236.41f);
        path.lineTo(209.333f, 236.56f);
        path.lineTo(209.083f, 236.26f);
        path.lineTo(207.633f, 234.41f);
        path.quadTo(207.683f, 233.61f, 206.933f, 232.86f);
        path.lineTo(206.683f, 233.16f);
        path.quadTo(204.333f, 229.86f, 203.883f, 227.61f);
        path.quadTo(204.533f, 228.06f, 206.283f, 230.06f);
        path.lineTo(208.633f, 232.61f);
        path.quadTo(208.983f, 231.51f, 208.983f, 229.91f);
        path.lineTo(208.883f, 227.31f);
        path.quadTo(208.814f, 224.098f, 210.333f, 222.21f);
        path.close();
        path.moveTo(183.403f, 228.701f);
        path.lineTo(185.953f, 228.301f);
        path.lineTo(189.203f, 228.751f);
        path.lineTo(188.053f, 228.101f);
        path.quadTo(182.253f, 225.301f, 181.103f, 229.251f);
        path.lineTo(183.403f, 228.701f);
        path.close();
        path.moveTo(178.753f, 237.264f);
        path.quadTo(178.603f, 237.164f, 178.603f, 237.864f);
        path.lineTo(178.803f, 239.064f);
        path.quadTo(179.203f, 240.114f, 179.953f, 240.114f);
        path.quadTo(181.103f, 240.114f, 180.653f, 239.814f);
        path.lineTo(179.953f, 238.464f);
        path.lineTo(178.803f, 237.364f);
        path.lineTo(178.753f, 237.264f);
        path.close();
        path.moveTo(177.741f, 236.988f);
        path.quadTo(177.741f, 238.138f, 177.941f, 237.788f);
        path.lineTo(179.391f, 235.938f);
        path.quadTo(180.141f, 234.738f, 179.791f, 233.938f);
        path.quadTo(179.091f, 234.138f, 178.341f, 235.388f);
        path.quadTo(177.741f, 236.435f, 177.741f, 236.988f);
        path.close();
        path.moveTo(177.557f, 238.0f);
        path.lineTo(177.507f, 236.25f);
        path.quadTo(177.507f, 235.4f, 178.207f, 230.9f);
        path.quadTo(177.157f, 231.6f, 176.907f, 233.5f);
        path.lineTo(176.807f, 236.35f);
        path.lineTo(176.807f, 237.35f);
        path.lineTo(176.807f, 237.4f);
        path.quadTo(176.857f, 239.3f, 177.057f, 240.1f);
        path.quadTo(177.407f, 241.85f, 178.457f, 242.6f);
        path.quadTo(180.307f, 246.25f, 183.207f, 246.25f);
        path.quadTo(184.357f, 246.25f, 184.357f, 245.85f);
        path.quadTo(179.557f, 243.65f, 178.057f, 240.0f);
        path.quadTo(177.741f, 239.197f, 177.557f, 238.0f);
        path.close();
        path.moveTo(182.344f, 233.673f);
        path.lineTo(182.094f, 233.673f);
        path.lineTo(182.094f, 236.173f);
        path.quadTo(182.694f, 236.823f, 183.244f, 236.873f);
        path.lineTo(183.694f, 236.523f);
        path.lineTo(183.994f, 235.473f);
        path.lineTo(183.944f, 234.773f);
        path.lineTo(183.744f, 234.573f);
        path.lineTo(183.094f, 235.323f);
        path.lineTo(182.544f, 235.723f);
        path.lineTo(182.344f, 233.673f);
        path.close();
        path.moveTo(185.106f, 238.737f);
        path.lineTo(184.806f, 238.737f);
        path.quadTo(184.806f, 239.787f, 186.406f, 241.037f);
        path.lineTo(186.706f, 240.537f);
        path.lineTo(186.456f, 239.187f);
        path.lineTo(186.206f, 239.187f);
        path.lineTo(185.756f, 240.137f);
        path.lineTo(185.506f, 239.487f);
        path.lineTo(185.106f, 238.737f);
        path.close();
        path.moveTo(181.562f, 250.062f);
        path.lineTo(179.962f, 249.962f);
        path.quadTo(179.212f, 249.962f, 179.012f, 250.562f);
        path.quadTo(178.862f, 250.912f, 178.862f, 252.012f);
        path.lineTo(179.112f, 252.262f);
        path.lineTo(178.762f, 252.612f);
        path.quadTo(178.462f, 252.962f, 178.462f, 254.262f);
        path.lineTo(178.212f, 254.812f);
        path.lineTo(178.162f, 256.562f);
        path.lineTo(178.812f, 259.812f);
        path.quadTo(179.862f, 262.462f, 181.712f, 262.862f);
        path.lineTo(180.912f, 263.762f);
        path.lineTo(181.662f, 265.012f);
        path.lineTo(185.962f, 265.212f);
        path.quadTo(186.662f, 265.212f, 186.812f, 264.812f);
        path.lineTo(186.912f, 264.212f);
        path.lineTo(184.412f, 263.812f);
        path.lineTo(182.112f, 263.512f);
        path.lineTo(182.262f, 263.312f);
        path.lineTo(182.812f, 262.862f);
        path.quadTo(183.212f, 262.812f, 183.262f, 262.562f);
        path.lineTo(183.412f, 262.412f);
        path.lineTo(183.262f, 262.162f);
        path.lineTo(182.862f, 262.262f);
        path.quadTo(181.262f, 261.412f, 180.112f, 259.412f);
        path.quadTo(179.212f, 257.762f, 179.112f, 256.762f);
        path.quadTo(179.512f, 257.162f, 180.212f, 257.362f);
        path.quadTo(179.362f, 255.212f, 179.512f, 254.462f);
        path.quadTo(179.662f, 253.662f, 180.412f, 253.062f);
        path.lineTo(181.662f, 253.862f);
        path.quadTo(184.512f, 255.512f, 185.062f, 255.512f);
        path.quadTo(185.512f, 255.512f, 186.012f, 253.912f);
        path.lineTo(186.462f, 252.012f);
        path.lineTo(186.412f, 250.162f);
        path.quadTo(186.212f, 249.112f, 185.412f, 248.612f);
        path.lineTo(185.312f, 248.212f);
        path.lineTo(185.562f, 247.012f);
        path.lineTo(184.812f, 247.012f);
        path.lineTo(184.712f, 247.312f);
        path.lineTo(184.612f, 248.212f);
        path.lineTo(184.612f, 248.362f);
        path.lineTo(184.562f, 248.362f);
        path.lineTo(184.562f, 248.412f);
        path.lineTo(184.462f, 248.662f);
        path.lineTo(184.412f, 249.362f);
        path.quadTo(184.412f, 249.862f, 184.712f, 250.512f);
        path.lineTo(184.812f, 251.412f);
        path.quadTo(184.862f, 253.312f, 184.162f, 254.162f);
        path.lineTo(184.312f, 254.262f);
        path.lineTo(184.162f, 254.312f);
        path.lineTo(181.212f, 252.562f);
        path.quadTo(182.012f, 252.162f, 183.162f, 251.912f);
        path.lineTo(183.412f, 252.762f);
        path.lineTo(183.462f, 252.762f);
        path.lineTo(183.662f, 253.412f);
        path.lineTo(183.962f, 253.162f);
        path.lineTo(183.962f, 252.012f);
        path.lineTo(183.962f, 251.362f);
        path.lineTo(183.712f, 246.562f);
        path.lineTo(183.412f, 246.562f);
        path.lineTo(183.312f, 248.112f);
        path.lineTo(183.262f, 247.912f);
        path.lineTo(182.962f, 247.912f);
        path.lineTo(182.862f, 248.662f);
        path.lineTo(182.812f, 249.712f);
        path.quadTo(182.812f, 250.562f, 183.112f, 251.762f);
        path.lineTo(182.412f, 251.712f);
        path.lineTo(182.812f, 251.362f);
        path.lineTo(182.762f, 250.462f);
        path.lineTo(182.762f, 250.412f);
        path.lineTo(182.712f, 250.362f);
        path.lineTo(181.862f, 246.962f);
        path.lineTo(181.412f, 246.962f);
        path.lineTo(181.362f, 248.662f);
        path.lineTo(181.562f, 250.062f);
        path.close();
        path.moveTo(180.042f, 251.811f);
        path.lineTo(180.492f, 251.111f);
        path.lineTo(181.692f, 250.811f);
        path.lineTo(181.892f, 251.711f);
        path.lineTo(180.092f, 251.861f);
        path.lineTo(180.042f, 251.811f);
        path.close();
        path.moveTo(183.219f, 261.524f);
        path.lineTo(182.319f, 261.774f);
        path.quadTo(182.469f, 262.074f, 183.919f, 262.224f);
        path.quadTo(184.869f, 263.074f, 185.769f, 263.574f);
        path.lineTo(187.119f, 263.574f);
        path.quadTo(188.619f, 264.224f, 190.569f, 264.224f);
        path.quadTo(192.119f, 264.224f, 193.719f, 262.674f);
        path.lineTo(192.619f, 265.124f);
        path.lineTo(191.519f, 267.074f);
        path.quadTo(191.519f, 268.074f, 191.969f, 268.374f);
        path.quadTo(192.719f, 268.824f, 195.169f, 268.824f);
        path.lineTo(196.369f, 268.674f);
        path.quadTo(197.019f, 268.324f, 197.019f, 267.074f);
        path.lineTo(196.019f, 265.674f);
        path.quadTo(195.019f, 264.274f, 195.019f, 264.024f);
        path.lineTo(195.019f, 262.824f);
        path.lineTo(194.969f, 261.974f);
        path.lineTo(194.469f, 261.974f);
        path.lineTo(195.219f, 260.724f);
        path.quadTo(196.119f, 259.474f, 196.119f, 258.824f);
        path.lineTo(195.969f, 258.074f);
        path.lineTo(195.669f, 258.024f);
        path.lineTo(195.469f, 258.274f);
        path.lineTo(195.219f, 257.174f);
        path.lineTo(194.969f, 257.174f);
        path.lineTo(194.819f, 257.674f);
        path.lineTo(194.769f, 257.624f);
        path.lineTo(194.469f, 257.624f);
        path.lineTo(194.469f, 258.324f);
        path.lineTo(193.919f, 258.974f);
        path.lineTo(191.269f, 262.424f);
        path.lineTo(192.169f, 262.624f);
        path.lineTo(190.069f, 263.074f);
        path.lineTo(189.919f, 262.624f);
        path.lineTo(185.819f, 262.174f);
        path.lineTo(185.769f, 262.124f);
        path.lineTo(185.319f, 261.724f);
        path.lineTo(185.319f, 261.524f);
        path.lineTo(185.019f, 261.424f);
        path.lineTo(184.369f, 260.824f);
        path.lineTo(184.369f, 261.224f);
        path.lineTo(184.469f, 261.424f);
        path.lineTo(184.269f, 261.424f);
        path.lineTo(184.019f, 261.224f);
        path.quadTo(183.319f, 259.724f, 182.819f, 259.474f);
        path.lineTo(182.519f, 259.474f);
        path.lineTo(182.319f, 259.974f);
        path.quadTo(182.344f, 260.557f, 183.219f, 261.524f);
        path.close();
        path.moveTo(176.36f, 255.77f);
        path.quadTo(174.76f, 254.52f, 173.56f, 254.17f);
        path.quadTo(173.56f, 254.32f, 173.11f, 254.37f);
        path.lineTo(174.56f, 255.37f);
        path.quadTo(175.61f, 256.02f, 176.31f, 256.02f);
        path.lineTo(176.36f, 255.77f);
        path.close();
        path.moveTo(171.71f, 257.841f);
        path.lineTo(171.26f, 258.091f);
        path.quadTo(172.81f, 259.241f, 173.91f, 259.291f);
        path.lineTo(176.76f, 259.491f);
        path.lineTo(176.96f, 259.141f);
        path.lineTo(177.01f, 258.941f);
        path.quadTo(175.86f, 258.041f, 174.11f, 257.941f);
        path.lineTo(171.71f, 257.841f);
        path.close();
        path.moveTo(171.066f, 258.532f);
        path.quadTo(171.066f, 257.782f, 170.866f, 257.632f);
        path.lineTo(170.316f, 257.332f);
        path.lineTo(169.866f, 257.332f);
        path.quadTo(169.416f, 257.482f, 169.416f, 258.182f);
        path.quadTo(169.416f, 258.882f, 169.516f, 259.032f);
        path.lineTo(169.666f, 259.182f);
        path.lineTo(170.666f, 259.332f);
        path.lineTo(171.716f, 259.482f);
        path.quadTo(172.866f, 259.482f, 172.416f, 259.232f);
        path.lineTo(171.666f, 259.232f);
        path.quadTo(171.066f, 259.222f, 171.066f, 258.532f);
        path.close();
        path.moveTo(168.948f, 260.143f);
        path.lineTo(168.548f, 260.393f);
        path.quadTo(168.698f, 260.643f, 170.248f, 260.993f);
        path.lineTo(172.648f, 261.293f);
        path.lineTo(174.248f, 261.093f);
        path.lineTo(172.048f, 260.543f);
        path.lineTo(168.948f, 260.143f);
        path.close();
        path.moveTo(174.61f, 256.691f);
        path.lineTo(173.06f, 256.491f);
        path.lineTo(173.36f, 257.79f);
        path.lineTo(177.46f, 257.391f);
        path.quadTo(175.393f, 257.243f, 174.61f, 256.691f);
        path.close();
        path.moveTo(174.242f, 259.913f);
        path.lineTo(174.242f, 260.063f);
        path.lineTo(176.042f, 261.563f);
        path.quadTo(176.992f, 262.163f, 179.192f, 262.163f);
        path.quadTo(180.342f, 262.163f, 179.792f, 261.913f);
        path.lineTo(176.442f, 260.613f);
        path.lineTo(174.242f, 259.913f);
        path.close();
        path.moveTo(174.15f, 263.504f);
        path.lineTo(176.55f, 263.354f);
        path.lineTo(173.6f, 263.004f);
        path.lineTo(171.05f, 263.054f);
        path.lineTo(174.15f, 263.504f);
        path.close();
        path.moveTo(220.369f, 229.944f);
        path.quadTo(221.719f, 231.994f, 223.319f, 233.494f);
        path.lineTo(219.369f, 234.094f);
        path.lineTo(218.969f, 232.194f);
        path.lineTo(218.319f, 231.094f);
        path.lineTo(219.319f, 231.144f);
        path.lineTo(220.369f, 229.944f);
        path.close();
        path.moveTo(215.673f, 237.218f);
        path.lineTo(215.573f, 238.018f);
        path.lineTo(215.523f, 238.318f);
        path.lineTo(214.673f, 238.518f);
        path.lineTo(214.273f, 238.518f);
        path.lineTo(215.023f, 237.768f);
        path.lineTo(215.673f, 237.218f);
        path.close();
        path.moveTo(216.686f, 237.126f);
        path.lineTo(216.686f, 236.676f);
        path.lineTo(216.786f, 236.576f);
        path.lineTo(217.036f, 236.426f);
        path.lineTo(216.686f, 237.126f);
        path.close();
        path.moveTo(216.87f, 238.461f);
        path.lineTo(217.67f, 237.561f);
        path.lineTo(217.72f, 237.611f);
        path.quadTo(217.37f, 240.161f, 216.67f, 242.411f);
        path.lineTo(216.67f, 238.661f);
        path.lineTo(216.87f, 238.461f);
        path.close();
        path.moveTo(222.164f, 234.087f);
        path.lineTo(222.114f, 234.287f);
        path.lineTo(221.414f, 234.887f);
        path.lineTo(220.564f, 235.837f);
        path.lineTo(220.564f, 234.787f);
        path.lineTo(222.164f, 234.087f);
        path.close();
        path.moveTo(223.315f, 234.778f);
        path.lineTo(223.115f, 234.378f);
        path.quadTo(223.215f, 234.078f, 223.465f, 233.878f);
        path.lineTo(222.915f, 233.878f);
        path.lineTo(223.465f, 233.628f);
        path.lineTo(224.865f, 234.778f);
        path.lineTo(223.165f, 236.028f);
        path.lineTo(223.315f, 234.778f);
        path.close();
        path.moveTo(220.599f, 237.356f);
        path.lineTo(221.249f, 236.856f);
        path.lineTo(221.249f, 236.956f);
        path.lineTo(220.599f, 240.456f);
        path.lineTo(220.599f, 237.356f);
        path.close();
        path.moveTo(210.656f, 237.448f);
        path.lineTo(211.306f, 236.698f);
        path.lineTo(211.456f, 237.548f);
        path.lineTo(211.856f, 238.548f);
        path.lineTo(212.456f, 239.048f);
        path.lineTo(212.006f, 239.898f);
        path.lineTo(210.206f, 237.698f);
        path.lineTo(210.656f, 237.448f);
        path.close();
        path.moveTo(212.819f, 240.993f);
        path.lineTo(212.869f, 240.343f);
        path.quadTo(212.969f, 240.043f, 213.369f, 239.493f);
        path.lineTo(214.669f, 239.743f);
        path.lineTo(214.269f, 241.143f);
        path.lineTo(213.919f, 242.843f);
        path.lineTo(212.819f, 240.993f);
        path.close();
        path.moveTo(219.54f, 240.67f);
        path.lineTo(219.64f, 240.67f);
        path.quadTo(219.64f, 245.22f, 220.39f, 248.07f);
        path.quadTo(217.09f, 247.37f, 215.24f, 246.42f);
        path.lineTo(214.79f, 244.77f);
        path.lineTo(214.39f, 243.82f);
        path.lineTo(214.44f, 243.82f);
        path.lineTo(215.19f, 242.47f);
        path.lineTo(215.64f, 241.22f);
        path.lineTo(215.74f, 243.82f);
        path.lineTo(215.94f, 246.17f);
        path.lineTo(216.59f, 246.12f);
        path.lineTo(217.94f, 240.97f);
        path.lineTo(218.14f, 243.52f);
        path.quadTo(218.29f, 244.97f, 218.59f, 245.87f);
        path.lineTo(219.04f, 245.37f);
        path.lineTo(219.54f, 240.67f);
        path.close();
        path.moveTo(221.382f, 243.479f);
        path.lineTo(221.882f, 244.479f);
        path.lineTo(221.782f, 245.279f);
        path.lineTo(221.532f, 248.079f);
        path.lineTo(221.382f, 248.079f);
        path.lineTo(221.382f, 243.479f);
        path.close();
        path.moveTo(215.259f, 239.704f);
        path.lineTo(214.859f, 240.654f);
        path.lineTo(214.859f, 240.554f);
        path.lineTo(215.109f, 239.704f);
        path.lineTo(215.259f, 239.704f);
        path.close();
        path.moveTo(191.551f, 231.371f);
        path.lineTo(191.251f, 231.571f);
        path.lineTo(192.601f, 236.121f);
        path.quadTo(193.101f, 238.021f, 193.101f, 239.421f);
        path.lineTo(193.201f, 239.421f);
        path.lineTo(193.101f, 240.071f);
        path.lineTo(192.451f, 242.871f);
        path.quadTo(191.851f, 242.971f, 191.101f, 243.671f);
        path.quadTo(190.451f, 244.271f, 188.401f, 244.271f);
        path.lineTo(186.201f, 244.421f);
        path.lineTo(186.401f, 244.721f);
        path.quadTo(186.701f, 245.171f, 189.651f, 245.171f);
        path.quadTo(191.501f, 245.171f, 192.201f, 243.571f);
        path.lineTo(192.451f, 243.571f);
        path.lineTo(193.751f, 242.971f);
        path.lineTo(194.651f, 244.821f);
        path.quadTo(194.001f, 244.121f, 193.351f, 243.821f);
        path.quadTo(194.751f, 245.971f, 196.201f, 249.421f);
        path.lineTo(198.451f, 254.821f);
        path.lineTo(198.501f, 254.671f);
        path.lineTo(198.851f, 257.721f);
        path.lineTo(198.701f, 258.671f);
        path.quadTo(197.851f, 260.071f, 195.201f, 262.221f);
        path.lineTo(195.401f, 262.621f);
        path.lineTo(197.451f, 262.021f);
        path.lineTo(197.251f, 262.921f);
        path.lineTo(197.951f, 263.121f);
        path.quadTo(198.951f, 262.221f, 199.451f, 260.121f);
        path.lineTo(199.751f, 257.771f);
        path.quadTo(199.751f, 254.421f, 197.851f, 249.071f);
        path.quadTo(196.101f, 244.171f, 194.201f, 241.921f);
        path.lineTo(194.251f, 240.771f);
        path.lineTo(193.851f, 236.871f);
        path.lineTo(193.601f, 236.871f);
        path.lineTo(193.601f, 236.371f);
        path.lineTo(193.501f, 234.171f);
        path.quadTo(193.208f, 233.213f, 191.551f, 231.371f);
        path.close();
        path.moveTo(194.728f, 233.443f);
        path.quadTo(193.928f, 231.993f, 192.128f, 230.543f);
        path.lineTo(192.828f, 231.743f);
        path.quadTo(193.728f, 233.593f, 194.278f, 236.843f);
        path.lineTo(194.528f, 236.443f);
        path.lineTo(194.728f, 236.243f);
        path.lineTo(194.728f, 233.443f);
        path.close();
        path.moveTo(194.728f, 266.312f);
        path.quadTo(193.928f, 266.312f, 193.828f, 265.212f);
        path.lineTo(193.828f, 265.162f);
        path.lineTo(194.778f, 265.212f);
        path.lineTo(194.728f, 266.312f);
        path.close();
        path.moveTo(221.566f, 266.772f);
        path.quadTo(222.116f, 265.072f, 222.116f, 264.222f);
        path.quadTo(221.166f, 264.922f, 220.566f, 268.022f);
        path.quadTo(220.216f, 270.122f, 220.216f, 271.772f);
        path.quadTo(220.216f, 274.472f, 223.716f, 279.222f);
        path.quadTo(226.066f, 282.522f, 228.366f, 284.222f);
        path.lineTo(228.416f, 284.622f);
        path.quadTo(228.566f, 285.622f, 228.916f, 286.322f);
        path.quadTo(226.266f, 287.522f, 224.166f, 290.422f);
        path.quadTo(223.316f, 291.722f, 222.816f, 292.972f);
        path.lineTo(224.666f, 292.972f);
        path.lineTo(225.566f, 291.272f);
        path.quadTo(227.716f, 287.522f, 229.066f, 286.572f);
        path.lineTo(229.416f, 287.022f);
        path.lineTo(229.766f, 286.772f);
        path.lineTo(229.816f, 286.772f);
        path.lineTo(229.866f, 286.222f);
        path.lineTo(229.916f, 286.222f);
        path.lineTo(230.416f, 286.222f);
        path.lineTo(230.416f, 286.172f);
        path.lineTo(230.316f, 285.822f);
        path.lineTo(229.866f, 285.972f);
        path.lineTo(229.666f, 285.072f);
        path.lineTo(230.816f, 285.622f);
        path.lineTo(230.866f, 285.422f);
        path.lineTo(229.266f, 283.972f);
        path.lineTo(229.016f, 283.522f);
        path.lineTo(228.516f, 282.622f);
        path.lineTo(227.766f, 282.272f);
        path.lineTo(227.966f, 282.722f);
        path.quadTo(220.966f, 275.722f, 220.966f, 268.722f);
        path.lineTo(221.566f, 266.772f);
        path.close();
        path.moveTo(295.268f, 289.79f);
        path.lineTo(295.468f, 288.44f);
        path.lineTo(295.468f, 288.89f);
        path.lineTo(295.518f, 290.59f);
        path.lineTo(295.268f, 289.79f);
        path.close();
        path.moveTo(291.355f, 284.864f);
        path.quadTo(291.855f, 285.564f, 292.105f, 286.764f);
        path.lineTo(292.005f, 286.714f);
        path.lineTo(291.355f, 284.964f);
        path.lineTo(291.355f, 284.864f);
        path.close();
        path.moveTo(266.22f, 286.705f);
        path.lineTo(266.22f, 286.605f);
        path.lineTo(266.72f, 289.505f);
        path.quadTo(266.22f, 287.58f, 266.22f, 286.705f);
        path.close();
        path.moveTo(245.136f, 290.112f);
        path.lineTo(244.836f, 290.112f);
        path.lineTo(244.436f, 292.962f);
        path.lineTo(245.236f, 292.962f);
        path.lineTo(245.286f, 291.812f);
        path.lineTo(245.236f, 290.812f);
        path.lineTo(245.136f, 290.112f);
        path.close();
        path.moveTo(257.657f, 285.37f);
        path.lineTo(257.657f, 279.72f);
        path.lineTo(258.607f, 268.62f);
        path.quadTo(259.361f, 274.782f, 257.657f, 285.37f);
        path.close();
        path.moveTo(238.507f, 283.713f);
        path.lineTo(238.557f, 283.963f);
        path.lineTo(238.507f, 284.063f);
        path.lineTo(238.557f, 284.163f);
        path.lineTo(238.657f, 284.513f);
        path.quadTo(238.957f, 286.163f, 239.357f, 287.413f);
        path.lineTo(239.807f, 287.313f);
        path.quadTo(239.857f, 287.213f, 239.907f, 287.263f);
        path.lineTo(239.907f, 287.413f);
        path.quadTo(239.907f, 288.113f, 238.907f, 289.063f);
        path.lineTo(236.407f, 291.013f);
        path.lineTo(236.407f, 290.863f);
        path.lineTo(237.807f, 288.763f);
        path.quadTo(237.307f, 288.963f, 236.707f, 289.263f);
        path.lineTo(236.807f, 289.013f);
        path.lineTo(237.407f, 287.513f);
        path.lineTo(237.657f, 287.913f);
        path.lineTo(237.807f, 287.613f);
        path.lineTo(237.557f, 287.113f);
        path.lineTo(237.807f, 286.763f);
        path.lineTo(237.457f, 286.763f);
        path.lineTo(237.257f, 285.713f);
        path.lineTo(236.807f, 286.013f);
        path.lineTo(237.107f, 287.013f);
        path.quadTo(236.257f, 287.613f, 236.007f, 289.763f);
        path.quadTo(234.457f, 290.913f, 232.957f, 292.963f);
        path.lineTo(235.157f, 292.963f);
        path.lineTo(235.707f, 291.963f);
        path.lineTo(235.707f, 292.963f);
        path.lineTo(236.357f, 292.963f);
        path.lineTo(236.307f, 291.563f);
        path.lineTo(236.307f, 291.213f);
        path.lineTo(237.207f, 291.463f);
        path.quadTo(238.107f, 291.163f, 239.457f, 290.163f);
        path.quadTo(240.807f, 289.063f, 240.807f, 288.513f);
        path.lineTo(240.607f, 286.313f);
        path.lineTo(239.757f, 284.613f);
        path.lineTo(239.657f, 283.513f);
        path.lineTo(239.607f, 283.213f);
        path.lineTo(238.907f, 283.113f);
        path.lineTo(238.507f, 283.713f);
        path.close();
    }

    private static void draw_5(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_5(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_6(Path path)
    {
        path.reset();
        path.moveTo(1316.83f, 383.056f);
        path.lineTo(1316.83f, -868.994f);
        path.lineTo(-731.172f, -868.994f);
        path.lineTo(-731.172f, 383.056f);
        path.lineTo(1316.83f, 383.056f);
        path.close();
    }

    private static Shader create_gradient_0()
    {
        int colors[] = {
            Color.argb(255, 0, 153, 255),
            Color.argb(255, 0, 51, 153)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_6(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_6(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_0();
        shader.setLocalMatrix(createMatrix(0.0f, -0.791407f, 0.764223f, 0.0f, 302.265f, -209.965f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_7(Path path)
    {
        path.reset();
        path.moveTo(830.469f, -397.741f);
        path.quadTo(829.669f, -391.441f, 830.119f, -381.291f);
        path.lineTo(830.819f, -364.291f);
        path.quadTo(831.119f, -344.241f, 823.119f, -335.141f);
        path.quadTo(820.819f, -337.391f, 814.419f, -342.941f);
        path.quadTo(807.969f, -348.441f, 804.669f, -351.741f);
        path.quadTo(812.269f, -328.941f, 802.819f, -308.241f);
        path.quadTo(794.419f, -289.891f, 773.819f, -275.191f);
        path.quadTo(755.219f, -261.841f, 730.819f, -254.141f);
        path.quadTo(707.569f, -246.741f, 686.819f, -246.741f);
        path.quadTo(669.619f, -246.741f, 662.469f, -247.391f);
        path.lineTo(662.319f, -246.741f);
        path.lineTo(658.919f, -247.841f);
        path.quadTo(646.619f, -251.941f, 636.669f, -258.541f);
        path.lineTo(633.669f, -260.641f);
        path.quadTo(629.469f, -263.691f, 625.569f, -267.341f);
        path.quadTo(617.119f, -275.191f, 609.969f, -285.641f);
        path.quadTo(598.419f, -302.641f, 588.519f, -328.991f);
        path.quadTo(578.469f, -375.891f, 566.269f, -414.991f);
        path.quadTo(539.119f, -502.091f, 499.619f, -555.541f);
        path.quadTo(461.669f, -606.991f, 409.719f, -630.791f);
        path.quadTo(361.069f, -653.091f, 295.719f, -653.091f);
        path.quadTo(234.969f, -653.091f, 194.869f, -643.191f);
        path.quadTo(146.369f, -631.191f, 110.319f, -601.491f);
        path.quadTo(70.7191f, -568.891f, 39.7691f, -510.141f);
        path.quadTo(7.11911f, -448.141f, -19.1309f, -351.091f);
        path.quadTo(-25.5809f, -327.091f, -32.5809f, -291.891f);
        path.lineTo(-33.8309f, -292.091f);
        path.quadTo(-38.2809f, -266.191f, -69.6309f, -250.491f);
        path.quadTo(-87.0809f, -241.741f, -111.281f, -237.291f);
        path.quadTo(-133.181f, -233.241f, -157.231f, -233.241f);
        path.quadTo(-211.831f, -233.241f, -248.181f, -251.891f);
        path.quadTo(-298.031f, -277.441f, -295.331f, -332.541f);
        path.lineTo(-298.981f, -332.641f);
        path.quadTo(-298.981f, -330.241f, -303.481f, -321.791f);
        path.quadTo(-307.081f, -314.991f, -310.031f, -310.591f);
        path.quadTo(-310.031f, -312.891f, -311.881f, -313.791f);
        path.lineTo(-313.731f, -314.241f);
        path.quadTo(-312.481f, -320.991f, -315.131f, -323.491f);
        path.quadTo(-316.231f, -324.541f, -318.881f, -325.991f);
        path.lineTo(-324.781f, -328.991f);
        path.quadTo(-327.931f, -319.591f, -329.831f, -310.591f);
        path.quadTo(-332.131f, -299.841f, -332.131f, -292.141f);
        path.quadTo(-334.631f, -304.591f, -344.631f, -310.841f);
        path.quadTo(-347.431f, -312.591f, -353.331f, -315.641f);
        path.quadTo(-358.581f, -318.591f, -361.631f, -321.591f);
        path.quadTo(-361.631f, -303.691f, -364.231f, -274.991f);
        path.lineTo(-368.681f, -225.691f);
        path.lineTo(-368.981f, -222.191f);
        path.lineTo(-368.981f, -225.841f);
        path.quadTo(-374.881f, -226.991f, -385.781f, -236.541f);
        path.lineTo(-398.431f, -247.941f);
        path.quadTo(-398.431f, -245.641f, -400.281f, -244.741f);
        path.quadTo(-401.181f, -244.291f, -402.131f, -244.291f);
        path.lineTo(-402.131f, -192.741f);
        path.quadTo(-406.881f, -170.091f, -398.531f, -149.291f);
        path.quadTo(-391.131f, -130.791f, -372.531f, -112.191f);
        path.quadTo(-357.281f, -96.9414f, -331.131f, -78.5414f);
        path.quadTo(-320.131f, -70.8414f, -281.381f, -45.4914f);
        path.quadTo(-249.031f, -24.3914f, -230.431f, -10.2914f);
        path.quadTo(-203.181f, 10.3086f, -185.231f, 29.9586f);
        path.quadTo(-140.631f, 78.8086f, -140.631f, 136.859f);
        path.quadTo(-140.631f, 140.759f, -142.481f, 157.809f);
        path.quadTo(-144.231f, 173.809f, -144.331f, 181.859f);
        path.lineTo(-144.681f, 182.709f);
        path.quadTo(-149.681f, 193.309f, -154.781f, 203.109f);
        path.quadTo(-176.181f, 243.759f, -201.681f, 271.259f);
        path.lineTo(798.119f, 271.259f);
        path.quadTo(766.519f, 237.359f, 738.919f, 187.709f);
        path.lineTo(733.919f, 180.759f);
        path.quadTo(724.319f, 166.809f, 719.269f, 155.259f);
        path.quadTo(715.919f, 147.459f, 713.869f, 139.009f);
        path.lineTo(709.919f, 130.759f);
        path.lineTo(712.019f, 129.759f);
        path.quadTo(710.019f, 117.059f, 710.019f, 98.1586f);
        path.quadTo(710.019f, 84.1586f, 711.519f, 71.4586f);
        path.quadTo(705.269f, 57.9586f, 705.269f, 45.0586f);
        path.quadTo(705.269f, 17.7586f, 715.169f, -2.19144f);
        path.quadTo(723.919f, -19.8414f, 741.269f, -33.1914f);
        path.quadTo(755.269f, -44.0914f, 778.169f, -54.0914f);
        path.quadTo(785.069f, -57.1914f, 820.469f, -70.9414f);
        path.quadTo(847.019f, -81.2914f, 862.719f, -89.8414f);
        path.quadTo(885.019f, -101.841f, 899.669f, -116.741f);
        path.quadTo(935.669f, -153.391f, 935.669f, -219.141f);
        path.quadTo(935.669f, -259.391f, 924.019f, -295.291f);
        path.quadTo(919.519f, -309.191f, 911.669f, -327.441f);
        path.lineTo(896.969f, -360.941f);
        path.quadTo(896.969f, -357.991f, 892.419f, -351.991f);
        path.quadTo(888.969f, -347.391f, 884.119f, -342.491f);
        path.lineTo(882.869f, -346.491f);
        path.quadTo(878.519f, -359.891f, 874.219f, -369.491f);
        path.quadTo(865.519f, -388.941f, 858.319f, -390.391f);
        path.quadTo(858.319f, -379.341f, 854.619f, -360.941f);
        path.quadTo(853.219f, -367.791f, 843.769f, -379.541f);
        path.quadTo(832.633f, -393.276f, 830.469f, -397.741f);
        path.close();
    }

    private static Shader create_gradient_1()
    {
        int colors[] = {
            Color.argb(0, 102, 102, 102),
            Color.argb(255, 0, 0, 0)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_7(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_7(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_1();
        shader.setLocalMatrix(createMatrix(0.0f, -0.386734f, 0.564197f, 0.0f, 293.703f, -228.425f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_8(Path path)
    {
        path.reset();
        path.moveTo(104.775f, -543.442f);
        path.lineTo(109.625f, -521.392f);
        path.quadTo(114.475f, -499.942f, 119.075f, -487.042f);
        path.quadTo(131.375f, -452.342f, 151.175f, -452.342f);
        path.quadTo(165.125f, -452.342f, 174.475f, -472.142f);
        path.quadTo(176.575f, -476.742f, 180.775f, -488.092f);
        path.quadTo(184.175f, -497.242f, 186.175f, -500.242f);
        path.quadTo(190.125f, -497.592f, 195.075f, -492.492f);
        path.lineTo(203.325f, -484.092f);
        path.quadTo(213.625f, -474.442f, 226.675f, -474.442f);
        path.quadTo(234.025f, -474.442f, 239.675f, -478.442f);
        path.quadTo(243.225f, -480.992f, 252.475f, -489.192f);
        path.quadTo(257.325f, -486.742f, 262.575f, -482.742f);
        path.lineTo(270.925f, -476.092f);
        path.quadTo(280.375f, -468.942f, 290.225f, -468.942f);
        path.quadTo(298.425f, -468.942f, 302.875f, -469.892f);
        path.quadTo(307.675f, -470.892f, 310.975f, -473.642f);
        path.quadTo(313.975f, -476.092f, 317.175f, -481.442f);
        path.quadTo(319.075f, -484.592f, 324.275f, -494.692f);
        path.lineTo(326.125f, -494.692f);
        path.quadTo(326.425f, -485.042f, 336.875f, -479.992f);
        path.quadTo(344.475f, -476.292f, 352.825f, -476.292f);
        path.quadTo(362.375f, -476.292f, 373.575f, -484.042f);
        path.quadTo(385.375f, -492.192f, 385.025f, -500.242f);
        path.lineTo(386.875f, -500.242f);
        path.quadTo(388.175f, -493.042f, 388.575f, -482.042f);
        path.quadTo(388.925f, -471.592f, 389.675f, -468.092f);
        path.quadTo(390.975f, -461.942f, 395.125f, -459.192f);
        path.quadTo(399.875f, -456.042f, 409.875f, -456.042f);
        path.quadTo(422.875f, -456.042f, 434.025f, -470.292f);
        path.quadTo(443.525f, -482.592f, 450.475f, -503.492f);
        path.quadTo(456.475f, -521.842f, 458.775f, -541.042f);
        path.lineTo(458.875f, -541.592f);
        path.quadTo(445.075f, -546.042f, 428.475f, -546.042f);
        path.quadTo(420.275f, -546.042f, 363.275f, -534.092f);
        path.quadTo(309.375f, -522.892f, 298.075f, -521.442f);
        path.lineTo(285.575f, -521.292f);
        path.quadTo(263.825f, -521.292f, 199.575f, -533.642f);
        path.lineTo(154.975f, -542.192f);
        path.quadTo(133.225f, -546.042f, 125.525f, -546.042f);
        path.quadTo(114.351f, -546.02f, 104.775f, -543.442f);
        path.close();
        path.moveTo(446.216f, -339.369f);
        path.quadTo(445.816f, -346.469f, 445.166f, -352.919f);
        path.quadTo(440.616f, -395.269f, 422.766f, -395.269f);
        path.quadTo(413.116f, -395.269f, 405.216f, -389.619f);
        path.quadTo(398.966f, -385.119f, 392.416f, -375.769f);
        path.lineTo(381.166f, -358.319f);
        path.quadTo(374.316f, -347.719f, 368.466f, -341.869f);
        path.quadTo(363.366f, -353.119f, 360.666f, -356.069f);
        path.quadTo(356.816f, -360.269f, 345.416f, -360.269f);
        path.quadTo(332.916f, -360.269f, 325.816f, -355.719f);
        path.quadTo(317.616f, -350.469f, 311.366f, -336.319f);
        path.quadTo(305.916f, -347.819f, 299.616f, -354.319f);
        path.quadTo(292.066f, -362.119f, 283.766f, -362.119f);
        path.quadTo(276.116f, -362.119f, 269.916f, -356.419f);
        path.quadTo(262.116f, -347.819f, 256.116f, -341.869f);
        path.quadTo(250.666f, -352.069f, 244.516f, -356.069f);
        path.quadTo(238.016f, -360.269f, 226.666f, -360.269f);
        path.quadTo(221.116f, -360.269f, 216.516f, -358.269f);
        path.quadTo(212.966f, -356.719f, 208.216f, -353.069f);
        path.lineTo(199.066f, -345.969f);
        path.quadTo(192.816f, -341.469f, 186.166f, -338.169f);
        path.quadTo(182.816f, -344.969f, 180.216f, -356.619f);
        path.lineTo(175.966f, -374.469f);
        path.quadTo(173.116f, -383.669f, 168.116f, -388.069f);
        path.quadTo(161.966f, -393.419f, 151.166f, -393.419f);
        path.quadTo(141.916f, -393.419f, 136.316f, -389.319f);
        path.quadTo(131.016f, -385.469f, 127.566f, -376.769f);
        path.quadTo(124.716f, -369.669f, 121.916f, -355.519f);
        path.lineTo(119.316f, -341.569f);
        path.quadTo(143.316f, -331.569f, 176.266f, -326.769f);
        path.quadTo(209.266f, -321.869f, 254.116f, -321.869f);
        path.quadTo(325.266f, -321.869f, 358.366f, -324.019f);
        path.quadTo(410.216f, -327.419f, 441.916f, -337.869f);
        path.lineTo(446.216f, -339.369f);
        path.close();
    }

    private static void draw_8(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_8(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_9(Path path)
    {
        path.reset();
        path.moveTo(458.876f, -541.554f);
        path.lineTo(458.776f, -541.004f);
        path.lineTo(458.976f, -541.504f);
        path.lineTo(458.876f, -541.554f);
        path.close();
    }

    private static Shader create_gradient_2()
    {
        int colors[] = {
            Color.argb(255, 62, 188, 210),
            Color.argb(255, 18, 104, 137)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_9(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_9(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_2();
        shader.setLocalMatrix(createMatrix(0.0f, -0.675028f, 0.575577f, 0.0f, 265.299f, -220.737f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_10(Path path)
    {
        path.reset();
        path.moveTo(458.784f, -541.002f);
        path.quadTo(456.484f, -521.802f, 450.484f, -503.452f);
        path.quadTo(443.534f, -482.552f, 434.034f, -470.252f);
        path.quadTo(422.884f, -456.002f, 409.884f, -456.002f);
        path.quadTo(399.884f, -456.002f, 395.134f, -459.152f);
        path.quadTo(390.984f, -461.902f, 389.684f, -468.052f);
        path.quadTo(388.934f, -471.552f, 388.584f, -482.002f);
        path.quadTo(388.184f, -493.002f, 386.884f, -500.202f);
        path.lineTo(385.034f, -500.202f);
        path.quadTo(385.384f, -492.152f, 373.584f, -484.002f);
        path.quadTo(362.384f, -476.252f, 352.834f, -476.252f);
        path.quadTo(344.484f, -476.252f, 336.884f, -479.952f);
        path.quadTo(326.434f, -485.002f, 326.134f, -494.652f);
        path.lineTo(324.284f, -494.652f);
        path.quadTo(319.084f, -484.552f, 317.184f, -481.402f);
        path.quadTo(313.984f, -476.052f, 310.984f, -473.602f);
        path.quadTo(307.684f, -470.852f, 302.884f, -469.852f);
        path.quadTo(298.434f, -468.902f, 290.234f, -468.902f);
        path.quadTo(280.384f, -468.902f, 270.934f, -476.052f);
        path.lineTo(262.584f, -482.702f);
        path.quadTo(257.334f, -486.702f, 252.484f, -489.152f);
        path.quadTo(243.234f, -480.952f, 239.684f, -478.402f);
        path.quadTo(234.034f, -474.402f, 226.684f, -474.402f);
        path.quadTo(213.634f, -474.402f, 203.334f, -484.052f);
        path.lineTo(195.084f, -492.452f);
        path.quadTo(190.134f, -497.552f, 186.184f, -500.202f);
        path.quadTo(184.184f, -497.202f, 180.784f, -488.052f);
        path.quadTo(176.584f, -476.702f, 174.484f, -472.102f);
        path.quadTo(165.134f, -452.302f, 151.184f, -452.302f);
        path.quadTo(131.384f, -452.302f, 119.084f, -487.002f);
        path.quadTo(114.484f, -499.902f, 109.634f, -521.352f);
        path.lineTo(104.784f, -543.402f);
        path.quadTo(80.4837f, -536.952f, 66.2837f, -514.002f);
        path.quadTo(50.0337f, -487.652f, 50.0337f, -446.302f);
        path.quadTo(50.0337f, -374.902f, 111.234f, -345.202f);
        path.quadTo(115.134f, -343.302f, 119.334f, -341.552f);
        path.lineTo(121.934f, -355.502f);
        path.quadTo(124.734f, -369.652f, 127.584f, -376.752f);
        path.quadTo(131.034f, -385.452f, 136.334f, -389.302f);
        path.quadTo(141.934f, -393.402f, 151.184f, -393.402f);
        path.quadTo(161.984f, -393.402f, 168.134f, -388.052f);
        path.quadTo(173.134f, -383.652f, 175.984f, -374.452f);
        path.lineTo(180.234f, -356.602f);
        path.quadTo(182.834f, -344.952f, 186.184f, -338.152f);
        path.quadTo(192.834f, -341.452f, 199.084f, -345.952f);
        path.lineTo(208.234f, -353.052f);
        path.quadTo(212.984f, -356.702f, 216.534f, -358.252f);
        path.quadTo(221.134f, -360.252f, 226.684f, -360.252f);
        path.quadTo(238.034f, -360.252f, 244.534f, -356.052f);
        path.quadTo(250.684f, -352.052f, 256.134f, -341.852f);
        path.quadTo(262.134f, -347.802f, 269.934f, -356.402f);
        path.quadTo(276.134f, -362.102f, 283.784f, -362.102f);
        path.quadTo(292.084f, -362.102f, 299.634f, -354.302f);
        path.quadTo(305.934f, -347.802f, 311.384f, -336.302f);
        path.quadTo(317.634f, -350.452f, 325.834f, -355.702f);
        path.quadTo(332.934f, -360.252f, 345.434f, -360.252f);
        path.quadTo(356.834f, -360.252f, 360.684f, -356.052f);
        path.quadTo(363.384f, -353.102f, 368.484f, -341.852f);
        path.quadTo(374.334f, -347.702f, 381.184f, -358.302f);
        path.lineTo(392.434f, -375.752f);
        path.quadTo(398.984f, -385.102f, 405.234f, -389.602f);
        path.quadTo(413.134f, -395.252f, 422.784f, -395.252f);
        path.quadTo(440.634f, -395.252f, 445.184f, -352.902f);
        path.quadTo(445.834f, -346.452f, 446.234f, -339.352f);
        path.quadTo(480.084f, -351.602f, 497.434f, -374.652f);
        path.quadTo(517.484f, -401.502f, 517.484f, -445.552f);
        path.quadTo(517.484f, -465.752f, 512.184f, -483.452f);
        path.quadTo(506.684f, -501.902f, 495.934f, -515.502f);
        path.quadTo(481.134f, -534.302f, 458.984f, -541.502f);
        path.lineTo(458.784f, -541.002f);
        path.close();
    }

    private static void draw_10(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_10(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_0();
        shader.setLocalMatrix(createMatrix(0.0f, -0.791407f, 0.764223f, 0.0f, 302.265f, -209.965f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_11(Path path)
    {
        path.reset();
        path.moveTo(139.21f, -583.676f);
        path.quadTo(139.21f, -573.526f, 146.31f, -566.376f);
        path.quadTo(153.51f, -559.226f, 163.66f, -559.226f);
        path.quadTo(173.809f, -559.226f, 180.91f, -566.376f);
        path.quadTo(188.059f, -573.526f, 188.059f, -583.676f);
        path.quadTo(188.059f, -593.826f, 180.91f, -600.976f);
        path.quadTo(173.809f, -608.126f, 163.66f, -608.126f);
        path.quadTo(153.51f, -608.126f, 146.31f, -600.976f);
        path.quadTo(139.21f, -593.804f, 139.21f, -583.676f);
        path.close();
    }

    private static void draw_11(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_11(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_12(Path path)
    {
        path.reset();
        path.moveTo(153.941f, -576.725f);
        path.quadTo(153.491f, -584.225f, 156.391f, -588.325f);
        path.quadTo(159.191f, -592.375f, 164.541f, -592.375f);
        path.quadTo(168.791f, -592.375f, 171.241f, -586.875f);
        path.quadTo(172.999f, -582.986f, 173.275f, -578.566f);
    }

    private static void draw_12(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_12(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStrokeWidth(7.36558f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_13(Path path)
    {
        path.reset();
        path.moveTo(383.24f, -583.676f);
        path.quadTo(383.24f, -573.526f, 390.39f, -566.376f);
        path.quadTo(397.59f, -559.226f, 407.69f, -559.226f);
        path.quadTo(417.89f, -559.226f, 424.94f, -566.376f);
        path.quadTo(432.14f, -573.526f, 432.14f, -583.676f);
        path.quadTo(432.14f, -593.826f, 424.94f, -600.976f);
        path.quadTo(417.89f, -608.126f, 407.69f, -608.126f);
        path.quadTo(397.59f, -608.126f, 390.39f, -600.976f);
        path.quadTo(383.24f, -593.804f, 383.24f, -583.676f);
        path.close();
    }

    private static void draw_13(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_13(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_14(Path path)
    {
        path.reset();
        path.moveTo(397.972f, -576.725f);
        path.quadTo(397.522f, -584.225f, 400.422f, -588.325f);
        path.quadTo(403.222f, -592.375f, 408.572f, -592.375f);
        path.quadTo(412.772f, -592.375f, 415.272f, -586.875f);
        path.quadTo(417.03f, -582.986f, 417.306f, -578.566f);
    }

    private static void draw_14(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_14(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStrokeWidth(7.36558f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_15(Path path)
    {
        path.reset();
        path.moveTo(1099.59f, 383.056f);
        path.quadTo(1061.04f, 193.306f, 878.589f, 50.4063f);
        path.quadTo(647.289f, -130.944f, 320.139f, -130.944f);
        path.quadTo(-6.96069f, -130.944f, -238.311f, 50.4063f);
        path.quadTo(-420.761f, 193.306f, -459.261f, 383.056f);
        path.lineTo(1099.59f, 383.056f);
        path.close();
    }

    private static Shader create_gradient_3()
    {
        int colors[] = {
            Color.argb(255, 102, 0, 153),
            Color.argb(255, 197, 122, 228)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new RadialGradient(0.0f, 0.0f, 819.2f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_15(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_15(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_3();
        shader.setLocalMatrix(createMatrix(1.31932f, 0.0f, 0.0f, 0.83663f, 313.129f, 267.048f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_16(Path path)
    {
        path.reset();
        path.moveTo(341.119f, 67.0268f);
        path.quadTo(337.719f, 62.1268f, 329.219f, 56.3268f);
        path.quadTo(319.269f, 49.3768f, 312.119f, 49.3768f);
        path.quadTo(309.319f, 49.3768f, 307.069f, 50.2268f);
        path.quadTo(303.169f, 47.4768f, 298.469f, 44.8768f);
        path.quadTo(275.719f, 32.3768f, 253.319f, 32.3768f);
        path.quadTo(235.919f, 32.3768f, 229.219f, 34.0768f);
        path.quadTo(213.819f, 38.0268f, 213.819f, 51.1268f);
        path.quadTo(213.819f, 54.8268f, 214.469f, 58.2268f);
        path.quadTo(201.219f, 49.3768f, 187.669f, 49.3768f);
        path.quadTo(178.919f, 49.3768f, 171.219f, 54.5768f);
        path.quadTo(162.669f, 60.3268f, 162.669f, 68.4768f);
        path.quadTo(162.669f, 75.8768f, 173.069f, 81.5768f);
        path.lineTo(181.119f, 85.5268f);
        path.lineTo(186.069f, 88.2268f);
        path.lineTo(186.519f, 88.6768f);
        path.lineTo(186.669f, 88.7768f);
        path.lineTo(188.469f, 89.3768f);
        path.quadTo(190.319f, 89.9768f, 192.119f, 90.7768f);
        path.quadTo(200.519f, 95.1768f, 205.319f, 97.3268f);
        path.quadTo(208.369f, 98.7268f, 212.769f, 98.9768f);
        path.lineTo(220.419f, 99.4268f);
        path.quadTo(224.219f, 100.077f, 229.619f, 101.577f);
        path.quadTo(232.919f, 102.477f, 237.219f, 102.477f);
        path.lineTo(241.269f, 102.177f);
        path.quadTo(243.969f, 101.577f, 243.969f, 99.4268f);
        path.quadTo(243.969f, 98.7268f, 239.919f, 93.1768f);
        path.quadTo(235.519f, 87.1768f, 234.919f, 85.8768f);
        path.lineTo(234.919f, 84.3268f);
        path.quadTo(235.869f, 84.5768f, 238.319f, 85.6768f);
        path.lineTo(240.619f, 86.4268f);
        path.lineTo(240.269f, 85.7268f);
        path.lineTo(241.569f, 86.2268f);
        path.quadTo(256.919f, 92.0768f, 277.469f, 92.0768f);
        path.lineTo(286.469f, 91.4768f);
        path.lineTo(289.569f, 90.9268f);
        path.lineTo(289.469f, 91.1268f);
        path.lineTo(307.069f, 87.8768f);
        path.lineTo(309.618f, 87.0768f);
        path.lineTo(311.418f, 86.4768f);
        path.quadTo(312.968f, 88.7768f, 314.318f, 89.7268f);
        path.quadTo(316.168f, 90.9268f, 318.668f, 90.9268f);
        path.quadTo(320.868f, 90.9268f, 327.219f, 88.6768f);
        path.quadTo(333.518f, 86.3768f, 336.018f, 86.3768f);
        path.quadTo(339.768f, 86.3768f, 345.969f, 89.2268f);
        path.quadTo(352.268f, 92.0768f, 355.018f, 92.0768f);
        path.quadTo(357.368f, 92.0768f, 359.319f, 90.9268f);
        path.quadTo(361.019f, 89.9268f, 361.019f, 88.9268f);
        path.quadTo(361.019f, 86.4268f, 356.469f, 83.7268f);
        path.lineTo(350.769f, 80.1268f);
        path.quadTo(345.354f, 73.3336f, 341.119f, 67.0268f);
        path.close();
        path.moveTo(236.573f, 84.0597f);
        path.lineTo(236.473f, 84.1597f);
        path.lineTo(236.323f, 84.0097f);
        path.lineTo(236.573f, 84.0597f);
        path.close();
    }

    private static Shader create_gradient_4()
    {
        int colors[] = {
            Color.argb(0, 153, 102, 51),
            Color.argb(255, 153, 102, 51)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_16(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_16(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_4();
        shader.setLocalMatrix(createMatrix(9.83411e-05f, 0.0381564f, -0.0460658f, 9.83411e-05f, 264.562f, 74.3924f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_17(Path path)
    {
        path.reset();
        path.moveTo(652.452f, 89.5839f);
        path.quadTo(795.702f, 72.3339f, 795.702f, 47.8839f);
        path.quadTo(795.702f, 23.4339f, 652.452f, 6.18389f);
        path.quadTo(509.202f, -11.0161f, 306.652f, -11.0161f);
        path.quadTo(104.102f, -11.0161f, -39.0975f, 6.18389f);
        path.quadTo(-182.298f, 23.4339f, -182.298f, 47.8839f);
        path.quadTo(-182.298f, 72.3339f, -39.0975f, 89.5839f);
        path.quadTo(104.102f, 106.834f, 306.652f, 106.834f);
        path.quadTo(509.238f, 106.847f, 652.452f, 89.5839f);
        path.close();
    }

    private static Shader create_gradient_5()
    {
        int colors[] = {
            Color.argb(0, 1, 1, 1),
            Color.argb(97, 0, 0, 0)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_17(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_17(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_5();
        shader.setLocalMatrix(createMatrix(2.80975e-05f, 0.0719857f, -0.0717328f, 1.40487e-05f, 315.799f, 14.2708f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_18(Path path)
    {
        path.reset();
        path.moveTo(-77.6148f, -12.8437f);
        path.lineTo(-77.6148f, -12.9937f);
        path.quadTo(-78.5148f, -13.6437f, -79.5148f, -13.9437f);
        path.lineTo(-82.5648f, -14.4937f);
        path.quadTo(-84.5148f, -14.4937f, -86.9148f, -13.0937f);
        path.lineTo(-87.8648f, -12.4437f);
        path.lineTo(-87.0648f, -11.3937f);
        path.quadTo(-84.8648f, -13.0937f, -80.0648f, -13.0937f);
        path.lineTo(-77.6148f, -12.8437f);
        path.close();
        path.moveTo(-116.975f, 5.24798f);
        path.lineTo(-116.425f, 5.24798f);
        path.lineTo(-116.425f, 5.04798f);
        path.lineTo(-116.975f, 5.24798f);
        path.close();
    }

    private static void draw_18(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_18(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 102, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_19(Path path)
    {
        path.reset();
        path.moveTo(-142.938f, 37.2883f);
        path.lineTo(-142.838f, 37.7383f);
        path.lineTo(-142.538f, 38.3883f);
        path.lineTo(-142.938f, 37.2883f);
        path.close();
    }

    private static void draw_19(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_19(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 204, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_20(Path path)
    {
        path.reset();
        path.moveTo(-142.524f, 38.3931f);
        path.lineTo(-34.224f, 38.3931f);
        path.quadTo(-33.674f, 37.5931f, -33.224f, 36.3931f);
        path.quadTo(-32.224f, 33.6931f, -32.224f, 30.6931f);
        path.quadTo(-32.224f, 27.8931f, -34.124f, 24.7931f);
        path.quadTo(-35.524f, 22.2931f, -37.724f, 20.1431f);
        path.lineTo(-38.374f, 20.1431f);
        path.quadTo(-38.374f, 14.3931f, -43.124f, 9.9931f);
        path.lineTo(-48.524f, 9.9931f);
        path.quadTo(-47.174f, 6.9931f, -47.174f, 4.1931f);
        path.quadTo(-47.174f, -0.0569029f, -51.224f, -4.2069f);
        path.quadTo(-55.874f, -8.9569f, -62.474f, -8.9569f);
        path.quadTo(-68.274f, -8.9569f, -71.474f, -7.3569f);
        path.lineTo(-72.374f, -6.8069f);
        path.quadTo(-73.174f, -11.5569f, -77.224f, -12.6569f);
        path.lineTo(-77.624f, -12.7569f);
        path.lineTo(-80.074f, -13.0069f);
        path.quadTo(-84.874f, -13.0069f, -87.074f, -11.3069f);
        path.quadTo(-88.674f, -10.0569f, -89.374f, -7.5069f);
        path.lineTo(-90.324f, -9.1069f);
        path.quadTo(-94.024f, -14.4069f, -101.024f, -14.4069f);
        path.quadTo(-109.124f, -14.4069f, -113.574f, -10.3569f);
        path.quadTo(-117.674f, -6.50691f, -117.674f, 0.143095f);
        path.quadTo(-117.674f, 2.69309f, -116.424f, 5.0431f);
        path.lineTo(-116.274f, 5.24309f);
        path.lineTo(-116.174f, 5.24309f);
        path.lineTo(-116.274f, 5.3931f);
        path.lineTo(-116.274f, 5.24309f);
        path.lineTo(-116.424f, 5.24309f);
        path.lineTo(-116.974f, 5.24309f);
        path.quadTo(-123.174f, 5.24309f, -127.174f, 8.6931f);
        path.quadTo(-131.174f, 12.1931f, -131.174f, 18.0931f);
        path.quadTo(-131.174f, 19.7431f, -129.974f, 23.0431f);
        path.lineTo(-131.924f, 22.8431f);
        path.quadTo(-137.924f, 22.8431f, -140.724f, 25.5431f);
        path.quadTo(-143.424f, 28.1931f, -143.424f, 33.6931f);
        path.quadTo(-143.424f, 35.5931f, -142.924f, 37.2931f);
        path.lineTo(-142.524f, 38.3931f);
        path.close();
    }

    private static void draw_20(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_20(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_21(Path path)
    {
        path.reset();
        path.moveTo(-87.8806f, -12.4294f);
        path.lineTo(-89.3806f, -10.9294f);
        path.quadTo(-92.2306f, -13.5294f, -94.5306f, -14.6794f);
        path.quadTo(-97.6306f, -16.1294f, -102.231f, -16.1294f);
        path.quadTo(-110.181f, -16.1294f, -115.931f, -10.2794f);
        path.quadTo(-121.331f, -4.82942f, -121.431f, 2.42058f);
        path.lineTo(-121.931f, 2.42058f);
        path.quadTo(-125.731f, 2.42058f, -129.381f, 7.22058f);
        path.quadTo(-132.231f, 10.9706f, -133.581f, 15.2706f);
        path.lineTo(-133.581f, 20.3706f);
        path.lineTo(-133.731f, 20.3706f);
        path.quadTo(-138.481f, 20.3706f, -142.381f, 25.1206f);
        path.quadTo(-146.181f, 29.5706f, -146.181f, 34.2706f);
        path.lineTo(-146.181f, 34.8206f);
        path.lineTo(-144.831f, 35.8206f);
        path.lineTo(-142.931f, 37.2206f);
        path.quadTo(-143.431f, 35.5206f, -143.431f, 33.6206f);
        path.quadTo(-143.431f, 28.1206f, -140.731f, 25.4706f);
        path.quadTo(-137.931f, 22.7706f, -131.931f, 22.7706f);
        path.lineTo(-129.981f, 22.9706f);
        path.quadTo(-131.181f, 19.6706f, -131.181f, 18.0206f);
        path.quadTo(-131.181f, 12.1206f, -127.181f, 8.62058f);
        path.quadTo(-123.181f, 5.17058f, -116.981f, 5.17058f);
        path.lineTo(-116.431f, 4.97058f);
        path.quadTo(-117.681f, 2.62058f, -117.681f, 0.0705812f);
        path.quadTo(-117.681f, -6.57942f, -113.581f, -10.4294f);
        path.quadTo(-109.131f, -14.4794f, -101.031f, -14.4794f);
        path.quadTo(-94.0306f, -14.4794f, -90.3306f, -9.17942f);
        path.lineTo(-89.3806f, -7.57942f);
        path.quadTo(-88.6806f, -10.1294f, -87.0806f, -11.3794f);
        path.lineTo(-87.8806f, -12.4294f);
        path.close();
    }

    private static void draw_21(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_21(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_22(Path path)
    {
        path.reset();
        path.moveTo(697.889f, -8.93077f);
        path.lineTo(697.889f, -9.08077f);
        path.quadTo(696.989f, -9.73077f, 695.939f, -10.0308f);
        path.lineTo(692.939f, -10.5308f);
        path.quadTo(690.989f, -10.5308f, 688.589f, -9.18077f);
        path.lineTo(687.639f, -8.53077f);
        path.lineTo(688.489f, -7.48077f);
        path.quadTo(690.639f, -9.18077f, 695.439f, -9.18077f);
        path.lineTo(697.889f, -8.93077f);
        path.close();
        path.moveTo(659.081f, 8.93077f);
        path.lineTo(658.531f, 9.18077f);
        path.lineTo(659.081f, 9.18077f);
        path.lineTo(659.081f, 8.93077f);
        path.close();
    }

    private static void draw_22(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_22(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 102, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_23(Path path)
    {
        path.reset();
        path.moveTo(632.565f, 41.1552f);
        path.lineTo(632.715f, 41.6052f);
        path.lineTo(632.965f, 42.3052f);
        path.lineTo(632.565f, 41.1552f);
        path.close();
    }

    private static void draw_23(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_23(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 204, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_24(Path path)
    {
        path.reset();
        path.moveTo(632.98f, 42.3061f);
        path.lineTo(741.28f, 42.3061f);
        path.lineTo(742.28f, 40.2561f);
        path.quadTo(743.23f, 37.5561f, 743.23f, 34.5061f);
        path.quadTo(743.23f, 31.8061f, 741.33f, 28.6561f);
        path.quadTo(739.98f, 26.1061f, 737.83f, 23.9561f);
        path.lineTo(737.13f, 23.9561f);
        path.quadTo(737.13f, 18.2561f, 732.38f, 13.9061f);
        path.lineTo(726.98f, 13.9061f);
        path.quadTo(728.33f, 10.8561f, 728.33f, 8.10606f);
        path.quadTo(728.33f, 3.75606f, 724.28f, -0.343939f);
        path.quadTo(719.58f, -5.09394f, 713.03f, -5.09394f);
        path.quadTo(707.23f, -5.09394f, 704.03f, -3.44394f);
        path.lineTo(703.08f, -2.89394f);
        path.quadTo(702.28f, -7.64394f, 698.33f, -8.74394f);
        path.lineTo(697.88f, -8.89394f);
        path.lineTo(695.43f, -9.14394f);
        path.quadTo(690.63f, -9.14394f, 688.48f, -7.44394f);
        path.quadTo(686.83f, -6.19394f, 686.18f, -3.64394f);
        path.lineTo(685.18f, -5.19394f);
        path.quadTo(681.479f, -10.4939f, 674.43f, -10.4939f);
        path.quadTo(666.33f, -10.4939f, 661.93f, -6.44394f);
        path.quadTo(657.779f, -2.64394f, 657.779f, 4.05606f);
        path.quadTo(657.779f, 6.50606f, 659.079f, 8.90606f);
        path.lineTo(659.229f, 9.15606f);
        path.lineTo(659.279f, 9.15606f);
        path.lineTo(659.229f, 9.25606f);
        path.lineTo(659.229f, 9.15606f);
        path.lineTo(659.079f, 9.15606f);
        path.lineTo(658.529f, 9.15606f);
        path.quadTo(652.329f, 9.15606f, 648.329f, 12.5561f);
        path.quadTo(644.279f, 16.0561f, 644.279f, 22.0061f);
        path.quadTo(644.279f, 23.6561f, 645.529f, 26.9061f);
        path.lineTo(643.579f, 26.7061f);
        path.quadTo(637.579f, 26.7061f, 634.779f, 29.4561f);
        path.quadTo(632.079f, 32.0561f, 632.079f, 37.5561f);
        path.quadTo(632.079f, 39.4561f, 632.579f, 41.1561f);
        path.lineTo(632.98f, 42.3061f);
        path.close();
    }

    private static void draw_24(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_24(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_25(Path path)
    {
        path.reset();
        path.moveTo(687.623f, -8.51645f);
        path.lineTo(686.173f, -6.96645f);
        path.quadTo(683.273f, -9.61645f, 680.973f, -10.7665f);
        path.quadTo(677.873f, -12.1665f, 673.273f, -12.1665f);
        path.quadTo(665.323f, -12.1665f, 659.523f, -6.36645f);
        path.quadTo(654.223f, -0.916452f, 654.073f, 6.33355f);
        path.lineTo(653.573f, 6.33355f);
        path.quadTo(649.773f, 6.33355f, 646.123f, 11.0835f);
        path.quadTo(643.273f, 14.8835f, 641.923f, 19.1835f);
        path.lineTo(641.923f, 24.3335f);
        path.lineTo(641.773f, 24.3335f);
        path.quadTo(637.023f, 24.3335f, 633.123f, 29.0335f);
        path.quadTo(629.323f, 33.5335f, 629.323f, 38.2335f);
        path.lineTo(629.323f, 38.7835f);
        path.lineTo(630.673f, 39.7335f);
        path.lineTo(632.573f, 41.1335f);
        path.quadTo(632.073f, 39.4335f, 632.073f, 37.5335f);
        path.quadTo(632.073f, 32.0335f, 634.773f, 29.4335f);
        path.quadTo(637.573f, 26.6835f, 643.573f, 26.6835f);
        path.lineTo(645.523f, 26.8835f);
        path.quadTo(644.273f, 23.6335f, 644.273f, 21.9835f);
        path.quadTo(644.273f, 16.0335f, 648.323f, 12.5335f);
        path.quadTo(652.323f, 9.13355f, 658.523f, 9.13355f);
        path.lineTo(659.073f, 8.88355f);
        path.quadTo(657.773f, 6.48355f, 657.773f, 4.03355f);
        path.quadTo(657.773f, -2.66645f, 661.923f, -6.46645f);
        path.quadTo(666.323f, -10.5165f, 674.423f, -10.5165f);
        path.quadTo(681.473f, -10.5165f, 685.173f, -5.21645f);
        path.lineTo(686.173f, -3.66645f);
        path.quadTo(686.823f, -6.21645f, 688.473f, -7.46645f);
        path.lineTo(687.623f, -8.51645f);
        path.close();
    }

    private static void draw_25(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_25(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_26(Path path)
    {
        path.reset();
        path.moveTo(496.394f, -222.395f);
        path.lineTo(497.994f, -222.945f);
        path.lineTo(496.944f, -223.495f);
        path.lineTo(496.394f, -222.395f);
        path.close();
        path.moveTo(-53.5846f, -39.4059f);
        path.lineTo(-53.9346f, -38.8059f);
        path.lineTo(-52.8346f, -39.2059f);
        path.lineTo(-53.5846f, -39.4059f);
        path.close();
    }

    private static void draw_26(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_26(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_27(Path path)
    {
        path.reset();
        path.moveTo(656.826f, -57.4515f);
        path.lineTo(656.826f, -57.4515f);
        path.lineTo(656.626f, -57.4515f);
        path.lineTo(656.826f, -57.4515f);
        path.close();
        path.moveTo(446.032f, -259.222f);
        path.lineTo(446.082f, -259.122f);
        path.lineTo(446.082f, -259.372f);
        path.lineTo(446.032f, -259.222f);
        path.close();
    }

    private static void draw_27(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_27(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 102, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_28(Path path)
    {
        path.reset();
        path.moveTo(557.989f, -118.264f);
        path.lineTo(558.439f, -118.214f);
        path.lineTo(558.739f, -118.214f);
        path.lineTo(557.989f, -118.264f);
        path.close();
        path.moveTo(615.578f, 2.85416f);
        path.quadTo(615.078f, 2.50416f, 614.578f, 2.45416f);
        path.lineTo(614.578f, 2.85416f);
        path.lineTo(615.578f, 2.85416f);
        path.close();
    }

    private static void draw_28(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_28(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 204, 153, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_29(Path path)
    {
        path.reset();
        path.moveTo(463.986f, -253.468f);
        path.lineTo(464.036f, -253.568f);
        path.lineTo(463.986f, -253.568f);
        path.lineTo(463.986f, -253.468f);
        path.close();
        path.moveTo(446.078f, -259.13f);
        path.lineTo(447.378f, -259.08f);
        path.lineTo(446.078f, -259.38f);
        path.lineTo(446.078f, -259.13f);
        path.close();
        path.moveTo(111.266f, -274.966f);
        path.lineTo(111.266f, -275.016f);
        path.lineTo(110.566f, -274.966f);
        path.lineTo(111.266f, -274.966f);
        path.close();
    }

    private static void draw_29(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_29(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 218, 188, 46));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_30(Path path)
    {
        path.reset();
        path.moveTo(570.28f, -158.958f);
        path.lineTo(570.93f, -130.758f);
        path.quadTo(577.88f, -133.458f, 584.68f, -133.708f);
        path.lineTo(588.28f, -133.808f);
        path.quadTo(597.58f, -133.358f, 606.88f, -128.908f);
        path.lineTo(607.18f, -128.758f);
        path.quadTo(611.93f, -126.308f, 616.83f, -122.858f);
        path.lineTo(600.68f, -203.858f);
        path.lineTo(570.28f, -158.958f);
        path.close();
        path.moveTo(497.959f, -222.947f);
        path.quadTo(513.809f, -228.447f, 528.609f, -228.197f);
        path.quadTo(541.759f, -228.097f, 554.259f, -223.297f);
        path.lineTo(557.709f, -221.997f);
        path.lineTo(559.959f, -220.797f);
        path.quadTo(564.409f, -218.797f, 568.809f, -216.097f);
        path.lineTo(534.009f, -305.847f);
        path.lineTo(518.059f, -270.547f);
        path.lineTo(518.059f, -270.547f);
        path.lineTo(496.909f, -223.497f);
        path.lineTo(497.959f, -222.947f);
        path.close();
        path.moveTo(397.373f, -240.118f);
        path.lineTo(390.823f, -257.318f);
        path.lineTo(362.623f, -331.518f);
        path.lineTo(318.673f, -247.168f);
        path.quadTo(335.073f, -251.568f, 350.823f, -251.368f);
        path.quadTo(369.173f, -251.018f, 386.823f, -244.768f);
        path.lineTo(389.723f, -243.568f);
        path.lineTo(397.373f, -240.118f);
        path.close();
        path.moveTo(607.2f, -41.7536f);
        path.lineTo(588.5f, -111.004f);
        path.lineTo(556.2f, -44.3536f);
        path.quadTo(570.6f, -48.6536f, 584.9f, -47.3036f);
        path.lineTo(592.6f, -46.0536f);
        path.lineTo(596.8f, -45.1036f);
        path.quadTo(600.25f, -44.3036f, 603.65f, -43.0036f);
        path.lineTo(603.9f, -43.0036f);
        path.lineTo(607.2f, -41.7536f);
        path.close();
        path.moveTo(114.351f, -69.1444f);
        path.lineTo(79.5007f, -165.394f);
        path.lineTo(47.1007f, -76.6944f);
        path.quadTo(54.9007f, -78.3944f, 62.4007f, -79.0444f);
        path.lineTo(73.3007f, -79.4944f);
        path.quadTo(84.6507f, -79.3944f, 95.3007f, -76.6944f);
        path.lineTo(99.1507f, -75.4944f);
        path.quadTo(104.051f, -73.9444f, 108.901f, -71.8444f);
        path.lineTo(114.351f, -69.1444f);
        path.close();
        path.moveTo(35.3548f, -160.57f);
        path.lineTo(28.9548f, -168.27f);
        path.lineTo(28.7548f, -168.32f);
        path.lineTo(-0.845207f, -203.77f);
        path.lineTo(-30.1452f, -132.32f);
        path.quadTo(-18.6452f, -141.22f, -6.69521f, -146.92f);
        path.quadTo(5.35479f, -152.72f, 17.9548f, -155.32f);
        path.lineTo(18.2048f, -155.37f);
        path.lineTo(19.1548f, -155.57f);
        path.lineTo(28.5048f, -156.82f);
        path.lineTo(30.4548f, -157.02f);
        path.lineTo(35.4548f, -157.32f);
        path.lineTo(37.8548f, -157.32f);
        path.lineTo(35.3548f, -160.57f);
        path.close();
        path.moveTo(-25.2732f, -86.4995f);
        path.lineTo(-27.0232f, -103.35f);
        path.lineTo(-53.4232f, -39.8995f);
        path.lineTo(-52.0232f, -39.3495f);
        path.lineTo(-48.3731f, -40.1495f);
        path.lineTo(-42.3731f, -40.7995f);
        path.lineTo(-39.5732f, -40.8495f);
        path.lineTo(-32.4732f, -39.9995f);
        path.lineTo(-30.7732f, -39.4496f);
        path.quadTo(-28.5732f, -38.8496f, -26.5732f, -37.8496f);
        path.lineTo(-24.5732f, -36.7496f);
        path.lineTo(-23.5232f, -36.0996f);
        path.lineTo(-22.1232f, -35.2496f);
        path.lineTo(-21.8232f, -35.0496f);
        path.lineTo(-19.6232f, -35.2996f);
        path.lineTo(-24.5732f, -80.5996f);
        path.lineTo(-25.2732f, -86.4995f);
        path.close();
        path.moveTo(-53.5846f, -39.4059f);
        path.lineTo(-52.8346f, -39.2059f);
        path.lineTo(-53.5346f, -39.4559f);
        path.lineTo(-53.5846f, -39.4059f);
        path.close();
    }

    private static void draw_30(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_30(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_31(Path path)
    {
        path.reset();
        path.moveTo(475.034f, -181.608f);
        path.lineTo(469.784f, -181.708f);
        path.lineTo(469.634f, -181.708f);
        path.lineTo(462.784f, -181.958f);
        path.lineTo(458.634f, -182.008f);
        path.lineTo(458.084f, -179.058f);
        path.lineTo(457.934f, -177.058f);
        path.lineTo(458.034f, -175.558f);
        path.lineTo(458.034f, -175.308f);
        path.lineTo(458.934f, -175.308f);
        path.lineTo(459.834f, -175.158f);
        path.lineTo(467.434f, -174.558f);
        path.lineTo(468.034f, -174.558f);
        path.lineTo(472.384f, -174.108f);
        path.lineTo(474.734f, -174.058f);
        path.lineTo(475.634f, -173.958f);
        path.lineTo(475.034f, -181.608f);
        path.close();
        path.moveTo(399.997f, -138.151f);
        path.lineTo(399.897f, -145.451f);
        path.lineTo(381.447f, -145.451f);
        path.quadTo(381.547f, -144.001f, 381.947f, -142.201f);
        path.lineTo(382.247f, -139.901f);
        path.lineTo(385.547f, -139.901f);
        path.lineTo(392.697f, -138.701f);
        path.lineTo(396.047f, -138.351f);
        path.lineTo(399.947f, -138.151f);
        path.lineTo(399.997f, -138.151f);
        path.close();
        path.moveTo(556.24f, -8.88473f);
        path.lineTo(556.24f, -2.78473f);
        path.lineTo(561.19f, -3.03473f);
        path.lineTo(563.64f, -3.08473f);
        path.lineTo(565.09f, -3.28473f);
        path.lineTo(565.04f, -4.03473f);
        path.lineTo(564.79f, -7.93473f);
        path.lineTo(564.59f, -8.68473f);
        path.lineTo(556.24f, -8.88473f);
        path.close();
        path.moveTo(668.657f, 3.86693f);
        path.lineTo(664.507f, 3.41693f);
        path.lineTo(663.357f, 3.36693f);
        path.lineTo(660.607f, 2.86693f);
        path.lineTo(660.457f, 3.86693f);
        path.lineTo(660.457f, 4.61693f);
        path.lineTo(660.407f, 9.01693f);
        path.lineTo(662.007f, 9.26693f);
        path.lineTo(664.507f, 9.76693f);
        path.lineTo(668.657f, 10.1669f);
        path.lineTo(668.657f, 3.86693f);
        path.close();
        path.moveTo(194.451f, -159.143f);
        path.lineTo(193.601f, -169.593f);
        path.lineTo(187.951f, -168.893f);
        path.lineTo(174.201f, -167.593f);
        path.lineTo(171.951f, -167.443f);
        path.lineTo(170.301f, -167.593f);
        path.lineTo(170.601f, -163.293f);
        path.lineTo(170.801f, -161.743f);
        path.lineTo(170.951f, -158.993f);
        path.quadTo(175.401f, -158.643f, 182.701f, -158.893f);
        path.lineTo(187.051f, -158.993f);
        path.lineTo(192.951f, -159.143f);
        path.lineTo(194.451f, -159.143f);
        path.close();
        path.moveTo(202.6f, -62.9297f);
        path.lineTo(201.85f, -71.2297f);
        path.lineTo(201.4f, -71.2297f);
        path.lineTo(196.25f, -70.4797f);
        path.lineTo(188.85f, -69.4297f);
        path.lineTo(188.7f, -69.4297f);
        path.lineTo(183.95f, -68.7797f);
        path.lineTo(181.1f, -68.3297f);
        path.lineTo(171.45f, -67.0797f);
        path.lineTo(172.25f, -64.2297f);
        path.lineTo(173.1f, -61.5797f);
        path.lineTo(173.85f, -59.1797f);
        path.lineTo(177.15f, -59.7797f);
        path.lineTo(180.15f, -60.1797f);
        path.lineTo(185.7f, -60.9797f);
        path.lineTo(186.0f, -60.9797f);
        path.lineTo(190.75f, -61.6297f);
        path.lineTo(198.15f, -62.6297f);
        path.lineTo(202.6f, -62.9297f);
        path.close();
        path.moveTo(110.254f, -30.291f);
        path.lineTo(111.004f, -36.991f);
        path.lineTo(109.604f, -37.091f);
        path.lineTo(104.204f, -37.891f);
        path.lineTo(104.204f, -31.491f);
        path.lineTo(104.604f, -31.441f);
        path.lineTo(107.804f, -30.841f);
        path.lineTo(108.704f, -30.591f);
        path.lineTo(110.254f, -30.291f);
        path.close();
        path.moveTo(-24.5826f, -80.5611f);
        path.lineTo(-22.7326f, -80.8611f);
        path.lineTo(-21.7826f, -81.0611f);
        path.lineTo(-15.0826f, -82.6111f);
        path.lineTo(-14.8326f, -82.8111f);
        path.lineTo(-13.5326f, -83.1111f);
        path.lineTo(-7.13263f, -84.7611f);
        path.lineTo(-8.03263f, -89.6611f);
        path.lineTo(-8.13263f, -90.3611f);
        path.lineTo(-8.38263f, -91.8111f);
        path.lineTo(-8.43263f, -91.7111f);
        path.lineTo(-14.7326f, -89.8611f);
        path.quadTo(-15.3326f, -89.5611f, -16.0326f, -89.3611f);
        path.lineTo(-16.9326f, -89.0111f);
        path.quadTo(-20.1326f, -87.9111f, -22.4826f, -87.2611f);
        path.lineTo(-25.2826f, -86.4611f);
        path.lineTo(-24.5826f, -80.5611f);
        path.close();
        path.moveTo(-14.1787f, 15.2375f);
        path.lineTo(-14.8287f, 8.53755f);
        path.lineTo(-24.0787f, 8.93755f);
        path.lineTo(-35.0287f, 9.43755f);
        path.lineTo(-33.2787f, 16.2875f);
        path.lineTo(-24.0787f, 15.8375f);
        path.lineTo(-14.1787f, 15.2375f);
        path.close();
        path.moveTo(9.85147f, -52.9401f);
        path.lineTo(10.1015f, -51.7901f);
        path.lineTo(11.2015f, -46.5901f);
        path.lineTo(13.4515f, -46.5901f);
        path.lineTo(24.3015f, -48.4401f);
        path.lineTo(26.6515f, -48.7901f);
        path.lineTo(25.9015f, -52.4401f);
        path.lineTo(24.9515f, -56.6401f);
        path.lineTo(17.9015f, -55.4901f);
        path.lineTo(13.5515f, -54.5901f);
        path.lineTo(12.2015f, -54.3401f);
        path.lineTo(9.70147f, -53.6901f);
        path.lineTo(9.85147f, -52.9401f);
        path.close();
        path.moveTo(5.06384f, -54.4132f);
        path.lineTo(9.31384f, -54.6632f);
        path.quadTo(9.16384f, -55.3132f, 9.31384f, -55.7132f);
        path.lineTo(8.76384f, -58.6132f);
        path.lineTo(8.56384f, -61.3632f);
        path.lineTo(2.26384f, -60.3632f);
        path.lineTo(-4.73616f, -59.1132f);
        path.lineTo(-6.93616f, -58.6632f);
        path.lineTo(-6.38616f, -56.6132f);
        path.lineTo(-6.33616f, -56.2632f);
        path.lineTo(-5.73616f, -53.3132f);
        path.lineTo(5.06384f, -54.4132f);
        path.close();
        path.moveTo(58.2341f, -22.465f);
        path.lineTo(57.7341f, -22.615f);
        path.lineTo(52.8841f, -23.515f);
        path.lineTo(46.8841f, -24.915f);
        path.lineTo(46.8841f, -15.315f);
        path.lineTo(64.1841f, -15.315f);
        path.lineTo(63.2841f, -21.465f);
        path.lineTo(58.2341f, -22.465f);
        path.close();
        path.moveTo(141.051f, -130.049f);
        path.lineTo(142.951f, -130.299f);
        path.lineTo(148.651f, -130.699f);
        path.lineTo(154.451f, -131.349f);
        path.lineTo(166.051f, -132.249f);
        path.lineTo(165.151f, -137.599f);
        path.lineTo(164.851f, -139.299f);
        path.lineTo(157.851f, -138.199f);
        path.lineTo(157.351f, -138.049f);
        path.lineTo(148.251f, -136.749f);
        path.lineTo(141.351f, -136.399f);
        path.lineTo(139.401f, -136.449f);
        path.lineTo(140.101f, -134.399f);
        path.lineTo(141.051f, -130.049f);
        path.close();
        path.moveTo(312.347f, -153.803f);
        path.lineTo(313.347f, -153.803f);
        path.lineTo(314.647f, -153.803f);
        path.lineTo(321.397f, -154.353f);
        path.lineTo(328.647f, -154.803f);
        path.lineTo(328.147f, -160.103f);
        path.lineTo(312.847f, -160.103f);
        path.lineTo(312.347f, -153.803f);
        path.close();
        path.moveTo(438.62f, -164.391f);
        path.lineTo(438.17f, -164.391f);
        path.lineTo(435.57f, -164.141f);
        path.lineTo(427.92f, -163.791f);
        path.lineTo(428.82f, -159.291f);
        path.lineTo(429.07f, -159.291f);
        path.lineTo(430.22f, -159.241f);
        path.lineTo(430.97f, -159.241f);
        path.lineTo(432.72f, -159.241f);
        path.lineTo(434.47f, -159.291f);
        path.lineTo(436.77f, -159.591f);
        path.lineTo(440.92f, -160.141f);
        path.lineTo(444.52f, -160.591f);
        path.lineTo(445.07f, -160.741f);
        path.lineTo(445.07f, -165.091f);
        path.lineTo(444.87f, -165.041f);
        path.lineTo(442.32f, -164.791f);
        path.lineTo(440.02f, -164.641f);
        path.lineTo(438.62f, -164.391f);
        path.close();
        path.moveTo(327.814f, -134.422f);
        path.lineTo(335.214f, -133.922f);
        path.lineTo(335.564f, -133.922f);
        path.lineTo(336.314f, -133.822f);
        path.lineTo(337.464f, -133.722f);
        path.lineTo(341.514f, -133.172f);
        path.lineTo(341.514f, -137.722f);
        path.lineTo(341.364f, -137.722f);
        path.lineTo(335.914f, -138.172f);
        path.lineTo(327.814f, -138.722f);
        path.lineTo(327.814f, -134.422f);
        path.close();
        path.moveTo(366.576f, -87.7885f);
        path.lineTo(366.676f, -85.0385f);
        path.lineTo(366.926f, -82.5385f);
        path.lineTo(366.926f, -82.2885f);
        path.lineTo(371.826f, -82.2885f);
        path.lineTo(383.676f, -80.7385f);
        path.lineTo(383.676f, -87.7885f);
        path.lineTo(366.576f, -87.7885f);
        path.close();
        path.moveTo(558.725f, -118.218f);
        path.lineTo(566.775f, -117.218f);
        path.lineTo(566.575f, -119.868f);
        path.lineTo(566.525f, -121.268f);
        path.lineTo(566.375f, -123.068f);
        path.lineTo(566.325f, -123.718f);
        path.lineTo(558.725f, -124.418f);
        path.lineTo(552.625f, -124.868f);
        path.lineTo(551.975f, -124.868f);
        path.lineTo(551.975f, -124.568f);
        path.lineTo(552.225f, -119.618f);
        path.lineTo(552.275f, -119.018f);
        path.lineTo(557.975f, -118.268f);
        path.lineTo(558.725f, -118.218f);
        path.close();
        path.moveTo(510.205f, -139.67f);
        path.quadTo(510.255f, -138.72f, 510.655f, -137.57f);
        path.lineTo(511.055f, -135.57f);
        path.lineTo(511.205f, -135.17f);
        path.lineTo(522.455f, -134.67f);
        path.lineTo(525.905f, -134.67f);
        path.lineTo(527.055f, -134.82f);
        path.lineTo(527.055f, -135.17f);
        path.lineTo(526.655f, -139.92f);
        path.lineTo(526.555f, -140.37f);
        path.lineTo(526.405f, -142.82f);
        path.lineTo(525.355f, -142.62f);
        path.quadTo(519.705f, -141.62f, 517.505f, -140.87f);
        path.lineTo(509.805f, -140.87f);
        path.lineTo(510.205f, -139.67f);
        path.close();
        path.moveTo(614.566f, 2.85416f);
        path.lineTo(614.566f, 7.50416f);
        path.lineTo(619.216f, 7.50416f);
        path.lineTo(621.016f, 8.50416f);
        path.lineTo(621.766f, 8.75416f);
        path.quadTo(623.466f, 9.45416f, 625.266f, 9.85416f);
        path.lineTo(625.416f, 7.95416f);
        path.lineTo(625.416f, 6.90416f);
        path.lineTo(625.516f, 5.55416f);
        path.lineTo(615.566f, 2.85416f);
        path.lineTo(614.566f, 2.85416f);
        path.close();
        path.moveTo(645.823f, 27.667f);
        path.lineTo(656.623f, 27.667f);
        path.lineTo(656.323f, 23.867f);
        path.lineTo(656.223f, 23.217f);
        path.lineTo(656.173f, 23.217f);
        path.quadTo(653.173f, 21.867f, 649.273f, 21.867f);
        path.lineTo(645.823f, 22.067f);
        path.lineTo(645.823f, 27.667f);
        path.close();
        path.moveTo(570.05f, 6.67506f);
        path.lineTo(566.9f, 6.62506f);
        path.lineTo(566.9f, 10.5251f);
        path.lineTo(575.25f, 11.5251f);
        path.lineTo(576.2f, 11.7251f);
        path.lineTo(578.6f, 11.8251f);
        path.lineTo(578.45f, 9.77506f);
        path.lineTo(578.45f, 9.47506f);
        path.lineTo(578.15f, 6.97506f);
        path.lineTo(574.45f, 6.67506f);
        path.lineTo(570.05f, 6.67506f);
        path.close();
        path.moveTo(76.0036f, 8.8387f);
        path.quadTo(75.5536f, 7.6887f, 75.5036f, 6.3887f);
        path.lineTo(75.1036f, 4.0387f);
        path.lineTo(72.7536f, 4.1387f);
        path.lineTo(69.6036f, 4.2887f);
        path.lineTo(68.7036f, 4.3887f);
        path.lineTo(62.9036f, 4.7387f);
        path.lineTo(60.6036f, 4.7887f);
        path.lineTo(60.9536f, 7.0387f);
        path.lineTo(61.1536f, 8.2887f);
        path.lineTo(61.2036f, 8.5387f);
        path.lineTo(68.9536f, 8.2887f);
        path.lineTo(76.0036f, 8.8387f);
        path.close();
    }

    private static void draw_31(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_31(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 74, 132, 174));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_32(Path path)
    {
        path.reset();
        path.moveTo(656.826f, -57.4515f);
        path.lineTo(656.626f, -57.4515f);
        path.lineTo(653.626f, -53.4015f);
        path.lineTo(653.626f, -42.8015f);
        path.lineTo(656.826f, -42.8015f);
        path.lineTo(656.826f, -57.4515f);
        path.close();
        path.moveTo(629.297f, -47.8302f);
        path.lineTo(631.547f, -46.6302f);
        path.lineTo(636.247f, -68.4802f);
        path.lineTo(632.247f, -64.7803f);
        path.lineTo(629.297f, -47.8302f);
        path.close();
        path.moveTo(569.958f, -171.342f);
        path.lineTo(570.258f, -158.992f);
        path.lineTo(600.658f, -203.892f);
        path.lineTo(594.708f, -201.792f);
        path.lineTo(569.958f, -171.342f);
        path.close();
        path.moveTo(504.036f, -162.043f);
        path.lineTo(496.386f, -222.393f);
        path.lineTo(496.936f, -223.493f);
        path.lineTo(518.086f, -270.543f);
        path.lineTo(518.086f, -270.543f);
        path.lineTo(534.036f, -305.843f);
        path.lineTo(529.636f, -303.543f);
        path.lineTo(490.936f, -229.293f);
        path.lineTo(498.386f, -162.043f);
        path.lineTo(504.036f, -162.043f);
        path.close();
        path.moveTo(491.791f, -151.915f);
        path.lineTo(494.591f, -151.915f);
        path.lineTo(494.591f, -162.015f);
        path.lineTo(491.791f, -160.115f);
        path.lineTo(491.791f, -151.915f);
        path.close();
        path.moveTo(457.909f, -247.806f);
        path.lineTo(457.909f, -239.856f);
        path.lineTo(465.209f, -235.206f);
        path.lineTo(463.959f, -253.456f);
        path.lineTo(457.909f, -247.806f);
        path.close();
        path.moveTo(441.383f, -239.888f);
        path.lineTo(444.432f, -239.888f);
        path.lineTo(446.082f, -259.138f);
        path.lineTo(446.033f, -259.238f);
        path.lineTo(441.383f, -255.838f);
        path.lineTo(441.383f, -239.888f);
        path.close();
        path.moveTo(409.849f, -239.888f);
        path.lineTo(414.849f, -239.888f);
        path.lineTo(414.849f, -261.488f);
        path.lineTo(409.349f, -261.488f);
        path.lineTo(409.849f, -239.888f);
        path.close();
        path.moveTo(136.355f, -275.012f);
        path.lineTo(132.655f, -272.062f);
        path.lineTo(129.555f, -253.612f);
        path.lineTo(134.105f, -253.612f);
        path.lineTo(136.355f, -275.012f);
        path.close();
        path.moveTo(173.828f, -269.258f);
        path.lineTo(169.328f, -265.458f);
        path.lineTo(169.228f, -247.308f);
        path.lineTo(173.828f, -245.858f);
        path.lineTo(173.828f, -269.258f);
        path.close();
        path.moveTo(362.617f, -331.543f);
        path.lineTo(356.217f, -329.193f);
        path.lineTo(313.967f, -252.643f);
        path.lineTo(309.567f, -199.893f);
        path.lineTo(309.567f, -199.743f);
        path.lineTo(297.517f, -50.4433f);
        path.lineTo(305.417f, -50.1933f);
        path.lineTo(312.317f, -153.843f);
        path.lineTo(312.817f, -160.143f);
        path.lineTo(315.717f, -202.743f);
        path.lineTo(315.717f, -202.893f);
        path.lineTo(318.667f, -247.193f);
        path.lineTo(362.617f, -331.543f);
        path.close();
        path.moveTo(82.7707f, -248.588f);
        path.lineTo(85.9207f, -249.188f);
        path.lineTo(85.9207f, -271.538f);
        path.lineTo(81.3207f, -268.988f);
        path.lineTo(82.7707f, -248.588f);
        path.close();
        path.moveTo(37.8867f, -157.347f);
        path.lineTo(37.8867f, -255.847f);
        path.lineTo(30.8367f, -252.647f);
        path.lineTo(35.3867f, -160.597f);
        path.lineTo(37.8867f, -157.347f);
        path.close();
        path.moveTo(-27.0225f, -103.302f);
        path.lineTo(-30.1725f, -132.302f);
        path.lineTo(-0.87248f, -203.752f);
        path.lineTo(-8.12248f, -200.202f);
        path.lineTo(-35.0225f, -130.952f);
        path.lineTo(-32.3225f, -106.002f);
        path.lineTo(-59.2725f, -34.8023f);
        path.lineTo(-58.6725f, -30.9023f);
        path.lineTo(-58.6725f, -30.8023f);
        path.lineTo(-52.4225f, 5.69773f);
        path.lineTo(-49.3225f, 5.69773f);
        path.lineTo(-53.9225f, -38.8023f);
        path.lineTo(-53.5725f, -39.4023f);
        path.lineTo(-53.5225f, -39.4523f);
        path.lineTo(-53.4225f, -39.8523f);
        path.lineTo(-27.0225f, -103.302f);
        path.close();
        path.moveTo(-69.881f, 24.9969f);
        path.lineTo(-65.231f, 24.9969f);
        path.lineTo(-65.231f, 5.74694f);
        path.lineTo(-69.881f, 12.1469f);
        path.lineTo(-69.881f, 24.9969f);
        path.close();
        path.moveTo(-97.4559f, 57.0372f);
        path.lineTo(-97.4559f, 7.53723f);
        path.lineTo(-80.8559f, 7.53723f);
        path.lineTo(-93.9559f, 3.88723f);
        path.lineTo(-103.306f, 3.88723f);
        path.lineTo(-99.9559f, 54.2872f);
        path.lineTo(-97.4559f, 57.0372f);
        path.close();
    }

    private static void draw_32(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_32(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_33(Path path)
    {
        path.reset();
        path.moveTo(-19.3807f, -33.1912f);
        path.lineTo(-19.6307f, -35.2912f);
        path.lineTo(-21.8307f, -35.0412f);
        path.lineTo(-19.3807f, -33.1912f);
        path.close();
        path.moveTo(-53.4005f, -39.8662f);
        path.lineTo(-53.5005f, -39.4662f);
        path.lineTo(-52.8005f, -39.2162f);
        path.lineTo(-52.0005f, -39.3162f);
        path.lineTo(-53.4005f, -39.8662f);
        path.close();
    }

    private static void draw_33(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_33(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 92, 176));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_34(Path path)
    {
        path.reset();
        path.moveTo(399.859f, -145.47f);
        path.lineTo(397.359f, -240.12f);
        path.lineTo(389.709f, -243.57f);
        path.lineTo(386.809f, -244.77f);
        path.quadTo(369.159f, -251.02f, 350.809f, -251.37f);
        path.quadTo(335.059f, -251.57f, 318.659f, -247.17f);
        path.lineTo(315.709f, -202.87f);
        path.lineTo(315.709f, -202.72f);
        path.lineTo(312.809f, -160.12f);
        path.lineTo(328.109f, -160.12f);
        path.lineTo(328.609f, -154.82f);
        path.lineTo(321.359f, -154.37f);
        path.lineTo(314.609f, -153.82f);
        path.lineTo(313.309f, -153.82f);
        path.lineTo(312.309f, -153.82f);
        path.lineTo(305.409f, -50.1702f);
        path.lineTo(296.509f, 56.9798f);
        path.lineTo(405.109f, 56.9798f);
        path.lineTo(399.959f, -138.17f);
        path.lineTo(399.909f, -138.17f);
        path.lineTo(396.009f, -138.37f);
        path.lineTo(392.659f, -138.72f);
        path.lineTo(385.509f, -139.92f);
        path.lineTo(382.209f, -139.92f);
        path.lineTo(381.909f, -142.22f);
        path.quadTo(381.509f, -144.02f, 381.409f, -145.47f);
        path.lineTo(399.859f, -145.47f);
        path.close();
        path.moveTo(556.24f, -2.76209f);
        path.lineTo(556.24f, 56.9879f);
        path.lineTo(598.24f, 56.9879f);
        path.lineTo(607.24f, -41.7621f);
        path.lineTo(603.94f, -43.0121f);
        path.lineTo(603.69f, -43.0121f);
        path.quadTo(600.29f, -44.3121f, 596.84f, -45.1121f);
        path.lineTo(592.64f, -46.0621f);
        path.lineTo(584.94f, -47.3121f);
        path.quadTo(570.64f, -48.6621f, 556.24f, -44.3621f);
        path.lineTo(556.24f, -8.86209f);
        path.lineTo(564.589f, -8.66209f);
        path.lineTo(564.789f, -7.91209f);
        path.lineTo(565.039f, -4.01209f);
        path.lineTo(565.089f, -3.26209f);
        path.lineTo(563.639f, -3.06209f);
        path.lineTo(561.189f, -3.01209f);
        path.lineTo(556.24f, -2.76209f);
        path.close();
        path.moveTo(47.1397f, -76.6941f);
        path.lineTo(45.1897f, -71.2441f);
        path.lineTo(38.0897f, -157.344f);
        path.lineTo(37.8897f, -157.344f);
        path.lineTo(35.4897f, -157.344f);
        path.lineTo(30.4897f, -157.044f);
        path.lineTo(28.5397f, -156.844f);
        path.lineTo(19.1897f, -155.594f);
        path.lineTo(18.2397f, -155.394f);
        path.lineTo(17.9897f, -155.344f);
        path.quadTo(5.38972f, -152.744f, -6.66028f, -146.944f);
        path.quadTo(-18.6103f, -141.244f, -30.1103f, -132.344f);
        path.lineTo(-26.9603f, -103.344f);
        path.lineTo(-25.2103f, -86.4941f);
        path.lineTo(-22.4103f, -87.2941f);
        path.quadTo(-20.0603f, -87.9441f, -16.8603f, -89.0441f);
        path.lineTo(-15.9603f, -89.3941f);
        path.quadTo(-15.2603f, -89.5941f, -14.6603f, -89.8941f);
        path.lineTo(-8.36028f, -91.7441f);
        path.lineTo(-8.31028f, -91.8441f);
        path.lineTo(-8.06028f, -90.3941f);
        path.lineTo(-7.96028f, -89.6941f);
        path.lineTo(-7.06028f, -84.7941f);
        path.lineTo(-13.4603f, -83.1441f);
        path.lineTo(-14.7603f, -82.8441f);
        path.lineTo(-15.0103f, -82.6441f);
        path.lineTo(-21.7103f, -81.0941f);
        path.lineTo(-22.6603f, -80.8941f);
        path.lineTo(-24.5103f, -80.5941f);
        path.lineTo(-19.5603f, -35.2941f);
        path.lineTo(-19.3103f, -33.1941f);
        path.lineTo(-14.7603f, 8.45587f);
        path.lineTo(-14.1103f, 15.1559f);
        path.lineTo(-9.56028f, 56.9559f);
        path.lineTo(101.04f, 56.9559f);
        path.lineTo(110.29f, -30.2941f);
        path.lineTo(108.74f, -30.5941f);
        path.lineTo(107.84f, -30.8441f);
        path.lineTo(104.64f, -31.4441f);
        path.lineTo(104.24f, -31.4941f);
        path.lineTo(104.24f, -37.8941f);
        path.lineTo(109.64f, -37.0941f);
        path.lineTo(111.04f, -36.9941f);
        path.lineTo(114.39f, -69.1441f);
        path.lineTo(108.94f, -71.8441f);
        path.quadTo(104.09f, -73.9441f, 99.1897f, -75.4941f);
        path.lineTo(95.3397f, -76.6941f);
        path.quadTo(84.6897f, -79.3941f, 73.3397f, -79.4941f);
        path.lineTo(62.4397f, -79.0441f);
        path.quadTo(54.9196f, -78.3974f, 47.1397f, -76.6941f);
        path.close();
        path.moveTo(9.85147f, -52.9401f);
        path.lineTo(9.70147f, -53.6901f);
        path.lineTo(12.2015f, -54.3401f);
        path.lineTo(13.5515f, -54.5901f);
        path.lineTo(17.9015f, -55.4901f);
        path.lineTo(24.9515f, -56.6401f);
        path.lineTo(25.9015f, -52.4401f);
        path.lineTo(26.6515f, -48.7901f);
        path.lineTo(24.3015f, -48.4401f);
        path.lineTo(13.4515f, -46.5901f);
        path.lineTo(11.2015f, -46.5901f);
        path.lineTo(10.1015f, -51.7901f);
        path.lineTo(9.85147f, -52.9401f);
        path.close();
        path.moveTo(5.06384f, -54.4132f);
        path.lineTo(-5.73616f, -53.3132f);
        path.lineTo(-6.33616f, -56.2632f);
        path.lineTo(-6.38616f, -56.6132f);
        path.lineTo(-6.93616f, -58.6632f);
        path.lineTo(-4.73616f, -59.1132f);
        path.lineTo(2.26384f, -60.3632f);
        path.lineTo(8.56384f, -61.3632f);
        path.lineTo(8.76384f, -58.6132f);
        path.lineTo(9.31384f, -55.7132f);
        path.quadTo(9.16384f, -55.3132f, 9.31384f, -54.6632f);
        path.lineTo(5.06384f, -54.4132f);
        path.close();
        path.moveTo(58.2341f, -22.465f);
        path.lineTo(63.2841f, -21.465f);
        path.lineTo(64.1841f, -15.315f);
        path.lineTo(46.8841f, -15.315f);
        path.lineTo(46.8841f, -24.915f);
        path.lineTo(52.8841f, -23.515f);
        path.lineTo(57.7341f, -22.615f);
        path.lineTo(58.2341f, -22.465f);
        path.close();
        path.moveTo(327.814f, -134.422f);
        path.lineTo(327.814f, -138.722f);
        path.lineTo(335.914f, -138.172f);
        path.lineTo(341.364f, -137.722f);
        path.lineTo(341.514f, -137.722f);
        path.lineTo(341.514f, -133.172f);
        path.lineTo(337.464f, -133.722f);
        path.lineTo(336.314f, -133.822f);
        path.lineTo(335.564f, -133.922f);
        path.lineTo(335.214f, -133.922f);
        path.lineTo(327.814f, -134.422f);
        path.close();
        path.moveTo(366.576f, -87.7885f);
        path.lineTo(383.676f, -87.7885f);
        path.lineTo(383.676f, -80.7385f);
        path.lineTo(371.826f, -82.2885f);
        path.lineTo(366.926f, -82.2885f);
        path.lineTo(366.926f, -82.5385f);
        path.lineTo(366.676f, -85.0385f);
        path.lineTo(366.576f, -87.7885f);
        path.close();
        path.moveTo(570.05f, 6.67506f);
        path.lineTo(574.45f, 6.67506f);
        path.lineTo(578.15f, 6.97506f);
        path.lineTo(578.45f, 9.47506f);
        path.lineTo(578.45f, 9.77506f);
        path.lineTo(578.6f, 11.8251f);
        path.lineTo(576.2f, 11.7251f);
        path.lineTo(575.25f, 11.5251f);
        path.lineTo(566.9f, 10.5251f);
        path.lineTo(566.9f, 6.62506f);
        path.lineTo(570.05f, 6.67506f);
        path.close();
        path.moveTo(76.0036f, 8.8387f);
        path.lineTo(68.9536f, 8.2887f);
        path.lineTo(61.2036f, 8.5387f);
        path.lineTo(61.1536f, 8.2887f);
        path.lineTo(60.9536f, 7.0387f);
        path.lineTo(60.6036f, 4.7887f);
        path.lineTo(62.9036f, 4.7387f);
        path.lineTo(68.7036f, 4.3887f);
        path.lineTo(69.6036f, 4.2887f);
        path.lineTo(72.7536f, 4.1387f);
        path.lineTo(75.1036f, 4.0387f);
        path.lineTo(75.5036f, 6.3887f);
        path.quadTo(75.5893f, 7.68783f, 76.0036f, 8.8387f);
        path.close();
    }

    private static void draw_34(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_34(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 163, 193, 218));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_35(Path path)
    {
        path.reset();
        path.moveTo(656.826f, -57.4976f);
        path.lineTo(656.826f, -57.4976f);
        path.lineTo(656.826f, -42.8476f);
        path.lineTo(653.626f, -42.8476f);
        path.lineTo(645.826f, -42.8476f);
        path.lineTo(645.826f, -63.8976f);
        path.lineTo(636.226f, -68.4976f);
        path.lineTo(631.526f, -46.6476f);
        path.lineTo(629.276f, -47.8476f);
        path.quadTo(625.176f, -49.8476f, 620.976f, -51.8476f);
        path.lineTo(622.476f, -70.9976f);
        path.lineTo(610.676f, -70.9976f);
        path.lineTo(616.826f, -122.748f);
        path.lineTo(616.826f, -122.898f);
        path.quadTo(611.926f, -126.348f, 607.176f, -128.798f);
        path.lineTo(606.876f, -128.948f);
        path.quadTo(597.576f, -133.398f, 588.276f, -133.848f);
        path.lineTo(584.676f, -133.748f);
        path.quadTo(577.876f, -133.498f, 570.926f, -130.798f);
        path.lineTo(570.276f, -158.998f);
        path.lineTo(569.976f, -171.348f);
        path.lineTo(568.826f, -216.098f);
        path.quadTo(564.426f, -218.798f, 559.976f, -220.798f);
        path.lineTo(557.726f, -221.998f);
        path.lineTo(554.276f, -223.298f);
        path.quadTo(541.776f, -228.098f, 528.626f, -228.198f);
        path.quadTo(513.826f, -228.448f, 497.976f, -222.948f);
        path.lineTo(496.376f, -222.398f);
        path.lineTo(504.026f, -162.048f);
        path.lineTo(498.376f, -162.048f);
        path.lineTo(494.576f, -162.048f);
        path.lineTo(494.576f, -151.948f);
        path.lineTo(491.776f, -151.948f);
        path.lineTo(484.526f, -151.948f);
        path.lineTo(484.526f, -165.048f);
        path.lineTo(476.026f, -168.798f);
        path.lineTo(475.626f, -173.998f);
        path.lineTo(474.726f, -174.098f);
        path.lineTo(472.376f, -174.148f);
        path.lineTo(468.026f, -174.598f);
        path.lineTo(467.426f, -174.598f);
        path.lineTo(459.826f, -175.198f);
        path.lineTo(458.926f, -175.348f);
        path.lineTo(458.026f, -175.348f);
        path.lineTo(458.026f, -175.598f);
        path.lineTo(457.926f, -177.098f);
        path.lineTo(458.076f, -179.098f);
        path.lineTo(458.626f, -182.048f);
        path.lineTo(462.776f, -181.998f);
        path.lineTo(469.626f, -181.748f);
        path.lineTo(469.776f, -181.748f);
        path.lineTo(475.026f, -181.648f);
        path.lineTo(469.176f, -251.198f);
        path.lineTo(467.676f, -251.898f);
        path.lineTo(466.326f, -252.498f);
        path.lineTo(464.026f, -253.598f);
        path.lineTo(463.976f, -253.498f);
        path.lineTo(465.226f, -235.248f);
        path.lineTo(457.926f, -239.898f);
        path.lineTo(457.926f, -247.848f);
        path.lineTo(457.926f, -255.898f);
        path.lineTo(456.976f, -256.198f);
        path.lineTo(453.876f, -257.348f);
        path.lineTo(452.626f, -257.698f);
        path.lineTo(452.576f, -257.698f);
        path.lineTo(447.376f, -259.098f);
        path.lineTo(446.076f, -259.148f);
        path.lineTo(444.426f, -239.898f);
        path.lineTo(441.376f, -239.898f);
        path.lineTo(431.326f, -239.898f);
        path.lineTo(431.326f, -261.498f);
        path.lineTo(425.676f, -261.798f);
        path.quadTo(420.376f, -261.948f, 414.826f, -261.497f);
        path.lineTo(414.826f, -239.897f);
        path.lineTo(409.826f, -239.897f);
        path.lineTo(404.676f, -239.897f);
        path.lineTo(404.676f, -260.348f);
        path.quadTo(397.876f, -259.247f, 390.826f, -257.348f);
        path.lineTo(397.376f, -240.148f);
        path.lineTo(399.876f, -145.498f);
        path.lineTo(399.976f, -138.198f);
        path.lineTo(405.126f, 56.9525f);
        path.lineTo(556.226f, 56.9525f);
        path.lineTo(556.226f, -2.79751f);
        path.lineTo(556.226f, -8.89751f);
        path.lineTo(556.226f, -44.3975f);
        path.lineTo(588.526f, -111.048f);
        path.lineTo(607.226f, -41.7975f);
        path.lineTo(598.226f, 56.9525f);
        path.lineTo(668.676f, 56.9525f);
        path.lineTo(668.676f, 10.1025f);
        path.lineTo(664.526f, 9.70249f);
        path.lineTo(662.026f, 9.20249f);
        path.lineTo(660.426f, 8.95249f);
        path.lineTo(660.476f, 4.55249f);
        path.lineTo(660.476f, 3.80249f);
        path.lineTo(660.626f, 2.80249f);
        path.lineTo(663.376f, 3.30249f);
        path.lineTo(664.526f, 3.35249f);
        path.lineTo(668.676f, 3.80249f);
        path.lineTo(668.676f, -57.4975f);
        path.lineTo(656.826f, -57.4976f);
        path.close();
        path.moveTo(504.036f, -162.043f);
        path.lineTo(504.636f, -162.043f);
        path.lineTo(504.636f, -157.243f);
        path.lineTo(504.036f, -162.043f);
        path.close();
        path.moveTo(169.224f, -247.345f);
        path.lineTo(159.124f, -250.345f);
        path.lineTo(159.124f, -272.495f);
        path.quadTo(150.124f, -274.045f, 141.174f, -274.745f);
        path.lineTo(136.374f, -275.145f);
        path.lineTo(136.374f, -275.045f);
        path.lineTo(134.124f, -253.645f);
        path.lineTo(129.574f, -253.645f);
        path.lineTo(111.274f, -253.645f);
        path.lineTo(111.274f, -274.995f);
        path.lineTo(110.574f, -274.995f);
        path.lineTo(102.274f, -274.095f);
        path.quadTo(94.0242f, -273.195f, 85.9242f, -271.545f);
        path.lineTo(85.9242f, -249.195f);
        path.lineTo(82.7742f, -248.595f);
        path.lineTo(64.1742f, -245.145f);
        path.lineTo(62.6742f, -265.295f);
        path.quadTo(52.7742f, -262.195f, 42.9742f, -257.945f);
        path.lineTo(42.0742f, -257.645f);
        path.lineTo(37.8742f, -255.845f);
        path.lineTo(37.8742f, -157.345f);
        path.lineTo(38.0742f, -157.345f);
        path.lineTo(45.1742f, -71.2455f);
        path.lineTo(47.1242f, -76.6955f);
        path.lineTo(79.5242f, -165.395f);
        path.lineTo(114.374f, -69.1455f);
        path.lineTo(111.024f, -36.9955f);
        path.lineTo(110.274f, -30.2955f);
        path.lineTo(101.024f, 56.9545f);
        path.lineTo(296.524f, 56.9545f);
        path.lineTo(305.424f, -50.1955f);
        path.lineTo(297.524f, -50.4455f);
        path.lineTo(203.424f, -52.7455f);
        path.lineTo(202.574f, -62.9455f);
        path.lineTo(198.124f, -62.6455f);
        path.lineTo(190.724f, -61.6455f);
        path.lineTo(185.974f, -60.9955f);
        path.lineTo(185.674f, -60.9955f);
        path.lineTo(180.124f, -60.1955f);
        path.lineTo(177.124f, -59.7955f);
        path.lineTo(173.824f, -59.1955f);
        path.lineTo(173.074f, -61.5955f);
        path.lineTo(172.224f, -64.2455f);
        path.lineTo(171.424f, -67.0955f);
        path.lineTo(181.074f, -68.3455f);
        path.lineTo(183.924f, -68.7955f);
        path.lineTo(188.674f, -69.4455f);
        path.lineTo(188.824f, -69.4455f);
        path.lineTo(196.224f, -70.4955f);
        path.lineTo(201.374f, -71.2455f);
        path.lineTo(201.824f, -71.2455f);
        path.lineTo(194.474f, -159.145f);
        path.lineTo(192.974f, -159.145f);
        path.lineTo(187.074f, -158.995f);
        path.lineTo(182.724f, -158.895f);
        path.quadTo(175.424f, -158.645f, 170.974f, -158.995f);
        path.lineTo(170.824f, -161.745f);
        path.lineTo(170.624f, -163.295f);
        path.lineTo(170.324f, -167.595f);
        path.lineTo(171.974f, -167.445f);
        path.lineTo(174.224f, -167.595f);
        path.lineTo(187.974f, -168.895f);
        path.lineTo(193.624f, -169.595f);
        path.lineTo(185.474f, -265.945f);
        path.lineTo(181.124f, -267.245f);
        path.lineTo(178.724f, -267.945f);
        path.lineTo(173.824f, -269.296f);
        path.lineTo(173.824f, -245.896f);
        path.lineTo(169.224f, -247.345f);
        path.close();
        path.moveTo(-14.8232f, 8.51645f);
        path.lineTo(-19.3732f, -33.1335f);
        path.lineTo(-21.8232f, -34.9835f);
        path.lineTo(-22.1232f, -35.1835f);
        path.lineTo(-23.5232f, -36.0335f);
        path.lineTo(-24.5732f, -36.6835f);
        path.lineTo(-26.5732f, -37.7835f);
        path.quadTo(-28.5732f, -38.7835f, -30.7732f, -39.3835f);
        path.lineTo(-32.4732f, -39.9335f);
        path.lineTo(-39.5732f, -40.7835f);
        path.lineTo(-42.3732f, -40.7335f);
        path.lineTo(-48.3732f, -40.0835f);
        path.lineTo(-52.0232f, -39.2835f);
        path.lineTo(-52.8232f, -39.1835f);
        path.lineTo(-53.9232f, -38.7835f);
        path.lineTo(-49.3232f, 5.71646f);
        path.lineTo(-52.4232f, 5.71646f);
        path.lineTo(-65.2232f, 5.71646f);
        path.lineTo(-65.2232f, 24.9665f);
        path.lineTo(-69.8732f, 24.9665f);
        path.lineTo(-80.8732f, 24.9665f);
        path.lineTo(-80.8732f, 7.51646f);
        path.lineTo(-97.4732f, 7.51646f);
        path.lineTo(-97.4732f, 57.0165f);
        path.lineTo(-9.62323f, 57.0165f);
        path.lineTo(-14.1732f, 15.2165f);
        path.lineTo(-24.0732f, 15.8165f);
        path.lineTo(-33.2732f, 16.2665f);
        path.lineTo(-35.0232f, 9.41646f);
        path.lineTo(-24.0732f, 8.91646f);
        path.lineTo(-14.8232f, 8.51645f);
        path.close();
        path.moveTo(141.051f, -130.049f);
        path.lineTo(140.101f, -134.399f);
        path.lineTo(139.401f, -136.449f);
        path.lineTo(141.351f, -136.399f);
        path.lineTo(148.251f, -136.749f);
        path.lineTo(157.351f, -138.049f);
        path.lineTo(157.851f, -138.199f);
        path.lineTo(164.851f, -139.299f);
        path.lineTo(165.151f, -137.599f);
        path.lineTo(166.051f, -132.249f);
        path.lineTo(154.451f, -131.349f);
        path.lineTo(148.651f, -130.699f);
        path.lineTo(142.951f, -130.299f);
        path.lineTo(141.051f, -130.049f);
        path.close();
        path.moveTo(438.62f, -164.391f);
        path.lineTo(440.02f, -164.641f);
        path.lineTo(442.32f, -164.791f);
        path.lineTo(444.87f, -165.041f);
        path.lineTo(445.07f, -165.091f);
        path.lineTo(445.07f, -160.741f);
        path.lineTo(444.52f, -160.591f);
        path.lineTo(440.92f, -160.141f);
        path.lineTo(436.77f, -159.591f);
        path.lineTo(434.47f, -159.291f);
        path.lineTo(432.72f, -159.241f);
        path.lineTo(430.97f, -159.241f);
        path.lineTo(430.22f, -159.241f);
        path.lineTo(429.07f, -159.291f);
        path.lineTo(428.82f, -159.291f);
        path.lineTo(427.92f, -163.791f);
        path.lineTo(435.57f, -164.141f);
        path.lineTo(438.17f, -164.391f);
        path.lineTo(438.62f, -164.391f);
        path.close();
        path.moveTo(557.989f, -118.264f);
        path.lineTo(552.289f, -119.014f);
        path.lineTo(552.239f, -119.614f);
        path.lineTo(551.989f, -124.564f);
        path.lineTo(551.989f, -124.864f);
        path.lineTo(552.639f, -124.864f);
        path.lineTo(558.739f, -124.414f);
        path.lineTo(566.339f, -123.714f);
        path.lineTo(566.389f, -123.064f);
        path.lineTo(566.539f, -121.264f);
        path.lineTo(566.589f, -119.864f);
        path.lineTo(566.789f, -117.214f);
        path.lineTo(558.739f, -118.214f);
        path.lineTo(558.439f, -118.214f);
        path.lineTo(557.989f, -118.264f);
        path.close();
        path.moveTo(510.205f, -139.67f);
        path.lineTo(509.805f, -140.87f);
        path.lineTo(517.505f, -140.87f);
        path.quadTo(519.705f, -141.62f, 525.355f, -142.62f);
        path.lineTo(526.405f, -142.82f);
        path.lineTo(526.555f, -140.37f);
        path.lineTo(526.655f, -139.92f);
        path.lineTo(527.055f, -135.17f);
        path.lineTo(527.055f, -134.82f);
        path.lineTo(525.905f, -134.67f);
        path.lineTo(522.455f, -134.67f);
        path.lineTo(511.205f, -135.17f);
        path.lineTo(511.055f, -135.57f);
        path.lineTo(510.655f, -137.57f);
        path.quadTo(510.251f, -138.703f, 510.205f, -139.67f);
        path.close();
        path.moveTo(614.566f, 2.85416f);
        path.lineTo(614.566f, 2.45416f);
        path.quadTo(615.066f, 2.50416f, 615.566f, 2.85416f);
        path.lineTo(625.516f, 5.55416f);
        path.lineTo(625.416f, 6.90416f);
        path.lineTo(625.416f, 7.95416f);
        path.lineTo(625.266f, 9.85416f);
        path.quadTo(623.466f, 9.45416f, 621.766f, 8.75416f);
        path.lineTo(621.016f, 8.50416f);
        path.lineTo(619.216f, 7.50416f);
        path.lineTo(614.566f, 7.50416f);
        path.lineTo(614.566f, 2.85416f);
        path.close();
        path.moveTo(645.823f, 27.667f);
        path.lineTo(645.823f, 22.067f);
        path.lineTo(649.273f, 21.867f);
        path.quadTo(653.173f, 21.867f, 656.173f, 23.217f);
        path.lineTo(656.223f, 23.217f);
        path.lineTo(656.323f, 23.867f);
        path.lineTo(656.623f, 27.667f);
        path.lineTo(645.823f, 27.667f);
        path.close();
    }

    private static void draw_35(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_35(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 106, 146, 189));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_36(Path path)
    {
        path.reset();
        path.moveTo(58.8326f, -203.244f);
        path.lineTo(58.9826f, -201.294f);
        path.lineTo(63.2826f, -202.694f);
        path.lineTo(67.0326f, -203.994f);
        path.lineTo(69.8826f, -204.844f);
        path.lineTo(69.6826f, -206.644f);
        path.lineTo(69.4826f, -208.894f);
        path.lineTo(69.3826f, -209.494f);
        path.quadTo(68.2326f, -220.794f, 67.8826f, -226.594f);
        path.quadTo(62.5826f, -225.494f, 57.5826f, -224.044f);
        path.quadTo(57.8198f, -217.975f, 58.8326f, -203.244f);
        path.close();
        path.moveTo(51.3749f, -198.502f);
        path.lineTo(50.3249f, -221.752f);
        path.lineTo(43.1249f, -218.952f);
        path.lineTo(44.1749f, -202.052f);
        path.quadTo(44.3249f, -198.852f, 44.6249f, -196.052f);
        path.lineTo(51.3249f, -198.502f);
        path.lineTo(51.3749f, -198.502f);
        path.close();
        path.moveTo(-43.9633f, -30.8434f);
        path.lineTo(-44.0633f, -30.8434f);
        path.lineTo(-44.2133f, -30.9434f);
        path.lineTo(-44.3133f, -30.4434f);
        path.lineTo(-44.4633f, -30.1934f);
        path.lineTo(-45.0133f, -30.0434f);
        path.lineTo(-45.1633f, -30.0434f);
        path.lineTo(-45.1633f, -18.0934f);
        path.lineTo(-44.6133f, -16.3934f);
        path.lineTo(-44.3633f, -15.5934f);
        path.lineTo(-44.3633f, -14.8934f);
        path.lineTo(-42.2133f, -14.5934f);
        path.lineTo(-41.6133f, -14.5934f);
        path.lineTo(-40.8133f, -14.5434f);
        path.lineTo(-37.7133f, -14.4934f);
        path.lineTo(-38.3133f, -17.8434f);
        path.lineTo(-38.9133f, -21.2434f);
        path.lineTo(-39.0633f, -22.2934f);
        path.lineTo(-39.0633f, -22.3434f);
        path.lineTo(-39.5633f, -24.6434f);
        path.quadTo(-40.1633f, -27.2434f, -41.2133f, -28.7934f);
        path.quadTo(-42.3521f, -30.4291f, -43.9633f, -30.8434f);
        path.close();
        path.moveTo(20.6697f, -114.811f);
        path.lineTo(20.3197f, -116.261f);
        path.lineTo(19.8697f, -118.511f);
        path.lineTo(18.4197f, -124.611f);
        path.lineTo(17.9697f, -126.511f);
        path.lineTo(17.8697f, -126.761f);
        path.quadTo(16.3697f, -131.961f, 14.7197f, -135.011f);
        path.quadTo(12.4197f, -139.061f, 9.86966f, -139.061f);
        path.lineTo(8.31966f, -138.711f);
        path.quadTo(6.91966f, -138.261f, 6.36966f, -136.411f);
        path.lineTo(6.16966f, -135.411f);
        path.quadTo(5.86966f, -133.261f, 6.16966f, -128.511f);
        path.lineTo(6.16966f, -125.361f);
        path.lineTo(6.36966f, -119.361f);
        path.quadTo(6.71966f, -116.561f, 7.56966f, -114.211f);
        path.lineTo(7.56966f, -113.961f);
        path.lineTo(8.21966f, -112.611f);
        path.lineTo(15.8197f, -113.711f);
        path.lineTo(18.7697f, -114.361f);
        path.lineTo(20.6697f, -114.811f);
        path.close();
        path.moveTo(131.66f, -231.602f);
        path.lineTo(129.46f, -231.602f);
        path.lineTo(120.71f, -231.452f);
        path.lineTo(120.86f, -220.502f);
        path.lineTo(120.96f, -218.402f);
        path.lineTo(121.01f, -215.602f);
        path.lineTo(121.11f, -211.052f);
        path.lineTo(121.16f, -210.452f);
        path.lineTo(128.01f, -210.502f);
        path.lineTo(128.41f, -210.502f);
        path.lineTo(133.51f, -210.452f);
        path.lineTo(133.51f, -231.602f);
        path.lineTo(131.66f, -231.602f);
        path.close();
        path.moveTo(111.543f, -229.53f);
        path.lineTo(111.543f, -231.28f);
        path.lineTo(98.9925f, -230.68f);
        path.lineTo(99.9425f, -219.88f);
        path.lineTo(100.443f, -214.68f);
        path.lineTo(100.543f, -214.18f);
        path.lineTo(101.043f, -209.83f);
        path.lineTo(102.893f, -209.98f);
        path.lineTo(112.343f, -210.38f);
        path.lineTo(112.093f, -214.83f);
        path.lineTo(111.793f, -224.18f);
        path.lineTo(111.793f, -224.33f);
        path.lineTo(111.543f, -229.53f);
        path.close();
        path.moveTo(89.722f, -227.412f);
        path.lineTo(89.572f, -229.912f);
        path.lineTo(80.722f, -228.862f);
        path.lineTo(76.772f, -228.212f);
        path.lineTo(76.722f, -224.662f);
        path.quadTo(76.722f, -221.462f, 77.222f, -216.262f);
        path.lineTo(77.422f, -214.412f);
        path.lineTo(78.322f, -206.962f);
        path.lineTo(86.972f, -208.412f);
        path.lineTo(90.672f, -208.912f);
        path.quadTo(90.572f, -210.162f, 90.572f, -211.562f);
        path.lineTo(90.572f, -211.612f);
        path.quadTo(89.922f, -220.412f, 89.722f, -226.562f);
        path.lineTo(89.722f, -227.412f);
        path.close();
        path.moveTo(163.746f, -208.768f);
        path.lineTo(168.096f, -208.318f);
        path.lineTo(175.996f, -207.168f);
        path.quadTo(175.746f, -214.268f, 175.746f, -225.518f);
        path.lineTo(168.446f, -227.568f);
        path.lineTo(163.746f, -228.518f);
        path.lineTo(163.746f, -208.768f);
        path.close();
        path.moveTo(154.631f, -230.128f);
        path.lineTo(142.681f, -231.278f);
        path.quadTo(142.681f, -225.328f, 142.831f, -220.128f);
        path.lineTo(142.881f, -210.228f);
        path.lineTo(143.981f, -210.228f);
        path.lineTo(154.931f, -209.578f);
        path.quadTo(154.631f, -218.113f, 154.631f, -230.128f);
        path.close();
        path.moveTo(78.5816f, -55.6562f);
        path.quadTo(76.7316f, -51.0562f, 76.7316f, -46.0562f);
        path.lineTo(77.1815f, -40.9562f);
        path.lineTo(82.2316f, -40.9562f);
        path.lineTo(82.4315f, -40.9562f);
        path.lineTo(86.7815f, -39.8562f);
        path.lineTo(86.6315f, -48.4062f);
        path.lineTo(86.5315f, -49.5562f);
        path.lineTo(86.5315f, -49.7062f);
        path.lineTo(86.4815f, -50.3062f);
        path.lineTo(86.0815f, -53.7562f);
        path.lineTo(85.7315f, -55.4062f);
        path.quadTo(84.7815f, -60.2562f, 82.6315f, -60.2562f);
        path.quadTo(80.469f, -60.2597f, 78.5816f, -55.6562f);
        path.close();
        path.moveTo(460.855f, -218.205f);
        path.lineTo(450.605f, -221.005f);
        path.lineTo(450.905f, -216.455f);
        path.lineTo(451.005f, -215.455f);
        path.lineTo(451.305f, -210.705f);
        path.lineTo(451.455f, -208.605f);
        path.lineTo(451.605f, -206.455f);
        path.lineTo(451.855f, -201.305f);
        path.lineTo(462.405f, -198.205f);
        path.lineTo(462.005f, -203.405f);
        path.lineTo(461.705f, -206.055f);
        path.lineTo(461.505f, -208.955f);
        path.lineTo(460.855f, -217.255f);
        path.lineTo(460.855f, -217.655f);
        path.lineTo(460.855f, -218.205f);
        path.close();
        path.moveTo(443.224f, -213.74f);
        path.lineTo(443.224f, -214.94f);
        path.lineTo(442.524f, -223.09f);
        path.lineTo(435.324f, -224.44f);
        path.lineTo(432.424f, -224.74f);
        path.lineTo(432.474f, -223.74f);
        path.lineTo(433.024f, -216.84f);
        path.lineTo(433.124f, -213.94f);
        path.lineTo(433.274f, -212.49f);
        path.lineTo(433.674f, -205.94f);
        path.lineTo(435.174f, -205.64f);
        path.lineTo(437.774f, -205.09f);
        path.lineTo(444.124f, -203.59f);
        path.lineTo(443.974f, -205.49f);
        path.lineTo(443.474f, -211.79f);
        path.lineTo(443.374f, -212.84f);
        path.lineTo(443.224f, -213.74f);
        path.close();
        path.moveTo(422.738f, -225.203f);
        path.lineTo(419.688f, -225.103f);
        path.lineTo(415.238f, -224.953f);
        path.lineTo(412.388f, -224.653f);
        path.lineTo(412.888f, -219.553f);
        path.lineTo(413.688f, -211.853f);
        path.lineTo(413.838f, -210.603f);
        path.lineTo(413.938f, -209.653f);
        path.lineTo(414.088f, -208.003f);
        path.lineTo(414.288f, -206.003f);
        path.lineTo(419.038f, -206.453f);
        path.lineTo(419.688f, -206.553f);
        path.lineTo(421.288f, -206.653f);
        path.lineTo(424.938f, -206.803f);
        path.lineTo(424.688f, -209.553f);
        path.lineTo(424.488f, -211.853f);
        path.lineTo(423.838f, -218.603f);
        path.lineTo(423.788f, -220.203f);
        path.lineTo(423.338f, -225.203f);
        path.lineTo(422.738f, -225.203f);
        path.close();
        path.moveTo(351.753f, -217.285f);
        path.lineTo(351.603f, -208.585f);
        path.lineTo(356.253f, -207.585f);
        path.lineTo(357.503f, -207.385f);
        path.lineTo(358.653f, -207.185f);
        path.lineTo(360.303f, -206.835f);
        path.lineTo(360.703f, -206.735f);
        path.lineTo(364.103f, -206.185f);
        path.lineTo(365.053f, -206.035f);
        path.lineTo(365.403f, -205.935f);
        path.lineTo(365.403f, -206.435f);
        path.lineTo(365.403f, -208.085f);
        path.lineTo(365.403f, -214.735f);
        path.lineTo(365.153f, -220.535f);
        path.lineTo(365.103f, -221.485f);
        path.lineTo(365.053f, -222.785f);
        path.lineTo(364.503f, -226.335f);
        path.quadTo(363.253f, -232.535f, 359.803f, -232.535f);
        path.quadTo(358.553f, -232.535f, 357.503f, -232.035f);
        path.quadTo(353.303f, -230.285f, 352.053f, -221.485f);
        path.lineTo(351.753f, -217.285f);
        path.close();
        path.moveTo(345.446f, -181.608f);
        path.lineTo(345.046f, -183.358f);
        path.lineTo(344.346f, -185.458f);
        path.quadTo(343.246f, -187.608f, 341.546f, -187.608f);
        path.quadTo(338.496f, -184.958f, 338.646f, -178.958f);
        path.lineTo(338.696f, -176.958f);
        path.lineTo(338.696f, -172.808f);
        path.lineTo(339.496f, -172.658f);
        path.lineTo(339.946f, -172.508f);
        path.lineTo(341.546f, -172.108f);
        path.lineTo(343.546f, -171.708f);
        path.lineTo(346.146f, -171.058f);
        path.lineTo(345.996f, -175.858f);
        path.lineTo(345.846f, -178.708f);
        path.lineTo(345.696f, -180.358f);
        path.lineTo(345.446f, -181.608f);
        path.close();
        path.moveTo(370.719f, -184.692f);
        path.lineTo(369.869f, -184.842f);
        path.lineTo(369.319f, -184.792f);
        path.lineTo(368.919f, -184.642f);
        path.lineTo(368.119f, -184.142f);
        path.quadTo(366.269f, -182.542f, 365.119f, -177.392f);
        path.quadTo(363.969f, -171.992f, 364.119f, -166.692f);
        path.lineTo(365.419f, -166.342f);
        path.lineTo(369.169f, -165.592f);
        path.lineTo(370.869f, -165.342f);
        path.lineTo(372.519f, -164.942f);
        path.lineTo(374.419f, -164.592f);
        path.quadTo(374.669f, -166.442f, 374.619f, -169.242f);
        path.lineTo(374.519f, -171.192f);
        path.lineTo(374.369f, -174.142f);
        path.quadTo(373.527f, -183.587f, 370.719f, -184.692f);
        path.close();
        path.moveTo(489.811f, -126.78f);
        path.lineTo(487.111f, -126.38f);
        path.lineTo(486.961f, -110.58f);
        path.lineTo(489.311f, -110.58f);
        path.lineTo(489.711f, -110.58f);
        path.lineTo(491.161f, -110.48f);
        path.lineTo(492.411f, -110.43f);
        path.lineTo(492.911f, -110.33f);
        path.lineTo(493.611f, -110.28f);
        path.lineTo(495.611f, -110.03f);
        path.lineTo(496.561f, -109.88f);
        path.lineTo(496.211f, -117.13f);
        path.lineTo(496.161f, -118.28f);
        path.lineTo(496.011f, -120.88f);
        path.lineTo(495.911f, -121.93f);
        path.lineTo(495.711f, -127.73f);
        path.lineTo(491.961f, -127.13f);
        path.lineTo(491.611f, -127.13f);
        path.lineTo(489.811f, -126.78f);
        path.close();
        path.moveTo(488.983f, -94.4636f);
        path.lineTo(488.733f, -94.4636f);
        path.lineTo(487.933f, -94.5136f);
        path.lineTo(486.883f, -94.6136f);
        path.lineTo(486.833f, -88.2636f);
        path.lineTo(486.683f, -81.4636f);
        path.lineTo(486.683f, -76.6636f);
        path.lineTo(497.633f, -76.6636f);
        path.lineTo(497.483f, -80.4636f);
        path.lineTo(496.883f, -93.5636f);
        path.lineTo(496.883f, -94.1636f);
        path.lineTo(494.033f, -94.2136f);
        path.lineTo(491.133f, -94.3136f);
        path.lineTo(488.983f, -94.4636f);
        path.close();
        path.moveTo(496.855f, -60.2597f);
        path.lineTo(496.305f, -60.2597f);
        path.lineTo(493.055f, -60.3597f);
        path.lineTo(492.905f, -60.3597f);
        path.lineTo(491.105f, -60.4097f);
        path.lineTo(488.855f, -60.5097f);
        path.lineTo(487.205f, -60.6597f);
        path.lineTo(486.855f, -60.7097f);
        path.lineTo(486.855f, -58.5097f);
        path.lineTo(486.705f, -50.7097f);
        path.lineTo(486.655f, -42.8597f);
        path.lineTo(497.605f, -42.8597f);
        path.lineTo(496.855f, -60.2597f);
        path.close();
        path.moveTo(540.542f, -201.403f);
        path.lineTo(540.042f, -204.403f);
        path.quadTo(538.392f, -212.353f, 535.292f, -212.353f);
        path.quadTo(531.142f, -212.353f, 529.392f, -208.203f);
        path.quadTo(528.392f, -205.703f, 528.292f, -201.553f);
        path.lineTo(528.292f, -199.903f);
        path.quadTo(528.342f, -195.603f, 529.042f, -189.803f);
        path.lineTo(533.792f, -189.203f);
        path.lineTo(534.092f, -189.203f);
        path.lineTo(537.042f, -188.953f);
        path.lineTo(538.742f, -188.703f);
        path.lineTo(541.942f, -188.603f);
        path.lineTo(541.542f, -193.753f);
        path.lineTo(541.242f, -196.003f);
        path.lineTo(540.792f, -200.453f);
        path.lineTo(540.542f, -201.403f);
        path.close();
        path.moveTo(605.405f, -117.067f);
        path.quadTo(603.755f, -113.767f, 602.055f, -108.467f);
        path.quadTo(600.705f, -103.817f, 600.205f, -100.067f);
        path.lineTo(602.805f, -99.2667f);
        path.lineTo(603.955f, -98.7667f);
        path.lineTo(604.205f, -98.6667f);
        path.lineTo(607.405f, -97.5167f);
        path.lineTo(608.155f, -103.367f);
        path.lineTo(609.055f, -110.217f);
        path.lineTo(609.005f, -112.067f);
        path.lineTo(608.705f, -114.067f);
        path.quadTo(608.305f, -115.167f, 607.155f, -116.017f);
        path.lineTo(605.405f, -117.067f);
        path.close();
        path.moveTo(583.354f, -35.5389f);
        path.lineTo(582.454f, -35.5389f);
        path.quadTo(581.354f, -33.3889f, 580.504f, -29.8389f);
        path.lineTo(580.154f, -28.2389f);
        path.quadTo(579.754f, -25.8389f, 579.754f, -24.0889f);
        path.lineTo(580.154f, -19.8889f);
        path.lineTo(580.504f, -17.1389f);
        path.lineTo(584.304f, -17.0389f);
        path.lineTo(584.554f, -17.0389f);
        path.lineTo(587.504f, -16.8389f);
        path.quadTo(588.004f, -22.4889f, 587.954f, -26.2389f);
        path.quadTo(587.727f, -35.1246f, 583.354f, -35.5389f);
        path.close();
        path.moveTo(616.131f, -26.2399f);
        path.lineTo(615.931f, -22.1399f);
        path.lineTo(615.881f, -19.6399f);
        path.lineTo(615.681f, -16.2899f);
        path.lineTo(623.581f, -15.1399f);
        path.lineTo(624.781f, -14.9899f);
        path.lineTo(625.031f, -17.9899f);
        path.lineTo(625.081f, -20.8899f);
        path.lineTo(625.331f, -25.6399f);
        path.lineTo(625.431f, -25.9899f);
        path.lineTo(619.081f, -26.9399f);
        path.lineTo(616.231f, -27.3399f);
        path.lineTo(616.131f, -26.2399f);
        path.close();
        path.moveTo(658.161f, -21.4523f);
        path.lineTo(649.611f, -22.5523f);
        path.lineTo(649.261f, -20.8023f);
        path.lineTo(648.411f, -16.2523f);
        path.lineTo(648.011f, -14.0523f);
        path.lineTo(647.611f, -11.9023f);
        path.lineTo(657.461f, -10.6523f);
        path.lineTo(657.611f, -12.5523f);
        path.lineTo(657.911f, -17.7023f);
        path.lineTo(657.911f, -18.5523f);
        path.lineTo(658.161f, -21.4523f);
        path.close();
        path.moveTo(642.509f, -23.5238f);
        path.lineTo(641.359f, -23.7738f);
        path.lineTo(640.609f, -23.8238f);
        path.lineTo(639.659f, -23.9238f);
        path.lineTo(634.559f, -24.7238f);
        path.lineTo(633.659f, -16.8738f);
        path.lineTo(633.559f, -16.5238f);
        path.lineTo(633.259f, -13.8238f);
        path.lineTo(640.859f, -12.8238f);
        path.lineTo(641.259f, -15.2238f);
        path.lineTo(641.609f, -17.4238f);
        path.lineTo(642.359f, -22.6238f);
        path.lineTo(642.459f, -23.1238f);
        path.lineTo(642.509f, -23.5238f);
        path.close();
        path.moveTo(494.323f, -24.5826f);
        path.lineTo(493.073f, -24.5826f);
        path.lineTo(486.873f, -24.9826f);
        path.lineTo(486.673f, -7.13263f);
        path.lineTo(497.623f, -7.13263f);
        path.lineTo(496.873f, -24.4826f);
        path.lineTo(495.173f, -24.4826f);
        path.lineTo(494.323f, -24.5826f);
        path.close();
    }

    private static void draw_36(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_36(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_37(Path path)
    {
        path.reset();
        path.moveTo(569.083f, 9.8975f);
        path.lineTo(569.083f, 9.7475f);
        path.quadTo(567.733f, 8.7975f, 566.333f, 8.3975f);
        path.lineTo(565.833f, 9.5975f);
        path.lineTo(569.083f, 9.8975f);
        path.close();
        path.moveTo(515.821f, 34.342f);
        path.lineTo(516.621f, 34.342f);
        path.lineTo(516.621f, 34.092f);
        path.lineTo(515.821f, 34.342f);
        path.close();
    }

    private static void draw_37(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_37(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 102, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_38(Path path)
    {
        path.reset();
        path.moveTo(480.788f, 77.6609f);
        path.lineTo(480.938f, 78.1609f);
        path.lineTo(481.338f, 79.2109f);
        path.lineTo(627.788f, 79.2109f);
        path.quadTo(628.538f, 78.0109f, 629.088f, 76.4109f);
        path.quadTo(630.438f, 72.7109f, 630.438f, 68.6609f);
        path.quadTo(630.438f, 65.0109f, 627.938f, 60.8109f);
        path.quadTo(625.988f, 57.3609f, 623.038f, 54.4609f);
        path.lineTo(622.188f, 54.4609f);
        path.quadTo(622.188f, 46.7609f, 615.738f, 40.6609f);
        path.lineTo(608.438f, 40.6609f);
        path.quadTo(610.288f, 36.6109f, 610.288f, 32.9609f);
        path.quadTo(610.288f, 27.0609f, 604.788f, 21.4609f);
        path.quadTo(598.488f, 15.0609f, 589.638f, 15.0609f);
        path.quadTo(581.738f, 15.0609f, 577.438f, 17.3109f);
        path.lineTo(576.238f, 18.0609f);
        path.quadTo(575.138f, 11.6109f, 569.638f, 10.1109f);
        path.lineTo(569.088f, 9.86085f);
        path.lineTo(565.838f, 9.56085f);
        path.quadTo(559.338f, 9.56085f, 556.338f, 11.8609f);
        path.quadTo(554.188f, 13.6109f, 553.238f, 16.9109f);
        path.lineTo(551.938f, 14.8609f);
        path.quadTo(546.988f, 7.71085f, 537.438f, 7.71085f);
        path.quadTo(526.388f, 7.71085f, 520.538f, 13.2609f);
        path.quadTo(514.938f, 18.4109f, 514.938f, 27.4109f);
        path.quadTo(514.938f, 30.8109f, 516.638f, 34.0609f);
        path.lineTo(516.838f, 34.3109f);
        path.lineTo(516.888f, 34.3109f);
        path.lineTo(516.838f, 34.4609f);
        path.lineTo(516.838f, 34.3109f);
        path.lineTo(516.638f, 34.3109f);
        path.lineTo(515.838f, 34.3109f);
        path.quadTo(507.438f, 34.3109f, 502.138f, 38.9109f);
        path.quadTo(496.638f, 43.6609f, 496.638f, 51.6609f);
        path.quadTo(496.638f, 53.9608f, 498.338f, 58.4109f);
        path.lineTo(495.738f, 58.1109f);
        path.quadTo(487.588f, 58.1109f, 483.788f, 61.7609f);
        path.quadTo(480.088f, 65.3109f, 480.088f, 72.7608f);
        path.quadTo(480.098f, 75.4512f, 480.788f, 77.6609f);
        path.close();
    }

    private static void draw_38(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_38(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_39(Path path)
    {
        path.reset();
        path.moveTo(566.321f, 8.37835f);
        path.quadTo(564.471f, 7.72835f, 562.421f, 7.72835f);
        path.quadTo(559.721f, 7.72835f, 556.521f, 9.62835f);
        path.quadTo(553.871f, 11.1284f, 553.221f, 12.5784f);
        path.quadTo(549.421f, 8.92835f, 546.221f, 7.47835f);
        path.quadTo(542.021f, 5.42835f, 535.821f, 5.42835f);
        path.quadTo(525.121f, 5.42835f, 517.271f, 13.3284f);
        path.quadTo(510.021f, 20.7283f, 509.821f, 30.7283f);
        path.lineTo(509.171f, 30.6784f);
        path.quadTo(504.121f, 30.6784f, 499.171f, 37.1784f);
        path.quadTo(495.321f, 42.2284f, 493.421f, 48.1284f);
        path.lineTo(493.421f, 54.9284f);
        path.lineTo(493.221f, 54.9284f);
        path.quadTo(486.821f, 54.9284f, 481.471f, 61.3784f);
        path.quadTo(476.471f, 67.4284f, 476.471f, 73.7284f);
        path.lineTo(476.471f, 74.4784f);
        path.lineTo(478.221f, 75.8284f);
        path.lineTo(480.771f, 77.6784f);
        path.quadTo(480.071f, 75.4784f, 480.071f, 72.7784f);
        path.quadTo(480.071f, 65.3284f, 483.771f, 61.7784f);
        path.quadTo(487.571f, 58.1284f, 495.721f, 58.1284f);
        path.lineTo(498.321f, 58.4284f);
        path.quadTo(496.621f, 53.9784f, 496.621f, 51.6784f);
        path.quadTo(496.621f, 43.6784f, 502.121f, 38.9284f);
        path.quadTo(507.421f, 34.3284f, 515.821f, 34.3284f);
        path.lineTo(516.621f, 34.0784f);
        path.quadTo(514.921f, 30.8284f, 514.921f, 27.4284f);
        path.quadTo(514.921f, 18.4284f, 520.521f, 13.2784f);
        path.quadTo(526.371f, 7.72836f, 537.421f, 7.72836f);
        path.quadTo(546.971f, 7.72836f, 551.921f, 14.8784f);
        path.lineTo(553.221f, 16.9284f);
        path.quadTo(554.171f, 13.6284f, 556.321f, 11.8784f);
        path.quadTo(559.321f, 9.57836f, 565.821f, 9.57836f);
        path.lineTo(566.321f, 8.37835f);
        path.close();
    }

    private static void draw_39(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_39(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_40(Path path)
    {
        path.reset();
        path.moveTo(19.8871f, 5.15591f);
        path.lineTo(19.8871f, 4.95591f);
        path.quadTo(18.5871f, 4.05591f, 17.1371f, 3.60591f);
        path.lineTo(16.6371f, 4.80591f);
        path.lineTo(19.8871f, 5.15591f);
        path.close();
        path.moveTo(-33.3753f, 29.6004f);
        path.lineTo(-32.5753f, 29.6004f);
        path.lineTo(-32.5753f, 29.3004f);
        path.lineTo(-33.3753f, 29.6004f);
        path.close();
    }

    private static void draw_40(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_40(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 102, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_41(Path path)
    {
        path.reset();
        path.moveTo(-68.4078f, 72.9193f);
        path.lineTo(-68.2578f, 73.4193f);
        path.lineTo(-67.8578f, 74.4693f);
        path.lineTo(78.5422f, 74.4693f);
        path.lineTo(79.8422f, 71.6693f);
        path.quadTo(81.1922f, 67.9693f, 81.1922f, 63.9193f);
        path.quadTo(81.1922f, 60.2193f, 78.6922f, 56.0193f);
        path.quadTo(76.7422f, 52.6193f, 73.7922f, 49.6693f);
        path.lineTo(72.9422f, 49.6693f);
        path.quadTo(72.9422f, 42.0193f, 66.4922f, 35.9693f);
        path.lineTo(59.1922f, 35.9693f);
        path.quadTo(61.0422f, 31.9193f, 61.0422f, 28.1693f);
        path.quadTo(61.0422f, 22.3193f, 55.5422f, 16.7693f);
        path.quadTo(49.2922f, 10.3193f, 40.3922f, 10.3193f);
        path.quadTo(32.4922f, 10.3193f, 28.1922f, 12.5693f);
        path.lineTo(26.9922f, 13.3193f);
        path.lineTo(26.8922f, 12.8693f);
        path.quadTo(25.6422f, 6.76926f, 20.3922f, 5.36926f);
        path.lineTo(19.8422f, 5.16926f);
        path.lineTo(16.5922f, 4.81926f);
        path.quadTo(10.0922f, 4.81926f, 7.09217f, 7.11926f);
        path.quadTo(4.94217f, 8.81926f, 3.99217f, 12.1693f);
        path.lineTo(2.69217f, 10.1193f);
        path.quadTo(-2.20783f, 2.96926f, -11.7578f, 2.96926f);
        path.quadTo(-22.8078f, 2.96926f, -28.6578f, 8.51926f);
        path.quadTo(-34.2078f, 13.6693f, -34.2078f, 22.6693f);
        path.quadTo(-34.2078f, 26.1193f, -32.5578f, 29.3193f);
        path.lineTo(-32.3578f, 29.6193f);
        path.lineTo(-32.3078f, 29.6193f);
        path.lineTo(-32.3578f, 29.7193f);
        path.lineTo(-32.3578f, 29.6193f);
        path.lineTo(-32.5578f, 29.6193f);
        path.lineTo(-33.3578f, 29.6193f);
        path.quadTo(-41.7578f, 29.6193f, -47.0078f, 34.2193f);
        path.quadTo(-52.5578f, 38.9193f, -52.5578f, 46.9693f);
        path.quadTo(-52.5578f, 49.2193f, -50.8578f, 53.6693f);
        path.lineTo(-53.4078f, 53.4193f);
        path.quadTo(-61.6078f, 53.4193f, -65.4078f, 57.0193f);
        path.quadTo(-69.0578f, 60.5693f, -69.0578f, 68.0193f);
        path.quadTo(-69.0984f, 70.7096f, -68.4078f, 72.9193f);
        path.close();
    }

    private static void draw_41(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_41(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_42(Path path)
    {
        path.reset();
        path.moveTo(17.125f, 3.63676f);
        path.quadTo(15.275f, 2.98676f, 13.225f, 2.98676f);
        path.quadTo(10.525f, 2.98676f, 7.32498f, 4.88676f);
        path.quadTo(4.67498f, 6.38676f, 4.02498f, 7.83676f);
        path.quadTo(0.224979f, 4.18676f, -2.87502f, 2.73676f);
        path.quadTo(-7.12502f, 0.686756f, -13.325f, 0.686756f);
        path.quadTo(-24.025f, 0.686756f, -31.875f, 8.58676f);
        path.quadTo(-39.075f, 15.9868f, -39.325f, 25.9868f);
        path.lineTo(-39.975f, 25.8868f);
        path.quadTo(-45.025f, 25.8868f, -49.975f, 32.3868f);
        path.quadTo(-53.825f, 37.4868f, -55.675f, 43.3368f);
        path.lineTo(-55.675f, 50.1868f);
        path.lineTo(-55.925f, 50.1868f);
        path.quadTo(-62.325f, 50.1868f, -67.675f, 56.6368f);
        path.quadTo(-72.675f, 62.6868f, -72.675f, 68.9868f);
        path.lineTo(-72.675f, 69.7368f);
        path.lineTo(-70.925f, 71.0368f);
        path.lineTo(-68.375f, 72.9368f);
        path.quadTo(-69.025f, 70.7368f, -69.025f, 68.0368f);
        path.quadTo(-69.025f, 60.5868f, -65.375f, 57.0368f);
        path.quadTo(-61.575f, 53.4368f, -53.375f, 53.4368f);
        path.lineTo(-50.825f, 53.6868f);
        path.quadTo(-52.525f, 49.2368f, -52.525f, 46.9868f);
        path.quadTo(-52.525f, 38.9368f, -46.975f, 34.2368f);
        path.quadTo(-41.725f, 29.6368f, -33.325f, 29.6368f);
        path.lineTo(-32.525f, 29.3368f);
        path.quadTo(-34.175f, 26.1368f, -34.175f, 22.6868f);
        path.quadTo(-34.175f, 13.6868f, -28.625f, 8.53677f);
        path.quadTo(-22.775f, 2.98677f, -11.725f, 2.98677f);
        path.quadTo(-2.17503f, 2.98677f, 2.72497f, 10.1368f);
        path.lineTo(4.02497f, 12.1868f);
        path.quadTo(4.97497f, 8.83677f, 7.12497f, 7.13677f);
        path.quadTo(10.125f, 4.83677f, 16.625f, 4.83677f);
        path.lineTo(17.125f, 3.63676f);
        path.close();
    }

    private static void draw_42(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_42(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_43(Path path)
    {
        path.reset();
        path.moveTo(199.93f, 2.71606f);
        path.quadTo(199.93f, 6.91606f, 203.63f, 18.1161f);
        path.quadTo(207.329f, 29.6161f, 212.579f, 41.3161f);
        path.quadTo(226.38f, 71.7661f, 235.48f, 71.7661f);
        path.quadTo(236.98f, 71.7661f, 238.03f, 70.2161f);
        path.quadTo(239.03f, 68.6661f, 239.03f, 66.1661f);
        path.quadTo(239.03f, 61.2661f, 235.08f, 51.5661f);
        path.quadTo(229.88f, 39.7161f, 227.33f, 33.1661f);
        path.lineTo(221.78f, 19.9161f);
        path.lineTo(217.18f, 9.26605f);
        path.lineTo(213.93f, -0.883946f);
        path.lineTo(211.28f, -4.13395f);
        path.quadTo(208.38f, -7.43395f, 206.53f, -7.43395f);
        path.quadTo(199.93f, -7.45765f, 199.93f, 2.71606f);
        path.close();
    }

    private static void draw_43(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_43(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 254, 127, 69));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_44(Path path)
    {
        path.reset();
        path.moveTo(347.563f, -55.8403f);
        path.quadTo(351.313f, -44.3903f, 358.063f, -35.8403f);
        path.quadTo(365.413f, -26.4903f, 376.163f, -23.6403f);
        path.lineTo(379.713f, -22.7903f);
        path.lineTo(395.613f, -23.8403f);
        path.quadTo(403.863f, -23.8403f, 409.913f, -21.4903f);
        path.quadTo(418.313f, -18.2903f, 418.313f, -11.6903f);
        path.quadTo(418.313f, -5.64032f, 400.863f, -3.69032f);
        path.lineTo(380.113f, -2.99032f);
        path.quadTo(376.413f, -2.89032f, 368.563f, -3.09032f);
        path.quadTo(361.613f, -3.09032f, 358.063f, -1.79032f);
        path.lineTo(349.213f, 3.05968f);
        path.quadTo(342.013f, 7.10968f, 340.513f, 7.10968f);
        path.quadTo(337.163f, 7.10968f, 335.363f, -0.040317f);
        path.quadTo(334.163f, -4.89032f, 334.163f, -9.54032f);
        path.lineTo(334.163f, -11.9403f);
        path.lineTo(333.763f, -14.5403f);
        path.quadTo(332.713f, -21.5903f, 332.713f, -29.6403f);
        path.quadTo(332.713f, -40.4903f, 334.163f, -54.8903f);
        path.quadTo(335.813f, -72.0903f, 337.963f, -72.0903f);
        path.quadTo(341.813f, -72.0903f, 344.813f, -64.7903f);
        path.lineTo(347.563f, -55.8403f);
        path.close();
    }

    private static Shader create_gradient_6()
    {
        int colors[] = {
            Color.argb(255, 0, 0, 0),
            Color.argb(255, 51, 51, 51)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_44(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_44(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0964305f, 0.185008f, 0.0f, 276.67f, -7.13541f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_45(Path path)
    {
        path.reset();
        path.moveTo(460.441f, -15.2375f);
        path.lineTo(460.141f, -16.8875f);
        path.quadTo(463.491f, -18.0375f, 465.641f, -21.9375f);
        path.quadTo(467.841f, -25.6875f, 467.841f, -30.4875f);
        path.quadTo(467.841f, -35.2375f, 464.841f, -37.6875f);
        path.quadTo(461.841f, -39.1875f, 459.841f, -40.3875f);
        path.quadTo(461.341f, -43.5875f, 462.991f, -48.3875f);
        path.lineTo(462.991f, -54.1375f);
        path.quadTo(462.541f, -54.5875f, 461.341f, -54.5875f);
        path.quadTo(458.241f, -54.5875f, 455.241f, -48.7875f);
        path.quadTo(452.641f, -42.2875f, 451.691f, -40.7375f);
        path.lineTo(451.591f, -40.2375f);
        path.lineTo(451.591f, -40.7375f);
        path.lineTo(451.691f, -40.7375f);
        path.quadTo(451.791f, -44.9375f, 449.191f, -49.5876f);
        path.quadTo(446.291f, -54.4876f, 442.941f, -55.5376f);
        path.lineTo(440.591f, -55.5376f);
        path.quadTo(440.591f, -54.1376f, 440.041f, -51.4875f);
        path.quadTo(440.041f, -47.7875f, 442.941f, -41.5875f);
        path.quadTo(444.241f, -38.5875f, 445.591f, -36.5875f);
        path.quadTo(442.741f, -35.0375f, 441.291f, -33.1875f);
        path.quadTo(439.141f, -30.4875f, 439.141f, -25.4875f);
        path.quadTo(439.141f, -20.7375f, 441.291f, -18.5875f);
        path.quadTo(441.841f, -17.9875f, 443.541f, -17.0375f);
        path.lineTo(444.341f, -16.5875f);
        path.lineTo(444.691f, -16.4375f);
        path.lineTo(460.441f, -15.2375f);
        path.close();
        path.moveTo(462.973f, 26.5621f);
        path.lineTo(463.223f, 25.9121f);
        path.lineTo(462.923f, 26.6621f);
        path.lineTo(462.973f, 26.5621f);
        path.close();
        path.moveTo(443.684f, 2.25571f);
        path.lineTo(443.534f, 4.50571f);
        path.lineTo(443.734f, 4.40571f);
        path.lineTo(443.684f, 2.25571f);
        path.close();
    }

    private static Shader create_gradient_7()
    {
        int colors[] = {
            Color.argb(255, 255, 102, 51),
            Color.argb(255, 254, 174, 103)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new RadialGradient(0.0f, 0.0f, 819.2f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_45(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_45(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.102036f, 0.0f, 0.0f, 0.102036f, 386.141f, -52.1575f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_46(Path path)
    {
        path.reset();
        path.moveTo(460.441f, -15.2375f);
        path.lineTo(444.691f, -16.4375f);
        path.lineTo(446.441f, -15.5875f);
        path.lineTo(446.091f, -14.2375f);
        path.lineTo(458.791f, -10.9375f);
        path.lineTo(461.441f, -10.2375f);
        path.lineTo(463.541f, -9.68755f);
        path.lineTo(463.641f, -15.2375f);
        path.lineTo(460.441f, -15.2375f);
        path.close();
    }

    private static void draw_46(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_46(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_47(Path path)
    {
        path.reset();
        path.moveTo(463.203f, 25.9176f);
        path.lineTo(464.403f, 21.3676f);
        path.quadTo(465.603f, 15.2676f, 465.603f, 4.61764f);
        path.lineTo(465.253f, -9.18236f);
        path.lineTo(463.503f, -9.63236f);
        path.lineTo(461.403f, -10.1824f);
        path.lineTo(458.753f, -10.8824f);
        path.lineTo(446.053f, -14.1824f);
        path.lineTo(444.453f, -14.6324f);
        path.lineTo(444.053f, -14.7324f);
        path.lineTo(443.803f, -14.7324f);
        path.lineTo(443.503f, -6.33236f);
        path.lineTo(443.653f, 2.26764f);
        path.lineTo(443.703f, 4.41764f);
        path.lineTo(443.503f, 4.51764f);
        path.quadTo(441.353f, 1.21764f, 438.953f, -3.33236f);
        path.lineTo(432.203f, -16.7324f);
        path.quadTo(423.753f, -32.0824f, 413.803f, -32.0824f);
        path.quadTo(409.503f, -32.0824f, 407.603f, -27.2824f);
        path.quadTo(406.153f, -24.0324f, 406.153f, -19.4324f);
        path.quadTo(406.153f, -13.6324f, 413.903f, -0.88236f);
        path.quadTo(420.653f, 9.91764f, 426.203f, 16.0176f);
        path.quadTo(435.853f, 26.4176f, 438.953f, 29.0176f);
        path.quadTo(445.453f, 34.2176f, 451.753f, 34.2176f);
        path.quadTo(460.303f, 34.2176f, 462.953f, 26.5676f);
        path.lineTo(462.903f, 26.6676f);
        path.lineTo(463.203f, 25.9176f);
        path.close();
    }

    private static void draw_47(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_47(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_48(Path path)
    {
        path.reset();
        path.moveTo(450.359f, -31.1196f);
        path.quadTo(450.359f, -27.4196f, 453.709f, -27.4196f);
        path.quadTo(456.109f, -27.4196f, 458.959f, -30.6696f);
        path.quadTo(461.659f, -33.7196f, 461.659f, -35.9196f);
        path.quadTo(461.659f, -39.3696f, 458.209f, -39.3696f);
        path.quadTo(456.909f, -39.3696f, 455.209f, -38.3196f);
        path.lineTo(454.509f, -37.7696f);
        path.lineTo(454.159f, -37.7196f);
        path.quadTo(450.359f, -35.7691f, 450.359f, -31.1196f);
        path.close();
    }

    private static void draw_48(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_48(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0154817f, 0.0f, 0.0f, 0.0154817f, 451.786f, -27.0685f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_49(Path path)
    {
        path.reset();
        path.moveTo(456.252f, -25.1811f);
        path.quadTo(456.252f, -22.2311f, 458.902f, -22.2311f);
        path.quadTo(460.802f, -22.2311f, 463.102f, -24.8311f);
        path.quadTo(465.302f, -27.2811f, 465.302f, -29.0311f);
        path.quadTo(465.302f, -31.8311f, 462.552f, -31.8311f);
        path.quadTo(461.452f, -31.8311f, 460.152f, -30.9311f);
        path.lineTo(459.602f, -30.5811f);
        path.lineTo(459.252f, -30.4311f);
        path.quadTo(456.252f, -28.9099f, 456.252f, -25.1811f);
        path.close();
    }

    private static void draw_49(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_49(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0123769f, 0.0f, 0.0f, 0.0123769f, 457.403f, -21.9586f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_50(Path path)
    {
        path.reset();
        path.moveTo(453.536f, -24.9969f);
        path.quadTo(453.536f, -21.3469f, 450.186f, -21.3469f);
        path.quadTo(447.786f, -21.3469f, 444.936f, -24.5469f);
        path.quadTo(442.236f, -27.6469f, 442.236f, -29.7969f);
        path.quadTo(442.236f, -33.2469f, 445.686f, -33.2469f);
        path.quadTo(446.986f, -33.2469f, 448.686f, -32.1969f);
        path.lineTo(449.336f, -31.6969f);
        path.lineTo(449.736f, -31.5969f);
        path.quadTo(453.536f, -29.6465f, 453.536f, -24.9969f);
        path.close();
    }

    private static void draw_50(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_50(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(-0.0154817f, 0.0f, 0.0f, 0.0154817f, 452.109f, -20.9459f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_51(Path path)
    {
        path.reset();
        path.moveTo(308.848f, -19.2886f);
        path.lineTo(309.198f, -20.9386f);
        path.quadTo(305.848f, -22.0886f, 303.648f, -25.9886f);
        path.quadTo(301.498f, -29.7386f, 301.498f, -34.5386f);
        path.quadTo(301.498f, -39.2886f, 304.498f, -41.7386f);
        path.quadTo(307.498f, -43.2386f, 309.448f, -44.4386f);
        path.quadTo(307.998f, -47.6386f, 306.348f, -52.4386f);
        path.lineTo(306.348f, -58.1886f);
        path.quadTo(306.798f, -58.6386f, 307.998f, -58.6386f);
        path.quadTo(311.098f, -58.6386f, 314.098f, -52.8386f);
        path.quadTo(316.698f, -46.3386f, 317.598f, -44.7886f);
        path.lineTo(317.748f, -44.2886f);
        path.lineTo(317.748f, -44.7886f);
        path.lineTo(317.598f, -44.7886f);
        path.quadTo(317.548f, -48.9886f, 320.148f, -53.6386f);
        path.quadTo(323.048f, -58.5386f, 326.398f, -59.5886f);
        path.lineTo(328.748f, -59.5886f);
        path.quadTo(328.748f, -58.1886f, 329.248f, -55.5386f);
        path.quadTo(329.248f, -51.8386f, 326.398f, -45.6386f);
        path.quadTo(325.098f, -42.6386f, 323.748f, -40.6386f);
        path.quadTo(326.598f, -39.0886f, 327.998f, -37.2386f);
        path.quadTo(330.198f, -34.5386f, 330.198f, -29.5386f);
        path.quadTo(330.198f, -24.7886f, 327.998f, -22.6386f);
        path.lineTo(325.748f, -21.0886f);
        path.lineTo(324.998f, -20.6386f);
        path.lineTo(324.648f, -20.4886f);
        path.lineTo(308.848f, -19.2886f);
        path.close();
        path.moveTo(306.316f, 22.5111f);
        path.lineTo(306.066f, 21.8611f);
        path.lineTo(306.366f, 22.6111f);
        path.lineTo(306.316f, 22.5111f);
        path.close();
        path.moveTo(325.605f, -1.79536f);
        path.lineTo(325.705f, 0.404639f);
        path.lineTo(325.555f, 0.304639f);
        path.lineTo(325.605f, -1.79536f);
        path.close();
    }

    private static void draw_51(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_51(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(-0.102036f, 0.0f, 0.0f, 0.102036f, 383.148f, -56.2086f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_52(Path path)
    {
        path.reset();
        path.moveTo(308.848f, -19.2886f);
        path.lineTo(324.648f, -20.4886f);
        path.lineTo(322.898f, -19.6386f);
        path.lineTo(323.248f, -18.2886f);
        path.lineTo(310.548f, -14.9886f);
        path.lineTo(307.898f, -14.2886f);
        path.lineTo(305.798f, -13.7386f);
        path.lineTo(305.698f, -19.2886f);
        path.lineTo(308.848f, -19.2886f);
        path.close();
    }

    private static void draw_52(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_52(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_53(Path path)
    {
        path.reset();
        path.moveTo(306.086f, 21.8666f);
        path.quadTo(305.336f, 19.9166f, 304.836f, 17.3166f);
        path.quadTo(303.636f, 11.2166f, 303.636f, 0.56657f);
        path.lineTo(304.036f, -13.2334f);
        path.lineTo(305.786f, -13.6834f);
        path.lineTo(307.886f, -14.2334f);
        path.lineTo(310.536f, -14.9334f);
        path.lineTo(323.236f, -18.2334f);
        path.lineTo(324.836f, -18.6834f);
        path.lineTo(325.236f, -18.7834f);
        path.lineTo(325.486f, -18.7834f);
        path.lineTo(325.736f, -10.3834f);
        path.lineTo(325.636f, -1.73343f);
        path.lineTo(325.586f, 0.366569f);
        path.lineTo(325.736f, 0.466569f);
        path.quadTo(327.936f, -2.78343f, 330.336f, -7.38343f);
        path.quadTo(334.686f, -16.4334f, 337.086f, -20.7834f);
        path.quadTo(345.536f, -36.1334f, 355.486f, -36.1334f);
        path.quadTo(359.786f, -36.1334f, 361.686f, -31.3334f);
        path.quadTo(363.136f, -28.0834f, 363.136f, -23.4834f);
        path.quadTo(363.136f, -17.6834f, 355.336f, -4.93343f);
        path.quadTo(348.636f, 5.86657f, 343.086f, 11.9666f);
        path.quadTo(333.436f, 22.3666f, 330.336f, 24.9666f);
        path.quadTo(323.836f, 30.1666f, 317.536f, 30.1666f);
        path.quadTo(308.936f, 30.1666f, 306.336f, 22.5166f);
        path.lineTo(306.386f, 22.6166f);
        path.lineTo(306.086f, 21.8666f);
        path.close();
    }

    private static void draw_53(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_53(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_54(Path path)
    {
        path.reset();
        path.moveTo(318.838f, -35.4008f);
        path.quadTo(318.838f, -31.7008f, 315.488f, -31.7008f);
        path.quadTo(313.088f, -31.7008f, 310.238f, -34.9008f);
        path.quadTo(307.538f, -38.0008f, 307.538f, -40.1508f);
        path.quadTo(307.538f, -43.6008f, 310.988f, -43.6008f);
        path.quadTo(312.288f, -43.6008f, 313.988f, -42.5508f);
        path.lineTo(314.638f, -42.0508f);
        path.lineTo(315.038f, -41.9508f);
        path.quadTo(318.838f, -40.0504f, 318.838f, -35.4008f);
        path.close();
    }

    private static void draw_54(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_54(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(-0.0154817f, 0.0f, 0.0f, 0.0154817f, 317.411f, -31.3498f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_55(Path path)
    {
        path.reset();
        path.moveTo(313.175f, -29.5084f);
        path.quadTo(313.175f, -26.5584f, 310.525f, -26.5584f);
        path.quadTo(308.625f, -26.5584f, 306.325f, -29.1084f);
        path.quadTo(304.125f, -31.6084f, 304.125f, -33.3084f);
        path.quadTo(304.125f, -36.1084f, 306.875f, -36.1084f);
        path.quadTo(307.925f, -36.1084f, 309.275f, -35.2584f);
        path.lineTo(309.825f, -34.8584f);
        path.lineTo(310.125f, -34.7584f);
        path.quadTo(313.175f, -33.2372f, 313.175f, -29.5084f);
        path.close();
    }

    private static void draw_55(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_55(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(-0.0123769f, 0.0f, 0.0f, 0.0123769f, 312.024f, -26.2859f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_56(Path path)
    {
        path.reset();
        path.moveTo(315.753f, -29.1861f);
        path.quadTo(315.753f, -25.5361f, 319.103f, -25.5361f);
        path.quadTo(321.503f, -25.5361f, 324.353f, -28.7361f);
        path.quadTo(327.053f, -31.8361f, 327.053f, -33.9861f);
        path.quadTo(327.053f, -37.4361f, 323.603f, -37.4361f);
        path.quadTo(322.303f, -37.4361f, 320.603f, -36.3861f);
        path.lineTo(319.903f, -35.8861f);
        path.lineTo(319.553f, -35.7861f);
        path.quadTo(315.753f, -33.8356f, 315.753f, -29.1861f);
        path.close();
    }

    private static void draw_56(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_56(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0154817f, 0.0f, 0.0f, 0.0154817f, 317.18f, -25.135f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_57(Path path)
    {
        path.reset();
        path.moveTo(288.777f, -139.808f);
        path.quadTo(245.077f, -139.808f, 227.927f, -101.608f);
        path.quadTo(215.977f, -75.008f, 215.977f, -24.058f);
        path.quadTo(215.977f, -14.258f, 218.927f, 31.942f);
        path.quadTo(221.927f, 78.292f, 221.927f, 88.692f);
        path.quadTo(221.927f, 136.492f, 208.127f, 141.442f);
        path.quadTo(209.577f, 146.542f, 216.077f, 148.192f);
        path.quadTo(221.577f, 149.742f, 235.077f, 151.342f);
        path.quadTo(240.077f, 152.542f, 250.127f, 158.442f);
        path.quadTo(258.327f, 163.242f, 266.077f, 163.242f);
        path.quadTo(270.277f, 163.242f, 278.727f, 161.442f);
        path.quadTo(287.127f, 159.642f, 289.377f, 159.642f);
        path.quadTo(292.977f, 159.642f, 298.927f, 161.442f);
        path.quadTo(304.777f, 163.242f, 308.477f, 163.242f);
        path.quadTo(312.327f, 163.242f, 317.877f, 160.242f);
        path.quadTo(324.327f, 156.692f, 326.927f, 156.092f);
        path.quadTo(330.527f, 155.242f, 337.577f, 155.992f);
        path.quadTo(345.077f, 156.692f, 348.427f, 156.092f);
        path.quadTo(357.027f, 154.542f, 362.277f, 146.892f);
        path.quadTo(363.977f, 144.642f, 366.127f, 140.092f);
        path.quadTo(347.227f, 131.392f, 342.477f, 91.092f);
        path.quadTo(340.127f, 70.992f, 341.027f, -4.95797f);
        path.quadTo(341.877f, -69.658f, 334.127f, -98.058f);
        path.quadTo(322.659f, -139.808f, 288.777f, -139.808f);
        path.close();
    }

    private static void draw_57(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_57(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0964305f, -0.185008f, 0.0f, 285.416f, -16.8948f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_58(Path path)
    {
        path.reset();
        path.moveTo(216.272f, -63.2519f);
        path.quadTo(212.472f, -51.7519f, 205.772f, -43.2019f);
        path.quadTo(198.422f, -33.8519f, 187.622f, -31.0019f);
        path.lineTo(184.072f, -30.1519f);
        path.lineTo(168.222f, -31.2519f);
        path.quadTo(159.972f, -31.2519f, 153.872f, -28.8519f);
        path.quadTo(145.522f, -25.6519f, 145.522f, -19.1019f);
        path.quadTo(145.522f, -13.0019f, 162.972f, -11.0519f);
        path.lineTo(183.722f, -10.4019f);
        path.quadTo(187.422f, -10.2519f, 195.272f, -10.4519f);
        path.quadTo(202.222f, -10.4519f, 205.772f, -9.20194f);
        path.quadTo(206.672f, -8.95194f, 214.622f, -4.25194f);
        path.quadTo(221.772f, -0.201937f, 223.322f, -0.201937f);
        path.quadTo(226.672f, -0.201937f, 228.472f, -7.40194f);
        path.quadTo(229.672f, -12.2519f, 229.672f, -16.9019f);
        path.lineTo(229.672f, -19.3019f);
        path.lineTo(230.022f, -21.9519f);
        path.quadTo(231.072f, -29.0019f, 231.072f, -37.0019f);
        path.quadTo(231.072f, -47.8519f, 229.672f, -62.2519f);
        path.quadTo(228.022f, -79.5019f, 225.822f, -79.5019f);
        path.quadTo(222.022f, -79.5019f, 219.022f, -72.1519f);
        path.lineTo(216.272f, -63.2519f);
        path.close();
    }

    private static void draw_58(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_58(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0964305f, -0.185008f, 0.0f, 287.166f, -14.547f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_59(Path path)
    {
        path.reset();
        path.moveTo(422.324f, 68.4999f);
        path.lineTo(422.424f, 37.7999f);
        path.lineTo(421.474f, 8.94991f);
        path.quadTo(421.374f, 7.24992f, 421.574f, -5.80009f);
        path.quadTo(421.774f, -14.9501f, 420.524f, -20.6501f);
        path.quadTo(418.424f, -29.7001f, 415.574f, -35.8501f);
        path.lineTo(401.424f, -6.85009f);
        path.lineTo(409.524f, 4.24991f);
        path.lineTo(393.424f, 36.7499f);
        path.lineTo(393.424f, 37.9499f);
        path.lineTo(393.824f, 56.3499f);
        path.lineTo(394.174f, 73.0999f);
        path.quadTo(404.474f, 72.3499f, 418.824f, 69.2999f);
        path.lineTo(422.324f, 68.4999f);
        path.close();
        path.moveTo(352.213f, -37.3803f);
        path.quadTo(346.013f, -28.5303f, 346.013f, -14.0303f);
        path.lineTo(348.413f, 9.86967f);
        path.quadTo(351.063f, 34.7697f, 351.763f, 47.9697f);
        path.lineTo(353.113f, 69.4697f);
        path.lineTo(362.813f, 71.1197f);
        path.quadTo(371.563f, 72.6197f, 381.113f, 73.0697f);
        path.quadTo(380.913f, 57.6697f, 379.613f, 38.2197f);
        path.lineTo(379.263f, 33.8197f);
        path.lineTo(360.813f, 0.119675f);
        path.lineTo(367.913f, -5.88032f);
        path.lineTo(352.213f, -37.3803f);
        path.close();
    }

    private static void draw_59(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_59(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_60(Path path)
    {
        path.reset();
        path.moveTo(370.581f, -49.1653f);
        path.quadTo(363.731f, -47.4653f, 358.931f, -44.1153f);
        path.quadTo(354.931f, -41.3153f, 352.231f, -37.3653f);
        path.lineTo(367.931f, -5.86526f);
        path.lineTo(360.831f, 0.134739f);
        path.lineTo(379.281f, 33.8347f);
        path.lineTo(378.481f, 23.4347f);
        path.quadTo(376.931f, 5.98474f, 374.731f, -14.2653f);
        path.lineTo(373.281f, -27.4653f);
        path.lineTo(370.581f, -49.1653f);
        path.close();
        path.moveTo(415.557f, -35.9072f);
        path.quadTo(412.957f, -41.5072f, 409.807f, -44.6572f);
        path.quadTo(406.657f, -47.6072f, 402.107f, -49.1572f);
        path.lineTo(400.007f, -34.5072f);
        path.lineTo(398.507f, -23.6072f);
        path.lineTo(397.657f, -17.0072f);
        path.quadTo(394.157f, 10.2428f, 393.507f, 24.9428f);
        path.lineTo(393.307f, 31.0928f);
        path.lineTo(393.407f, 36.6928f);
        path.lineTo(409.507f, 4.19279f);
        path.lineTo(401.407f, -6.90721f);
        path.lineTo(415.557f, -35.9072f);
        path.close();
    }

    private static void draw_60(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_60(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 102, 204, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_61(Path path)
    {
        path.reset();
        path.moveTo(402.115f, -49.1653f);
        path.quadTo(396.415f, -51.2153f, 388.515f, -51.2153f);
        path.quadTo(378.265f, -51.2153f, 370.565f, -49.1653f);
        path.lineTo(373.265f, -27.4653f);
        path.quadTo(374.415f, -24.2653f, 376.765f, -20.3153f);
        path.lineTo(382.415f, -11.8653f);
        path.lineTo(382.615f, -11.8653f);
        path.lineTo(384.915f, -12.0153f);
        path.lineTo(385.015f, -11.8653f);
        path.lineTo(385.165f, -12.0153f);
        path.lineTo(392.915f, -24.1653f);
        path.quadTo(397.015f, -30.5153f, 400.015f, -34.5153f);
        path.lineTo(402.115f, -49.1653f);
        path.close();
        path.moveTo(374.724f, -14.2708f);
        path.quadTo(376.924f, 5.97919f, 378.474f, 23.4292f);
        path.lineTo(378.974f, 18.0792f);
        path.quadTo(379.724f, 9.77919f, 379.974f, 4.17919f);
        path.quadTo(380.424f, 3.37919f, 380.174f, 1.82919f);
        path.lineTo(380.124f, 1.37919f);
        path.lineTo(379.774f, -0.270815f);
        path.lineTo(379.074f, -4.37081f);
        path.lineTo(377.924f, -10.8208f);
        path.lineTo(377.924f, -10.9208f);
        path.lineTo(377.824f, -10.9208f);
        path.lineTo(375.224f, -13.7708f);
        path.lineTo(374.724f, -14.2708f);
        path.close();
        path.moveTo(393.506f, 24.9969f);
        path.quadTo(394.156f, 10.2969f, 397.656f, -16.9531f);
        path.lineTo(395.956f, -15.3031f);
        path.quadTo(393.306f, -12.6531f, 391.456f, -11.4531f);
        path.lineTo(390.656f, -10.9531f);
        path.lineTo(390.356f, -11.0031f);
        path.lineTo(390.356f, -10.8031f);
        path.quadTo(389.656f, -6.30306f, 387.806f, 1.34694f);
        path.lineTo(387.606f, 2.19694f);
        path.lineTo(387.456f, 2.74694f);
        path.lineTo(387.756f, 2.74694f);
        path.lineTo(390.656f, 15.6469f);
        path.quadTo(391.895f, 20.6236f, 393.506f, 24.9969f);
        path.close();
        path.moveTo(393.414f, 37.9327f);
        path.lineTo(390.364f, 42.9827f);
        path.quadTo(387.764f, 47.3327f, 386.164f, 49.3827f);
        path.quadTo(386.164f, 47.7827f, 382.114f, 41.7827f);
        path.lineTo(379.614f, 38.2827f);
        path.quadTo(380.914f, 57.7327f, 381.114f, 73.1327f);
        path.lineTo(388.214f, 73.2827f);
        path.lineTo(394.164f, 73.0827f);
        path.lineTo(393.814f, 56.3327f);
        path.lineTo(393.414f, 37.9327f);
        path.close();
    }

    private static void draw_61(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_61(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_62(Path path)
    {
        path.reset();
        path.moveTo(378.453f, 23.4778f);
        path.lineTo(379.253f, 33.8778f);
        path.lineTo(379.603f, 38.2778f);
        path.lineTo(382.103f, 41.7778f);
        path.quadTo(386.153f, 47.7778f, 386.153f, 49.3778f);
        path.quadTo(387.753f, 47.3278f, 390.353f, 42.9778f);
        path.lineTo(393.403f, 37.9278f);
        path.lineTo(393.403f, 36.7278f);
        path.lineTo(393.303f, 31.1278f);
        path.lineTo(393.503f, 24.9778f);
        path.quadTo(391.853f, 20.6278f, 390.653f, 15.6278f);
        path.lineTo(387.753f, 2.72779f);
        path.lineTo(387.453f, 2.72779f);
        path.lineTo(387.603f, 2.17779f);
        path.lineTo(387.803f, 1.32779f);
        path.quadTo(389.653f, -6.32221f, 390.353f, -10.8222f);
        path.lineTo(390.353f, -11.0222f);
        path.lineTo(390.653f, -10.9722f);
        path.lineTo(391.453f, -11.4722f);
        path.quadTo(393.303f, -12.6722f, 395.953f, -15.3222f);
        path.lineTo(397.653f, -16.9722f);
        path.lineTo(398.503f, -23.5722f);
        path.lineTo(400.003f, -34.4722f);
        path.quadTo(397.003f, -30.4722f, 392.903f, -24.1222f);
        path.lineTo(385.153f, -11.9722f);
        path.lineTo(385.003f, -11.8222f);
        path.lineTo(384.903f, -11.9722f);
        path.lineTo(382.603f, -11.8222f);
        path.lineTo(382.403f, -11.8222f);
        path.lineTo(376.753f, -20.2722f);
        path.quadTo(374.403f, -24.2222f, 373.253f, -27.4222f);
        path.lineTo(374.703f, -14.2222f);
        path.lineTo(375.203f, -13.7222f);
        path.lineTo(377.803f, -10.8722f);
        path.lineTo(377.903f, -10.8722f);
        path.lineTo(377.903f, -10.7722f);
        path.lineTo(379.053f, -4.32221f);
        path.lineTo(379.753f, -0.222208f);
        path.lineTo(380.103f, 1.42779f);
        path.lineTo(380.153f, 1.87779f);
        path.quadTo(380.403f, 3.42779f, 379.953f, 4.22779f);
        path.quadTo(379.703f, 9.82779f, 378.953f, 18.1278f);
        path.lineTo(378.453f, 23.4778f);
        path.close();
    }

    private static void draw_62(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_62(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 102, 0, 153));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_63(Path path)
    {
        path.reset();
        path.moveTo(418.503f, 155.644f);
        path.quadTo(421.653f, 126.844f, 422.303f, 68.4939f);
        path.lineTo(418.803f, 69.294f);
        path.quadTo(404.453f, 72.344f, 394.153f, 73.094f);
        path.lineTo(388.203f, 73.294f);
        path.lineTo(381.103f, 73.144f);
        path.quadTo(371.553f, 72.694f, 362.803f, 71.194f);
        path.lineTo(353.103f, 69.544f);
        path.lineTo(355.103f, 97.194f);
        path.quadTo(356.403f, 115.144f, 360.603f, 152.844f);
        path.quadTo(366.353f, 155.144f, 378.203f, 155.844f);
        path.lineTo(377.553f, 145.444f);
        path.quadTo(377.553f, 128.044f, 381.803f, 118.694f);
        path.quadTo(385.503f, 110.594f, 391.353f, 110.594f);
        path.quadTo(398.053f, 110.594f, 398.403f, 135.144f);
        path.quadTo(398.703f, 146.844f, 397.753f, 158.744f);
        path.lineTo(409.603f, 157.344f);
        path.lineTo(418.503f, 155.644f);
        path.close();
    }

    private static void draw_63(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_63(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 102, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_64(Path path)
    {
        path.reset();
        path.moveTo(397.787f, 158.728f);
        path.lineTo(397.737f, 159.528f);
        path.lineTo(397.937f, 159.728f);
        path.quadTo(400.237f, 161.378f, 406.337f, 163.428f);
        path.quadTo(414.537f, 166.428f, 418.137f, 166.428f);
        path.quadTo(421.387f, 166.428f, 424.887f, 165.028f);
        path.quadTo(428.137f, 163.578f, 428.137f, 162.378f);
        path.quadTo(428.137f, 159.078f, 421.387f, 157.478f);
        path.lineTo(418.387f, 156.878f);
        path.lineTo(418.537f, 155.628f);
        path.lineTo(409.637f, 157.328f);
        path.lineTo(397.787f, 158.728f);
        path.close();
        path.moveTo(360.637f, 152.836f);
        path.lineTo(360.687f, 153.536f);
        path.lineTo(359.887f, 153.536f);
        path.quadTo(359.187f, 154.186f, 352.387f, 156.736f);
        path.quadTo(348.437f, 158.336f, 348.437f, 162.186f);
        path.quadTo(348.437f, 165.986f, 357.687f, 165.986f);
        path.quadTo(362.687f, 165.986f, 371.387f, 161.236f);
        path.quadTo(375.637f, 158.936f, 378.287f, 157.186f);
        path.lineTo(378.237f, 155.836f);
        path.quadTo(366.392f, 155.138f, 360.637f, 152.836f);
        path.close();
    }

    private static void draw_64(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_64(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_65(Path path)
    {
        path.reset();
        path.moveTo(310.782f, -104.914f);
        path.quadTo(299.532f, -121.014f, 281.782f, -121.014f);
        path.quadTo(261.482f, -121.014f, 251.132f, -109.714f);
        path.quadTo(239.782f, -97.4135f, 239.782f, -71.2635f);
        path.quadTo(239.782f, -45.6135f, 249.332f, -27.3135f);
        path.quadTo(255.532f, -15.4135f, 264.032f, -10.7635f);
        path.quadTo(268.282f, -6.4635f, 281.532f, -6.4635f);
        path.quadTo(300.882f, -6.4635f, 311.382f, -23.2135f);
        path.quadTo(321.532f, -39.3135f, 321.532f, -67.3135f);
        path.quadTo(321.508f, -89.5379f, 310.782f, -104.914f);
        path.close();
    }

    private static void draw_65(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_65(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_66(Path path)
    {
        path.reset();
        path.moveTo(264.24f, -69.7429f);
        path.quadTo(261.84f, -70.9428f, 259.49f, -70.9428f);
        path.quadTo(255.94f, -70.9428f, 253.64f, -69.6428f);
        path.lineTo(252.54f, -68.8928f);
        path.quadTo(251.24f, -67.8428f, 251.14f, -66.2428f);
        path.lineTo(251.14f, -66.1928f);
        path.lineTo(251.14f, -66.0428f);
        path.quadTo(251.39f, -63.8928f, 252.94f, -63.1928f);
        path.quadTo(254.24f, -62.5928f, 258.29f, -62.5928f);
        path.lineTo(263.64f, -63.1928f);
        path.quadTo(267.24f, -63.9928f, 267.24f, -65.9428f);
        path.quadTo(267.233f, -68.3158f, 264.24f, -69.7429f);
        path.close();
    }

    private static void draw_66(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_66(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_67(Path path)
    {
        path.reset();
        path.moveTo(262.445f, -78.6736f);
        path.quadTo(262.445f, -82.0236f, 261.245f, -86.6736f);
        path.lineTo(259.845f, -91.3236f);
        path.lineTo(258.395f, -88.9236f);
        path.quadTo(253.545f, -80.1236f, 253.545f, -76.8736f);
        path.quadTo(253.545f, -75.4736f, 254.145f, -73.2736f);
        path.lineTo(257.695f, -73.2736f);
        path.quadTo(261.845f, -74.6236f, 262.095f, -74.9736f);
        path.quadTo(262.445f, -75.3131f, 262.445f, -78.6736f);
        path.close();
        path.moveTo(256.506f, -54.2291f);
        path.quadTo(254.106f, -53.7291f, 254.106f, -50.6291f);
        path.quadTo(254.106f, -45.2791f, 262.056f, -32.8791f);
        path.quadTo(262.556f, -36.4291f, 264.206f, -42.1791f);
        path.quadTo(266.606f, -49.9291f, 266.606f, -51.8291f);
        path.quadTo(266.606f, -53.8791f, 264.806f, -54.2291f);
        path.lineTo(260.856f, -54.2291f);
        path.lineTo(256.506f, -54.2291f);
        path.close();
    }

    private static void draw_67(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_67(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 204, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_68(Path path)
    {
        path.reset();
        path.moveTo(252.916f, -58.9707f);
        path.quadTo(256.516f, -57.7707f, 260.066f, -57.7707f);
        path.quadTo(261.966f, -57.7707f, 263.166f, -58.2707f);
        path.quadTo(264.01f, -58.5103f, 266.036f, -59.5691f);
    }

    private static void draw_68(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_68(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_69(Path path)
    {
        path.reset();
        path.moveTo(298.674f, -69.7429f);
        path.quadTo(301.074f, -70.9428f, 303.474f, -70.9428f);
        path.quadTo(307.024f, -70.9428f, 309.324f, -69.6428f);
        path.lineTo(310.374f, -68.8928f);
        path.quadTo(311.724f, -67.8428f, 311.774f, -66.2428f);
        path.lineTo(311.774f, -66.1928f);
        path.lineTo(311.774f, -66.0428f);
        path.quadTo(311.574f, -63.8928f, 309.974f, -63.1928f);
        path.quadTo(308.724f, -62.5928f, 304.674f, -62.5928f);
        path.lineTo(299.274f, -63.1928f);
        path.quadTo(295.674f, -63.9928f, 295.674f, -65.9428f);
        path.quadTo(295.682f, -68.3158f, 298.674f, -69.7429f);
        path.close();
    }

    private static void draw_69(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_69(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_70(Path path)
    {
        path.reset();
        path.moveTo(300.47f, -78.6736f);
        path.quadTo(300.47f, -82.0236f, 301.67f, -86.6736f);
        path.lineTo(303.07f, -91.3236f);
        path.lineTo(304.52f, -88.9236f);
        path.quadTo(309.42f, -80.1236f, 309.42f, -76.8736f);
        path.quadTo(309.42f, -75.4736f, 308.82f, -73.2736f);
        path.lineTo(305.27f, -73.2736f);
        path.quadTo(301.07f, -74.6236f, 300.82f, -74.9736f);
        path.quadTo(300.47f, -75.3131f, 300.47f, -78.6736f);
        path.close();
        path.moveTo(306.408f, -54.2291f);
        path.quadTo(308.808f, -53.7291f, 308.808f, -50.6291f);
        path.quadTo(308.808f, -45.2791f, 300.808f, -32.8791f);
        path.quadTo(300.308f, -36.4291f, 298.658f, -42.1791f);
        path.quadTo(296.258f, -49.9291f, 296.258f, -51.8291f);
        path.quadTo(296.258f, -53.8791f, 298.058f, -54.2291f);
        path.lineTo(302.008f, -54.2291f);
        path.lineTo(306.408f, -54.2291f);
        path.close();
    }

    private static void draw_70(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_70(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 204, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_71(Path path)
    {
        path.reset();
        path.moveTo(309.999f, -58.9707f);
        path.quadTo(306.449f, -57.7707f, 302.899f, -57.7707f);
        path.quadTo(300.949f, -57.7707f, 299.749f, -58.2707f);
        path.quadTo(298.905f, -58.5103f, 296.879f, -59.5691f);
    }

    private static void draw_71(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_71(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_72(Path path)
    {
        path.reset();
        path.moveTo(277.13f, -26.1478f);
        path.lineTo(276.78f, -26.1478f);
        path.lineTo(276.38f, -26.1478f);
        path.quadTo(275.13f, -26.4478f, 274.38f, -26.1478f);
        path.quadTo(273.18f, -25.9478f, 273.18f, -24.1478f);
        path.quadTo(273.18f, -21.6478f, 274.98f, -20.8478f);
        path.quadTo(276.33f, -20.2478f, 279.38f, -20.2478f);
        path.quadTo(290.48f, -20.2478f, 290.48f, -24.7478f);
        path.quadTo(290.48f, -26.7478f, 287.18f, -26.7478f);
        path.lineTo(280.98f, -25.5978f);
        path.quadTo(280.58f, -25.2478f, 280.23f, -25.3478f);
        path.lineTo(279.38f, -25.5978f);
        path.lineTo(278.48f, -25.8478f);
        path.lineTo(277.13f, -26.1478f);
        path.close();
    }

    private static void draw_72(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_72(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_73(Path path)
    {
        path.reset();
        path.moveTo(224.328f, -10.1737f);
        path.quadTo(221.628f, -15.2737f, 214.728f, -17.2737f);
        path.quadTo(207.878f, -18.5737f, 204.128f, -19.7237f);
        path.quadTo(197.778f, -21.3237f, 195.028f, -24.5737f);
        path.lineTo(194.278f, -24.9737f);
        path.lineTo(184.228f, -29.0237f);
        path.quadTo(177.028f, -31.8737f, 172.978f, -31.8737f);
        path.quadTo(164.028f, -31.8737f, 154.428f, -22.2737f);
        path.quadTo(148.628f, -16.4237f, 146.428f, -11.1737f);
        path.quadTo(153.228f, -6.92371f, 162.228f, -4.62371f);
        path.quadTo(166.878f, -3.47371f, 172.628f, -2.82371f);
        path.lineTo(190.778f, -1.82371f);
        path.quadTo(200.528f, -1.82371f, 208.028f, -3.37371f);
        path.quadTo(213.678f, -4.52371f, 218.078f, -6.52371f);
        path.quadTo(221.06f, -7.87197f, 224.328f, -10.1737f);
        path.close();
    }

    private static void draw_73(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_73(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0603112f, 0.0f, 0.0f, 0.0603112f, 180.181f, -56.3007f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_74(Path path)
    {
        path.reset();
        path.moveTo(146.437f, -11.1865f);
        path.quadTo(145.237f, -8.23648f, 145.237f, -5.48648f);
        path.quadTo(145.237f, -2.78648f, 148.187f, 5.46352f);
        path.quadTo(150.887f, 12.8135f, 154.187f, 20.2635f);
        path.quadTo(157.187f, 27.0135f, 159.437f, 34.4635f);
        path.quadTo(161.037f, 39.4135f, 161.737f, 42.8135f);
        path.quadTo(161.587f, 42.8135f, 161.737f, 42.9135f);
        path.quadTo(156.587f, 44.7635f, 153.187f, 49.6135f);
        path.quadTo(148.837f, 55.5635f, 148.837f, 64.0135f);
        path.quadTo(148.837f, 73.8135f, 161.387f, 79.5135f);
        path.quadTo(171.337f, 84.0635f, 183.187f, 84.0635f);
        path.quadTo(224.037f, 84.0635f, 224.037f, 60.9135f);
        path.quadTo(224.037f, 55.0635f, 219.737f, 48.8135f);
        path.quadTo(216.737f, 44.4635f, 213.537f, 42.5635f);
        path.lineTo(212.937f, 42.2135f);
        path.lineTo(212.687f, 40.8635f);
        path.lineTo(212.687f, 35.2635f);
        path.lineTo(212.687f, 32.1635f);
        path.lineTo(213.037f, 25.6135f);
        path.quadTo(213.037f, 23.1135f, 214.037f, 16.7135f);
        path.lineTo(214.437f, 13.5635f);
        path.quadTo(216.887f, 12.7135f, 219.337f, 10.7635f);
        path.quadTo(226.087f, 5.86353f, 226.087f, -2.33647f);
        path.quadTo(226.087f, -6.93647f, 224.337f, -10.1865f);
        path.quadTo(221.087f, -7.88647f, 218.087f, -6.53647f);
        path.quadTo(213.687f, -4.53647f, 208.037f, -3.38647f);
        path.quadTo(200.537f, -1.83647f, 190.787f, -1.83647f);
        path.lineTo(172.637f, -2.83647f);
        path.quadTo(166.887f, -3.48647f, 162.237f, -4.63647f);
        path.quadTo(153.204f, -6.90523f, 146.437f, -11.1865f);
        path.close();
    }

    private static void draw_74(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_74(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_75(Path path)
    {
        path.reset();
        path.moveTo(208.032f, -3.36055f);
        path.quadTo(206.782f, -5.51055f, 204.032f, -7.01055f);
        path.quadTo(202.832f, -7.81055f, 197.832f, -9.21055f);
        path.lineTo(196.082f, -9.86055f);
        path.lineTo(194.982f, -10.4105f);
        path.quadTo(192.782f, -10.5105f, 191.882f, -11.0605f);
        path.quadTo(190.432f, -11.8605f, 187.682f, -11.8605f);
        path.quadTo(181.582f, -11.8605f, 176.532f, -7.66055f);
        path.quadTo(174.032f, -5.51055f, 172.632f, -2.81055f);
        path.lineTo(190.782f, -1.81055f);
        path.quadTo(200.528f, -1.8414f, 208.032f, -3.36055f);
        path.close();
    }

    private static void draw_75(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_75(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0551975f, 0.0f, 0.0f, 0.0551975f, 225.157f, 7.22748f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_76(Path path)
    {
        path.reset();
        path.moveTo(172.631f, -2.80813f);
        path.quadTo(170.831f, 0.541872f, 170.831f, 4.84187f);
        path.quadTo(170.831f, 11.7419f, 175.981f, 16.7919f);
        path.quadTo(181.131f, 21.7919f, 187.931f, 21.7919f);
        path.quadTo(196.281f, 21.7919f, 202.281f, 17.5919f);
        path.quadTo(209.431f, 12.5919f, 209.431f, 3.74187f);
        path.quadTo(209.431f, -0.00812864f, 208.531f, -2.30813f);
        path.lineTo(208.031f, -3.35813f);
        path.quadTo(200.531f, -1.80813f, 190.781f, -1.80813f);
        path.lineTo(172.631f, -2.80813f);
        path.close();
    }

    private static Shader create_gradient_8()
    {
        int colors[] = {
            Color.argb(255, 219, 0, 87),
            Color.argb(255, 255, 51, 102)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_76(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_76(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_8();
        shader.setLocalMatrix(createMatrix(0.0f, -0.0161139f, 0.0153693f, 0.0f, 191.367f, 11.3246f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_77(Path path)
    {
        path.reset();
        path.moveTo(192.978f, 93.4048f);
        path.lineTo(197.278f, 104.555f);
        path.lineTo(196.878f, 105.105f);
        path.quadTo(189.378f, 115.005f, 189.378f, 130.005f);
        path.quadTo(189.378f, 139.705f, 192.778f, 146.855f);
        path.lineTo(196.278f, 153.505f);
        path.lineTo(194.428f, 156.055f);
        path.quadTo(192.378f, 158.905f, 192.378f, 160.705f);
        path.quadTo(192.378f, 165.305f, 195.628f, 167.155f);
        path.lineTo(203.678f, 171.255f);
        path.quadTo(212.528f, 177.855f, 219.778f, 177.855f);
        path.quadTo(224.928f, 177.855f, 224.928f, 175.605f);
        path.quadTo(224.928f, 174.655f, 223.978f, 174.155f);
        path.lineTo(221.578f, 173.105f);
        path.quadTo(220.278f, 172.455f, 217.728f, 169.755f);
        path.lineTo(212.428f, 162.705f);
        path.lineTo(211.678f, 161.905f);
        path.quadTo(211.228f, 156.205f, 211.228f, 151.255f);
        path.quadTo(211.228f, 142.905f, 214.878f, 119.105f);
        path.lineTo(214.878f, 118.555f);
        path.quadTo(216.228f, 117.255f, 217.178f, 115.105f);
        path.quadTo(218.378f, 112.355f, 218.378f, 110.105f);
        path.quadTo(218.378f, 108.755f, 217.628f, 106.205f);
        path.lineTo(217.578f, 105.905f);
        path.quadTo(218.728f, 101.705f, 220.978f, 90.6048f);
        path.lineTo(221.228f, 89.3548f);
        path.lineTo(211.878f, 91.2548f);
        path.lineTo(195.278f, 93.2548f);
        path.lineTo(192.978f, 93.4048f);
        path.close();
    }

    private static void draw_77(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_77(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0589204f, 0.0f, 0.0f, 0.0589204f, 220.737f, 110.714f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_78(Path path)
    {
        path.reset();
        path.moveTo(221.244f, 89.3997f);
        path.quadTo(224.544f, 73.0997f, 224.544f, 66.2997f);
        path.quadTo(224.544f, 58.6997f, 222.194f, 54.0497f);
        path.quadTo(218.944f, 47.8497f, 211.894f, 47.8497f);
        path.quadTo(204.744f, 47.8497f, 197.494f, 55.8497f);
        path.quadTo(189.144f, 64.9497f, 189.144f, 77.2497f);
        path.quadTo(189.144f, 82.6997f, 192.494f, 91.9997f);
        path.lineTo(192.994f, 93.4497f);
        path.lineTo(195.294f, 93.2997f);
        path.lineTo(211.894f, 91.2997f);
        path.lineTo(221.244f, 89.3997f);
        path.close();
    }

    private static void draw_78(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_78(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_79(Path path)
    {
        path.reset();
        path.moveTo(158.084f, 92.0698f);
        path.quadTo(164.284f, 100.67f, 170.584f, 105.02f);
        path.lineTo(170.284f, 105.02f);
        path.quadTo(159.184f, 108.07f, 153.984f, 119.82f);
        path.quadTo(150.034f, 128.52f, 150.034f, 139.52f);
        path.quadTo(150.034f, 141.97f, 150.484f, 145.97f);
        path.lineTo(150.884f, 149.02f);
        path.lineTo(147.284f, 152.67f);
        path.quadTo(145.234f, 155.12f, 145.234f, 157.67f);
        path.quadTo(145.234f, 160.52f, 150.634f, 165.12f);
        path.quadTo(153.234f, 167.57f, 156.584f, 169.82f);
        path.quadTo(160.884f, 173.77f, 163.384f, 174.82f);
        path.quadTo(166.134f, 176.02f, 171.834f, 176.02f);
        path.lineTo(174.734f, 176.02f);
        path.quadTo(176.884f, 175.67f, 176.884f, 174.32f);
        path.quadTo(176.884f, 172.57f, 174.134f, 170.57f);
        path.quadTo(170.284f, 167.67f, 168.784f, 165.27f);
        path.lineTo(165.284f, 157.77f);
        path.quadTo(163.634f, 154.17f, 161.984f, 152.27f);
        path.quadTo(166.484f, 143.17f, 178.784f, 130.32f);
        path.quadTo(187.734f, 120.97f, 193.834f, 116.32f);
        path.quadTo(195.234f, 115.92f, 196.434f, 114.72f);
        path.lineTo(197.184f, 113.92f);
        path.quadTo(199.784f, 111.07f, 199.784f, 106.72f);
        path.lineTo(199.684f, 103.87f);
        path.quadTo(198.584f, 101.97f, 197.984f, 100.22f);
        path.lineTo(197.384f, 98.8198f);
        path.lineTo(195.284f, 93.2698f);
        path.lineTo(185.184f, 93.5698f);
        path.lineTo(171.834f, 92.9198f);
        path.lineTo(158.084f, 92.0698f);
        path.close();
    }

    private static void draw_79(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_79(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0623061f, 0.0f, 0.0f, 0.0623061f, 203.152f, 107.399f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_80(Path path)
    {
        path.reset();
        path.moveTo(158.084f, 92.0698f);
        path.lineTo(171.834f, 92.9198f);
        path.lineTo(185.184f, 93.5698f);
        path.lineTo(195.284f, 93.2698f);
        path.quadTo(185.334f, 66.9198f, 183.084f, 62.1198f);
        path.quadTo(173.634f, 43.3198f, 162.784f, 43.3198f);
        path.quadTo(155.234f, 43.3198f, 150.334f, 51.0698f);
        path.quadTo(146.184f, 57.6698f, 146.184f, 64.5698f);
        path.quadTo(146.184f, 74.6198f, 156.034f, 88.9698f);
        path.lineTo(158.084f, 92.0698f);
        path.close();
    }

    private static void draw_80(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_80(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_8();
        shader.setLocalMatrix(createMatrix(-0.00619549f, 0.0f, 0.0f, -0.02998f, 192.058f, 70.9858f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_81(Path path)
    {
        path.reset();
        path.moveTo(214.845f, -118.079f);
        path.quadTo(212.495f, -118.079f, 209.845f, -115.579f);
        path.quadTo(207.345f, -113.179f, 206.995f, -110.879f);
        path.lineTo(206.995f, -109.379f);
        path.lineTo(205.445f, -109.729f);
        path.quadTo(202.695f, -109.729f, 200.995f, -108.279f);
        path.quadTo(198.995f, -106.629f, 198.995f, -103.529f);
        path.quadTo(198.995f, -100.629f, 200.445f, -98.6295f);
        path.quadTo(201.395f, -97.3295f, 202.795f, -96.4795f);
        path.lineTo(201.295f, -95.7795f);
        path.quadTo(198.045f, -93.7295f, 198.045f, -89.2295f);
        path.quadTo(198.045f, -85.0295f, 200.695f, -83.3795f);
        path.quadTo(201.995f, -82.4795f, 204.345f, -82.2795f);
        path.quadTo(201.595f, -80.9795f, 201.595f, -77.3795f);
        path.quadTo(201.595f, -75.7295f, 202.495f, -74.8795f);
        path.lineTo(203.695f, -73.9295f);
        path.lineTo(201.595f, -73.1295f);
        path.quadTo(198.045f, -71.0795f, 198.045f, -67.3295f);
        path.quadTo(198.045f, -64.8795f, 199.345f, -63.0795f);
        path.quadTo(199.845f, -62.4795f, 200.445f, -62.0295f);
        path.lineTo(201.295f, -61.4295f);
        path.lineTo(200.695f, -60.6795f);
        path.quadTo(199.495f, -58.8795f, 199.345f, -56.6295f);
        path.lineTo(199.245f, -55.7795f);
        path.quadTo(199.245f, -47.0795f, 206.145f, -47.0795f);
        path.lineTo(208.645f, -47.3295f);
        path.lineTo(209.845f, -48.1795f);
        path.lineTo(210.945f, -45.7795f);
        path.quadTo(213.195f, -41.7295f, 217.245f, -41.7295f);
        path.quadTo(219.295f, -41.7295f, 220.845f, -42.9795f);
        path.lineTo(222.495f, -44.9295f);
        path.quadTo(225.245f, -42.6795f, 228.595f, -42.6795f);
        path.quadTo(233.845f, -42.6795f, 237.795f, -44.6795f);
        path.quadTo(243.195f, -47.5795f, 243.195f, -53.5295f);
        path.quadTo(243.195f, -56.6295f, 241.245f, -59.2295f);
        path.lineTo(240.195f, -60.5295f);
        path.quadTo(243.045f, -60.8295f, 244.945f, -62.9295f);
        path.quadTo(246.745f, -65.0795f, 246.745f, -67.9295f);
        path.quadTo(246.745f, -70.9295f, 245.295f, -73.3295f);
        path.quadTo(244.245f, -75.2295f, 242.445f, -75.9795f);
        path.lineTo(243.795f, -76.9295f);
        path.quadTo(247.295f, -79.7795f, 247.295f, -83.8295f);
        path.quadTo(247.295f, -88.0295f, 244.345f, -91.8295f);
        path.quadTo(240.795f, -96.3795f, 235.395f, -96.3795f);
        path.lineTo(233.495f, -96.3795f);
        path.lineTo(233.595f, -97.7795f);
        path.quadTo(233.595f, -100.429f, 232.395f, -102.329f);
        path.quadTo(230.895f, -104.729f, 227.895f, -104.729f);
        path.quadTo(226.345f, -104.729f, 224.745f, -103.629f);
        path.lineTo(224.895f, -105.779f);
        path.quadTo(224.895f, -109.979f, 222.495f, -113.679f);
        path.quadTo(219.494f, -118.079f, 214.845f, -118.079f);
        path.close();
    }

    private static void draw_81(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_81(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_82(Path path)
    {
        path.reset();
        path.moveTo(216.134f, -109.793f);
        path.quadTo(208.384f, -132.943f, 189.534f, -134.743f);
        path.lineTo(181.784f, -134.993f);
        path.quadTo(169.734f, -133.193f, 158.634f, -125.793f);
        path.quadTo(144.184f, -116.043f, 139.984f, -101.343f);
        path.lineTo(139.984f, -98.3432f);
        path.lineTo(140.484f, -98.4932f);
        path.quadTo(139.184f, -93.6932f, 139.384f, -86.7932f);
        path.quadTo(139.384f, -61.5932f, 150.184f, -43.4932f);
        path.quadTo(162.534f, -22.5932f, 184.134f, -22.5932f);
        path.quadTo(221.184f, -22.5932f, 221.184f, -72.6932f);
        path.quadTo(221.152f, -94.8779f, 216.134f, -109.793f);
        path.close();
    }

    private static void draw_82(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_82(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 254, 174, 103));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_83(Path path)
    {
        path.reset();
        path.moveTo(163.056f, -59.8914f);
        path.quadTo(165.156f, -59.8914f, 166.606f, -61.4914f);
        path.quadTo(168.156f, -62.8914f, 168.156f, -65.0414f);
        path.quadTo(168.156f, -67.2414f, 166.606f, -68.7414f);
        path.quadTo(165.156f, -70.1914f, 163.056f, -70.1914f);
        path.quadTo(160.856f, -70.1914f, 159.306f, -68.7414f);
        path.quadTo(157.856f, -67.2414f, 157.856f, -65.0414f);
        path.quadTo(157.856f, -62.8914f, 159.306f, -61.4914f);
        path.quadTo(160.892f, -59.8914f, 163.056f, -59.8914f);
        path.close();
        path.moveTo(220.093f, -66.1061f);
        path.quadTo(221.393f, -67.3061f, 221.393f, -68.9561f);
        path.quadTo(221.393f, -70.7561f, 220.093f, -72.0561f);
        path.quadTo(218.893f, -73.2561f, 217.193f, -73.2561f);
        path.quadTo(215.443f, -73.2561f, 214.143f, -72.0561f);
        path.quadTo(212.943f, -70.7561f, 212.943f, -68.9561f);
        path.quadTo(212.943f, -67.3061f, 214.143f, -66.1061f);
        path.quadTo(215.443f, -64.8061f, 217.193f, -64.8061f);
        path.quadTo(218.896f, -64.8171f, 220.093f, -66.1061f);
        path.close();
    }

    private static void draw_83(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_83(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_84(Path path)
    {
        path.reset();
        path.moveTo(182.39f, -83.185f);
        path.quadTo(179.09f, -86.485f, 174.49f, -86.485f);
        path.quadTo(169.84f, -86.485f, 166.54f, -83.185f);
        path.quadTo(163.24f, -79.935f, 163.24f, -75.285f);
        path.quadTo(163.24f, -70.685f, 166.54f, -67.335f);
        path.quadTo(169.84f, -64.035f, 174.49f, -64.035f);
        path.quadTo(179.09f, -64.035f, 182.39f, -67.335f);
        path.lineTo(182.84f, -67.785f);
        path.quadTo(185.69f, -70.935f, 185.69f, -75.285f);
        path.quadTo(185.69f, -79.585f, 182.84f, -82.785f);
        path.lineTo(182.39f, -83.185f);
        path.close();
    }

    private static void draw_84(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_84(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_85(Path path)
    {
        path.reset();
        path.moveTo(179.306f, -70.7556f);
        path.quadTo(181.306f, -72.7056f, 181.306f, -75.4556f);
        path.quadTo(181.306f, -78.2556f, 179.306f, -80.3056f);
        path.quadTo(177.306f, -82.2556f, 174.556f, -82.2556f);
        path.quadTo(171.806f, -82.2556f, 169.706f, -80.3056f);
        path.quadTo(167.756f, -78.2556f, 167.756f, -75.4556f);
        path.quadTo(167.756f, -72.7056f, 169.706f, -70.7556f);
        path.quadTo(171.806f, -68.6556f, 174.556f, -68.6556f);
        path.quadTo(177.326f, -68.6841f, 179.306f, -70.7556f);
        path.close();
    }

    private static void draw_85(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_85(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 51, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_86(Path path)
    {
        path.reset();
        path.moveTo(214.845f, -85.6249f);
        path.quadTo(211.995f, -88.4749f, 207.995f, -88.4749f);
        path.quadTo(204.045f, -88.4749f, 201.195f, -85.6249f);
        path.quadTo(198.345f, -82.8249f, 198.345f, -78.8249f);
        path.quadTo(198.345f, -74.8249f, 201.195f, -71.9749f);
        path.quadTo(204.045f, -69.1249f, 207.995f, -69.1249f);
        path.quadTo(211.995f, -69.1249f, 214.845f, -71.9749f);
        path.lineTo(215.195f, -72.3249f);
        path.quadTo(217.695f, -75.0749f, 217.695f, -78.8249f);
        path.quadTo(217.695f, -82.5249f, 215.195f, -85.2749f);
        path.lineTo(214.845f, -85.6249f);
        path.close();
    }

    private static void draw_86(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_86(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_87(Path path)
    {
        path.reset();
        path.moveTo(212.129f, -74.9908f);
        path.quadTo(213.929f, -76.6408f, 213.929f, -79.0408f);
        path.quadTo(213.929f, -81.4408f, 212.129f, -83.2408f);
        path.quadTo(210.479f, -84.8908f, 208.079f, -84.8908f);
        path.quadTo(205.679f, -84.8908f, 203.879f, -83.2408f);
        path.quadTo(202.179f, -81.4408f, 202.179f, -79.0408f);
        path.quadTo(202.179f, -76.6408f, 203.879f, -74.9908f);
        path.quadTo(205.679f, -73.1908f, 208.079f, -73.1908f);
        path.quadTo(210.472f, -73.1955f, 212.129f, -74.9908f);
        path.close();
    }

    private static void draw_87(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_87(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 51, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_88(Path path)
    {
        path.reset();
        path.moveTo(193.347f, -70.6636f);
        path.lineTo(191.347f, -70.5135f);
        path.lineTo(192.647f, -64.6636f);
        path.quadTo(194.547f, -57.7635f, 195.997f, -57.7635f);
        path.quadTo(210.547f, -57.7635f, 215.997f, -62.5135f);
        path.quadTo(208.147f, -69.5636f, 193.497f, -70.6636f);
        path.lineTo(193.347f, -70.6636f);
        path.close();
    }

    private static void draw_88(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_88(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_89(Path path)
    {
        path.reset();
        path.moveTo(166.37f, -61.6867f);
        path.quadTo(166.82f, -48.1867f, 173.27f, -38.3368f);
        path.quadTo(177.47f, -31.9867f, 182.87f, -29.1367f);
        path.quadTo(187.02f, -27.1367f, 191.92f, -27.1367f);
        path.quadTo(201.57f, -27.1367f, 207.27f, -34.8368f);
        path.quadTo(211.72f, -40.8368f, 212.07f, -48.1867f);
        path.lineTo(212.07f, -49.6367f);
        path.quadTo(212.07f, -51.5868f, 211.27f, -55.0368f);
        path.quadTo(209.07f, -52.1868f, 207.42f, -51.1868f);
        path.lineTo(206.07f, -50.9868f);
        path.quadTo(204.07f, -50.9868f, 201.97f, -53.5868f);
        path.lineTo(199.57f, -56.3368f);
        path.quadTo(198.47f, -56.3368f, 197.52f, -53.4367f);
        path.lineTo(196.22f, -49.7867f);
        path.lineTo(194.32f, -53.4367f);
        path.quadTo(193.12f, -55.5367f, 191.77f, -55.5367f);
        path.quadTo(190.97f, -55.5367f, 187.37f, -52.8367f);
        path.quadTo(183.82f, -50.3867f, 180.57f, -50.3867f);
        path.quadTo(176.47f, -50.3867f, 171.52f, -54.6367f);
        path.quadTo(166.969f, -58.6945f, 166.37f, -61.6867f);
        path.close();
        path.moveTo(174.012f, -46.9095f);
        path.lineTo(172.662f, -50.1096f);
        path.lineTo(175.062f, -48.1595f);
        path.quadTo(177.462f, -46.4095f, 178.662f, -46.1595f);
        path.lineTo(183.812f, -45.1096f);
        path.lineTo(188.062f, -44.7095f);
        path.quadTo(203.162f, -44.7095f, 207.812f, -49.9095f);
        path.lineTo(207.862f, -47.5095f);
        path.lineTo(207.862f, -45.7095f);
        path.quadTo(207.262f, -40.0095f, 203.162f, -36.6095f);
        path.lineTo(201.362f, -35.4095f);
        path.quadTo(197.612f, -33.4095f, 192.712f, -33.4095f);
        path.quadTo(187.012f, -33.4095f, 182.312f, -36.7595f);
        path.quadTo(180.562f, -37.9095f, 179.012f, -39.6095f);
        path.quadTo(175.899f, -42.8585f, 174.012f, -46.9095f);
        path.close();
    }

    private static void draw_89(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_89(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_90(Path path)
    {
        path.reset();
        path.moveTo(207.894f, -45.7126f);
        path.lineTo(207.894f, -47.5126f);
        path.lineTo(207.844f, -49.9126f);
        path.quadTo(203.194f, -44.7126f, 188.094f, -44.7126f);
        path.lineTo(183.844f, -45.1126f);
        path.lineTo(178.694f, -46.1626f);
        path.quadTo(177.494f, -46.4126f, 175.094f, -48.1626f);
        path.lineTo(172.694f, -50.1126f);
        path.lineTo(174.044f, -46.9126f);
        path.quadTo(176.644f, -44.9626f, 180.494f, -43.4626f);
        path.quadTo(186.944f, -40.8126f, 192.544f, -40.8126f);
        path.quadTo(201.218f, -40.8329f, 207.894f, -45.7126f);
        path.close();
    }

    private static void draw_90(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_90(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_91(Path path)
    {
        path.reset();
        path.moveTo(201.357f, -35.4469f);
        path.lineTo(203.157f, -36.6469f);
        path.quadTo(207.257f, -40.0469f, 207.857f, -45.7469f);
        path.quadTo(201.207f, -40.8469f, 192.507f, -40.8469f);
        path.quadTo(186.907f, -40.8469f, 180.457f, -43.4969f);
        path.quadTo(176.607f, -44.9969f, 174.007f, -46.9469f);
        path.quadTo(175.857f, -42.8969f, 179.007f, -39.6469f);
        path.quadTo(180.557f, -37.9469f, 182.307f, -36.7969f);
        path.quadTo(185.707f, -39.0469f, 191.307f, -39.0469f);
        path.quadTo(197.029f, -39.0376f, 201.357f, -35.4469f);
        path.close();
    }

    private static void draw_91(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_91(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 109, 35, 35));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_92(Path path)
    {
        path.reset();
        path.moveTo(182.344f, -36.7819f);
        path.quadTo(187.044f, -33.4319f, 192.744f, -33.4319f);
        path.quadTo(197.644f, -33.4319f, 201.394f, -35.4319f);
        path.quadTo(197.044f, -39.0319f, 191.344f, -39.0319f);
        path.quadTo(185.705f, -39.0376f, 182.344f, -36.7819f);
        path.close();
    }

    private static void draw_92(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_92(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_93(Path path)
    {
        path.reset();
        path.moveTo(189.434f, -31.0735f);
        path.quadTo(189.234f, -30.9235f, 189.234f, -30.1236f);
        path.quadTo(189.234f, -29.5236f, 189.434f, -29.2736f);
        path.quadTo(189.434f, -28.9235f, 189.584f, -28.7736f);
        path.lineTo(190.484f, -28.6735f);
        path.lineTo(191.834f, -28.9235f);
        path.lineTo(191.834f, -30.1236f);
        path.quadTo(191.084f, -31.0736f, 190.284f, -31.0736f);
        path.lineTo(189.434f, -31.0735f);
        path.close();
        path.moveTo(187.638f, -30.1068f);
        path.lineTo(187.638f, -31.3068f);
        path.quadTo(185.488f, -33.0568f, 183.988f, -33.3068f);
        path.lineTo(183.838f, -33.3068f);
        path.lineTo(183.738f, -33.4068f);
        path.lineTo(183.388f, -33.4068f);
        path.lineTo(182.388f, -33.3068f);
        path.quadTo(182.988f, -31.1568f, 183.738f, -30.4568f);
        path.quadTo(184.438f, -29.8568f, 186.238f, -29.8568f);
        path.lineTo(187.638f, -30.1068f);
        path.close();
    }

    private static void draw_93(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_93(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_94(Path path)
    {
        path.reset();
        path.moveTo(204.165f, -152.283f);
        path.quadTo(201.415f, -156.133f, 196.365f, -156.133f);
        path.quadTo(193.665f, -156.133f, 190.515f, -153.733f);
        path.quadTo(188.665f, -152.283f, 187.665f, -150.733f);
        path.quadTo(185.065f, -154.333f, 183.165f, -155.533f);
        path.quadTo(180.865f, -156.933f, 176.565f, -156.933f);
        path.quadTo(170.965f, -156.933f, 167.665f, -153.933f);
        path.quadTo(164.415f, -151.083f, 164.415f, -146.683f);
        path.lineTo(164.515f, -145.383f);
        path.quadTo(158.815f, -151.533f, 151.915f, -151.533f);
        path.quadTo(146.065f, -151.533f, 142.915f, -146.833f);
        path.quadTo(140.765f, -143.433f, 140.765f, -140.133f);
        path.quadTo(140.765f, -138.433f, 141.965f, -136.033f);
        path.lineTo(141.265f, -136.333f);
        path.lineTo(136.715f, -136.983f);
        path.quadTo(133.865f, -136.983f, 132.415f, -134.883f);
        path.quadTo(131.215f, -133.183f, 131.215f, -131.083f);
        path.quadTo(131.215f, -127.333f, 133.165f, -125.233f);
        path.lineTo(131.715f, -125.333f);
        path.quadTo(119.315f, -125.333f, 119.315f, -112.583f);
        path.quadTo(119.315f, -110.533f, 119.915f, -108.583f);
        path.quadTo(117.665f, -108.233f, 115.365f, -107.333f);
        path.quadTo(109.515f, -104.933f, 109.515f, -100.133f);
        path.quadTo(109.515f, -98.1334f, 110.715f, -96.9334f);
        path.quadTo(109.665f, -96.6834f, 108.815f, -96.2334f);
        path.quadTo(105.615f, -94.5334f, 105.615f, -90.2334f);
        path.quadTo(105.615f, -89.1834f, 105.965f, -88.4334f);
        path.lineTo(107.115f, -88.2334f);
        path.lineTo(108.665f, -87.7334f);
        path.quadTo(106.515f, -87.0334f, 105.965f, -88.4334f);
        path.lineTo(101.865f, -88.9334f);
        path.quadTo(98.9147f, -88.9334f, 95.7647f, -86.5334f);
        path.quadTo(92.2147f, -83.7834f, 92.2147f, -80.1834f);
        path.quadTo(92.2147f, -77.7334f, 93.9147f, -74.9334f);
        path.quadTo(94.1147f, -74.4834f, 94.5147f, -74.1334f);
        path.lineTo(91.2647f, -74.5834f);
        path.quadTo(88.2647f, -74.5834f, 86.2647f, -72.8334f);
        path.quadTo(84.1147f, -71.0334f, 84.1147f, -67.8334f);
        path.quadTo(84.1147f, -63.9834f, 86.4647f, -62.4334f);
        path.quadTo(86.9647f, -62.0834f, 88.2647f, -61.5834f);
        path.quadTo(86.4647f, -60.8834f, 84.4647f, -59.3334f);
        path.quadTo(79.0647f, -55.2834f, 79.0647f, -50.1334f);
        path.quadTo(79.0647f, -45.0334f, 82.3147f, -41.7834f);
        path.quadTo(85.5147f, -38.5834f, 91.1147f, -38.5834f);
        path.quadTo(94.2147f, -38.5834f, 96.6147f, -39.7834f);
        path.lineTo(96.9147f, -39.8834f);
        path.quadTo(97.3647f, -37.1334f, 99.0147f, -34.9834f);
        path.quadTo(101.565f, -31.6334f, 105.615f, -31.6334f);
        path.quadTo(109.715f, -31.6334f, 112.965f, -34.2334f);
        path.quadTo(115.115f, -36.0334f, 116.065f, -38.3334f);
        path.quadTo(116.665f, -36.8834f, 117.765f, -35.5834f);
        path.quadTo(120.515f, -32.2334f, 124.215f, -32.2334f);
        path.quadTo(128.165f, -32.2334f, 130.865f, -36.6334f);
        path.quadTo(132.315f, -39.0334f, 133.015f, -41.8834f);
        path.lineTo(133.165f, -41.6834f);
        path.quadTo(135.815f, -37.9834f, 138.865f, -37.9834f);
        path.quadTo(143.765f, -37.9834f, 147.115f, -40.9334f);
        path.quadTo(150.315f, -43.8334f, 150.315f, -47.5334f);
        path.quadTo(150.315f, -49.7834f, 149.765f, -50.9834f);
        path.lineTo(148.065f, -52.6334f);
        path.lineTo(149.815f, -54.3334f);
        path.quadTo(153.065f, -57.7834f, 153.065f, -61.3834f);
        path.quadTo(153.065f, -65.0334f, 150.915f, -67.3334f);
        path.lineTo(145.715f, -71.0334f);
        path.lineTo(146.265f, -71.4834f);
        path.quadTo(147.965f, -72.6834f, 147.965f, -74.1334f);
        path.quadTo(147.965f, -75.4834f, 146.615f, -77.1334f);
        path.lineTo(146.265f, -77.5834f);
        path.quadTo(148.065f, -78.1834f, 149.015f, -78.7834f);
        path.quadTo(150.915f, -80.1834f, 150.915f, -84.0334f);
        path.quadTo(150.915f, -87.0334f, 149.615f, -89.2834f);
        path.quadTo(148.915f, -90.5834f, 147.365f, -92.2834f);
        path.lineTo(148.915f, -92.1834f);
        path.quadTo(152.715f, -92.1834f, 155.715f, -95.1334f);
        path.quadTo(158.665f, -98.1334f, 158.665f, -102.083f);
        path.lineTo(158.665f, -102.533f);
        path.quadTo(160.465f, -101.233f, 163.815f, -101.233f);
        path.quadTo(170.065f, -101.233f, 172.065f, -105.033f);
        path.quadTo(172.765f, -106.333f, 173.115f, -108.233f);
        path.quadTo(173.565f, -107.383f, 174.315f, -107.083f);
        path.quadTo(175.165f, -106.583f, 177.615f, -106.583f);
        path.quadTo(180.415f, -106.583f, 181.715f, -108.533f);
        path.quadTo(182.565f, -109.583f, 183.015f, -111.383f);
        path.quadTo(183.865f, -109.733f, 185.865f, -108.233f);
        path.quadTo(188.865f, -106.233f, 192.715f, -106.233f);
        path.quadTo(197.565f, -106.233f, 200.115f, -109.433f);
        path.quadTo(200.815f, -107.533f, 202.815f, -105.983f);
        path.quadTo(205.965f, -103.583f, 209.865f, -103.583f);
        path.quadTo(215.365f, -103.583f, 218.315f, -108.583f);
        path.quadTo(220.515f, -112.333f, 220.515f, -116.383f);
        path.lineTo(220.515f, -117.833f);
        path.quadTo(221.565f, -117.283f, 222.665f, -117.283f);
        path.quadTo(226.565f, -117.283f, 228.865f, -119.683f);
        path.quadTo(230.915f, -121.983f, 230.915f, -125.533f);
        path.quadTo(230.915f, -131.783f, 224.315f, -133.933f);
        path.quadTo(221.565f, -134.883f, 218.265f, -134.883f);
        path.quadTo(221.915f, -139.283f, 221.915f, -142.483f);
        path.quadTo(221.915f, -148.633f, 214.265f, -148.633f);
        path.quadTo(209.765f, -148.633f, 206.415f, -145.483f);
        path.quadTo(206.19f, -149.429f, 204.165f, -152.283f);
        path.close();
    }

    private static void draw_94(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_94(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_95(Path path)
    {
        path.reset();
        path.moveTo(160.155f, -26.8383f);
        path.quadTo(160.255f, -30.6383f, 154.755f, -31.1383f);
        path.lineTo(150.455f, -31.2383f);
        path.quadTo(142.205f, -26.9383f, 139.755f, -23.4883f);
        path.quadTo(136.905f, -19.5383f, 136.905f, -11.3383f);
        path.quadTo(136.905f, -4.88834f, 139.255f, -1.28834f);
        path.quadTo(141.305f, 1.51166f, 147.005f, 5.31166f);
        path.quadTo(149.505f, 6.91166f, 153.305f, 12.5117f);
        path.quadTo(156.805f, 17.5117f, 159.555f, 18.5117f);
        path.quadTo(160.155f, 17.3117f, 160.155f, 12.5117f);
        path.lineTo(161.805f, 15.9617f);
        path.quadTo(162.655f, 17.3117f, 164.555f, 17.3117f);
        path.quadTo(166.705f, 17.3117f, 167.155f, 14.7617f);
        path.quadTo(167.555f, 12.6617f, 166.705f, 9.51166f);
        path.lineTo(168.355f, 11.9117f);
        path.quadTo(169.455f, 13.1117f, 170.855f, 13.1117f);
        path.quadTo(172.405f, 13.1117f, 172.655f, 10.7117f);
        path.lineTo(172.655f, 5.91166f);
        path.quadTo(173.255f, 6.51166f, 175.655f, 6.51166f);
        path.quadTo(176.255f, 5.91166f, 176.255f, 2.96166f);
        path.quadTo(176.255f, -1.88834f, 170.855f, -9.78834f);
        path.quadTo(167.405f, -14.7883f, 164.905f, -17.2883f);
        path.quadTo(162.155f, -20.0383f, 161.455f, -21.0883f);
        path.quadTo(159.925f, -23.6159f, 160.155f, -26.8383f);
        path.close();
    }

    private static void draw_95(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_95(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0964305f, -0.185008f, 0.0f, 285.094f, -16.6646f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_96(Path path)
    {
        path.reset();
        path.moveTo(148.232f, -7.13541f);
        path.quadTo(145.982f, -11.5854f, 145.232f, -14.7854f);
        path.quadTo(145.132f, -14.4354f, 145.132f, -14.0354f);
        path.quadTo(145.132f, -12.6354f, 145.982f, -10.5854f);
        path.quadTo(146.805f, -8.33231f, 148.232f, -7.13541f);
        path.close();
    }

    private static void draw_96(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_96(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.00656076f, 0.0f, 0.0f, 0.00656076f, 146.299f, -11.3246f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_97(Path path)
    {
        path.reset();
        path.moveTo(145.24f, -14.7772f);
        path.quadTo(145.39f, -16.0772f, 146.09f, -17.8772f);
        path.quadTo(146.89f, -20.2772f, 146.89f, -22.2772f);
        path.quadTo(146.89f, -27.5272f, 144.29f, -31.5772f);
        path.quadTo(141.34f, -36.1272f, 136.64f, -36.1272f);
        path.lineTo(133.79f, -35.5272f);
        path.lineTo(133.79f, -36.7272f);
        path.quadTo(134.39f, -38.8772f, 134.39f, -45.4272f);
        path.lineTo(134.39f, -51.0772f);
        path.quadTo(133.94f, -55.1772f, 131.29f, -55.1772f);
        path.quadTo(125.44f, -55.1772f, 125.44f, -46.6272f);
        path.quadTo(125.44f, -42.4272f, 125.69f, -39.8272f);
        path.lineTo(124.04f, -45.2272f);
        path.quadTo(121.29f, -52.8272f, 118.64f, -52.8272f);
        path.quadTo(115.64f, -52.8272f, 115.64f, -46.8772f);
        path.quadTo(115.64f, -43.0272f, 117.44f, -38.8772f);
        path.quadTo(119.09f, -34.8272f, 121.89f, -32.1772f);
        path.quadTo(118.64f, -30.9772f, 117.44f, -28.9772f);
        path.quadTo(116.49f, -27.2772f, 116.49f, -23.7272f);
        path.quadTo(116.49f, -19.1772f, 119.94f, -15.9772f);
        path.quadTo(123.29f, -13.0772f, 128.44f, -12.2272f);
        path.quadTo(132.14f, -11.6272f, 133.34f, -5.3272f);
        path.quadTo(133.94f, -1.8772f, 134.39f, 5.0228f);
        path.quadTo(136.34f, 17.3228f, 142.24f, 28.1228f);
        path.quadTo(149.89f, 41.9728f, 159.49f, 41.9728f);
        path.quadTo(164.44f, 41.9728f, 166.04f, 39.5728f);
        path.quadTo(167.19f, 37.7728f, 167.19f, 32.8228f);
        path.quadTo(167.19f, 26.8228f, 165.54f, 22.2728f);
        path.quadTo(163.99f, 18.1228f, 158.89f, 9.7728f);
        path.quadTo(153.64f, 2.3728f, 150.39f, -3.0772f);
        path.quadTo(149.09f, -5.2272f, 148.24f, -7.1272f);
        path.quadTo(146.84f, -8.3272f, 145.99f, -10.5772f);
        path.quadTo(145.14f, -12.6272f, 145.14f, -14.0272f);
        path.quadTo(145.102f, -14.4089f, 145.24f, -14.7772f);
        path.close();
    }

    private static void draw_97(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_97(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0576139f, 0.0f, 0.0f, 0.0576139f, 172.078f, 34.6182f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_98(Path path)
    {
        path.reset();
        path.moveTo(134.376f, -23.6159f);
        path.quadTo(134.376f, -25.9659f, 131.876f, -27.8659f);
        path.quadTo(129.376f, -29.7659f, 125.826f, -30.3659f);
        path.lineTo(124.826f, -30.3659f);
        path.lineTo(123.076f, -30.3659f);
        path.quadTo(120.426f, -30.1659f, 120.426f, -28.2659f);
        path.quadTo(120.426f, -25.8659f, 124.026f, -23.6159f);
        path.quadTo(127.326f, -21.4659f, 130.476f, -21.4659f);
        path.lineTo(132.576f, -21.8159f);
        path.quadTo(134.376f, -22.419f, 134.376f, -23.6159f);
        path.close();
    }

    private static void draw_98(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_98(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.014709f, 0.0f, 0.0f, 0.014709f, 135.343f, -21.8205f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_99(Path path)
    {
        path.reset();
        path.moveTo(130.555f, -25.5033f);
        path.quadTo(130.555f, -21.8033f, 133.905f, -21.8033f);
        path.quadTo(136.305f, -21.8033f, 139.155f, -25.0033f);
        path.quadTo(141.855f, -28.1033f, 141.855f, -30.2533f);
        path.quadTo(141.855f, -33.7033f, 138.405f, -33.7033f);
        path.quadTo(137.105f, -33.7033f, 135.405f, -32.6533f);
        path.lineTo(134.705f, -32.1533f);
        path.lineTo(134.355f, -32.0533f);
        path.quadTo(130.555f, -30.1529f, 130.555f, -25.5033f);
        path.close();
    }

    private static void draw_99(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_99(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0154817f, 0.0f, 0.0f, 0.0154817f, 131.982f, -21.4523f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_100(Path path)
    {
        path.reset();
        path.moveTo(130.785f, -17.3552f);
        path.quadTo(130.785f, -19.4552f, 128.585f, -21.1552f);
        path.quadTo(126.385f, -22.8552f, 123.185f, -23.3552f);
        path.lineTo(122.335f, -23.3552f);
        path.lineTo(120.735f, -23.3552f);
        path.quadTo(118.435f, -23.1552f, 118.435f, -21.4552f);
        path.quadTo(118.435f, -19.3552f, 121.585f, -17.3552f);
        path.quadTo(124.585f, -15.4052f, 127.285f, -15.4052f);
        path.lineTo(129.235f, -15.7052f);
        path.quadTo(130.785f, -16.2964f, 130.785f, -17.3552f);
        path.close();
    }

    private static void draw_100(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_100(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0130794f, 0.0f, 0.0f, 0.0130794f, 131.66f, -15.7439f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_101(Path path)
    {
        path.reset();
        path.moveTo(421.772f, -119.046f);
        path.quadTo(411.572f, -150.096f, 385.022f, -150.096f);
        path.quadTo(368.022f, -150.096f, 353.772f, -128.596f);
        path.quadTo(338.872f, -106.046f, 338.872f, -75.8462f);
        path.quadTo(338.872f, -48.7962f, 352.922f, -34.8462f);
        path.quadTo(365.372f, -22.3462f, 384.472f, -23.9462f);
        path.lineTo(384.472f, -24.3962f);
        path.lineTo(387.172f, -24.1462f);
        path.lineTo(391.972f, -24.1462f);
        path.quadTo(409.022f, -24.1462f, 418.822f, -34.8962f);
        path.quadTo(428.422f, -45.3962f, 428.422f, -63.2962f);
        path.quadTo(428.401f, -99.1131f, 421.772f, -119.046f);
        path.close();
    }

    private static void draw_101(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_101(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.104438f, 0.0f, 0.0f, 0.104438f, 388.534f, -175.807f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_102(Path path)
    {
        path.reset();
        path.moveTo(353.134f, -81.8961f);
        path.quadTo(355.984f, -80.6961f, 357.934f, -80.6961f);
        path.quadTo(364.384f, -80.6961f, 364.484f, -85.8961f);
        path.quadTo(364.584f, -89.9961f, 357.434f, -88.9461f);
        path.quadTo(350.134f, -87.8961f, 350.134f, -84.2961f);
        path.quadTo(350.141f, -83.2311f, 353.134f, -81.8961f);
        path.close();
    }

    private static void draw_102(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_102(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_103(Path path)
    {
        path.reset();
        path.moveTo(361.834f, -103.164f);
        path.quadTo(358.984f, -103.164f, 358.984f, -102.164f);
        path.quadTo(358.984f, -101.014f, 359.134f, -101.114f);
        path.lineTo(360.434f, -100.864f);
        path.quadTo(361.634f, -100.864f, 361.834f, -101.114f);
        path.lineTo(362.084f, -101.364f);
        path.lineTo(362.234f, -102.064f);
        path.lineTo(362.084f, -102.864f);
        path.lineTo(361.834f, -103.164f);
        path.close();
        path.moveTo(357.783f, -100.632f);
        path.lineTo(357.433f, -101.382f);
        path.quadTo(356.583f, -101.832f, 354.933f, -101.832f);
        path.lineTo(354.683f, -101.132f);
        path.quadTo(354.683f, -99.9323f, 355.883f, -99.5823f);
        path.quadTo(357.553f, -99.8036f, 357.783f, -100.632f);
        path.close();
        path.moveTo(348.484f, -97.5479f);
        path.lineTo(349.484f, -97.4479f);
        path.lineTo(350.384f, -97.6479f);
        path.lineTo(350.534f, -98.1479f);
        path.lineTo(350.284f, -98.8479f);
        path.quadTo(348.634f, -99.2479f, 348.034f, -98.2479f);
        path.lineTo(348.484f, -97.5479f);
        path.close();
        path.moveTo(354.192f, -99.3433f);
        path.lineTo(353.592f, -100.443f);
        path.quadTo(352.092f, -100.443f, 351.842f, -99.6933f);
        path.lineTo(352.342f, -98.6433f);
        path.quadTo(353.742f, -98.6433f, 354.142f, -98.9933f);
        path.lineTo(354.192f, -99.3433f);
        path.close();
    }

    private static void draw_103(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_103(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_104(Path path)
    {
        path.reset();
        path.moveTo(356.034f, -83.4152f);
        path.quadTo(356.784f, -84.0152f, 356.784f, -84.9152f);
        path.quadTo(356.784f, -85.9152f, 356.034f, -86.6152f);
        path.quadTo(355.434f, -87.2152f, 354.484f, -87.2152f);
        path.quadTo(353.434f, -87.2152f, 352.834f, -86.6152f);
        path.quadTo(352.234f, -85.9152f, 352.234f, -84.9152f);
        path.quadTo(352.234f, -84.0152f, 352.834f, -83.4152f);
        path.quadTo(353.434f, -82.6652f, 354.484f, -82.6652f);
        path.quadTo(355.435f, -82.6787f, 356.034f, -83.4152f);
        path.close();
    }

    private static void draw_104(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_104(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_105(Path path)
    {
        path.reset();
        path.moveTo(408.974f, -80.6992f);
        path.quadTo(410.924f, -80.6992f, 413.774f, -81.8992f);
        path.quadTo(416.774f, -83.2492f, 416.774f, -84.2992f);
        path.quadTo(416.774f, -87.8992f, 409.474f, -88.9492f);
        path.quadTo(402.274f, -89.9992f, 402.424f, -85.8992f);
        path.quadTo(402.529f, -80.6992f, 408.974f, -80.6992f);
        path.close();
    }

    private static void draw_105(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_105(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_106(Path path)
    {
        path.reset();
        path.moveTo(418.871f, -98.2384f);
        path.quadTo(418.271f, -99.2384f, 416.621f, -98.8384f);
        path.lineTo(416.371f, -98.1385f);
        path.lineTo(416.521f, -97.6385f);
        path.quadTo(416.771f, -97.4385f, 417.421f, -97.4385f);
        path.lineTo(418.421f, -97.5385f);
        path.lineTo(418.871f, -98.2384f);
        path.close();
        path.moveTo(405.061f, -103.164f);
        path.lineTo(404.811f, -102.864f);
        path.quadTo(404.661f, -102.764f, 404.661f, -102.064f);
        path.quadTo(404.661f, -101.364f, 404.811f, -101.364f);
        path.lineTo(405.061f, -101.114f);
        path.quadTo(405.261f, -100.864f, 406.461f, -100.864f);
        path.lineTo(407.761f, -101.114f);
        path.lineTo(407.911f, -102.164f);
        path.quadTo(407.915f, -103.164f, 405.061f, -103.164f);
        path.close();
        path.moveTo(409.112f, -100.632f);
        path.quadTo(409.312f, -99.8323f, 410.962f, -99.5823f);
        path.quadTo(412.162f, -99.9323f, 412.162f, -101.132f);
        path.lineTo(411.962f, -101.832f);
        path.quadTo(410.312f, -101.832f, 409.462f, -101.382f);
        path.lineTo(409.112f, -100.632f);
        path.close();
        path.moveTo(415.051f, -99.6655f);
        path.quadTo(414.801f, -100.416f, 413.301f, -100.416f);
        path.lineTo(412.701f, -99.3155f);
        path.lineTo(412.751f, -98.9655f);
        path.quadTo(413.151f, -98.6155f, 414.551f, -98.6155f);
        path.lineTo(415.051f, -99.6655f);
        path.close();
    }

    private static void draw_106(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_106(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_107(Path path)
    {
        path.reset();
        path.moveTo(404.601f, -83.3231f);
        path.quadTo(405.151f, -82.6231f, 406.151f, -82.6231f);
        path.quadTo(407.201f, -82.6231f, 407.801f, -83.3231f);
        path.quadTo(408.401f, -83.9231f, 408.401f, -84.8731f);
        path.quadTo(408.401f, -85.8731f, 407.801f, -86.5231f);
        path.quadTo(407.201f, -87.1231f, 406.151f, -87.1231f);
        path.quadTo(405.151f, -87.1231f, 404.601f, -86.5231f);
        path.quadTo(403.901f, -85.8731f, 403.901f, -84.8731f);
        path.quadTo(403.91f, -83.9216f, 404.601f, -83.3231f);
        path.close();
    }

    private static void draw_107(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_107(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_108(Path path)
    {
        path.reset();
        path.moveTo(384.023f, -95.8907f);
        path.quadTo(379.973f, -95.8907f, 379.523f, -81.2407f);
        path.quadTo(379.273f, -70.5907f, 378.523f, -65.4407f);
        path.lineTo(377.923f, -62.6907f);
        path.lineTo(377.123f, -61.1407f);
        path.lineTo(375.923f, -59.4907f);
        path.quadTo(373.523f, -56.0407f, 373.523f, -54.3407f);
        path.quadTo(373.523f, -53.1407f, 374.023f, -51.9907f);
        path.lineTo(377.323f, -51.9907f);
        path.quadTo(379.523f, -53.8907f, 380.223f, -51.0907f);
        path.quadTo(381.173f, -47.6407f, 382.873f, -47.6407f);
        path.quadTo(384.523f, -47.6407f, 384.873f, -48.7907f);
        path.quadTo(385.123f, -50.7907f, 385.473f, -52.4407f);
        path.quadTo(386.923f, -52.4407f, 387.823f, -51.4907f);
        path.lineTo(390.723f, -51.4907f);
        path.quadTo(391.223f, -52.8907f, 391.223f, -54.0907f);
        path.quadTo(391.223f, -55.0907f, 388.823f, -62.1907f);
        path.quadTo(386.573f, -68.6407f, 387.373f, -74.3907f);
        path.quadTo(388.223f, -80.1407f, 388.123f, -85.7407f);
        path.quadTo(387.844f, -95.8907f, 384.023f, -95.8907f);
        path.close();
    }

    private static void draw_108(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_108(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_109(Path path)
    {
        path.reset();
        path.moveTo(415.327f, -69.3746f);
        path.lineTo(416.984f, -71.5382f);
    }

    private static void draw_109(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_109(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_110(Path path)
    {
        path.reset();
        path.moveTo(408.375f, -67.7173f);
        path.quadTo(409.572f, -69.8349f, 411.736f, -71.0318f);
    }

    private static void draw_110(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_110(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_111(Path path)
    {
        path.reset();
        path.moveTo(402.667f, -67.7173f);
        path.quadTo(405.061f, -71.308f, 407.455f, -72.4589f);
    }

    private static void draw_111(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_111(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_112(Path path)
    {
        path.reset();
        path.moveTo(360.177f, -67.7173f);
        path.quadTo(360.637f, -68.638f, 362.064f, -70.1111f);
    }

    private static void draw_112(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_112(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_113(Path path)
    {
        path.reset();
        path.moveTo(354.469f, -67.7173f);
        path.lineTo(357.323f, -70.5715f);
    }

    private static void draw_113(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_113(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_114(Path path)
    {
        path.reset();
        path.moveTo(349.221f, -67.2109f);
        path.quadTo(350.279f, -69.6048f, 352.075f, -71.9986f);
    }

    private static void draw_114(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_114(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_115(Path path)
    {
        path.reset();
        path.moveTo(397.649f, -44.5618f);
        path.quadTo(395.649f, -42.5118f, 393.249f, -42.5118f);
        path.quadTo(391.849f, -42.5118f, 389.449f, -43.5118f);
        path.quadTo(387.049f, -44.4118f, 385.849f, -44.4118f);
        path.lineTo(383.599f, -44.0618f);
        path.lineTo(381.549f, -42.0118f);
        path.lineTo(380.149f, -44.7618f);
        path.quadTo(379.399f, -45.8618f, 377.949f, -45.8618f);
        path.quadTo(376.449f, -45.8618f, 372.699f, -43.9618f);
        path.lineTo(371.049f, -42.9618f);
        path.quadTo(369.499f, -42.1618f, 369.049f, -41.5618f);
        path.lineTo(369.149f, -41.2118f);
        path.lineTo(369.999f, -39.7618f);
        path.lineTo(368.449f, -35.5618f);
        path.quadTo(367.699f, -33.0618f, 367.699f, -28.4118f);
        path.quadTo(367.699f, -18.3118f, 371.549f, -14.8118f);
        path.quadTo(375.249f, -11.5118f, 386.099f, -11.5118f);
        path.quadTo(393.849f, -11.5118f, 397.799f, -13.9118f);
        path.quadTo(402.549f, -16.7618f, 402.549f, -23.4118f);
        path.quadTo(402.549f, -25.9118f, 400.299f, -32.6118f);
        path.lineTo(398.499f, -37.3618f);
        path.quadTo(401.149f, -40.2618f, 401.149f, -45.1618f);
        path.quadTo(401.149f, -48.2118f, 400.649f, -49.2118f);
        path.lineTo(399.699f, -49.2118f);
        path.quadTo(399.675f, -46.5873f, 397.649f, -44.5618f);
        path.close();
        path.moveTo(396.314f, -35.8612f);
        path.quadTo(395.964f, -30.4612f, 393.664f, -26.5112f);
        path.quadTo(390.114f, -20.5612f, 382.714f, -20.5612f);
        path.quadTo(370.564f, -20.5612f, 370.564f, -34.8612f);
        path.lineTo(371.014f, -38.7112f);
        path.quadTo(372.464f, -37.2612f, 374.714f, -36.1612f);
        path.quadTo(379.714f, -33.9112f, 387.214f, -33.9112f);
        path.quadTo(393.0f, -33.9277f, 396.314f, -35.8612f);
        path.close();
    }

    private static void draw_115(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_115(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 213, 87, 87));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_116(Path path)
    {
        path.reset();
        path.moveTo(396.314f, -35.8612f);
        path.quadTo(392.964f, -33.9112f, 387.214f, -33.9112f);
        path.quadTo(379.714f, -33.9112f, 374.714f, -36.1612f);
        path.quadTo(372.464f, -37.2612f, 371.014f, -38.7112f);
        path.lineTo(370.564f, -34.8612f);
        path.quadTo(370.564f, -20.5612f, 382.714f, -20.5612f);
        path.quadTo(390.114f, -20.5612f, 393.664f, -26.5112f);
        path.quadTo(395.992f, -30.4751f, 396.314f, -35.8612f);
        path.close();
    }

    private static void draw_116(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_116(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_117(Path path)
    {
        path.reset();
        path.moveTo(402.161f, -51.467f);
        path.lineTo(404.811f, -51.367f);
        path.quadTo(404.811f, -49.567f, 405.061f, -49.217f);
        path.lineTo(406.111f, -49.217f);
        path.lineTo(406.461f, -49.567f);
        path.lineTo(405.761f, -51.817f);
        path.quadTo(405.061f, -53.117f, 401.711f, -52.417f);
        path.lineTo(401.711f, -51.817f);
        path.quadTo(401.839f, -51.467f, 402.161f, -51.467f);
        path.close();
    }

    private static void draw_117(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_117(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_118(Path path)
    {
        path.reset();
        path.moveTo(386.417f, -32.3165f);
        path.lineTo(385.467f, -32.3165f);
        path.lineTo(385.467f, -27.6665f);
        path.lineTo(379.967f, -27.2665f);
        path.quadTo(379.817f, -27.8165f, 379.817f, -28.3665f);
        path.lineTo(380.217f, -33.7165f);
        path.quadTo(379.217f, -33.2665f, 379.217f, -29.6665f);
        path.quadTo(379.217f, -28.2665f, 379.367f, -27.2665f);
        path.quadTo(377.417f, -27.6665f, 375.317f, -29.5665f);
        path.quadTo(375.567f, -30.7665f, 376.217f, -31.8665f);
        path.quadTo(377.217f, -33.3665f, 377.217f, -33.8665f);
        path.lineTo(377.117f, -34.5665f);
        path.lineTo(376.967f, -34.3165f);
        path.quadTo(375.617f, -33.9665f, 374.967f, -31.7165f);
        path.lineTo(374.567f, -30.2665f);
        path.lineTo(372.067f, -33.2665f);
        path.lineTo(371.567f, -33.0665f);
        path.quadTo(372.067f, -32.6665f, 373.767f, -29.4665f);
        path.lineTo(374.417f, -28.8665f);
        path.quadTo(374.417f, -28.0165f, 374.817f, -27.6665f);
        path.lineTo(375.167f, -28.2665f);
        path.lineTo(375.167f, -28.3665f);
        path.quadTo(376.817f, -27.5165f, 379.367f, -26.9165f);
        path.lineTo(379.367f, -26.4665f);
        path.quadTo(379.617f, -24.8165f, 380.817f, -22.8665f);
        path.lineTo(381.267f, -23.0165f);
        path.quadTo(380.217f, -24.6665f, 379.967f, -26.8165f);
        path.lineTo(385.667f, -26.4665f);
        path.quadTo(386.617f, -23.9665f, 387.017f, -25.1165f);
        path.quadTo(386.617f, -25.7165f, 386.417f, -26.4665f);
        path.quadTo(388.217f, -26.7165f, 390.217f, -28.2665f);
        path.lineTo(390.317f, -28.0165f);
        path.quadTo(390.817f, -28.1165f, 390.917f, -28.4665f);
        path.lineTo(390.817f, -28.7165f);
        path.lineTo(390.917f, -28.8665f);
        path.quadTo(392.967f, -30.5165f, 393.567f, -31.7165f);
        path.lineTo(392.967f, -31.9165f);
        path.quadTo(391.867f, -30.6665f, 390.467f, -29.5665f);
        path.quadTo(389.967f, -30.8665f, 389.867f, -32.4665f);
        path.lineTo(389.117f, -32.3165f);
        path.quadTo(389.267f, -30.4165f, 389.867f, -29.0665f);
        path.quadTo(388.317f, -28.2665f, 386.167f, -27.8165f);
        path.lineTo(386.017f, -28.9665f);
        path.lineTo(386.417f, -32.3165f);
        path.close();
    }

    private static void draw_118(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_118(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_119(Path path)
    {
        path.reset();
        path.moveTo(334.167f, -81.0674f);
        path.quadTo(331.317f, -81.0674f, 329.617f, -79.1674f);
        path.quadTo(328.167f, -77.4674f, 328.167f, -75.0674f);
        path.quadTo(328.167f, -71.6174f, 331.017f, -69.9674f);
        path.quadTo(332.717f, -69.0174f, 336.317f, -67.7174f);
        path.lineTo(341.067f, -67.7174f);
        path.lineTo(340.817f, -78.0674f);
        path.lineTo(340.817f, -79.1674f);
        path.lineTo(338.817f, -80.1174f);
        path.quadTo(336.331f, -81.0674f, 334.167f, -81.0674f);
        path.close();
    }

    private static void draw_119(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_119(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 254, 174, 103));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_120(Path path)
    {
        path.reset();
        path.moveTo(432.129f, -81.0674f);
        path.quadTo(434.979f, -81.0674f, 436.68f, -79.1674f);
        path.quadTo(438.13f, -77.4674f, 438.13f, -75.0674f);
        path.quadTo(438.13f, -71.6174f, 435.28f, -69.9674f);
        path.quadTo(433.579f, -69.0174f, 429.979f, -67.7174f);
        path.lineTo(425.229f, -67.7174f);
        path.quadTo(425.229f, -74.1674f, 425.479f, -78.0674f);
        path.lineTo(425.479f, -79.1674f);
        path.lineTo(427.479f, -80.1174f);
        path.quadTo(429.966f, -81.0674f, 432.129f, -81.0674f);
        path.close();
    }

    private static void draw_120(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_120(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 254, 174, 103));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_121(Path path)
    {
        path.reset();
        path.moveTo(420.713f, -156.15f);
        path.quadTo(419.663f, -156.15f, 418.663f, -155.1f);
        path.quadTo(417.663f, -153.9f, 416.663f, -153.6f);
        path.quadTo(416.463f, -155.1f, 415.663f, -156.1f);
        path.quadTo(414.863f, -157.15f, 413.613f, -157.15f);
        path.quadTo(411.863f, -157.15f, 410.013f, -155.9f);
        path.lineTo(407.513f, -154.1f);
        path.quadTo(407.713f, -156.4f, 406.313f, -156.95f);
        path.lineTo(403.713f, -157.15f);
        path.quadTo(402.863f, -157.15f, 401.763f, -155.9f);
        path.quadTo(400.713f, -154.6f, 398.863f, -154.6f);
        path.quadTo(398.513f, -157.3f, 397.163f, -157.9f);
        path.lineTo(394.563f, -158.15f);
        path.quadTo(393.663f, -158.15f, 392.513f, -156.9f);
        path.quadTo(391.313f, -155.6f, 389.213f, -155.6f);
        path.lineTo(387.263f, -158.45f);
        path.lineTo(384.413f, -158.65f);
        path.quadTo(383.013f, -158.65f, 381.813f, -157.4f);
        path.quadTo(380.563f, -156.15f, 378.063f, -156.15f);
        path.lineTo(375.613f, -159.15f);
        path.quadTo(375.263f, -159.65f, 373.513f, -159.65f);
        path.quadTo(372.513f, -159.65f, 370.413f, -158.65f);
        path.lineTo(368.163f, -157.65f);
        path.quadTo(367.663f, -157.65f, 366.213f, -159.15f);
        path.quadTo(364.663f, -160.7f, 363.363f, -160.7f);
        path.quadTo(362.313f, -160.7f, 359.263f, -159.15f);
        path.lineTo(356.263f, -157.65f);
        path.lineTo(354.463f, -158.45f);
        path.lineTo(352.713f, -159.15f);
        path.quadTo(352.263f, -159.15f, 350.113f, -158.15f);
        path.quadTo(348.113f, -157.15f, 347.613f, -157.15f);
        path.quadTo(347.013f, -157.15f, 346.463f, -157.65f);
        path.quadTo(345.963f, -158.15f, 345.363f, -158.15f);
        path.lineTo(343.813f, -158.05f);
        path.lineTo(342.513f, -156.15f);
        path.quadTo(342.313f, -158.35f, 340.763f, -159.0f);
        path.lineTo(339.013f, -159.15f);
        path.quadTo(336.563f, -159.15f, 335.113f, -157.4f);
        path.quadTo(333.663f, -155.6f, 332.613f, -155.6f);
        path.quadTo(332.013f, -155.6f, 330.663f, -156.15f);
        path.lineTo(328.813f, -156.65f);
        path.lineTo(328.813f, -153.1f);
        path.lineTo(324.063f, -152.75f);
        path.quadTo(321.063f, -151.9f, 322.763f, -149.05f);
        path.quadTo(322.413f, -149.05f, 322.263f, -148.75f);
        path.lineTo(322.213f, -148.55f);
        path.lineTo(318.813f, -147.85f);
        path.quadTo(317.663f, -147.4f, 317.663f, -145.7f);
        path.quadTo(317.663f, -143.95f, 318.663f, -142.9f);
        path.quadTo(316.563f, -143.05f, 315.213f, -141.7f);
        path.quadTo(314.113f, -140.5f, 314.113f, -138.85f);
        path.quadTo(314.113f, -136.1f, 316.663f, -133.8f);
        path.quadTo(315.813f, -133.15f, 313.713f, -132.5f);
        path.quadTo(312.563f, -132.15f, 312.563f, -131.0f);
        path.quadTo(312.563f, -129.75f, 313.663f, -128.4f);
        path.quadTo(314.713f, -127.05f, 315.663f, -127.2f);
        path.quadTo(314.913f, -126.45f, 315.713f, -124.2f);
        path.lineTo(316.663f, -121.1f);
        path.quadTo(315.663f, -121.0f, 314.663f, -120.1f);
        path.quadTo(313.613f, -119.2f, 313.613f, -118.35f);
        path.lineTo(316.163f, -114.0f);
        path.quadTo(314.213f, -113.45f, 313.813f, -112.85f);
        path.quadTo(313.613f, -112.65f, 313.613f, -112.0f);
        path.quadTo(313.613f, -110.6f, 315.663f, -109.1f);
        path.quadTo(316.663f, -108.35f, 318.163f, -107.4f);
        path.lineTo(316.263f, -106.75f);
        path.lineTo(316.163f, -105.1f);
        path.quadTo(316.163f, -103.05f, 317.413f, -102.05f);
        path.quadTo(318.663f, -100.95f, 322.213f, -100.3f);
        path.quadTo(321.013f, -98.5503f, 321.563f, -96.4003f);
        path.quadTo(322.213f, -94.0003f, 325.263f, -94.7003f);
        path.lineTo(325.263f, -94.2003f);
        path.quadTo(323.513f, -92.8503f, 326.613f, -91.3003f);
        path.quadTo(329.713f, -89.8003f, 331.363f, -90.6503f);
        path.quadTo(331.363f, -86.8003f, 331.463f, -86.3003f);
        path.quadTo(331.813f, -85.1003f, 333.663f, -85.1003f);
        path.quadTo(335.463f, -85.1003f, 336.463f, -86.1003f);
        path.quadTo(336.463f, -81.5003f, 339.213f, -81.5003f);
        path.quadTo(340.163f, -81.5003f, 341.013f, -82.0003f);
        path.quadTo(342.013f, -82.6503f, 342.013f, -83.8003f);
        path.lineTo(342.013f, -83.8503f);
        path.quadTo(343.663f, -84.5003f, 344.563f, -86.1003f);
        path.lineTo(344.413f, -87.6503f);
        path.lineTo(344.213f, -88.0003f);
        path.lineTo(344.863f, -88.5503f);
        path.quadTo(345.063f, -88.8503f, 345.063f, -90.1503f);
        path.quadTo(345.063f, -91.2003f, 344.113f, -92.2503f);
        path.lineTo(343.063f, -93.2003f);
        path.lineTo(344.563f, -94.7003f);
        path.quadTo(345.563f, -95.6003f, 345.563f, -96.5003f);
        path.quadTo(345.563f, -98.5503f, 342.013f, -98.2503f);
        path.quadTo(344.763f, -99.0503f, 345.363f, -100.75f);
        path.lineTo(345.563f, -104.1f);
        path.lineTo(345.063f, -106.45f);
        path.lineTo(345.013f, -106.75f);
        path.lineTo(345.263f, -106.45f);
        path.quadTo(346.463f, -105.4f, 348.363f, -105.4f);
        path.quadTo(350.963f, -105.4f, 352.363f, -106.6f);
        path.quadTo(353.513f, -107.5f, 353.463f, -109.1f);
        path.lineTo(353.463f, -108.95f);
        path.quadTo(353.813f, -107.95f, 354.713f, -107.95f);
        path.quadTo(355.913f, -107.95f, 357.813f, -109.1f);
        path.quadTo(360.113f, -110.65f, 360.313f, -112.5f);
        path.lineTo(360.313f, -112.0f);
        path.lineTo(361.763f, -110.45f);
        path.quadTo(362.713f, -109.45f, 364.113f, -109.45f);
        path.quadTo(366.213f, -109.45f, 366.963f, -110.5f);
        path.lineTo(368.413f, -113.5f);
        path.quadTo(369.363f, -111.45f, 369.913f, -111.1f);
        path.lineTo(372.213f, -110.95f);
        path.quadTo(374.413f, -110.95f, 375.113f, -112.1f);
        path.quadTo(375.563f, -112.7f, 376.063f, -115.5f);
        path.quadTo(376.363f, -113.75f, 378.413f, -112.5f);
        path.quadTo(380.063f, -111.45f, 381.363f, -111.45f);
        path.quadTo(382.763f, -111.45f, 383.763f, -112.45f);
        path.lineTo(384.663f, -113.5f);
        path.quadTo(385.813f, -110.95f, 387.963f, -110.95f);
        path.quadTo(388.363f, -110.95f, 390.213f, -113.0f);
        path.quadTo(390.113f, -112.0f, 391.463f, -110.95f);
        path.quadTo(392.813f, -109.95f, 394.063f, -109.95f);
        path.quadTo(395.663f, -109.95f, 396.413f, -111.0f);
        path.lineTo(397.863f, -113.5f);
        path.lineTo(399.363f, -110.5f);
        path.quadTo(400.113f, -109.45f, 401.913f, -109.45f);
        path.quadTo(403.013f, -109.45f, 403.563f, -109.75f);
        path.quadTo(404.413f, -110.15f, 405.463f, -111.45f);
        path.lineTo(406.063f, -110.25f);
        path.quadTo(406.613f, -109.45f, 407.513f, -109.45f);
        path.quadTo(408.713f, -109.45f, 409.613f, -110.45f);
        path.lineTo(411.063f, -112.5f);
        path.quadTo(411.563f, -110.6f, 413.963f, -109.35f);
        path.quadTo(415.763f, -108.45f, 416.863f, -108.45f);
        path.lineTo(418.713f, -108.55f);
        path.lineTo(419.213f, -109.1f);
        path.quadTo(419.713f, -108.25f, 420.663f, -107.4f);
        path.lineTo(423.763f, -104.4f);
        path.quadTo(422.213f, -103.55f, 422.213f, -102.6f);
        path.quadTo(422.213f, -100.8f, 424.763f, -99.2503f);
        path.lineTo(422.713f, -97.7503f);
        path.lineTo(423.863f, -96.5503f);
        path.quadTo(424.263f, -96.2003f, 424.263f, -95.7503f);
        path.quadTo(424.263f, -95.1003f, 423.763f, -94.8503f);
        path.quadTo(423.213f, -94.6003f, 423.213f, -93.9503f);
        path.quadTo(423.213f, -93.0503f, 423.363f, -92.8503f);
        path.quadTo(423.563f, -92.5503f, 424.763f, -92.2003f);
        path.lineTo(423.363f, -92.0003f);
        path.quadTo(423.213f, -91.8503f, 423.213f, -90.6503f);
        path.quadTo(423.213f, -89.5003f, 424.263f, -88.5503f);
        path.quadTo(424.913f, -87.9503f, 425.763f, -87.6503f);
        path.quadTo(425.463f, -87.6503f, 425.363f, -87.3503f);
        path.lineTo(425.263f, -87.1003f);
        path.lineTo(424.313f, -86.8003f);
        path.quadTo(423.763f, -86.4503f, 423.763f, -86.1003f);
        path.lineTo(424.413f, -85.9003f);
        path.quadTo(424.763f, -85.6503f, 424.763f, -84.8003f);
        path.lineTo(424.763f, -82.5003f);
        path.quadTo(425.163f, -81.0003f, 427.063f, -81.0003f);
        path.quadTo(428.413f, -81.0003f, 429.863f, -83.0003f);
        path.quadTo(429.863f, -82.0003f, 431.363f, -82.0003f);
        path.quadTo(432.263f, -82.0003f, 434.763f, -83.3503f);
        path.quadTo(437.663f, -85.0003f, 437.963f, -86.6003f);
        path.quadTo(440.863f, -85.9503f, 443.013f, -87.1503f);
        path.quadTo(445.363f, -88.5503f, 443.513f, -91.1503f);
        path.lineTo(444.063f, -91.1503f);
        path.lineTo(448.913f, -91.8003f);
        path.quadTo(450.163f, -92.1503f, 450.163f, -94.2003f);
        path.quadTo(450.163f, -95.7503f, 449.163f, -96.7503f);
        path.quadTo(454.713f, -97.5503f, 454.713f, -101.05f);
        path.quadTo(454.713f, -101.7f, 454.213f, -102.6f);
        path.quadTo(453.713f, -103.45f, 453.713f, -104.1f);
        path.quadTo(453.713f, -104.8f, 455.713f, -106.8f);
        path.quadTo(457.763f, -108.8f, 457.763f, -110.95f);
        path.lineTo(456.763f, -113.5f);
        path.lineTo(455.713f, -115.8f);
        path.quadTo(458.263f, -118.5f, 458.263f, -119.35f);
        path.lineTo(456.963f, -122.25f);
        path.quadTo(455.713f, -124.75f, 455.713f, -125.2f);
        path.lineTo(458.113f, -125.9f);
        path.lineTo(458.263f, -127.7f);
        path.quadTo(458.263f, -129.15f, 456.963f, -131.25f);
        path.lineTo(454.713f, -134.3f);
        path.quadTo(456.263f, -134.45f, 456.613f, -135.25f);
        path.lineTo(456.763f, -137.35f);
        path.quadTo(456.763f, -139.9f, 454.713f, -142.3f);
        path.lineTo(451.663f, -145.0f);
        path.lineTo(449.713f, -149.85f);
        path.quadTo(448.613f, -152.05f, 446.563f, -152.05f);
        path.quadTo(445.063f, -152.05f, 444.063f, -151.05f);
        path.lineTo(443.163f, -153.95f);
        path.quadTo(442.363f, -155.1f, 440.263f, -155.1f);
        path.quadTo(439.513f, -155.1f, 439.163f, -154.6f);
        path.lineTo(437.463f, -152.6f);
        path.quadTo(436.763f, -153.8f, 435.963f, -153.95f);
        path.lineTo(434.163f, -154.1f);
        path.quadTo(433.513f, -154.1f, 432.713f, -153.35f);
        path.quadTo(431.913f, -152.6f, 430.863f, -152.6f);
        path.quadTo(430.613f, -152.85f, 429.863f, -154.8f);
        path.quadTo(429.263f, -156.15f, 428.063f, -156.15f);
        path.quadTo(427.213f, -156.15f, 426.263f, -155.05f);
        path.lineTo(424.263f, -153.1f);
        path.quadTo(421.219f, -156.15f, 420.713f, -156.15f);
        path.close();
        path.moveTo(419.24f, -109.149f);
        path.quadTo(418.74f, -110.049f, 418.69f, -110.999f);
        path.lineTo(419.19f, -110.999f);
        path.quadTo(419.516f, -109.793f, 419.24f, -109.149f);
        path.close();
        path.moveTo(353.456f, -109.103f);
        path.lineTo(352.706f, -110.953f);
        path.lineTo(352.706f, -111.453f);
        path.lineTo(353.456f, -109.103f);
        path.close();
        path.moveTo(345.031f, -106.755f);
        path.quadTo(344.031f, -107.805f, 344.081f, -109.455f);
        path.lineTo(345.031f, -106.755f);
        path.close();
        path.moveTo(344.203f, -88.0187f);
        path.lineTo(342.003f, -88.1687f);
        path.lineTo(344.203f, -88.0187f);
        path.close();
    }

    private static void draw_121(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_121(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_122(Path path)
    {
        path.reset();
        path.moveTo(417.168f, -31.8561f);
        path.quadTo(417.018f, -35.6061f, 422.568f, -36.1061f);
        path.lineTo(426.818f, -36.2061f);
        path.quadTo(435.068f, -31.9061f, 437.568f, -28.4561f);
        path.quadTo(440.418f, -24.5061f, 440.418f, -16.3061f);
        path.quadTo(440.418f, -9.85614f, 438.068f, -6.30614f);
        path.quadTo(435.968f, -3.45614f, 430.268f, 0.343863f);
        path.quadTo(427.818f, 1.89386f, 423.968f, 7.49386f);
        path.quadTo(420.468f, 12.5439f, 417.768f, 13.4939f);
        path.quadTo(417.168f, 12.2939f, 417.168f, 7.49386f);
        path.lineTo(415.518f, 10.9939f);
        path.quadTo(414.618f, 12.2939f, 412.718f, 12.2939f);
        path.quadTo(410.568f, 12.2939f, 410.118f, 9.79386f);
        path.quadTo(409.768f, 7.64386f, 410.568f, 4.54386f);
        path.quadTo(409.868f, 5.24386f, 408.918f, 6.94386f);
        path.quadTo(407.868f, 8.09386f, 406.418f, 8.09386f);
        path.quadTo(404.868f, 8.09386f, 404.618f, 5.74386f);
        path.lineTo(404.618f, 0.943862f);
        path.quadTo(404.018f, 1.54386f, 401.668f, 1.54386f);
        path.quadTo(401.068f, 0.943862f, 401.068f, -1.95614f);
        path.quadTo(401.068f, -6.90614f, 406.418f, -14.7561f);
        path.quadTo(409.868f, -19.7561f, 412.368f, -22.2561f);
        path.lineTo(415.818f, -26.1061f);
        path.quadTo(417.398f, -28.6337f, 417.168f, -31.8561f);
        path.close();
    }

    private static void draw_122(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_122(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0964305f, 0.185008f, 0.0f, 292.229f, -21.6824f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_123(Path path)
    {
        path.reset();
        path.moveTo(194.82f, 155.506f);
        path.quadTo(193.47f, 155.356f, 192.37f, 157.706f);
        path.quadTo(191.27f, 159.806f, 191.27f, 161.556f);
        path.quadTo(191.27f, 163.906f, 192.57f, 166.456f);
        path.quadTo(193.82f, 168.906f, 193.82f, 170.456f);
        path.quadTo(193.82f, 171.756f, 192.77f, 173.756f);
        path.quadTo(194.32f, 173.756f, 196.32f, 174.756f);
        path.lineTo(196.32f, 169.206f);
        path.quadTo(205.67f, 177.106f, 207.22f, 177.856f);
        path.quadTo(210.17f, 179.356f, 218.92f, 179.356f);
        path.lineTo(225.82f, 178.806f);
        path.quadTo(229.32f, 178.106f, 229.32f, 176.006f);
        path.quadTo(229.32f, 174.806f, 222.47f, 171.756f);
        path.quadTo(218.42f, 169.956f, 216.77f, 167.956f);
        path.quadTo(215.57f, 168.706f, 212.87f, 168.706f);
        path.quadTo(206.87f, 168.706f, 202.27f, 165.306f);
        path.quadTo(197.582f, 161.905f, 194.82f, 155.506f);
        path.close();
    }

    private static void draw_123(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_123(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 0, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_124(Path path)
    {
        path.reset();
        path.moveTo(149.705f, 150.488f);
        path.quadTo(148.355f, 150.188f, 146.955f, 152.388f);
        path.quadTo(145.655f, 154.338f, 145.455f, 156.088f);
        path.quadTo(145.105f, 158.438f, 146.055f, 161.088f);
        path.quadTo(146.955f, 163.738f, 146.805f, 165.238f);
        path.quadTo(146.655f, 166.488f, 145.355f, 168.388f);
        path.quadTo(146.855f, 168.588f, 148.755f, 169.838f);
        path.lineTo(149.505f, 164.288f);
        path.quadTo(157.755f, 173.338f, 159.155f, 174.238f);
        path.quadTo(161.955f, 176.088f, 170.605f, 177.188f);
        path.lineTo(177.455f, 177.588f);
        path.quadTo(181.105f, 177.238f, 181.355f, 175.238f);
        path.quadTo(181.505f, 174.038f, 175.105f, 170.088f);
        path.quadTo(171.305f, 167.838f, 169.905f, 165.638f);
        path.lineTo(165.905f, 165.838f);
        path.quadTo(160.005f, 165.088f, 155.805f, 161.188f);
        path.quadTo(151.639f, 157.209f, 149.705f, 150.488f);
        path.close();
    }

    private static void draw_124(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_124(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 0, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_125(Path path)
    {
        path.reset();
        path.moveTo(-470.707f, -107.86f);
        path.lineTo(-424.557f, -103.71f);
        path.quadTo(-426.907f, -152.51f, -416.157f, -213.41f);
        path.quadTo(-404.707f, -277.91f, -380.807f, -344.71f);
        path.quadTo(-358.057f, -408.51f, -330.057f, -457.41f);
        path.quadTo(-304.357f, -502.36f, -281.207f, -522.51f);
        path.quadTo(-310.107f, -525.16f, -355.707f, -503.46f);
        path.quadTo(-376.807f, -493.46f, -398.507f, -479.51f);
        path.quadTo(-407.907f, -473.51f, -416.207f, -467.46f);
        path.lineTo(-421.407f, -489.51f);
        path.quadTo(-433.557f, -541.61f, -445.257f, -570.71f);
        path.quadTo(-463.307f, -547.91f, -484.507f, -511.51f);
        path.quadTo(-517.407f, -455.11f, -543.057f, -390.61f);
        path.quadTo(-572.707f, -316.16f, -585.607f, -247.91f);
        path.quadTo(-597.907f, -182.56f, -593.557f, -128.66f);
        path.lineTo(-550.857f, -129.56f);
        path.lineTo(-481.507f, -130.71f);
        path.lineTo(-475.857f, -130.31f);
        path.quadTo(-473.745f, -119.23f, -470.707f, -107.86f);
        path.close();
    }

    private static void draw_125(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_125(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_126(Path path)
    {
        path.reset();
        path.moveTo(-593.574f, -128.668f);
        path.lineTo(-628.174f, -127.718f);
        path.quadTo(-629.974f, -86.5175f, -620.974f, -39.4675f);
        path.quadTo(-609.774f, 18.6825f, -583.874f, 77.7825f);
        path.quadTo(-558.524f, 135.632f, -523.674f, 183.882f);
        path.quadTo(-488.174f, 233.132f, -449.324f, 263.282f);
        path.quadTo(-361.724f, 331.182f, -267.924f, 358.282f);
        path.quadTo(-224.774f, 370.732f, -175.824f, 376.232f);
        path.quadTo(-132.374f, 381.132f, -78.2738f, 381.132f);
        path.quadTo(-33.0238f, 381.132f, -20.2738f, 380.732f);
        path.lineTo(-20.2738f, 188.782f);
        path.quadTo(-65.2738f, 182.082f, -114.924f, 171.382f);
        path.quadTo(-220.224f, 148.782f, -283.574f, 119.632f);
        path.quadTo(-328.374f, 99.0325f, -366.374f, 63.9825f);
        path.quadTo(-401.924f, 31.2325f, -428.274f, -11.0175f);
        path.quadTo(-453.424f, -51.3675f, -467.074f, -95.2175f);
        path.lineTo(-470.724f, -107.868f);
        path.quadTo(-473.724f, -119.218f, -475.874f, -130.318f);
        path.lineTo(-481.524f, -130.718f);
        path.lineTo(-550.874f, -129.568f);
        path.lineTo(-593.574f, -128.668f);
        path.close();
    }

    private static void draw_126(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_126(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 153, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_127(Path path)
    {
        path.reset();
        path.moveTo(-392.401f, -197.398f);
        path.quadTo(-405.851f, -199.698f, -433.351f, -188.698f);
        path.lineTo(-443.851f, -182.248f);
        path.quadTo(-442.901f, -181.698f, -438.351f, -179.898f);
        path.quadTo(-433.451f, -177.748f, -431.351f, -177.348f);
        path.quadTo(-433.201f, -176.198f, -439.401f, -173.048f);
        path.quadTo(-451.201f, -165.848f, -464.201f, -144.448f);
        path.quadTo(-470.201f, -134.698f, -476.301f, -121.648f);
        path.lineTo(-476.201f, -121.348f);
        path.lineTo(-476.051f, -121.048f);
        path.lineTo(-476.001f, -121.048f);
        path.quadTo(-473.001f, -122.748f, -470.901f, -123.348f);
        path.lineTo(-466.251f, -123.498f);
        path.quadTo(-474.951f, -115.148f, -477.051f, -94.1976f);
        path.quadTo(-479.051f, -73.5476f, -475.151f, -68.5476f);
        path.lineTo(-471.701f, -73.0976f);
        path.quadTo(-469.051f, -75.9476f, -468.451f, -76.9976f);
        path.lineTo(-467.901f, -77.2476f);
        path.lineTo(-468.101f, -76.8976f);
        path.quadTo(-472.101f, -68.0476f, -463.651f, -42.0476f);
        path.quadTo(-461.401f, -35.3476f, -450.951f, -9.39763f);
        path.lineTo(-447.201f, -27.8976f);
        path.quadTo(-444.201f, -18.4976f, -440.201f, -8.09763f);
        path.quadTo(-435.001f, 5.20237f, -432.001f, 10.2524f);
        path.lineTo(-422.901f, 24.1524f);
        path.quadTo(-421.401f, 23.3024f, -419.401f, 14.2524f);
        path.lineTo(-417.301f, 4.50237f);
        path.lineTo(-416.351f, 3.95237f);
        path.lineTo(-416.301f, 4.10237f);
        path.quadTo(-414.951f, 9.05237f, -401.751f, 20.8024f);
        path.lineTo(-387.001f, 33.6024f);
        path.lineTo(-386.001f, 24.6024f);
        path.lineTo(-385.201f, 16.1524f);
        path.quadTo(-381.051f, 22.0024f, -357.001f, 40.8024f);
        path.lineTo(-356.101f, 24.7524f);
        path.lineTo(-355.201f, 24.2024f);
        path.lineTo(-341.601f, 35.3024f);
        path.quadTo(-341.501f, 31.2524f, -341.651f, 27.9024f);
        path.lineTo(-330.301f, 34.8524f);
        path.lineTo(-314.601f, 44.7524f);
        path.lineTo(-314.601f, 40.6024f);
        path.lineTo(-314.801f, 36.8024f);
        path.lineTo(-312.001f, 38.3024f);
        path.lineTo(-304.851f, 49.1024f);
        path.quadTo(-304.051f, 36.7524f, -304.101f, 36.1024f);
        path.quadTo(-301.851f, 38.4524f, -282.101f, 52.7024f);
        path.lineTo(-282.601f, 42.0024f);
        path.quadTo(-282.751f, 34.9024f, -282.501f, 33.7524f);
        path.lineTo(-282.451f, 33.6024f);
        path.lineTo(-282.151f, 33.9524f);
        path.quadTo(-280.001f, 38.1524f, -270.501f, 43.8024f);
        path.quadTo(-259.401f, 50.2024f, -251.951f, 48.7024f);
        path.quadTo(-252.851f, 47.2024f, -253.451f, 38.3524f);
        path.quadTo(-253.851f, 31.9024f, -253.501f, 28.9024f);
        path.lineTo(-244.101f, 34.7524f);
        path.quadTo(-234.401f, 40.8024f, -233.001f, 42.7524f);
        path.lineTo(-232.501f, 42.4524f);
        path.quadTo(-234.551f, 34.3524f, -235.351f, 28.4024f);
        path.quadTo(-237.001f, 17.0024f, -232.751f, 14.4524f);
        path.quadTo(-224.351f, 18.3524f, -211.951f, 22.9524f);
        path.quadTo(-213.301f, -7.69763f, -213.001f, -10.5976f);
        path.lineTo(-213.001f, -10.6476f);
        path.lineTo(-213.001f, -10.5476f);
        path.lineTo(-212.251f, -10.4976f);
        path.lineTo(-205.001f, -5.34763f);
        path.lineTo(-204.701f, -5.14763f);
        path.lineTo(-204.751f, -5.64763f);
        path.lineTo(-204.501f, -5.84763f);
        path.lineTo(-208.851f, -17.9976f);
        path.quadTo(-212.301f, -26.9476f, -215.351f, -31.8476f);
        path.lineTo(-214.901f, -32.0976f);
        path.quadTo(-212.651f, -30.6976f, -208.501f, -29.2976f);
        path.quadTo(-206.401f, -28.4476f, -204.701f, -27.8976f);
        path.lineTo(-202.401f, -27.3476f);
        path.lineTo(-201.251f, -27.2976f);
        path.lineTo(-202.501f, -29.0476f);
        path.quadTo(-202.551f, -31.9476f, -202.001f, -36.0476f);
        path.lineTo(-200.801f, -45.3976f);
        path.quadTo(-198.501f, -45.1976f, -194.352f, -42.3976f);
        path.quadTo(-190.952f, -40.1476f, -188.952f, -41.1476f);
        path.quadTo(-187.652f, -47.4476f, -187.852f, -52.5976f);
        path.quadTo(-187.952f, -58.6976f, -190.202f, -65.5976f);
        path.lineTo(-188.502f, -66.6976f);
        path.quadTo(-187.602f, -64.9976f, -183.752f, -62.6976f);
        path.quadTo(-179.952f, -60.3976f, -179.002f, -58.6976f);
        path.quadTo(-179.402f, -60.4476f, -179.702f, -64.8476f);
        path.lineTo(-180.002f, -72.9476f);
        path.quadTo(-180.802f, -83.4476f, -184.452f, -86.4476f);
        path.lineTo(-183.902f, -87.0976f);
        path.lineTo(-183.352f, -86.8476f);
        path.quadTo(-178.301f, -84.8476f, -176.402f, -84.4476f);
        path.lineTo(-176.502f, -85.0476f);
        path.lineTo(-176.002f, -84.8476f);
        path.lineTo(-167.202f, -80.7976f);
        path.quadTo(-167.302f, -93.9476f, -170.202f, -102.498f);
        path.quadTo(-172.902f, -110.648f, -180.402f, -121.098f);
        path.quadTo(-177.952f, -121.248f, -171.802f, -119.798f);
        path.quadTo(-165.702f, -118.348f, -161.652f, -118.698f);
        path.quadTo(-167.452f, -128.198f, -168.102f, -132.848f);
        path.quadTo(-168.602f, -137.548f, -172.952f, -144.548f);
        path.quadTo(-178.652f, -153.948f, -186.252f, -161.898f);
        path.quadTo(-194.602f, -170.698f, -202.552f, -174.748f);
        path.lineTo(-203.052f, -174.998f);
        path.lineTo(-202.152f, -175.498f);
        path.lineTo(-195.302f, -176.498f);
        path.quadTo(-190.352f, -177.448f, -186.352f, -175.948f);
        path.lineTo(-188.402f, -179.398f);
        path.quadTo(-195.702f, -191.248f, -214.902f, -202.598f);
        path.quadTo(-234.652f, -214.198f, -250.452f, -214.948f);
        path.lineTo(-242.402f, -218.148f);
        path.quadTo(-238.802f, -219.448f, -236.252f, -219.298f);
        path.lineTo(-236.302f, -220.148f);
        path.quadTo(-245.252f, -231.148f, -265.752f, -232.848f);
        path.quadTo(-279.402f, -233.948f, -290.852f, -230.798f);
        path.lineTo(-293.052f, -230.198f);
        path.lineTo(-291.252f, -232.198f);
        path.lineTo(-287.102f, -237.198f);
        path.quadTo(-283.852f, -240.948f, -281.702f, -242.948f);
        path.lineTo(-281.652f, -242.948f);
        path.lineTo(-281.602f, -243.048f);
        path.lineTo(-281.752f, -243.048f);
        path.quadTo(-288.252f, -244.998f, -307.402f, -240.898f);
        path.quadTo(-328.402f, -236.448f, -336.752f, -229.498f);
        path.quadTo(-336.152f, -231.798f, -333.652f, -237.648f);
        path.quadTo(-331.352f, -242.998f, -330.802f, -244.748f);
        path.lineTo(-330.802f, -244.848f);
        path.lineTo(-331.102f, -244.848f);
        path.lineTo(-340.452f, -239.998f);
        path.lineTo(-347.352f, -236.198f);
        path.quadTo(-352.752f, -232.848f, -361.102f, -225.848f);
        path.lineTo(-369.902f, -217.948f);
        path.lineTo(-367.152f, -229.098f);
        path.lineTo(-369.902f, -227.348f);
        path.quadTo(-374.852f, -224.398f, -383.002f, -212.298f);
        path.quadTo(-389.402f, -202.698f, -391.802f, -197.298f);
        path.lineTo(-392.401f, -197.398f);
        path.close();
        path.moveTo(-190.861f, -89.9061f);
        path.lineTo(-190.311f, -89.7061f);
        path.lineTo(-190.511f, -88.8561f);
        path.lineTo(-190.661f, -88.8061f);
        path.lineTo(-190.711f, -89.2061f);
        path.lineTo(-190.861f, -89.9061f);
        path.close();
    }

    private static Shader create_gradient_9()
    {
        int colors[] = {
            Color.argb(255, 0, 33, 102),
            Color.argb(255, 10, 70, 152)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_127(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_127(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_9();
        shader.setLocalMatrix(createMatrix(0.0599178f, 0.0980742f, 0.188113f, -0.114947f, -314.372f, -72.9193f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_128(Path path)
    {
        path.reset();
        path.moveTo(-181.101f, -98.0543f);
        path.quadTo(-197.351f, -94.8543f, -207.201f, -88.1543f);
        path.quadTo(-219.401f, -79.8043f, -217.201f, -68.4543f);
        path.quadTo(-215.651f, -60.6043f, -208.301f, -56.7543f);
        path.quadTo(-201.301f, -53.1043f, -193.501f, -54.6543f);
        path.quadTo(-186.301f, -56.0043f, -166.951f, -66.3043f);
        path.quadTo(-147.501f, -76.6043f, -146.501f, -76.8043f);
        path.lineTo(-140.901f, -76.5543f);
        path.lineTo(-133.751f, -74.8543f);
        path.quadTo(-122.951f, -72.4543f, -112.301f, -74.5043f);
        path.quadTo(-103.051f, -76.3043f, -88.6012f, -84.2043f);
        path.quadTo(-74.2012f, -92.0543f, -63.4012f, -94.1043f);
        path.quadTo(-61.0512f, -94.6043f, -56.1012f, -94.0043f);
        path.lineTo(-50.4512f, -93.6543f);
        path.quadTo(-43.1512f, -95.1043f, -42.5012f, -101.854f);
        path.quadTo(-42.8512f, -111.404f, -41.3012f, -117.504f);
        path.lineTo(-36.5012f, -130.554f);
        path.quadTo(-33.2012f, -139.254f, -34.0512f, -143.354f);
        path.quadTo(-35.1512f, -149.154f, -38.3512f, -151.054f);
        path.quadTo(-41.0012f, -152.554f, -45.1512f, -151.704f);
        path.quadTo(-52.8512f, -150.304f, -56.6012f, -134.504f);
        path.lineTo(-59.0512f, -123.054f);
        path.quadTo(-60.3512f, -117.554f, -62.0012f, -116.454f);
        path.quadTo(-71.2012f, -110.254f, -82.4012f, -107.354f);
        path.quadTo(-89.2012f, -105.654f, -104.551f, -103.054f);
        path.quadTo(-126.351f, -98.7543f, -135.501f, -105.004f);
        path.lineTo(-141.351f, -109.354f);
        path.quadTo(-144.851f, -111.154f, -150.201f, -110.154f);
        path.quadTo(-155.801f, -109.004f, -158.601f, -106.204f);
        path.quadTo(-160.201f, -104.504f, -161.351f, -101.904f);
        path.lineTo(-181.101f, -98.0543f);
        path.close();
    }

    private static void draw_128(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_128(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_9();
        shader.setLocalMatrix(createMatrix(0.0599178f, 0.0980742f, 0.188113f, -0.114947f, -314.372f, -72.9193f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_129(Path path)
    {
        path.reset();
        path.moveTo(-284.035f, 79.6864f);
        path.quadTo(-290.485f, 74.9864f, -296.535f, 74.2864f);
        path.quadTo(-303.435f, 73.4364f, -312.185f, 77.2864f);
        path.quadTo(-313.935f, 76.6364f, -314.035f, 76.3864f);
        path.quadTo(-315.685f, 72.9864f, -312.435f, 66.6364f);
        path.quadTo(-307.685f, 58.3864f, -305.185f, 53.1864f);
        path.quadTo(-295.185f, 32.2864f, -305.385f, 11.5364f);
        path.quadTo(-308.535f, 5.0864f, -315.985f, 3.1364f);
        path.quadTo(-323.385f, 1.1864f, -330.585f, 4.6864f);
        path.quadTo(-335.385f, 7.0364f, -337.535f, 13.6364f);
        path.lineTo(-338.235f, 16.0364f);
        path.lineTo(-338.635f, 23.1364f);
        path.lineTo(-339.985f, 52.8364f);
        path.lineTo(-340.885f, 78.3864f);
        path.quadTo(-344.535f, 82.6364f, -345.135f, 85.3364f);
        path.quadTo(-345.985f, 89.1864f, -342.485f, 96.3864f);
        path.quadTo(-339.235f, 103.036f, -332.235f, 103.886f);
        path.quadTo(-326.935f, 104.536f, -321.785f, 102.086f);
        path.lineTo(-309.735f, 103.686f);
        path.quadTo(-280.185f, 106.336f, -276.935f, 107.436f);
        path.lineTo(-276.085f, 109.186f);
        path.quadTo(-278.335f, 110.836f, -295.435f, 117.836f);
        path.quadTo(-311.035f, 124.886f, -309.185f, 128.636f);
        path.quadTo(-304.835f, 137.536f, -282.435f, 129.786f);
        path.quadTo(-275.335f, 127.386f, -267.035f, 123.386f);
        path.lineTo(-259.485f, 119.586f);
        path.quadTo(-249.635f, 115.636f, -246.685f, 113.386f);
        path.quadTo(-241.935f, 109.836f, -245.135f, 103.336f);
        path.quadTo(-247.235f, 99.0364f, -258.135f, 94.8864f);
        path.quadTo(-259.935f, 94.1864f, -262.035f, 93.4864f);
        path.lineTo(-268.985f, 91.2364f);
        path.lineTo(-272.735f, 88.7364f);
        path.lineTo(-284.035f, 79.6864f);
        path.close();
    }

    private static void draw_129(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_129(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_9();
        shader.setLocalMatrix(createMatrix(0.0599178f, 0.0980742f, 0.188113f, -0.114947f, -314.372f, -72.9193f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_130(Path path)
    {
        path.reset();
        path.moveTo(-360.039f, -89.4918f);
        path.quadTo(-375.039f, -93.1418f, -383.039f, -106.242f);
        path.quadTo(-391.089f, -119.442f, -387.439f, -134.392f);
        path.quadTo(-383.789f, -149.392f, -370.689f, -157.392f);
        path.quadTo(-357.589f, -165.442f, -342.539f, -161.842f);
        path.quadTo(-327.589f, -158.192f, -319.539f, -145.042f);
        path.quadTo(-311.539f, -131.892f, -315.189f, -116.942f);
        path.quadTo(-318.739f, -101.942f, -331.889f, -93.9418f);
        path.quadTo(-344.985f, -85.9011f, -360.039f, -89.4918f);
        path.close();
        path.moveTo(-333.523f, -67.349f);
        path.quadTo(-331.323f, -62.899f, -330.723f, -60.399f);
        path.quadTo(-329.373f, -55.349f, -332.573f, -53.449f);
        path.quadTo(-337.123f, -50.649f, -349.823f, -60.799f);
        path.quadTo(-353.223f, -63.449f, -356.073f, -66.149f);
        path.quadTo(-344.893f, -63.9885f, -333.523f, -67.349f);
        path.close();
        path.moveTo(-289.698f, -110.76f);
        path.quadTo(-286.598f, -101.91f, -285.948f, -93.5099f);
        path.quadTo(-285.148f, -82.4099f, -288.548f, -80.3099f);
        path.quadTo(-291.398f, -78.5599f, -295.748f, -81.8599f);
        path.quadTo(-298.048f, -83.5599f, -302.348f, -87.8599f);
        path.quadTo(-297.348f, -93.9599f, -293.548f, -101.26f);
        path.quadTo(-291.079f, -106.064f, -289.698f, -110.76f);
        path.close();
    }

    private static void draw_130(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_130(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_131(Path path)
    {
        path.reset();
        path.moveTo(-356.08f, -66.1061f);
        path.quadTo(-353.23f, -63.4061f, -349.83f, -60.7561f);
        path.quadTo(-337.13f, -50.6061f, -332.58f, -53.4061f);
        path.quadTo(-329.38f, -55.3061f, -330.73f, -60.3561f);
        path.quadTo(-331.33f, -62.8561f, -333.53f, -67.3061f);
        path.quadTo(-325.83f, -69.6561f, -318.08f, -74.3561f);
        path.quadTo(-309.13f, -79.8561f, -302.33f, -87.8561f);
        path.quadTo(-298.03f, -83.5561f, -295.73f, -81.8561f);
        path.quadTo(-291.38f, -78.5561f, -288.53f, -80.3061f);
        path.quadTo(-285.13f, -82.4061f, -285.93f, -93.5061f);
        path.quadTo(-286.58f, -101.906f, -289.68f, -110.756f);
        path.quadTo(-284.48f, -127.806f, -292.58f, -144.206f);
        path.quadTo(-286.78f, -137.306f, -285.43f, -135.056f);
        path.quadTo(-270.63f, -110.856f, -277.28f, -84.8561f);
        path.quadTo(-282.98f, -62.6561f, -298.53f, -53.1061f);
        path.quadTo(-326.83f, -35.8561f, -352.98f, -49.9061f);
        path.quadTo(-371.68f, -60.0061f, -387.23f, -84.4561f);
        path.quadTo(-377.83f, -73.9561f, -365.13f, -68.7561f);
        path.quadTo(-360.591f, -66.9347f, -356.08f, -66.1061f);
        path.close();
    }

    private static void draw_131(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_131(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_132(Path path)
    {
        path.reset();
        path.moveTo(-373.297f, -131.706f);
        path.quadTo(-371.247f, -140.456f, -363.447f, -145.156f);
        path.quadTo(-355.747f, -149.906f, -346.847f, -147.906f);
        path.quadTo(-338.047f, -145.656f, -333.347f, -137.906f);
        path.quadTo(-328.597f, -130.106f, -330.697f, -121.456f);
        path.quadTo(-332.847f, -112.506f, -340.597f, -107.756f);
        path.quadTo(-348.347f, -103.006f, -357.147f, -105.256f);
        path.quadTo(-366.047f, -107.306f, -370.797f, -115.056f);
        path.quadTo(-375.461f, -122.821f, -373.297f, -131.706f);
        path.close();
    }

    private static void draw_132(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_132(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_133(Path path)
    {
        path.reset();
        path.moveTo(-431.439f, -238.046f);
        path.quadTo(-423.839f, -236.996f, -415.989f, -238.396f);
        path.quadTo(-409.789f, -239.446f, -404.439f, -241.846f);
        path.lineTo(-404.689f, -242.546f);
        path.lineTo(-403.939f, -242.046f);
        path.lineTo(-393.039f, -234.496f);
        path.lineTo(-396.489f, -232.096f);
        path.lineTo(-402.889f, -227.596f);
        path.quadTo(-412.989f, -221.396f, -426.539f, -220.046f);
        path.quadTo(-428.723f, -228.517f, -431.439f, -238.046f);
        path.close();
        path.moveTo(-410.723f, -246.747f);
        path.lineTo(-421.823f, -246.297f);
        path.quadTo(-429.023f, -246.447f, -434.173f, -247.547f);
        path.lineTo(-440.073f, -267.347f);
        path.quadTo(-429.321f, -259.637f, -410.723f, -246.747f);
        path.close();
        path.moveTo(-423.291f, -207.249f);
        path.quadTo(-420.741f, -207.749f, -417.941f, -208.549f);
        path.quadTo(-409.591f, -210.799f, -401.491f, -215.799f);
        path.quadTo(-396.641f, -218.799f, -388.241f, -226.249f);
        path.lineTo(-385.141f, -229.099f);
        path.lineTo(-374.191f, -221.549f);
        path.quadTo(-377.941f, -213.299f, -383.041f, -206.899f);
        path.quadTo(-390.991f, -196.899f, -404.041f, -188.949f);
        path.quadTo(-415.191f, -182.149f, -417.391f, -181.299f);
        path.lineTo(-417.591f, -181.199f);
        path.lineTo(-420.541f, -195.449f);
        path.lineTo(-423.291f, -207.249f);
        path.close();
        path.moveTo(-367.404f, -217.008f);
        path.lineTo(-361.054f, -212.858f);
        path.quadTo(-361.754f, -204.658f, -368.004f, -196.308f);
        path.quadTo(-370.404f, -193.008f, -373.454f, -189.958f);
        path.lineTo(-371.804f, -194.558f);
        path.quadTo(-369.154f, -202.507f, -367.404f, -217.008f);
        path.close();
    }

    private static void draw_133(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_133(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 224, 51, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_134(Path path)
    {
        path.reset();
        path.moveTo(-404.693f, -242.512f);
        path.lineTo(-404.443f, -241.812f);
        path.quadTo(-409.793f, -239.412f, -415.993f, -238.362f);
        path.quadTo(-423.843f, -236.962f, -431.443f, -238.012f);
        path.lineTo(-434.193f, -247.512f);
        path.quadTo(-429.043f, -246.412f, -421.843f, -246.262f);
        path.lineTo(-410.743f, -246.712f);
        path.lineTo(-404.693f, -242.512f);
        path.close();
        path.moveTo(-426.513f, -220.001f);
        path.quadTo(-412.963f, -221.351f, -402.863f, -227.551f);
        path.lineTo(-396.463f, -232.051f);
        path.lineTo(-393.013f, -234.451f);
        path.lineTo(-385.113f, -229.051f);
        path.lineTo(-388.213f, -226.201f);
        path.quadTo(-396.613f, -218.751f, -401.463f, -215.751f);
        path.quadTo(-409.563f, -210.751f, -417.913f, -208.501f);
        path.quadTo(-420.713f, -207.701f, -423.263f, -207.201f);
        path.lineTo(-426.513f, -220.001f);
        path.close();
        path.moveTo(-417.582f, -181.193f);
        path.lineTo(-417.382f, -181.293f);
        path.quadTo(-415.182f, -182.143f, -404.032f, -188.943f);
        path.quadTo(-390.982f, -196.893f, -383.032f, -206.893f);
        path.quadTo(-377.932f, -213.293f, -374.182f, -221.543f);
        path.lineTo(-367.432f, -217.043f);
        path.quadTo(-369.182f, -202.543f, -371.832f, -194.593f);
        path.lineTo(-373.482f, -189.993f);
        path.quadTo(-378.782f, -184.843f, -385.732f, -180.593f);
        path.quadTo(-397.032f, -173.693f, -405.232f, -174.093f);
        path.quadTo(-410.232f, -174.243f, -416.782f, -177.293f);
        path.lineTo(-417.082f, -178.843f);
        path.lineTo(-417.582f, -181.193f);
        path.close();
    }

    private static void draw_134(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_134(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 204, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_135(Path path)
    {
        path.reset();
        path.moveTo(1138.35f, -128.207f);
        path.quadTo(1142.7f, -182.107f, 1130.35f, -247.457f);
        path.quadTo(1117.45f, -315.707f, 1087.85f, -390.107f);
        path.quadTo(1062.2f, -454.607f, 1029.25f, -511.057f);
        path.quadTo(1008.1f, -547.407f, 990.051f, -570.257f);
        path.quadTo(978.301f, -541.107f, 966.151f, -489.057f);
        path.lineTo(961.001f, -467.007f);
        path.quadTo(952.651f, -473.057f, 943.301f, -479.057f);
        path.quadTo(921.601f, -493.007f, 900.451f, -503.007f);
        path.quadTo(854.901f, -524.707f, 826.001f, -522.057f);
        path.quadTo(849.151f, -501.907f, 874.801f, -456.907f);
        path.quadTo(902.801f, -408.057f, 925.601f, -344.207f);
        path.quadTo(949.501f, -277.457f, 960.901f, -212.957f);
        path.quadTo(971.701f, -152.057f, 969.351f, -103.257f);
        path.lineTo(1015.45f, -107.357f);
        path.quadTo(1018.5f, -118.757f, 1020.6f, -129.857f);
        path.lineTo(1026.3f, -130.257f);
        path.lineTo(1095.65f, -129.107f);
        path.lineTo(1138.35f, -128.207f);
        path.close();
    }

    private static void draw_135(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_135(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_136(Path path)
    {
        path.reset();
        path.moveTo(1138.35f, -128.207f);
        path.lineTo(1095.65f, -129.107f);
        path.lineTo(1026.3f, -130.257f);
        path.lineTo(1020.6f, -129.857f);
        path.quadTo(1018.5f, -118.757f, 1015.45f, -107.357f);
        path.lineTo(1011.8f, -94.7572f);
        path.quadTo(998.201f, -50.9072f, 973.001f, -10.5072f);
        path.quadTo(946.701f, 31.6928f, 911.151f, 64.4428f);
        path.quadTo(873.101f, 99.4928f, 828.351f, 120.143f);
        path.quadTo(765.001f, 149.243f, 659.651f, 171.843f);
        path.quadTo(619.301f, 180.543f, 581.951f, 186.643f);
        path.lineTo(581.851f, 185.943f);
        path.lineTo(480.051f, 192.193f);
        path.lineTo(342.451f, 198.693f);
        path.lineTo(342.451f, 198.843f);
        path.quadTo(342.451f, 202.543f, 236.101f, 198.643f);
        path.quadTo(130.501f, 194.743f, 86.5009f, 189.643f);
        path.lineTo(71.9509f, 189.643f);
        path.quadTo(72.6509f, 231.993f, 76.5009f, 307.743f);
        path.lineTo(80.2509f, 381.143f);
        path.lineTo(565.001f, 381.143f);
        path.lineTo(565.001f, 381.193f);
        path.lineTo(570.901f, 381.293f);
        path.lineTo(602.101f, 381.593f);
        path.lineTo(623.001f, 381.593f);
        path.quadTo(677.101f, 381.593f, 720.551f, 376.693f);
        path.quadTo(769.551f, 371.193f, 812.651f, 358.743f);
        path.quadTo(906.501f, 331.643f, 994.051f, 263.743f);
        path.quadTo(1032.9f, 233.593f, 1068.45f, 184.343f);
        path.quadTo(1103.3f, 136.093f, 1128.6f, 78.2928f);
        path.quadTo(1154.55f, 19.1428f, 1165.7f, -39.0072f);
        path.quadTo(1174.75f, -86.0572f, 1172.95f, -127.207f);
        path.lineTo(1138.35f, -128.207f);
        path.close();
    }

    private static void draw_136(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_136(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 153, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_137(Path path)
    {
        path.reset();
        path.moveTo(878.161f, -306.73f);
        path.quadTo(867.261f, -307.48f, 853.411f, -306.83f);
        path.lineTo(853.261f, -306.63f);
        path.lineTo(853.011f, -306.43f);
        path.lineTo(853.061f, -306.28f);
        path.quadTo(855.911f, -304.48f, 857.261f, -303.08f);
        path.quadTo(859.411f, -300.93f, 859.561f, -299.08f);
        path.quadTo(848.611f, -302.83f, 829.911f, -295.13f);
        path.quadTo(811.411f, -287.63f, 809.011f, -282.13f);
        path.lineTo(814.361f, -281.18f);
        path.quadTo(817.911f, -280.23f, 819.061f, -280.13f);
        path.lineTo(819.561f, -279.93f);
        path.quadTo(810.361f, -279.83f, 791.611f, -260.48f);
        path.quadTo(787.011f, -255.53f, 769.661f, -235.13f);
        path.lineTo(786.961f, -240.28f);
        path.quadTo(780.311f, -233.43f, 773.261f, -225.38f);
        path.quadTo(764.261f, -215.03f, 761.411f, -210.13f);
        path.lineTo(753.611f, -196.33f);
        path.quadTo(755.061f, -195.38f, 763.661f, -197.78f);
        path.lineTo(772.861f, -200.28f);
        path.quadTo(773.261f, -200.03f, 773.661f, -199.78f);
        path.quadTo(770.161f, -196.58f, 766.062f, -179.88f);
        path.quadTo(763.862f, -171.33f, 761.812f, -161.68f);
        path.quadTo(762.911f, -161.93f, 769.761f, -164.88f);
        path.lineTo(777.311f, -167.88f);
        path.quadTo(774.161f, -161.73f, 769.061f, -132.93f);
        path.lineTo(783.061f, -139.43f);
        path.lineTo(784.011f, -138.93f);
        path.lineTo(780.711f, -122.38f);
        path.quadTo(784.061f, -124.03f, 786.861f, -125.73f);
        path.lineTo(785.961f, -112.93f);
        path.lineTo(784.711f, -95.2304f);
        path.quadTo(785.311f, -95.3804f, 788.161f, -97.0304f);
        path.lineTo(791.311f, -98.9304f);
        path.lineTo(791.261f, -95.9304f);
        path.lineTo(785.411f, -85.1304f);
        path.lineTo(796.761f, -90.1804f);
        path.quadTo(795.811f, -87.2304f, 792.511f, -64.0804f);
        path.lineTo(801.311f, -69.4304f);
        path.quadTo(808.011f, -73.0304f, 808.611f, -72.9804f);
        path.lineTo(808.361f, -72.6304f);
        path.quadTo(805.861f, -68.8804f, 805.261f, -58.2804f);
        path.quadTo(804.811f, -46.0304f, 809.311f, -40.3804f);
        path.quadTo(810.261f, -41.7304f, 817.561f, -46.2804f);
        path.quadTo(822.811f, -49.4304f, 825.511f, -50.5304f);
        path.lineTo(824.661f, -40.0304f);
        path.quadTo(823.861f, -29.0304f, 823.011f, -26.8804f);
        path.lineTo(823.311f, -26.7304f);
        path.quadTo(829.361f, -32.0804f, 833.911f, -35.3304f);
        path.quadTo(842.961f, -41.7804f, 847.011f, -39.4304f);
        path.quadTo(847.511f, -30.4804f, 849.161f, -17.9804f);
        path.quadTo(874.561f, -32.9304f, 877.061f, -33.8804f);
        path.lineTo(877.211f, -33.9304f);
        path.lineTo(877.112f, -33.7804f);
        path.quadTo(876.961f, -33.5304f, 877.362f, -33.2304f);
        path.lineTo(876.211f, -24.8304f);
        path.lineTo(876.261f, -24.4804f);
        path.quadTo(876.361f, -24.7304f, 876.661f, -24.6304f);
        path.lineTo(876.961f, -24.6304f);
        path.lineTo(885.311f, -33.6304f);
        path.quadTo(891.411f, -40.6304f, 894.111f, -45.3804f);
        path.lineTo(894.561f, -45.0304f);
        path.quadTo(894.361f, -42.5304f, 895.011f, -38.4304f);
        path.lineTo(895.561f, -34.5304f);
        path.lineTo(896.161f, -32.4304f);
        path.lineTo(896.511f, -31.3304f);
        path.lineTo(897.461f, -33.2304f);
        path.quadTo(899.861f, -34.5804f, 903.611f, -35.9804f);
        path.lineTo(912.111f, -39.0804f);
        path.quadTo(912.861f, -37.1304f, 912.511f, -32.3304f);
        path.quadTo(912.061f, -28.4804f, 913.761f, -27.1804f);
        path.quadTo(919.711f, -28.9804f, 924.011f, -31.3304f);
        path.quadTo(929.111f, -34.2304f, 934.011f, -39.2304f);
        path.quadTo(934.861f, -38.6804f, 935.661f, -38.2804f);
        path.quadTo(934.611f, -36.6804f, 934.461f, -32.3804f);
        path.quadTo(934.111f, -28.2304f, 933.111f, -26.6804f);
        path.quadTo(934.461f, -27.7804f, 938.011f, -29.8304f);
        path.lineTo(944.811f, -33.8804f);
        path.quadTo(953.261f, -39.1804f, 954.161f, -43.6304f);
        path.lineTo(954.961f, -43.4304f);
        path.lineTo(955.061f, -42.9304f);
        path.quadTo(955.661f, -37.6804f, 956.111f, -35.9304f);
        path.lineTo(956.611f, -36.2304f);
        path.lineTo(956.611f, -35.8304f);
        path.lineTo(957.111f, -26.5304f);
        path.quadTo(968.261f, -32.5304f, 974.111f, -38.7804f);
        path.quadTo(979.861f, -44.6804f, 985.361f, -55.7304f);
        path.quadTo(986.611f, -53.6304f, 988.161f, -47.7804f);
        path.quadTo(989.661f, -42.0304f, 991.861f, -38.7804f);
        path.quadTo(997.211f, -47.8304f, 1000.91f, -50.5304f);
        path.quadTo(1004.76f, -53.0804f, 1008.66f, -59.8804f);
        path.quadTo(1014.01f, -68.9804f, 1017.41f, -78.8804f);
        path.quadTo(1021.21f, -90.2804f, 1020.96f, -98.9804f);
        path.lineTo(1021.76f, -98.5304f);
        path.quadTo(1022.21f, -97.5804f, 1025.71f, -93.1304f);
        path.quadTo(1028.71f, -89.2804f, 1029.21f, -85.3304f);
        path.lineTo(1031.26f, -88.5304f);
        path.quadTo(1038.06f, -100.18f, 1039.06f, -121.43f);
        path.quadTo(1040.11f, -143.43f, 1033.61f, -157.13f);
        path.lineTo(1039.91f, -151.73f);
        path.quadTo(1042.66f, -149.23f, 1043.66f, -146.93f);
        path.lineTo(1044.41f, -147.43f);
        path.quadTo(1049.66f, -160.08f, 1041.91f, -178.03f);
        path.quadTo(1036.16f, -191.28f, 1027.51f, -200.03f);
        path.lineTo(1030.06f, -199.48f);
        path.lineTo(1036.06f, -198.03f);
        path.lineTo(1043.36f, -196.13f);
        path.lineTo(1043.46f, -196.08f);
        path.lineTo(1043.51f, -196.18f);
        path.lineTo(1043.46f, -196.23f);
        path.quadTo(1042.16f, -202.58f, 1030.11f, -217.03f);
        path.quadTo(1016.96f, -232.78f, 1007.31f, -236.83f);
        path.lineTo(1015.76f, -237.73f);
        path.lineTo(1022.91f, -238.58f);
        path.lineTo(1023.06f, -238.53f);
        path.lineTo(1022.86f, -238.83f);
        path.lineTo(1014.66f, -244.53f);
        path.lineTo(1008.31f, -248.73f);
        path.quadTo(1003.11f, -251.88f, 993.261f, -255.73f);
        path.quadTo(987.161f, -258.33f, 982.812f, -259.73f);
        path.lineTo(993.262f, -262.38f);
        path.lineTo(990.712f, -264.03f);
        path.quadTo(986.012f, -266.78f, 972.112f, -268.18f);
        path.lineTo(955.411f, -269.08f);
        path.lineTo(955.161f, -269.58f);
        path.quadTo(951.112f, -282.03f, 929.461f, -300.43f);
        path.lineTo(919.461f, -306.43f);
        path.quadTo(919.362f, -305.33f, 919.711f, -300.68f);
        path.quadTo(920.261f, -295.63f, 920.761f, -293.63f);
        path.lineTo(913.511f, -298.58f);
        path.quadTo(902.1f, -305.349f, 878.161f, -306.73f);
        path.close();
        path.moveTo(953.705f, -49.9018f);
        path.lineTo(953.555f, -49.9518f);
        path.lineTo(953.755f, -50.2518f);
        path.lineTo(954.355f, -50.6018f);
        path.lineTo(954.355f, -50.0518f);
        path.lineTo(953.705f, -49.9018f);
        path.close();
    }

    private static Shader create_gradient_10()
    {
        int colors[] = {
            Color.argb(255, 166, 66, 0),
            Color.argb(255, 255, 102, 0)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_137(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_137(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_10();
        shader.setLocalMatrix(createMatrix(-0.0563354f, 0.0946744f, 0.181622f, 0.108049f, 884.606f, -147.772f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_138(Path path)
    {
        path.reset();
        path.moveTo(845.983f, -73.4717f);
        path.quadTo(842.183f, -59.2217f, 846.783f, -26.0717f);
        path.lineTo(849.833f, -2.72168f);
        path.quadTo(850.883f, 8.92832f, 849.333f, 14.5283f);
        path.quadTo(847.633f, 20.8783f, 844.333f, 24.9283f);
        path.quadTo(842.733f, 26.9783f, 837.833f, 30.9283f);
        path.quadTo(828.683f, 38.3783f, 825.133f, 51.6283f);
        path.quadTo(822.583f, 61.3283f, 815.983f, 74.0783f);
        path.quadTo(809.433f, 86.7283f, 808.733f, 89.2783f);
        path.quadTo(806.883f, 96.1283f, 816.983f, 100.128f);
        path.quadTo(822.333f, 102.328f, 831.733f, 104.078f);
        path.quadTo(849.533f, 108.878f, 861.683f, 110.678f);
        path.quadTo(883.033f, 113.678f, 884.733f, 107.228f);
        path.quadTo(886.433f, 100.878f, 873.183f, 91.4283f);
        path.quadTo(862.433f, 83.7783f, 856.583f, 82.2283f);
        path.quadTo(852.183f, 81.0783f, 845.433f, 82.3783f);
        path.lineTo(842.483f, 81.6283f);
        path.lineTo(844.483f, 74.2783f);
        path.lineTo(870.583f, 44.2283f);
        path.lineTo(888.183f, 23.3283f);
        path.quadTo(889.433f, 18.6783f, 885.433f, 10.1783f);
        path.quadTo(883.533f, 6.02834f, 882.033f, 3.77834f);
        path.quadTo(888.183f, -29.1217f, 886.883f, -49.8217f);
        path.quadTo(884.833f, -82.9217f, 864.283f, -88.3717f);
        path.quadTo(855.483f, -90.7217f, 850.483f, -84.0717f);
        path.quadTo(847.917f, -80.7452f, 845.983f, -73.4717f);
        path.close();
        path.moveTo(812.884f, -95.7986f);
        path.quadTo(806.034f, -97.6486f, 799.784f, -85.0986f);
        path.quadTo(796.384f, -78.2986f, 793.934f, -69.1986f);
        path.quadTo(791.584f, -60.3486f, 791.834f, -37.6986f);
        path.quadTo(792.084f, -15.0986f, 791.084f, -11.2986f);
        path.quadTo(790.634f, -9.7986f, 787.184f, -6.9486f);
        path.lineTo(779.534f, -0.6486f);
        path.quadTo(768.184f, 9.0014f, 765.534f, 19.0014f);
        path.quadTo(763.884f, 25.1514f, 764.084f, 33.0514f);
        path.quadTo(764.434f, 40.9514f, 763.634f, 43.8514f);
        path.quadTo(761.884f, 50.3514f, 761.384f, 51.2014f);
        path.quadTo(759.784f, 54.6014f, 755.384f, 56.7014f);
        path.lineTo(752.634f, 67.0514f);
        path.quadTo(756.984f, 67.5014f, 763.184f, 71.7014f);
        path.quadTo(770.234f, 76.5014f, 775.084f, 77.8014f);
        path.quadTo(780.434f, 79.2514f, 790.384f, 78.7514f);
        path.quadTo(800.934f, 78.1514f, 802.834f, 75.7514f);
        path.lineTo(805.634f, 65.4014f);
        path.quadTo(791.184f, 61.7514f, 780.334f, 52.2514f);
        path.lineTo(782.334f, 44.9014f);
        path.quadTo(784.984f, 41.3014f, 803.384f, 22.6514f);
        path.quadTo(820.034f, 5.8014f, 820.784f, 2.9014f);
        path.quadTo(821.884f, -1.1986f, 819.184f, -5.6486f);
        path.quadTo(816.884f, -8.6486f, 815.484f, -10.8986f);
        path.lineTo(817.684f, -19.4986f);
        path.quadTo(821.534f, -35.4486f, 823.384f, -49.6986f);
        path.quadTo(828.582f, -91.6094f, 812.884f, -95.7986f);
        path.close();
    }

    private static void draw_138(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_138(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_10();
        shader.setLocalMatrix(createMatrix(-0.0563354f, 0.0946744f, 0.181622f, 0.108049f, 878.99f, -168.258f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_139(Path path)
    {
        path.reset();
        path.moveTo(986.251f, -97.64f);
        path.quadTo(985.501f, -92.54f, 985.551f, -89.84f);
        path.quadTo(985.601f, -85.19f, 987.751f, -84.24f);
        path.quadTo(990.301f, -83.24f, 996.001f, -89.64f);
        path.quadTo(999.751f, -94.04f, 1002.8f, -99.54f);
        path.lineTo(1003.1f, -100.24f);
        path.lineTo(1002.15f, -99.94f);
        path.quadTo(999.751f, -99.04f, 997.001f, -98.24f);
        path.lineTo(986.251f, -97.64f);
        path.close();
        path.moveTo(939.71f, -131.522f);
        path.quadTo(939.31f, -127.222f, 939.31f, -122.322f);
        path.quadTo(939.16f, -104.472f, 944.86f, -101.822f);
        path.quadTo(948.66f, -100.322f, 952.11f, -104.472f);
        path.quadTo(953.76f, -106.772f, 955.91f, -110.822f);
        path.quadTo(945.741f, -119.414f, 939.71f, -131.522f);
        path.close();
    }

    private static void draw_139(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_139(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_140(Path path)
    {
        path.reset();
        path.moveTo(939.71f, -131.522f);
        path.quadTo(936.96f, -136.922f, 935.61f, -142.372f);
        path.quadTo(930.76f, -159.122f, 934.01f, -174.472f);
        path.quadTo(921.26f, -145.622f, 926.36f, -119.322f);
        path.quadTo(932.01f, -88.9217f, 959.41f, -77.0717f);
        path.lineTo(965.56f, -74.6217f);
        path.quadTo(979.86f, -70.4717f, 994.91f, -79.7717f);
        path.quadTo(1003.66f, -85.3217f, 1009.31f, -94.1217f);
        path.lineTo(1011.91f, -99.2717f);
        path.lineTo(1013.56f, -103.322f);
        path.lineTo(1015.06f, -107.972f);
        path.quadTo(1015.56f, -109.822f, 1016.61f, -115.872f);
        path.lineTo(1014.81f, -111.672f);
        path.quadTo(1010.51f, -103.822f, 1003.11f, -100.222f);
        path.lineTo(1002.81f, -99.5217f);
        path.quadTo(999.76f, -94.0217f, 996.01f, -89.6217f);
        path.quadTo(990.31f, -83.2217f, 987.76f, -84.2217f);
        path.quadTo(985.61f, -85.1717f, 985.56f, -89.8217f);
        path.quadTo(985.51f, -92.5217f, 986.26f, -97.6217f);
        path.quadTo(978.06f, -98.4217f, 970.11f, -102.022f);
        path.quadTo(962.36f, -105.672f, 955.91f, -110.822f);
        path.quadTo(953.76f, -106.772f, 952.11f, -104.472f);
        path.quadTo(948.66f, -100.322f, 944.86f, -101.822f);
        path.quadTo(939.16f, -104.472f, 939.31f, -122.322f);
        path.quadTo(939.342f, -127.24f, 939.71f, -131.522f);
        path.close();
    }

    private static void draw_140(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_140(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_141(Path path)
    {
        path.reset();
        path.moveTo(971.474f, -132.903f);
        path.quadTo(978.474f, -122.153f, 990.824f, -120.153f);
        path.quadTo(1003.07f, -118.203f, 1013.37f, -126.053f);
        path.quadTo(1023.67f, -134.003f, 1025.97f, -147.103f);
        path.quadTo(1028.37f, -160.203f, 1021.32f, -171.053f);
        path.quadTo(1014.27f, -181.803f, 1002.02f, -183.803f);
        path.quadTo(989.774f, -185.803f, 979.424f, -177.803f);
        path.quadTo(969.124f, -169.953f, 966.724f, -156.803f);
        path.quadTo(964.431f, -143.675f, 971.474f, -132.903f);
        path.close();
    }

    private static void draw_141(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_141(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_142(Path path)
    {
        path.reset();
        path.moveTo(975.341f, -171.342f);
        path.quadTo(981.341f, -175.942f, 988.591f, -174.742f);
        path.quadTo(995.841f, -173.592f, 1000.04f, -167.292f);
        path.quadTo(1004.04f, -160.942f, 1002.64f, -153.192f);
        path.quadTo(1001.29f, -145.392f, 995.291f, -140.792f);
        path.quadTo(989.191f, -136.092f, 981.891f, -137.242f);
        path.quadTo(974.691f, -138.442f, 970.591f, -144.842f);
        path.quadTo(966.391f, -151.042f, 967.741f, -158.842f);
        path.quadTo(969.126f, -166.6f, 975.341f, -171.342f);
        path.close();
    }

    private static void draw_142(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_142(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_143(Path path)
    {
        path.reset();
        path.moveTo(993.295f, -301.759f);
        path.lineTo(992.845f, -301.159f);
        path.lineTo(993.145f, -300.759f);
        path.lineTo(993.245f, -301.059f);
        path.lineTo(993.295f, -301.759f);
        path.close();
    }

    private static void draw_143(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_143(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 224, 51, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_144(Path path)
    {
        path.reset();
        path.moveTo(985.239f, -329.195f);
        path.lineTo(978.189f, -322.945f);
        path.quadTo(980.439f, -315.995f, 984.889f, -309.695f);
        path.quadTo(988.539f, -304.795f, 992.839f, -301.195f);
        path.lineTo(993.289f, -301.795f);
        path.lineTo(994.389f, -308.745f);
        path.quadTo(991.639f, -313.095f, 989.289f, -318.145f);
        path.quadTo(986.344f, -324.362f, 985.239f, -329.195f);
        path.close();
        path.moveTo(935.153f, -286.982f);
        path.lineTo(935.003f, -287.082f);
        path.lineTo(933.153f, -285.732f);
        path.lineTo(931.903f, -284.781f);
        path.quadTo(932.053f, -277.831f, 933.953f, -273.431f);
        path.quadTo(937.053f, -266.231f, 947.803f, -259.381f);
        path.quadTo(954.303f, -255.131f, 961.103f, -252.781f);
        path.lineTo(965.703f, -253.181f);
        path.quadTo(973.653f, -254.281f, 986.853f, -258.931f);
        path.lineTo(988.003f, -266.581f);
        path.quadTo(979.303f, -266.381f, 971.603f, -268.131f);
        path.quadTo(959.703f, -270.731f, 947.353f, -278.631f);
        path.quadTo(936.764f, -285.37f, 935.153f, -286.982f);
        path.close();
        path.moveTo(955.04f, -303.002f);
        path.lineTo(958.44f, -298.852f);
        path.quadTo(963.94f, -292.552f, 971.64f, -287.652f);
        path.quadTo(976.19f, -284.802f, 986.19f, -280.652f);
        path.lineTo(989.89f, -279.202f);
        path.lineTo(991.19f, -288.252f);
        path.lineTo(987.69f, -290.202f);
        path.lineTo(981.04f, -293.902f);
        path.quadTo(971.54f, -300.002f, 964.74f, -311.052f);
        path.lineTo(955.04f, -303.002f);
        path.close();
    }

    private static void draw_144(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_144(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 204, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_145(Path path)
    {
        path.reset();
        path.moveTo(992.834f, -301.16f);
        path.quadTo(988.534f, -304.76f, 984.884f, -309.66f);
        path.quadTo(980.434f, -315.96f, 978.184f, -322.91f);
        path.lineTo(964.734f, -311.06f);
        path.quadTo(971.534f, -300.01f, 981.034f, -293.91f);
        path.lineTo(987.684f, -290.21f);
        path.lineTo(991.184f, -288.26f);
        path.lineTo(993.134f, -300.76f);
        path.lineTo(992.834f, -301.16f);
        path.close();
        path.moveTo(985.239f, -329.195f);
        path.quadTo(986.339f, -324.395f, 989.289f, -318.145f);
        path.quadTo(991.639f, -313.095f, 994.389f, -308.745f);
        path.lineTo(999.839f, -342.645f);
        path.lineTo(985.239f, -329.195f);
        path.close();
        path.moveTo(935.015f, -287.074f);
        path.lineTo(935.165f, -286.974f);
        path.quadTo(936.765f, -285.374f, 947.365f, -278.624f);
        path.quadTo(959.715f, -270.724f, 971.615f, -268.124f);
        path.quadTo(979.315f, -266.374f, 988.015f, -266.574f);
        path.lineTo(989.865f, -279.224f);
        path.lineTo(986.165f, -280.674f);
        path.quadTo(976.165f, -284.824f, 971.615f, -287.674f);
        path.quadTo(963.915f, -292.574f, 958.415f, -298.874f);
        path.lineTo(955.015f, -303.024f);
        path.lineTo(946.015f, -295.524f);
        path.quadTo(938.513f, -289.882f, 935.015f, -287.074f);
        path.close();
        path.moveTo(961.116f, -252.778f);
        path.quadTo(965.016f, -251.428f, 968.866f, -250.728f);
        path.quadTo(978.666f, -248.878f, 985.966f, -251.678f);
        path.lineTo(986.866f, -258.928f);
        path.quadTo(973.666f, -254.278f, 965.716f, -253.178f);
        path.lineTo(961.116f, -252.778f);
        path.close();
    }

    private static void draw_145(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_145(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 102, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_146(Path path)
    {
        path.reset();
        path.moveTo(850.817f, -88.3409f);
        path.quadTo(853.667f, -99.0909f, 848.117f, -108.691f);
        path.quadTo(842.567f, -118.391f, 831.867f, -121.241f);
        path.quadTo(821.117f, -124.091f, 811.517f, -118.541f);
        path.quadTo(801.767f, -112.991f, 798.917f, -102.241f);
        path.quadTo(796.067f, -91.5409f, 801.667f, -81.8909f);
        path.quadTo(807.217f, -72.1909f, 817.917f, -69.3409f);
        path.quadTo(828.667f, -66.4909f, 838.267f, -71.9909f);
        path.quadTo(847.963f, -77.6148f, 850.817f, -88.3409f);
        path.close();
    }

    private static Shader create_gradient_11()
    {
        int colors[] = {
            Color.argb(255, 255, 102, 102),
            Color.argb(255, 255, 204, 204)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_146(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_146(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_11();
        shader.setLocalMatrix(createMatrix(0.0632474f, 0.0088507f, -0.00453774f, 0.0324666f, 815.738f, -93.9572f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_147(Path path)
    {
        path.reset();
        path.moveTo(884.422f, -70.2492f);
        path.quadTo(887.272f, -80.9992f, 881.772f, -90.5992f);
        path.quadTo(876.172f, -100.299f, 865.472f, -103.149f);
        path.quadTo(854.722f, -105.999f, 845.122f, -100.449f);
        path.quadTo(835.372f, -94.8992f, 832.522f, -84.1992f);
        path.quadTo(829.672f, -73.4492f, 835.272f, -63.7992f);
        path.quadTo(840.822f, -54.0992f, 851.572f, -51.2492f);
        path.quadTo(862.272f, -48.3992f, 871.922f, -53.9492f);
        path.quadTo(881.568f, -59.5231f, 884.422f, -70.2492f);
        path.close();
    }

    private static void draw_147(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_147(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_11();
        shader.setLocalMatrix(createMatrix(0.0632474f, 0.0088507f, -0.00453774f, 0.0324666f, 849.344f, -75.8655f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_148(Path path)
    {
        path.reset();
        path.moveTo(870.059f, -87.2361f);
        path.lineTo(874.559f, -91.9861f);
        path.quadTo(877.309f, -88.6361f, 877.359f, -83.8361f);
        path.quadTo(877.309f, -81.0361f, 876.509f, -75.5861f);
        path.quadTo(877.709f, -76.4361f, 880.359f, -78.8861f);
        path.lineTo(883.659f, -81.6361f);
        path.quadTo(884.759f, -80.7861f, 884.509f, -77.1361f);
        path.quadTo(884.359f, -73.7361f, 883.509f, -72.1361f);
        path.quadTo(885.859f, -73.8861f, 893.359f, -88.1861f);
        path.quadTo(896.409f, -99.7861f, 881.109f, -113.186f);
        path.quadTo(868.109f, -124.636f, 855.309f, -128.086f);
        path.quadTo(841.559f, -131.786f, 836.159f, -131.136f);
        path.lineTo(823.559f, -128.086f);
        path.lineTo(820.209f, -127.286f);
        path.lineTo(818.309f, -126.586f);
        path.quadTo(814.059f, -124.786f, 812.359f, -123.786f);
        path.quadTo(808.209f, -121.436f, 805.359f, -117.686f);
        path.lineTo(807.209f, -117.186f);
        path.lineTo(812.559f, -116.636f);
        path.quadTo(817.859f, -116.286f, 821.659f, -116.436f);
        path.lineTo(828.359f, -114.686f);
        path.quadTo(825.559f, -110.136f, 824.559f, -109.386f);
        path.lineTo(823.359f, -104.936f);
        path.lineTo(840.109f, -108.386f);
        path.lineTo(840.859f, -108.136f);
        path.quadTo(838.359f, -104.136f, 837.259f, -103.586f);
        path.lineTo(836.309f, -99.8361f);
        path.lineTo(847.059f, -101.736f);
        path.lineTo(856.659f, -99.1861f);
        path.quadTo(856.459f, -98.4361f, 855.559f, -97.9361f);
        path.lineTo(853.159f, -89.0361f);
        path.quadTo(854.409f, -89.1361f, 858.959f, -91.9361f);
        path.lineTo(864.409f, -95.5361f);
        path.quadTo(866.359f, -94.0861f, 866.109f, -90.9361f);
        path.quadTo(865.959f, -88.8361f, 864.609f, -84.3861f);
        path.quadTo(866.745f, -83.6914f, 870.059f, -87.2361f);
        path.close();
    }

    private static void draw_148(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_148(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_10();
        shader.setLocalMatrix(createMatrix(-0.0563354f, 0.0946744f, 0.181622f, 0.108049f, 884.606f, -147.772f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_149(Path path)
    {
        path.reset();
        path.moveTo(795.667f, -69.2365f);
        path.quadTo(773.467f, -68.3865f, 749.917f, -74.7365f);
        path.quadTo(728.517f, -80.4365f, 713.117f, -92.6865f);
        path.quadTo(703.117f, -100.586f, 700.067f, -107.386f);
        path.lineTo(700.317f, -107.386f);
        path.quadTo(711.567f, -107.786f, 719.017f, -114.286f);
        path.quadTo(726.117f, -120.436f, 728.917f, -130.986f);
        path.quadTo(731.417f, -140.186f, 725.617f, -147.786f);
        path.quadTo(720.117f, -154.786f, 710.267f, -157.386f);
        path.lineTo(707.117f, -157.736f);
        path.quadTo(709.417f, -161.786f, 710.667f, -166.436f);
        path.quadTo(714.467f, -180.536f, 706.467f, -189.236f);
        path.quadTo(700.617f, -195.636f, 689.117f, -198.736f);
        path.quadTo(679.467f, -201.336f, 669.617f, -197.336f);
        path.quadTo(666.467f, -195.986f, 664.117f, -194.386f);
        path.quadTo(663.717f, -197.136f, 661.417f, -199.336f);
        path.quadTo(658.517f, -202.136f, 653.617f, -203.486f);
        path.quadTo(646.517f, -205.386f, 641.467f, -201.186f);
        path.quadTo(637.367f, -197.736f, 635.667f, -191.286f);
        path.quadTo(635.317f, -189.936f, 635.167f, -188.636f);
        path.lineTo(631.867f, -190.986f);
        path.quadTo(627.167f, -193.886f, 621.017f, -195.636f);
        path.quadTo(609.167f, -198.736f, 600.667f, -190.736f);
        path.quadTo(594.317f, -184.786f, 591.767f, -175.336f);
        path.quadTo(589.617f, -167.236f, 595.467f, -157.586f);
        path.quadTo(597.617f, -153.986f, 600.367f, -151.186f);
        path.quadTo(594.167f, -152.236f, 588.467f, -146.736f);
        path.quadTo(583.667f, -141.986f, 582.017f, -135.886f);
        path.quadTo(579.917f, -127.986f, 584.717f, -122.136f);
        path.quadTo(588.917f, -117.036f, 596.967f, -114.936f);
        path.lineTo(603.817f, -113.186f);
        path.quadTo(605.667f, -113.036f, 608.667f, -114.136f);
        path.lineTo(609.417f, -113.936f);
        path.quadTo(603.117f, -109.486f, 601.817f, -107.586f);
        path.quadTo(601.067f, -106.486f, 599.667f, -101.086f);
        path.quadTo(596.817f, -90.6365f, 603.117f, -84.7365f);
        path.quadTo(607.817f, -80.2365f, 619.017f, -77.2365f);
        path.quadTo(629.567f, -74.4365f, 636.817f, -76.1365f);
        path.lineTo(638.717f, -76.6365f);
        path.quadTo(638.517f, -72.5365f, 640.517f, -69.6865f);
        path.quadTo(643.767f, -65.0865f, 654.217f, -62.2865f);
        path.quadTo(670.117f, -58.0365f, 681.267f, -66.4365f);
        path.quadTo(686.767f, -70.5365f, 690.767f, -77.2365f);
        path.quadTo(702.267f, -67.6365f, 727.217f, -60.9865f);
        path.quadTo(762.167f, -51.5865f, 790.367f, -57.8365f);
        path.quadTo(810.617f, -62.2865f, 822.717f, -73.7365f);
        path.quadTo(811.273f, -69.7889f, 795.667f, -69.2365f);
        path.close();
        path.moveTo(631.829f, -149.89f);
        path.quadTo(632.929f, -148.09f, 631.929f, -144.39f);
        path.quadTo(631.529f, -142.94f, 628.429f, -139.59f);
        path.quadTo(625.679f, -136.79f, 623.279f, -134.99f);
        path.quadTo(625.279f, -135.84f, 628.029f, -135.64f);
        path.lineTo(633.929f, -134.29f);
        path.quadTo(642.829f, -131.89f, 641.279f, -125.99f);
        path.quadTo(639.729f, -120.44f, 631.479f, -118.24f);
        path.lineTo(622.179f, -116.84f);
        path.quadTo(625.179f, -120.44f, 619.779f, -134.74f);
        path.quadTo(613.379f, -149.19f, 613.029f, -150.99f);
        path.lineTo(619.379f, -152.74f);
        path.quadTo(623.679f, -153.69f, 626.629f, -152.89f);
        path.quadTo(630.724f, -151.777f, 631.829f, -149.89f);
        path.close();
        path.moveTo(631.829f, -149.89f);
        path.quadTo(630.729f, -151.79f, 626.629f, -152.89f);
        path.quadTo(623.679f, -153.69f, 619.379f, -152.74f);
        path.lineTo(613.029f, -150.99f);
        path.quadTo(613.379f, -149.19f, 619.779f, -134.74f);
        path.quadTo(625.179f, -120.44f, 622.179f, -116.84f);
        path.lineTo(631.479f, -118.24f);
        path.quadTo(639.729f, -120.44f, 641.279f, -125.99f);
        path.quadTo(642.829f, -131.89f, 633.929f, -134.29f);
        path.lineTo(628.029f, -135.64f);
        path.quadTo(625.279f, -135.84f, 623.279f, -134.99f);
        path.quadTo(625.679f, -136.79f, 628.429f, -139.59f);
        path.quadTo(631.529f, -142.94f, 631.929f, -144.39f);
        path.quadTo(632.934f, -148.094f, 631.829f, -149.89f);
        path.close();
        path.moveTo(648.447f, -135.158f);
        path.quadTo(649.397f, -138.708f, 652.047f, -139.758f);
        path.lineTo(658.797f, -139.508f);
        path.quadTo(664.097f, -138.108f, 666.197f, -135.908f);
        path.quadTo(668.647f, -133.408f, 667.497f, -129.258f);
        path.quadTo(666.447f, -125.408f, 662.847f, -123.358f);
        path.quadTo(658.947f, -121.208f, 654.247f, -122.458f);
        path.lineTo(653.747f, -122.608f);
        path.quadTo(653.047f, -122.908f, 652.147f, -123.458f);
        path.quadTo(650.997f, -124.158f, 650.347f, -124.308f);
        path.lineTo(650.547f, -125.058f);
        path.quadTo(649.197f, -126.308f, 648.497f, -128.208f);
        path.quadTo(647.435f, -131.384f, 648.447f, -135.158f);
        path.close();
        path.moveTo(648.447f, -135.158f);
        path.quadTo(647.447f, -131.358f, 648.497f, -128.208f);
        path.quadTo(649.197f, -126.308f, 650.547f, -125.058f);
        path.lineTo(650.347f, -124.308f);
        path.quadTo(650.997f, -124.158f, 652.147f, -123.458f);
        path.quadTo(653.047f, -122.908f, 653.747f, -122.608f);
        path.lineTo(654.247f, -122.458f);
        path.quadTo(658.947f, -121.208f, 662.847f, -123.358f);
        path.quadTo(666.447f, -125.408f, 667.497f, -129.258f);
        path.quadTo(668.647f, -133.408f, 666.197f, -135.908f);
        path.quadTo(664.097f, -138.108f, 658.797f, -139.508f);
        path.lineTo(652.047f, -139.758f);
        path.quadTo(649.368f, -138.703f, 648.447f, -135.158f);
        path.close();
        path.moveTo(680.534f, -142.386f);
        path.quadTo(682.084f, -142.786f, 685.534f, -141.836f);
        path.quadTo(689.884f, -140.686f, 691.084f, -137.186f);
        path.quadTo(691.934f, -134.686f, 691.034f, -131.286f);
        path.quadTo(690.134f, -127.886f, 687.284f, -126.536f);
        path.lineTo(681.784f, -126.386f);
        path.quadTo(674.534f, -129.086f, 676.984f, -138.186f);
        path.quadTo(677.956f, -141.833f, 680.534f, -142.386f);
        path.close();
        path.moveTo(680.534f, -142.386f);
        path.quadTo(677.984f, -141.836f, 676.984f, -138.186f);
        path.quadTo(674.534f, -129.086f, 681.784f, -126.386f);
        path.lineTo(687.284f, -126.536f);
        path.quadTo(690.134f, -127.886f, 691.034f, -131.286f);
        path.quadTo(691.934f, -134.686f, 691.084f, -137.186f);
        path.quadTo(689.884f, -140.686f, 685.534f, -141.836f);
        path.quadTo(682.099f, -142.754f, 680.534f, -142.386f);
        path.close();
        path.moveTo(623.266f, -134.974f);
        path.lineTo(622.066f, -134.324f);
        path.lineTo(621.116f, -133.774f);
        path.quadTo(622.069f, -134.606f, 623.266f, -134.974f);
        path.close();
        path.moveTo(623.266f, -134.974f);
        path.quadTo(622.066f, -134.624f, 621.116f, -133.774f);
        path.lineTo(622.066f, -134.324f);
        path.lineTo(623.266f, -134.974f);
        path.close();
    }

    private static void draw_149(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_149(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_150(Path path)
    {
        path.reset();
        path.moveTo(631.829f, -149.89f);
        path.quadTo(632.929f, -148.09f, 631.929f, -144.39f);
        path.quadTo(631.529f, -142.94f, 628.429f, -139.59f);
        path.quadTo(625.679f, -136.79f, 623.279f, -134.99f);
        path.quadTo(625.279f, -135.84f, 628.029f, -135.64f);
        path.lineTo(633.929f, -134.29f);
        path.quadTo(642.829f, -131.89f, 641.279f, -125.99f);
        path.quadTo(639.729f, -120.44f, 631.479f, -118.24f);
        path.lineTo(622.179f, -116.84f);
        path.quadTo(625.179f, -120.44f, 619.779f, -134.74f);
        path.quadTo(613.379f, -149.19f, 613.029f, -150.99f);
        path.lineTo(619.379f, -152.74f);
        path.quadTo(623.679f, -153.69f, 626.629f, -152.89f);
        path.quadTo(630.724f, -151.777f, 631.829f, -149.89f);
    }

    private static void draw_150(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_150(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStrokeWidth(3.68279f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_151(Path path)
    {
        path.reset();
        path.moveTo(648.447f, -135.158f);
        path.quadTo(649.397f, -138.708f, 652.047f, -139.758f);
        path.lineTo(658.797f, -139.508f);
        path.quadTo(664.097f, -138.108f, 666.197f, -135.908f);
        path.quadTo(668.647f, -133.408f, 667.497f, -129.258f);
        path.quadTo(666.447f, -125.408f, 662.847f, -123.358f);
        path.quadTo(658.947f, -121.208f, 654.247f, -122.458f);
        path.lineTo(653.747f, -122.608f);
        path.quadTo(653.047f, -122.908f, 652.147f, -123.458f);
        path.quadTo(650.997f, -124.158f, 650.347f, -124.308f);
        path.lineTo(650.547f, -125.058f);
        path.quadTo(649.197f, -126.308f, 648.497f, -128.208f);
        path.quadTo(647.435f, -131.384f, 648.447f, -135.158f);
    }

    private static void draw_151(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_151(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStrokeWidth(3.68279f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_152(Path path)
    {
        path.reset();
        path.moveTo(680.534f, -142.386f);
        path.quadTo(682.084f, -142.786f, 685.534f, -141.836f);
        path.quadTo(689.884f, -140.686f, 691.084f, -137.186f);
        path.quadTo(691.934f, -134.686f, 691.034f, -131.286f);
        path.quadTo(690.134f, -127.886f, 687.284f, -126.536f);
        path.lineTo(681.784f, -126.386f);
        path.quadTo(674.534f, -129.086f, 676.984f, -138.186f);
        path.quadTo(677.956f, -141.833f, 680.534f, -142.386f);
    }

    private static void draw_152(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_152(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStrokeWidth(3.68279f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_153(Path path)
    {
        path.reset();
        path.moveTo(653.741f, -122.637f);
        path.lineTo(650.519f, -125.077f);
    }

    private static void draw_153(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_153(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStrokeWidth(3.68279f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_154(Path path)
    {
        path.reset();
        path.moveTo(623.266f, -134.974f);
        path.lineTo(622.066f, -134.324f);
        path.lineTo(621.116f, -133.774f);
        path.quadTo(622.069f, -134.606f, 623.266f, -134.974f);
    }

    private static void draw_154(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_154(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStrokeWidth(3.68279f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_155(Path path)
    {
        path.reset();
        path.moveTo(29.2782f, 152.882f);
        path.quadTo(32.1782f, 148.032f, 47.5282f, 124.882f);
        path.quadTo(50.7282f, 136.682f, 57.0782f, 161.782f);
        path.quadTo(68.4282f, 206.682f, 68.4282f, 210.382f);
        path.quadTo(72.4282f, 206.432f, 83.2282f, 197.382f);
        path.quadTo(94.3782f, 188.032f, 97.1782f, 186.432f);
        path.quadTo(97.1782f, 199.132f, 97.6782f, 215.932f);
        path.quadTo(98.5282f, 241.082f, 100.028f, 245.832f);
        path.lineTo(100.478f, 245.982f);
        path.quadTo(101.028f, 246.232f, 101.028f, 246.782f);
        path.quadTo(104.028f, 244.732f, 109.228f, 240.432f);
        path.lineTo(117.978f, 233.032f);
        path.quadTo(128.628f, 224.532f, 133.528f, 224.732f);
        path.lineTo(133.528f, 233.382f);
        path.quadTo(131.178f, 240.482f, 126.228f, 261.182f);
        path.quadTo(121.578f, 280.332f, 121.128f, 281.282f);
        path.lineTo(122.528f, 281.282f);
        path.quadTo(129.028f, 278.182f, 132.628f, 276.832f);
        path.quadTo(139.728f, 274.082f, 143.128f, 274.582f);
        path.quadTo(139.428f, 295.282f, 119.778f, 322.032f);
        path.quadTo(113.228f, 330.882f, 95.2282f, 351.232f);
        path.lineTo(103.878f, 352.582f);
        path.quadTo(109.628f, 353.332f, 109.628f, 356.032f);
        path.quadTo(109.628f, 360.932f, 100.778f, 375.482f);
        path.lineTo(96.6782f, 381.932f);
        path.lineTo(-66.7218f, 381.932f);
        path.lineTo(-72.1718f, 370.132f);
        path.quadTo(-80.6218f, 351.232f, -86.1718f, 334.982f);
        path.quadTo(-92.3218f, 316.782f, -92.5718f, 308.132f);
        path.lineTo(-92.5718f, 289.932f);
        path.lineTo(-91.6718f, 289.932f);
        path.lineTo(-83.7718f, 301.282f);
        path.quadTo(-76.1218f, 312.382f, -73.4218f, 314.832f);
        path.lineTo(-73.4218f, 313.882f);
        path.quadTo(-77.1718f, 308.632f, -81.8218f, 271.882f);
        path.quadTo(-85.7218f, 240.882f, -85.8718f, 229.632f);
        path.lineTo(-77.7718f, 243.182f);
        path.quadTo(-71.5718f, 253.482f, -68.6218f, 256.382f);
        path.quadTo(-71.2718f, 243.982f, -63.3718f, 204.232f);
        path.quadTo(-60.0218f, 187.332f, -56.3218f, 174.882f);
        path.quadTo(-52.2718f, 161.482f, -49.4718f, 158.632f);
        path.quadTo(-49.4718f, 159.632f, -48.5218f, 159.632f);
        path.quadTo(-48.0718f, 162.632f, -40.9718f, 182.982f);
        path.quadTo(-33.5218f, 204.282f, -33.1718f, 205.582f);
        path.quadTo(-29.1218f, 179.382f, -23.7218f, 163.032f);
        path.quadTo(-13.2218f, 131.482f, 5.07818f, 118.432f);
        path.quadTo(1.57818f, 122.232f, 6.12818f, 146.132f);
        path.lineTo(10.3782f, 166.382f);
        path.quadTo(12.8282f, 178.482f, 13.7282f, 184.532f);
        path.lineTo(14.6782f, 184.532f);
        path.quadTo(15.4217f, 175.439f, 29.2782f, 152.882f);
        path.close();
    }

    private static void draw_155(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_155(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_156(Path path)
    {
        path.reset();
        path.moveTo(525.074f, 152.882f);
        path.quadTo(522.174f, 148.032f, 506.824f, 124.882f);
        path.quadTo(503.624f, 136.682f, 497.274f, 161.782f);
        path.quadTo(485.924f, 206.682f, 485.924f, 210.382f);
        path.quadTo(481.924f, 206.432f, 471.124f, 197.382f);
        path.quadTo(459.974f, 188.032f, 457.174f, 186.432f);
        path.quadTo(457.174f, 199.132f, 456.674f, 215.932f);
        path.quadTo(455.824f, 241.082f, 454.324f, 245.832f);
        path.quadTo(454.074f, 245.832f, 453.874f, 245.982f);
        path.quadTo(453.374f, 246.232f, 453.374f, 246.782f);
        path.quadTo(450.324f, 244.732f, 445.124f, 240.432f);
        path.lineTo(436.374f, 233.032f);
        path.quadTo(425.724f, 224.532f, 420.824f, 224.732f);
        path.lineTo(420.824f, 233.382f);
        path.quadTo(423.174f, 240.482f, 428.124f, 261.182f);
        path.quadTo(432.774f, 280.332f, 433.224f, 281.282f);
        path.lineTo(431.824f, 281.282f);
        path.quadTo(425.324f, 278.182f, 421.724f, 276.832f);
        path.quadTo(414.624f, 274.082f, 411.224f, 274.582f);
        path.quadTo(414.924f, 295.282f, 434.574f, 322.032f);
        path.quadTo(441.124f, 330.882f, 459.124f, 351.232f);
        path.lineTo(450.474f, 352.582f);
        path.quadTo(444.724f, 353.332f, 444.724f, 356.032f);
        path.quadTo(444.724f, 360.932f, 453.574f, 375.482f);
        path.lineTo(457.674f, 381.932f);
        path.lineTo(621.124f, 381.932f);
        path.lineTo(626.574f, 370.132f);
        path.quadTo(635.074f, 351.232f, 640.574f, 334.982f);
        path.quadTo(646.724f, 316.782f, 646.974f, 308.132f);
        path.lineTo(646.974f, 289.932f);
        path.lineTo(646.074f, 289.932f);
        path.lineTo(638.174f, 301.282f);
        path.quadTo(630.524f, 312.382f, 627.824f, 314.832f);
        path.lineTo(627.824f, 313.882f);
        path.quadTo(631.574f, 308.632f, 636.224f, 271.882f);
        path.quadTo(640.124f, 240.882f, 640.274f, 229.632f);
        path.lineTo(632.174f, 243.182f);
        path.quadTo(625.974f, 253.482f, 623.024f, 256.382f);
        path.quadTo(625.674f, 243.982f, 617.774f, 204.232f);
        path.quadTo(614.424f, 187.332f, 610.724f, 174.882f);
        path.quadTo(606.674f, 161.482f, 603.874f, 158.632f);
        path.quadTo(603.874f, 159.632f, 602.924f, 159.632f);
        path.quadTo(602.474f, 162.632f, 595.374f, 182.982f);
        path.quadTo(587.924f, 204.282f, 587.574f, 205.582f);
        path.quadTo(583.524f, 179.382f, 578.124f, 163.032f);
        path.quadTo(567.624f, 131.482f, 549.274f, 118.432f);
        path.quadTo(552.774f, 122.232f, 548.224f, 146.132f);
        path.lineTo(543.974f, 166.382f);
        path.quadTo(541.524f, 178.482f, 540.624f, 184.532f);
        path.lineTo(539.674f, 184.532f);
        path.quadTo(538.93f, 175.439f, 525.074f, 152.882f);
        path.close();
    }

    private static void draw_156(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_156(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_157(Path path)
    {
        path.reset();
        path.moveTo(498.19f, 41.2012f);
        path.quadTo(498.19f, 12.6012f, 471.44f, 12.6012f);
        path.lineTo(90.6395f, 12.6012f);
        path.quadTo(63.8895f, 12.6012f, 63.8895f, 41.2012f);
        path.lineTo(63.8895f, 311.651f);
        path.quadTo(63.8895f, 340.301f, 90.6395f, 340.301f);
        path.lineTo(471.44f, 340.301f);
        path.quadTo(498.19f, 340.301f, 498.19f, 311.651f);
        path.lineTo(498.19f, 41.2012f);
        path.close();
    }

    private static void draw_157(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_157(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_158(Path path)
    {
        path.reset();
        path.moveTo(462.19f, 280.675f);
        path.lineTo(462.19f, 45.8247f);
        path.lineTo(98.6403f, 45.8247f);
        path.lineTo(98.6403f, 280.675f);
        path.lineTo(462.19f, 280.675f);
        path.close();
    }

    private static void draw_158(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_158(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_159(Path path)
    {
        path.reset();
        path.moveTo(98.6067f, 280.675f);
        path.lineTo(98.6067f, 305.925f);
        path.lineTo(462.157f, 305.925f);
        path.lineTo(462.157f, 280.675f);
        path.lineTo(98.6067f, 280.675f);
        path.close();
    }

    private static void draw_159(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_159(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_160(Path path)
    {
        path.reset();
        path.moveTo(109.609f, 302.864f);
        path.lineTo(108.759f, 301.664f);
        path.quadTo(108.059f, 299.764f, 107.359f, 298.964f);
        path.lineTo(107.359f, 295.014f);
        path.lineTo(108.859f, 295.264f);
        path.lineTo(110.259f, 295.464f);
        path.lineTo(110.709f, 295.064f);
        path.lineTo(110.759f, 294.164f);
        path.quadTo(110.759f, 291.614f, 105.959f, 290.714f);
        path.quadTo(106.959f, 289.464f, 109.559f, 288.514f);
        path.quadTo(110.709f, 288.514f, 111.659f, 289.364f);
        path.quadTo(112.659f, 290.264f, 112.659f, 291.564f);
        path.lineTo(114.909f, 291.714f);
        path.lineTo(115.009f, 293.314f);
        path.quadTo(115.009f, 294.414f, 113.609f, 296.614f);
        path.quadTo(112.159f, 298.714f, 112.159f, 299.564f);
        path.quadTo(112.159f, 300.164f, 112.659f, 301.764f);
        path.lineTo(112.959f, 302.864f);
        path.lineTo(118.909f, 302.864f);
        path.lineTo(118.909f, 284.614f);
        path.lineTo(103.109f, 284.614f);
        path.lineTo(103.109f, 302.864f);
        path.lineTo(109.609f, 302.864f);
        path.close();
    }

    private static void draw_160(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_160(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 51, 204, 153));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_161(Path path)
    {
        path.reset();
        path.moveTo(112.97f, 302.864f);
        path.lineTo(112.67f, 301.764f);
        path.quadTo(112.17f, 300.164f, 112.17f, 299.564f);
        path.quadTo(112.17f, 298.714f, 113.62f, 296.613f);
        path.quadTo(115.02f, 294.413f, 115.02f, 293.313f);
        path.lineTo(114.92f, 291.713f);
        path.lineTo(112.67f, 291.563f);
        path.quadTo(112.67f, 290.263f, 111.67f, 289.363f);
        path.quadTo(110.72f, 288.513f, 109.57f, 288.513f);
        path.quadTo(106.97f, 289.464f, 105.97f, 290.714f);
        path.quadTo(110.77f, 291.613f, 110.77f, 294.163f);
        path.lineTo(110.72f, 295.063f);
        path.lineTo(110.27f, 295.463f);
        path.lineTo(108.87f, 295.263f);
        path.lineTo(107.37f, 295.013f);
        path.lineTo(107.37f, 298.963f);
        path.quadTo(108.07f, 299.763f, 108.77f, 301.663f);
        path.lineTo(109.62f, 302.863f);
        path.lineTo(112.97f, 302.864f);
        path.close();
    }

    private static void draw_161(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_161(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_162(Path path)
    {
        path.reset();
        path.moveTo(144.089f, 290.066f);
        path.quadTo(142.539f, 288.516f, 140.339f, 288.516f);
        path.lineTo(131.539f, 288.516f);
        path.quadTo(129.339f, 288.516f, 127.789f, 290.066f);
        path.quadTo(126.239f, 291.616f, 126.239f, 293.766f);
        path.quadTo(126.239f, 296.016f, 127.789f, 297.566f);
        path.quadTo(129.339f, 299.066f, 131.539f, 299.066f);
        path.lineTo(140.339f, 299.066f);
        path.quadTo(142.539f, 299.066f, 144.089f, 297.566f);
        path.quadTo(145.639f, 296.016f, 145.639f, 293.766f);
        path.quadTo(145.608f, 291.631f, 144.089f, 290.066f);
        path.close();
    }

    private static Shader create_gradient_12()
    {
        int colors[] = {
            Color.argb(255, 153, 153, 153),
            Color.argb(255, 153, 153, 153)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_162(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_162(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_12();
        shader.setLocalMatrix(createMatrix(0.0f, -0.011829f, 0.00644837f, 0.0f, 135.941f, 293.795f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_163(Path path)
    {
        path.reset();
        path.moveTo(413.808f, 298.674f);
        path.quadTo(415.708f, 296.774f, 415.708f, 294.174f);
        path.quadTo(415.708f, 291.474f, 413.808f, 289.624f);
        path.quadTo(411.908f, 287.674f, 409.258f, 287.674f);
        path.lineTo(384.008f, 287.674f);
        path.quadTo(381.358f, 287.674f, 379.458f, 289.624f);
        path.quadTo(377.558f, 291.474f, 377.558f, 294.174f);
        path.quadTo(377.558f, 296.774f, 379.458f, 298.674f);
        path.quadTo(381.358f, 300.624f, 384.008f, 300.624f);
        path.lineTo(409.258f, 300.624f);
        path.quadTo(411.92f, 300.608f, 413.808f, 298.674f);
        path.close();
    }

    private static void draw_163(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_163(path);
        canvas.concat(createMatrix(1.08613f, 0.0f, 0.0f, 1.08613f, 0.0f, 0.0f));
        Shader shader = create_gradient_12();
        shader.setLocalMatrix(createMatrix(0.0232928f, 0.0f, 0.0f, 0.00788134f, 396.637f, 294.163f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_164(Path path)
    {
        path.reset();
        path.moveTo(10.5236f, 0.868456f);
        path.lineTo(9.27365f, 0.868456f);
        path.lineTo(9.12365f, 0.618456f);
        path.lineTo(8.82365f, 0.0184563f);
        path.lineTo(1.87365f, 0.0184563f);
        path.lineTo(1.47365f, 0.868456f);
        path.lineTo(0.0236465f, 0.868456f);
        path.lineTo(0.0236465f, 7.96846f);
        path.lineTo(10.5236f, 7.96846f);
        path.lineTo(10.5236f, 0.868456f);
        path.close();
    }

    private static void draw_164(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_164(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_165(Path path)
    {
        path.reset();
        path.moveTo(8.12262f, 4.13794f);
        path.quadTo(8.12262f, 3.03794f, 7.32262f, 2.18794f);
        path.quadTo(6.52262f, 1.43794f, 5.47262f, 1.43794f);
        path.quadTo(4.32262f, 1.43794f, 3.52262f, 2.18794f);
        path.quadTo(2.77262f, 3.03794f, 2.77262f, 4.13794f);
        path.quadTo(2.77262f, 5.23794f, 3.52262f, 6.03794f);
        path.quadTo(4.32262f, 6.78794f, 5.47262f, 6.78794f);
        path.quadTo(6.52262f, 6.78794f, 7.32262f, 6.03794f);
        path.quadTo(8.12262f, 5.21074f, 8.12262f, 4.13794f);
        path.close();
    }

    private static void draw_165(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_165(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStrokeWidth(1.02171f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void draw_shape_2(Canvas canvas, Path path, Paint paint)
    {
        draw_164(canvas, path, paint);
        draw_165(canvas, path, paint);
    }

    private static void def_path_166(Path path)
    {
        path.reset();
        path.moveTo(438.4f, 318.05f);
        path.lineTo(438.25f, 317.1f);
        path.lineTo(436.65f, 318.7f);
        path.quadTo(437.6f, 319.0f, 438.25f, 319.65f);
        path.lineTo(438.3f, 318.7f);
        path.lineTo(440.15f, 318.8f);
        path.quadTo(442.05f, 319.0f, 442.05f, 320.2f);
        path.quadTo(442.05f, 321.4f, 440.05f, 321.95f);
        path.lineTo(436.65f, 322.2f);
        path.lineTo(436.65f, 324.2f);
        path.lineTo(440.05f, 323.5f);
        path.quadTo(443.5f, 322.45f, 443.5f, 320.85f);
        path.quadTo(443.5f, 319.4f, 441.75f, 318.7f);
        path.lineTo(438.85f, 318.25f);
        path.lineTo(438.4f, 318.3f);
        path.lineTo(438.4f, 318.05f);
        path.close();
    }

    private static void draw_166(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_166(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_167(Path path)
    {
        path.reset();
        path.moveTo(422.05f, 323.45f);
        path.lineTo(422.2f, 324.4f);
        path.lineTo(423.8f, 322.8f);
        path.quadTo(422.85f, 322.5f, 422.2f, 321.85f);
        path.lineTo(422.15f, 322.8f);
        path.lineTo(420.3f, 322.7f);
        path.quadTo(418.4f, 322.5f, 418.4f, 321.3f);
        path.quadTo(418.4f, 320.1f, 420.4f, 319.55f);
        path.lineTo(423.8f, 319.3f);
        path.lineTo(423.8f, 317.3f);
        path.quadTo(422.6f, 317.3f, 420.4f, 318.0f);
        path.quadTo(416.95f, 319.05f, 416.95f, 320.65f);
        path.quadTo(416.95f, 322.1f, 418.7f, 322.8f);
        path.lineTo(421.6f, 323.25f);
        path.lineTo(422.05f, 323.2f);
        path.lineTo(422.05f, 323.45f);
        path.close();
    }

    private static void draw_167(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_167(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_168(Path path)
    {
        path.reset();
        path.moveTo(489.45f, 320.8f);
        path.lineTo(466.15f, 320.8f);
        path.quadTo(464.8f, 320.8f, 463.8f, 321.65f);
        path.quadTo(462.9f, 322.55f, 462.9f, 323.8f);
        path.quadTo(462.9f, 325.05f, 463.8f, 325.9f);
        path.quadTo(464.8f, 326.85f, 466.15f, 326.85f);
        path.lineTo(489.45f, 326.85f);
        path.quadTo(490.8f, 326.85f, 491.7f, 325.9f);
        path.quadTo(492.7f, 325.05f, 492.7f, 323.8f);
        path.quadTo(492.7f, 322.55f, 491.7f, 321.65f);
        path.quadTo(490.8f, 320.8f, 489.45f, 320.8f);
        path.close();
    }

    private static Shader create_gradient_13()
    {
        int colors[] = {
            Color.argb(255, 102, 102, 102),
            Color.argb(255, 51, 51, 51)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_168(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_168(path);
        Shader shader = create_gradient_13();
        shader.setLocalMatrix(createMatrix(0.0f, -0.00369263f, 0.00395203f, 0.0f, 477.8f, 323.8f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_169(Path path)
    {
        path.reset();
        path.moveTo(466.15f, 320.85f);
        path.quadTo(464.95f, 320.85f, 464.05f, 321.65f);
        path.quadTo(463.2f, 322.5f, 463.2f, 323.6f);
        path.quadTo(463.2f, 324.7f, 464.05f, 325.5f);
        path.quadTo(464.95f, 326.35f, 466.15f, 326.35f);
        path.lineTo(468.65f, 326.35f);
        path.quadTo(469.85f, 326.35f, 470.7f, 325.5f);
        path.quadTo(471.65f, 324.7f, 471.65f, 323.6f);
        path.quadTo(471.65f, 322.5f, 470.7f, 321.65f);
        path.quadTo(469.85f, 320.85f, 468.65f, 320.85f);
        path.lineTo(466.15f, 320.85f);
        path.close();
    }

    private static void draw_169(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_169(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_170(Path path)
    {
        path.reset();
        path.moveTo(484.5f, 313.75f);
        path.lineTo(484.5f, 318.95f);
        path.lineTo(490.65f, 318.95f);
        path.lineTo(490.65f, 316.3f);
        path.lineTo(492.45f, 318.15f);
        path.lineTo(492.45f, 314.25f);
        path.lineTo(490.65f, 316.3f);
        path.lineTo(490.65f, 313.75f);
        path.lineTo(484.5f, 313.75f);
        path.close();
    }

    private static void draw_170(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_170(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_171(Path path)
    {
        path.reset();
        path.moveTo(530.8f, 203.25f);
        path.quadTo(534.5f, 199.6f, 534.5f, 194.45f);
        path.quadTo(534.5f, 189.35f, 530.8f, 185.65f);
        path.quadTo(527.2f, 182.0f, 522.05f, 182.0f);
        path.quadTo(516.9f, 182.0f, 513.25f, 185.65f);
        path.quadTo(509.6f, 189.35f, 509.6f, 194.45f);
        path.quadTo(509.6f, 199.6f, 513.25f, 203.25f);
        path.quadTo(516.9f, 206.9f, 522.05f, 206.9f);
        path.quadTo(527.2f, 206.9f, 530.8f, 203.25f);
        path.close();
    }

    private static Shader create_gradient_14()
    {
        int colors[] = {
            Color.argb(255, 0, 0, 0),
            Color.argb(255, 51, 51, 51)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new RadialGradient(0.0f, 0.0f, 819.2f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_171(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_171(path);
        Shader shader = create_gradient_14();
        shader.setLocalMatrix(createMatrix(0.0157623f, 0.0f, 0.0f, 0.0157623f, 522.05f, 194.45f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_172(Path path)
    {
        path.reset();
        path.moveTo(517.5f, 196.8f);
        path.quadTo(517.5f, 199.55f, 520.25f, 199.55f);
        path.lineTo(524.4f, 199.55f);
        path.quadTo(527.15f, 199.55f, 527.15f, 196.8f);
        path.lineTo(527.15f, 192.65f);
        path.quadTo(527.15f, 189.9f, 524.4f, 189.9f);
        path.lineTo(520.25f, 189.9f);
        path.quadTo(517.5f, 189.9f, 517.5f, 192.65f);
        path.lineTo(517.5f, 196.8f);
    }

    private static void draw_172(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_172(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_173(Path path)
    {
        path.reset();
        path.moveTo(345.3f, 232.7f);
        path.quadTo(342.1f, 232.7f, 339.6f, 233.6f);
        path.quadTo(335.3f, 230.45f, 330.0f, 227.6f);
        path.quadTo(304.45f, 213.6f, 279.35f, 213.6f);
        path.quadTo(259.8f, 213.6f, 252.3f, 215.5f);
        path.quadTo(235.0f, 219.85f, 235.0f, 234.6f);
        path.quadTo(235.0f, 238.75f, 235.75f, 242.55f);
        path.quadTo(220.95f, 232.7f, 205.7f, 232.7f);
        path.quadTo(195.9f, 232.7f, 187.25f, 238.45f);
        path.quadTo(177.65f, 244.9f, 177.65f, 254.05f);
        path.quadTo(177.65f, 262.35f, 189.35f, 268.8f);
        path.lineTo(198.35f, 273.2f);
        path.quadTo(203.15f, 275.4f, 204.4f, 276.7f);
        path.lineTo(209.6f, 282.0f);
        path.lineTo(212.25f, 283.5f);
        path.quadTo(220.45f, 287.9f, 228.2f, 287.9f);
        path.lineTo(235.5f, 287.3f);
        path.quadTo(239.8f, 287.3f, 243.35f, 288.4f);
        path.quadTo(246.8f, 289.55f, 253.8f, 289.55f);
        path.lineTo(259.75f, 289.55f);
        path.quadTo(263.55f, 289.1f, 263.55f, 286.95f);
        path.quadTo(263.55f, 286.2f, 260.25f, 280.3f);
        path.quadTo(256.9f, 274.45f, 256.9f, 273.1f);
        path.lineTo(256.9f, 273.0f);
        path.quadTo(256.9f, 271.35f, 257.5f, 269.45f);
        path.lineTo(259.05f, 269.85f);
        path.quadTo(260.7f, 268.2f, 261.8f, 268.2f);
        path.quadTo(262.85f, 268.2f, 264.65f, 270.9f);
        path.quadTo(266.4f, 273.6f, 267.5f, 273.6f);
        path.quadTo(268.45f, 273.6f, 268.7f, 270.05f);
        path.quadTo(268.9f, 266.3f, 270.35f, 265.8f);
        path.quadTo(270.7f, 268.55f, 274.25f, 273.25f);
        path.quadTo(276.6f, 276.3f, 278.4f, 277.75f);
        path.quadTo(287.0f, 279.65f, 296.85f, 280.25f);
        path.quadTo(297.3f, 279.45f, 297.3f, 277.9f);
        path.quadTo(297.3f, 275.95f, 296.1f, 273.65f);
        path.quadTo(294.9f, 271.4f, 294.9f, 268.2f);
        path.quadTo(294.9f, 262.5f, 299.25f, 262.5f);
        path.quadTo(302.9f, 262.5f, 305.2f, 267.85f);
        path.quadTo(306.85f, 271.65f, 307.2f, 275.7f);
        path.quadTo(307.55f, 279.35f, 309.85f, 280.5f);
        path.lineTo(316.55f, 279.9f);
        path.lineTo(319.95f, 279.25f);
        path.lineTo(319.9f, 279.45f);
        path.lineTo(330.15f, 277.7f);
        path.quadTo(330.7f, 276.6f, 330.8f, 274.75f);
        path.quadTo(330.75f, 270.5f, 330.85f, 268.8f);
        path.quadTo(331.8f, 268.65f, 333.6f, 270.75f);
        path.lineTo(335.35f, 273.3f);
        path.lineTo(336.25f, 273.3f);
        path.lineTo(337.15f, 267.6f);
        path.quadTo(339.2f, 268.8f, 341.5f, 271.45f);
        path.lineTo(344.05f, 274.5f);
        path.lineTo(344.5f, 274.3f);
        path.lineTo(345.75f, 276.0f);
        path.lineTo(347.8f, 277.9f);
        path.quadTo(349.85f, 279.25f, 352.65f, 279.25f);
        path.quadTo(355.1f, 279.25f, 362.2f, 276.7f);
        path.quadTo(369.3f, 274.15f, 372.05f, 274.15f);
        path.quadTo(376.3f, 274.15f, 383.35f, 277.3f);
        path.quadTo(390.35f, 280.55f, 393.45f, 280.55f);
        path.quadTo(396.1f, 280.55f, 398.25f, 279.25f);
        path.quadTo(400.15f, 278.15f, 400.15f, 277.0f);
        path.quadTo(400.15f, 274.2f, 395.0f, 271.2f);
        path.lineTo(388.65f, 267.15f);
        path.quadTo(382.6f, 259.6f, 377.8f, 252.45f);
        path.quadTo(374.0f, 247.0f, 364.5f, 240.4f);
        path.quadTo(353.25f, 232.7f, 345.3f, 232.7f);
        path.close();
    }

    private static void draw_173(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_173(path);
        Shader shader = create_gradient_5();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0380249f, -1.19806f, 0.0f, 586.4f, 268.25f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_174(Path path)
    {
        path.reset();
        path.moveTo(480.95f, 98.15f);
        path.quadTo(480.95f, 97.2f, 480.65f, 96.9f);
        path.quadTo(479.0f, 96.85f, 477.6f, 98.1f);
        path.lineTo(476.5f, 99.4f);
        path.lineTo(476.35f, 99.3f);
        path.quadTo(476.35f, 98.35f, 475.8f, 97.5f);
        path.quadTo(475.05f, 96.15f, 473.5f, 96.25f);
        path.lineTo(473.5f, 98.75f);
        path.lineTo(474.75f, 102.1f);
        path.quadTo(475.5f, 104.2f, 476.65f, 105.45f);
        path.lineTo(479.7f, 101.6f);
        path.quadTo(480.95f, 99.9f, 480.95f, 98.15f);
        path.close();
        path.moveTo(474.9f, 86.9f);
        path.quadTo(474.4f, 87.9f, 474.4f, 88.4f);
        path.quadTo(473.9f, 88.3f, 473.3f, 87.35f);
        path.quadTo(472.85f, 86.45f, 471.7f, 86.6f);
        path.quadTo(471.35f, 87.05f, 471.35f, 88.0f);
        path.quadTo(471.35f, 91.1f, 474.9f, 93.05f);
        path.lineTo(476.65f, 90.1f);
        path.lineTo(476.8f, 88.0f);
        path.lineTo(476.65f, 85.95f);
        path.lineTo(475.5f, 85.8f);
        path.lineTo(474.9f, 86.9f);
        path.close();
    }

    private static void draw_174(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_174(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_175(Path path)
    {
        path.reset();
        path.moveTo(443.55f, 136.0f);
        path.lineTo(437.2f, 136.8f);
        path.lineTo(430.9f, 136.0f);
        path.lineTo(424.9f, 135.25f);
        path.quadTo(422.25f, 135.25f, 420.35f, 136.4f);
        path.quadTo(418.0f, 137.85f, 418.0f, 140.25f);
        path.quadTo(418.0f, 145.05f, 427.6f, 149.85f);
        path.quadTo(436.15f, 154.05f, 441.45f, 154.05f);
        path.lineTo(453.9f, 153.25f);
        path.quadTo(456.95f, 153.25f, 462.7f, 154.4f);
        path.quadTo(468.45f, 155.6f, 471.7f, 155.6f);
        path.quadTo(477.45f, 155.15f, 477.45f, 153.7f);
        path.quadTo(477.45f, 152.5f, 476.0f, 151.5f);
        path.lineTo(473.8f, 150.5f);
        path.quadTo(468.95f, 146.0f, 462.4f, 142.25f);
        path.quadTo(451.85f, 136.0f, 443.55f, 136.0f);
        path.close();
    }

    private static void draw_175(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_175(path);
        Shader shader = create_gradient_5();
        shader.setLocalMatrix(createMatrix(3.05176e-05f, 0.0155029f, -0.0123901f, 3.05176e-05f, 446.25f, 139.85f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_176(Path path)
    {
        path.reset();
        path.moveTo(448.2f, 133.2f);
        path.quadTo(444.1f, 133.2f, 441.5f, 135.1f);
        path.quadTo(438.85f, 137.1f, 438.85f, 140.45f);
        path.quadTo(438.85f, 149.75f, 444.2f, 154.65f);
        path.lineTo(444.95f, 154.65f);
        path.quadTo(445.35f, 152.75f, 445.35f, 148.15f);
        path.quadTo(445.55f, 149.85f, 446.2f, 151.4f);
        path.quadTo(447.35f, 154.0f, 449.55f, 154.25f);
        path.quadTo(449.95f, 152.35f, 449.95f, 148.15f);
        path.lineTo(459.6f, 151.95f);
        path.lineTo(469.5f, 155.8f);
        path.lineTo(472.2f, 155.8f);
        path.quadTo(470.95f, 153.8f, 469.2f, 152.05f);
        path.lineTo(468.75f, 151.95f);
        path.lineTo(469.1f, 151.95f);
        path.lineTo(469.2f, 152.05f);
        path.lineTo(474.3f, 151.6f);
        path.quadTo(478.8f, 150.55f, 479.85f, 150.45f);
        path.lineTo(477.55f, 148.6f);
        path.quadTo(476.2f, 147.55f, 474.95f, 147.75f);
        path.quadTo(478.3f, 147.3f, 482.25f, 145.0f);
        path.lineTo(488.65f, 140.45f);
        path.quadTo(486.05f, 138.45f, 481.65f, 138.0f);
        path.lineTo(473.7f, 137.0f);
        path.quadTo(473.7f, 136.05f, 472.95f, 134.15f);
        path.quadTo(472.2f, 132.25f, 472.2f, 131.25f);
        path.quadTo(470.55f, 132.25f, 469.9f, 137.0f);
        path.lineTo(468.15f, 134.55f);
        path.lineTo(466.45f, 132.05f);
        path.lineTo(466.05f, 132.05f);
        path.lineTo(465.85f, 136.65f);
        path.lineTo(459.6f, 135.0f);
        path.quadTo(451.75f, 133.2f, 448.2f, 133.2f);
        path.close();
    }

    private static void draw_176(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_176(path);
        paint.setColor(Color.argb(255, 255, 204, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_177(Path path)
    {
        path.reset();
        path.moveTo(476.8f, 138.75f);
        path.lineTo(475.55f, 138.75f);
        path.lineTo(475.35f, 139.15f);
        path.lineTo(475.25f, 139.7f);
        path.lineTo(476.4f, 141.25f);
        path.lineTo(476.85f, 140.85f);
        path.quadTo(477.15f, 140.65f, 477.15f, 139.7f);
        path.quadTo(477.15f, 138.85f, 476.8f, 138.75f);
        path.close();
        path.moveTo(472.2f, 139.6f);
        path.lineTo(472.0f, 139.5f);
        path.quadTo(471.7f, 139.4f, 471.7f, 140.0f);
        path.quadTo(471.7f, 140.95f, 472.95f, 142.0f);
        path.lineTo(473.35f, 141.7f);
        path.lineTo(473.4f, 140.95f);
        path.quadTo(473.4f, 139.8f, 472.2f, 139.6f);
        path.close();
    }

    private static void draw_177(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_177(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_178(Path path)
    {
        path.reset();
        path.moveTo(448.9f, 117.4f);
        path.lineTo(451.3f, 120.4f);
        path.lineTo(452.25f, 121.8f);
        path.lineTo(455.05f, 126.05f);
        path.quadTo(456.2f, 125.1f, 456.5f, 123.75f);
        path.lineTo(456.6f, 121.45f);
        path.lineTo(456.6f, 121.05f);
        path.lineTo(456.6f, 119.05f);
        path.lineTo(456.4f, 117.6f);
        path.quadTo(456.0f, 116.15f, 454.65f, 115.2f);
        path.lineTo(453.8f, 115.5f);
        path.quadTo(449.85f, 116.45f, 448.45f, 117.05f);
        path.lineTo(448.9f, 117.4f);
        path.close();
    }

    private static void draw_178(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_178(path);
        paint.setColor(Color.argb(255, 255, 153, 153));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_179(Path path)
    {
        path.reset();
        path.moveTo(454.65f, 115.2f);
        path.lineTo(458.2f, 114.25f);
        path.quadTo(463.55f, 112.8f, 465.4f, 109.55f);
        path.lineTo(456.0f, 107.75f);
        path.lineTo(446.6f, 107.25f);
        path.lineTo(445.45f, 98.85f);
        path.quadTo(445.1f, 98.45f, 444.7f, 98.45f);
        path.lineTo(442.4f, 107.25f);
        path.lineTo(439.35f, 107.25f);
        path.quadTo(439.25f, 105.8f, 437.4f, 99.95f);
        path.quadTo(437.05f, 99.95f, 437.05f, 99.6f);
        path.quadTo(435.95f, 104.65f, 434.65f, 113.4f);
        path.quadTo(432.45f, 126.6f, 432.45f, 131.0f);
        path.quadTo(432.45f, 134.45f, 432.6f, 137.55f);
        path.lineTo(432.05f, 137.55f);
        path.quadTo(428.6f, 135.45f, 428.6f, 129.85f);
        path.quadTo(427.35f, 131.5f, 427.15f, 132.55f);
        path.lineTo(427.05f, 135.45f);
        path.quadTo(427.05f, 138.1f, 428.8f, 140.4f);
        path.quadTo(430.5f, 142.6f, 433.1f, 142.7f);
        path.quadTo(433.95f, 150.1f, 436.25f, 154.0f);
        path.lineTo(437.4f, 154.0f);
        path.quadTo(437.3f, 152.4f, 437.9f, 149.4f);
        path.lineTo(438.55f, 144.8f);
        path.quadTo(439.25f, 146.55f, 439.6f, 150.5f);
        path.quadTo(440.3f, 153.65f, 442.2f, 153.65f);
        path.quadTo(443.15f, 153.65f, 443.85f, 152.5f);
        path.lineTo(443.55f, 143.3f);
        path.quadTo(443.55f, 139.0f, 445.1f, 137.15f);
        path.quadTo(446.6f, 135.25f, 450.25f, 135.25f);
        path.quadTo(452.0f, 135.25f, 454.3f, 136.0f);
        path.lineTo(456.2f, 136.0f);
        path.lineTo(456.6f, 135.7f);
        path.lineTo(456.6f, 135.05f);
        path.quadTo(456.6f, 133.7f, 451.0f, 130.75f);
        path.quadTo(445.45f, 127.65f, 445.45f, 125.1f);
        path.quadTo(445.45f, 123.25f, 451.5f, 121.9f);
        path.lineTo(452.25f, 121.8f);
        path.lineTo(451.3f, 120.4f);
        path.lineTo(448.9f, 117.4f);
        path.lineTo(447.75f, 117.2f);
        path.lineTo(448.45f, 117.05f);
        path.quadTo(449.85f, 116.45f, 453.8f, 115.5f);
        path.lineTo(454.65f, 115.2f);
        path.close();
        path.moveTo(456.6f, 121.05f);
        path.lineTo(459.25f, 120.65f);
        path.quadTo(458.3f, 119.6f, 456.6f, 119.05f);
        path.lineTo(456.6f, 121.05f);
        path.close();
    }

    private static void draw_179(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_179(path);
        paint.setColor(Color.argb(255, 255, 102, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_180(Path path)
    {
        path.reset();
        path.moveTo(445.55f, 110.7f);
        path.lineTo(444.3f, 110.6f);
        path.lineTo(443.95f, 110.9f);
        path.lineTo(443.85f, 111.65f);
        path.quadTo(443.85f, 112.55f, 445.1f, 113.5f);
        path.lineTo(445.55f, 113.0f);
        path.lineTo(445.55f, 110.7f);
        path.close();
        path.moveTo(450.05f, 111.95f);
        path.quadTo(450.05f, 110.8f, 449.5f, 109.65f);
        path.quadTo(448.55f, 109.65f, 448.55f, 110.7f);
        path.quadTo(448.55f, 111.2f, 449.7f, 112.25f);
        path.lineTo(450.05f, 111.95f);
        path.close();
    }

    private static void draw_180(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_180(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_181(Path path)
    {
        path.reset();
        path.moveTo(248.85f, 163.3f);
        path.quadTo(248.2f, 164.1f, 248.2f, 166.5f);
        path.quadTo(248.2f, 170.05f, 254.85f, 184.8f);
        path.quadTo(259.15f, 194.6f, 262.85f, 200.35f);
        path.lineTo(266.3f, 204.9f);
        path.lineTo(266.55f, 205.2f);
        path.lineTo(267.35f, 206.1f);
        path.quadTo(268.55f, 207.3f, 269.9f, 207.3f);
        path.quadTo(271.4f, 207.3f, 273.05f, 206.0f);
        path.quadTo(275.0f, 204.65f, 275.0f, 202.8f);
        path.quadTo(271.5f, 192.7f, 266.7f, 182.65f);
        path.quadTo(257.15f, 162.65f, 250.75f, 162.65f);
        path.quadTo(249.4f, 162.65f, 248.85f, 163.3f);
        path.close();
    }

    private static void draw_181(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_181(path);
        paint.setColor(Color.argb(255, 254, 127, 69));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_182(Path path)
    {
        path.reset();
        path.moveTo(347.15f, 131.65f);
        path.quadTo(349.7f, 139.3f, 354.15f, 145.05f);
        path.quadTo(359.1f, 151.25f, 366.25f, 153.15f);
        path.lineTo(368.65f, 153.75f);
        path.lineTo(379.25f, 153.0f);
        path.quadTo(384.75f, 153.0f, 388.8f, 154.6f);
        path.quadTo(394.4f, 156.75f, 394.4f, 161.15f);
        path.quadTo(394.4f, 165.2f, 382.75f, 166.5f);
        path.lineTo(368.9f, 166.95f);
        path.lineTo(361.15f, 166.9f);
        path.quadTo(356.55f, 166.9f, 354.15f, 167.75f);
        path.quadTo(353.6f, 167.9f, 348.25f, 171.0f);
        path.quadTo(343.45f, 173.75f, 342.45f, 173.75f);
        path.quadTo(340.2f, 173.75f, 339.0f, 168.95f);
        path.quadTo(338.2f, 165.7f, 338.2f, 162.55f);
        path.lineTo(338.2f, 161.0f);
        path.lineTo(337.95f, 159.25f);
        path.quadTo(337.25f, 154.55f, 337.25f, 149.2f);
        path.quadTo(337.25f, 141.95f, 338.2f, 132.3f);
        path.quadTo(339.3f, 120.8f, 340.75f, 120.8f);
        path.quadTo(343.3f, 120.8f, 345.3f, 125.7f);
        path.lineTo(347.15f, 131.65f);
        path.close();
    }

    private static void draw_182(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_182(path);
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0643921f, 0.123535f, 0.0f, 299.8f, 164.15f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_183(Path path)
    {
        path.reset();
        path.moveTo(419.1f, 136.5f);
        path.lineTo(416.7f, 141.85f);
        path.lineTo(416.65f, 142.15f);
        path.lineTo(416.65f, 141.85f);
        path.lineTo(416.7f, 141.85f);
        path.quadTo(416.8f, 139.05f, 415.05f, 135.95f);
        path.quadTo(413.15f, 132.7f, 410.9f, 131.95f);
        path.lineTo(409.3f, 131.95f);
        path.lineTo(409.0f, 134.7f);
        path.quadTo(409.0f, 137.15f, 410.9f, 141.3f);
        path.quadTo(411.8f, 143.3f, 412.65f, 144.65f);
        path.quadTo(410.75f, 145.65f, 409.8f, 146.85f);
        path.quadTo(408.35f, 148.7f, 408.35f, 152.05f);
        path.quadTo(408.35f, 155.25f, 409.8f, 156.65f);
        path.quadTo(410.45f, 157.3f, 413.2f, 158.65f);
        path.quadTo(412.75f, 160.5f, 412.2f, 164.5f);
        path.quadTo(411.4f, 169.5f, 411.3f, 172.05f);
        path.quadTo(409.85f, 169.9f, 408.25f, 166.8f);
        path.lineTo(403.75f, 157.85f);
        path.quadTo(398.05f, 147.6f, 391.45f, 147.6f);
        path.quadTo(388.6f, 147.6f, 387.3f, 150.75f);
        path.quadTo(386.35f, 153.0f, 386.35f, 156.05f);
        path.quadTo(386.35f, 159.95f, 391.55f, 168.45f);
        path.quadTo(396.0f, 175.7f, 399.75f, 179.8f);
        path.quadTo(406.2f, 186.7f, 408.25f, 188.4f);
        path.quadTo(412.6f, 191.9f, 416.8f, 191.9f);
        path.quadTo(422.55f, 191.9f, 424.3f, 186.8f);
        path.quadTo(425.25f, 184.0f, 425.25f, 177.05f);
        path.quadTo(425.25f, 172.6f, 424.2f, 167.2f);
        path.lineTo(422.4f, 157.8f);
        path.quadTo(424.6f, 157.0f, 426.05f, 154.45f);
        path.quadTo(427.5f, 151.9f, 427.5f, 148.7f);
        path.quadTo(427.5f, 145.5f, 425.5f, 143.9f);
        path.quadTo(423.5f, 142.9f, 422.2f, 142.1f);
        path.lineTo(424.3f, 136.75f);
        path.lineTo(424.3f, 132.9f);
        path.quadTo(423.95f, 132.6f, 423.2f, 132.6f);
        path.quadTo(421.1f, 132.6f, 419.1f, 136.5f);
        path.close();
    }

    private static void draw_183(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_183(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0681458f, 0.0f, 0.0f, 0.0681458f, 372.95f, 134.2f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_184(Path path)
    {
        path.reset();
        path.moveTo(415.6f, 148.0f);
        path.quadTo(415.6f, 150.45f, 417.85f, 150.45f);
        path.quadTo(419.45f, 150.45f, 421.35f, 148.3f);
        path.quadTo(423.2f, 146.25f, 423.2f, 144.8f);
        path.quadTo(423.2f, 142.5f, 420.85f, 142.5f);
        path.quadTo(420.0f, 142.5f, 418.9f, 143.2f);
        path.quadTo(418.65f, 143.3f, 418.4f, 143.55f);
        path.lineTo(418.15f, 143.6f);
        path.quadTo(415.6f, 144.9f, 415.6f, 148.0f);
        path.close();
    }

    private static void draw_184(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_184(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0103302f, 0.0f, 0.0f, 0.0103302f, 416.55f, 150.7f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_185(Path path)
    {
        path.reset();
        path.moveTo(419.8f, 152.2f);
        path.quadTo(419.8f, 154.2f, 421.6f, 154.2f);
        path.quadTo(422.85f, 154.2f, 424.4f, 152.45f);
        path.quadTo(425.85f, 150.8f, 425.85f, 149.65f);
        path.quadTo(425.85f, 147.8f, 424.0f, 147.8f);
        path.quadTo(423.3f, 147.8f, 422.4f, 148.4f);
        path.lineTo(422.05f, 148.65f);
        path.lineTo(421.85f, 148.7f);
        path.quadTo(419.8f, 149.7f, 419.8f, 152.2f);
        path.close();
    }

    private static void draw_185(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_185(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.00827026f, 0.0f, 0.0f, 0.00827026f, 420.55f, 154.35f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_186(Path path)
    {
        path.reset();
        path.moveTo(417.85f, 152.35f);
        path.quadTo(417.85f, 154.8f, 415.6f, 154.8f);
        path.quadTo(414.0f, 154.8f, 412.1f, 152.65f);
        path.quadTo(410.25f, 150.6f, 410.25f, 149.15f);
        path.quadTo(410.25f, 146.85f, 412.6f, 146.85f);
        path.quadTo(413.45f, 146.85f, 414.55f, 147.55f);
        path.lineTo(415.05f, 147.9f);
        path.lineTo(415.3f, 147.95f);
        path.quadTo(417.85f, 149.25f, 417.85f, 152.35f);
        path.close();
    }

    private static void draw_186(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_186(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(-0.0103302f, 0.0f, 0.0f, 0.0103302f, 416.9f, 155.05f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_187(Path path)
    {
        path.reset();
        path.moveTo(325.95f, 133.75f);
        path.lineTo(328.35f, 139.1f);
        path.lineTo(328.4f, 139.4f);
        path.lineTo(328.4f, 139.1f);
        path.lineTo(328.35f, 139.1f);
        path.quadTo(328.25f, 136.3f, 330.0f, 133.2f);
        path.quadTo(331.9f, 129.95f, 334.15f, 129.2f);
        path.lineTo(335.75f, 129.2f);
        path.quadTo(335.75f, 130.15f, 336.05f, 131.95f);
        path.quadTo(336.05f, 134.4f, 334.15f, 138.55f);
        path.lineTo(332.4f, 141.9f);
        path.quadTo(334.3f, 142.9f, 335.25f, 144.1f);
        path.quadTo(336.7f, 145.95f, 336.7f, 149.3f);
        path.quadTo(336.7f, 152.5f, 335.25f, 153.9f);
        path.quadTo(334.6f, 154.55f, 331.85f, 155.9f);
        path.lineTo(332.85f, 161.75f);
        path.quadTo(333.65f, 166.75f, 333.75f, 169.3f);
        path.lineTo(336.8f, 164.05f);
        path.quadTo(339.7f, 158.0f, 341.3f, 155.1f);
        path.quadTo(347.0f, 144.85f, 353.6f, 144.85f);
        path.quadTo(356.45f, 144.85f, 357.75f, 148.0f);
        path.quadTo(358.7f, 150.25f, 358.7f, 153.3f);
        path.quadTo(358.7f, 157.2f, 353.5f, 165.7f);
        path.quadTo(349.05f, 172.95f, 345.3f, 177.05f);
        path.quadTo(338.85f, 183.95f, 336.8f, 185.65f);
        path.quadTo(332.45f, 189.15f, 328.25f, 189.15f);
        path.quadTo(322.5f, 189.15f, 320.75f, 184.05f);
        path.quadTo(319.8f, 181.25f, 319.8f, 174.3f);
        path.quadTo(319.8f, 169.85f, 320.85f, 164.45f);
        path.lineTo(322.65f, 155.05f);
        path.quadTo(320.45f, 154.25f, 319.0f, 151.7f);
        path.quadTo(317.55f, 149.15f, 317.55f, 145.95f);
        path.quadTo(317.55f, 142.75f, 319.55f, 141.15f);
        path.lineTo(322.85f, 139.35f);
        path.lineTo(320.75f, 134.0f);
        path.lineTo(320.75f, 130.15f);
        path.quadTo(321.1f, 129.85f, 321.85f, 129.85f);
        path.quadTo(323.95f, 129.85f, 325.95f, 133.75f);
        path.close();
    }

    private static void draw_187(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_187(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(-0.0681458f, 0.0f, 0.0f, 0.0681458f, 372.1f, 131.45f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_188(Path path)
    {
        path.reset();
        path.moveTo(328.9f, 145.1f);
        path.quadTo(328.9f, 147.55f, 326.65f, 147.55f);
        path.quadTo(325.05f, 147.55f, 323.15f, 145.4f);
        path.quadTo(321.3f, 143.35f, 321.3f, 141.9f);
        path.quadTo(321.3f, 139.6f, 323.65f, 139.6f);
        path.quadTo(324.5f, 139.6f, 325.6f, 140.3f);
        path.lineTo(326.1f, 140.65f);
        path.lineTo(326.35f, 140.7f);
        path.quadTo(328.9f, 142.0f, 328.9f, 145.1f);
        path.close();
    }

    private static void draw_188(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_188(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(-0.0103302f, 0.0f, 0.0f, 0.0103302f, 327.95f, 147.8f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_189(Path path)
    {
        path.reset();
        path.moveTo(325.05f, 149.25f);
        path.quadTo(325.05f, 151.25f, 323.25f, 151.25f);
        path.quadTo(322.0f, 151.25f, 320.45f, 149.5f);
        path.quadTo(319.0f, 147.85f, 319.0f, 146.7f);
        path.quadTo(319.0f, 144.85f, 320.85f, 144.85f);
        path.quadTo(321.55f, 144.85f, 322.45f, 145.45f);
        path.quadTo(322.65f, 145.5f, 322.8f, 145.7f);
        path.lineTo(323.0f, 145.75f);
        path.quadTo(325.05f, 146.75f, 325.05f, 149.25f);
        path.close();
    }

    private static void draw_189(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_189(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(-0.00827026f, 0.0f, 0.0f, 0.00827026f, 324.3f, 151.4f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_190(Path path)
    {
        path.reset();
        path.moveTo(326.8f, 149.45f);
        path.quadTo(326.8f, 151.9f, 329.05f, 151.9f);
        path.quadTo(330.65f, 151.9f, 332.55f, 149.75f);
        path.quadTo(334.4f, 147.7f, 334.4f, 146.25f);
        path.quadTo(334.4f, 143.95f, 332.05f, 143.95f);
        path.quadTo(331.2f, 143.95f, 330.1f, 144.65f);
        path.lineTo(329.6f, 145.0f);
        path.lineTo(329.35f, 145.05f);
        path.quadTo(326.8f, 146.35f, 326.8f, 149.45f);
        path.close();
    }

    private static void draw_190(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_190(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0103302f, 0.0f, 0.0f, 0.0103302f, 327.75f, 152.15f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_191(Path path)
    {
        path.reset();
        path.moveTo(335.65f, 67.85f);
        path.lineTo(328.75f, 67.85f);
        path.quadTo(312.4f, 70.6f, 306.65f, 75.6f);
        path.lineTo(306.35f, 75.85f);
        path.quadTo(303.65f, 73.95f, 297.8f, 71.25f);
        path.quadTo(290.35f, 67.85f, 287.15f, 67.85f);
        path.lineTo(285.35f, 67.85f);
        path.lineTo(289.8f, 72.35f);
        path.lineTo(283.35f, 71.2f);
        path.lineTo(273.75f, 70.25f);
        path.lineTo(269.35f, 70.4f);
        path.lineTo(263.45f, 70.85f);
        path.lineTo(263.3f, 70.95f);
        path.lineTo(266.75f, 73.55f);
        path.quadTo(269.7f, 75.55f, 270.65f, 76.5f);
        path.quadTo(264.6f, 75.6f, 253.3f, 79.65f);
        path.quadTo(242.9f, 83.3f, 240.4f, 86.1f);
        path.lineTo(240.35f, 86.15f);
        path.lineTo(244.65f, 87.35f);
        path.lineTo(248.8f, 88.8f);
        path.quadTo(248.05f, 90.25f, 242.8f, 92.95f);
        path.quadTo(235.9f, 96.55f, 234.1f, 97.8f);
        path.quadTo(231.65f, 99.45f, 228.25f, 103.2f);
        path.lineTo(224.55f, 107.05f);
        path.lineTo(224.6f, 107.35f);
        path.lineTo(227.2f, 107.05f);
        path.lineTo(230.2f, 107.35f);
        path.quadTo(229.75f, 108.45f, 226.5f, 110.45f);
        path.quadTo(223.1f, 112.5f, 221.55f, 115.15f);
        path.lineTo(216.45f, 123.25f);
        path.lineTo(222.45f, 122.95f);
        path.lineTo(218.1f, 125.65f);
        path.quadTo(213.8f, 128.2f, 212.85f, 129.85f);
        path.quadTo(209.8f, 134.65f, 208.05f, 140.0f);
        path.lineTo(208.2f, 140.25f);
        path.quadTo(209.05f, 139.4f, 211.05f, 139.4f);
        path.lineTo(214.05f, 139.7f);
        path.quadTo(213.85f, 141.05f, 213.25f, 142.6f);
        path.lineTo(211.35f, 146.6f);
        path.lineTo(211.35f, 153.2f);
        path.lineTo(216.4f, 151.2f);
        path.quadTo(220.95f, 149.55f, 222.75f, 149.3f);
        path.lineTo(226.95f, 149.3f);
        path.lineTo(226.95f, 163.4f);
        path.quadTo(228.05f, 162.6f, 232.75f, 161.05f);
        path.quadTo(236.95f, 159.6f, 238.9f, 159.2f);
        path.lineTo(239.05f, 173.25f);
        path.quadTo(239.5f, 181.75f, 241.9f, 186.45f);
        path.lineTo(242.5f, 186.45f);
        path.quadTo(242.55f, 184.95f, 244.25f, 182.25f);
        path.quadTo(245.5f, 180.2f, 247.0f, 178.35f);
        path.lineTo(250.0f, 185.5f);
        path.lineTo(253.0f, 192.75f);
        path.quadTo(253.2f, 191.4f, 254.55f, 189.3f);
        path.quadTo(255.75f, 187.45f, 256.9f, 186.45f);
        path.quadTo(258.25f, 188.1f, 259.25f, 191.6f);
        path.quadTo(260.15f, 194.65f, 260.15f, 196.65f);
        path.lineTo(260.35f, 196.7f);
        path.quadTo(261.95f, 194.15f, 262.85f, 190.95f);
        path.lineTo(263.15f, 190.65f);
        path.quadTo(264.65f, 192.65f, 264.9f, 201.35f);
        path.lineTo(264.95f, 212.8f);
        path.quadTo(266.1f, 211.95f, 267.85f, 209.75f);
        path.lineTo(270.05f, 206.5f);
        path.lineTo(270.35f, 206.5f);
        path.quadTo(270.3f, 209.75f, 271.25f, 215.0f);
        path.lineTo(272.75f, 222.1f);
        path.lineTo(272.95f, 222.15f);
        path.lineTo(273.05f, 222.4f);
        path.lineTo(275.15f, 217.6f);
        path.lineTo(275.45f, 217.3f);
        path.quadTo(276.3f, 218.45f, 284.75f, 233.75f);
        path.lineTo(292.2f, 223.6f);
        path.quadTo(295.0f, 223.6f, 297.55f, 229.5f);
        path.lineTo(300.3f, 237.05f);
        path.lineTo(300.6f, 237.05f);
        path.quadTo(300.75f, 235.75f, 303.6f, 230.0f);
        path.lineTo(306.35f, 224.4f);
        path.quadTo(307.4f, 225.8f, 309.05f, 228.95f);
        path.quadTo(311.4f, 233.4f, 311.4f, 234.35f);
        path.quadTo(315.4f, 232.85f, 318.8f, 226.6f);
        path.quadTo(321.75f, 221.15f, 321.55f, 218.5f);
        path.lineTo(321.55f, 218.2f);
        path.lineTo(324.1f, 222.2f);
        path.lineTo(326.95f, 227.5f);
        path.quadTo(332.3f, 214.9f, 332.65f, 213.1f);
        path.lineTo(336.85f, 219.1f);
        path.quadTo(337.15f, 214.3f, 337.15f, 204.4f);
        path.quadTo(338.15f, 204.95f, 338.7f, 206.25f);
        path.lineTo(339.55f, 208.6f);
        path.quadTo(339.55f, 204.85f, 340.45f, 202.75f);
        path.quadTo(341.15f, 201.1f, 342.7f, 199.8f);
        path.lineTo(342.7f, 199.45f);
        path.lineTo(343.55f, 198.05f);
        path.quadTo(345.0f, 195.75f, 346.45f, 194.85f);
        path.quadTo(347.8f, 197.75f, 350.35f, 201.7f);
        path.lineTo(353.6f, 192.45f);
        path.lineTo(354.2f, 192.45f);
        path.lineTo(359.3f, 199.9f);
        path.quadTo(365.35f, 183.85f, 365.6f, 179.85f);
        path.lineTo(368.5f, 183.7f);
        path.lineTo(371.6f, 187.65f);
        path.lineTo(374.9f, 177.2f);
        path.quadTo(377.8f, 167.55f, 377.0f, 164.9f);
        path.lineTo(377.6f, 164.9f);
        path.lineTo(381.4f, 168.95f);
        path.quadTo(385.0f, 172.75f, 385.95f, 172.65f);
        path.lineTo(386.25f, 163.4f);
        path.quadTo(386.25f, 160.1f, 384.85f, 152.2f);
        path.quadTo(383.7f, 146.0f, 382.35f, 140.6f);
        path.lineTo(389.55f, 148.4f);
        path.quadTo(387.0f, 132.95f, 386.1f, 129.05f);
        path.quadTo(382.5f, 113.85f, 377.9f, 110.95f);
        path.lineTo(378.2f, 110.95f);
        path.lineTo(380.9f, 111.9f);
        path.lineTo(383.85f, 113.05f);
        path.quadTo(384.3f, 109.45f, 377.3f, 100.2f);
        path.quadTo(370.15f, 90.8f, 363.55f, 89.35f);
        path.quadTo(364.15f, 88.5f, 365.85f, 88.1f);
        path.lineTo(368.95f, 87.65f);
        path.lineTo(368.95f, 87.5f);
        path.lineTo(368.9f, 87.3f);
        path.quadTo(362.2f, 82.85f, 356.45f, 79.95f);
        path.quadTo(344.0f, 73.55f, 336.25f, 73.55f);
        path.lineTo(331.15f, 73.85f);
        path.lineTo(333.75f, 70.6f);
        path.lineTo(335.65f, 67.85f);
        path.close();
    }

    private static void draw_191(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_191(path);
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0644073f, -0.123535f, 0.0f, 305.7f, 157.95f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_192(Path path)
    {
        path.reset();
        path.moveTo(217.4f, 160.55f);
        path.lineTo(217.4f, 160.45f);
        path.quadTo(217.45f, 159.2f, 216.15f, 159.2f);
        path.lineTo(214.65f, 159.5f);
        path.lineTo(217.4f, 160.55f);
        path.close();
    }

    private static void draw_192(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_192(path);
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0644073f, -0.123535f, 0.0f, 306.85f, 159.45f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_193(Path path)
    {
        path.reset();
        path.moveTo(217.4f, 160.55f);
        path.lineTo(217.35f, 163.4f);
        path.lineTo(219.85f, 163.7f);
        path.lineTo(223.5f, 163.25f);
        path.lineTo(228.55f, 162.8f);
        path.lineTo(246.4f, 164.7f);
        path.lineTo(259.2f, 166.75f);
        path.quadTo(263.3f, 168.95f, 264.25f, 168.95f);
        path.quadTo(266.45f, 168.95f, 267.65f, 164.15f);
        path.quadTo(268.45f, 160.9f, 268.45f, 157.8f);
        path.lineTo(268.45f, 156.2f);
        path.lineTo(268.7f, 154.45f);
        path.quadTo(269.4f, 149.8f, 269.4f, 144.4f);
        path.quadTo(269.4f, 137.25f, 268.5f, 127.75f);
        path.lineTo(267.3f, 117.3f);
        path.quadTo(266.8f, 113.0f, 265.8f, 109.6f);
        path.quadTo(260.3f, 120.15f, 250.3f, 121.45f);
        path.quadTo(243.5f, 122.35f, 236.45f, 124.4f);
        path.quadTo(228.1f, 126.85f, 226.4f, 129.25f);
        path.lineTo(231.1f, 129.5f);
        path.quadTo(234.0f, 129.9f, 235.9f, 130.75f);
        path.lineTo(236.2f, 130.75f);
        path.lineTo(235.9f, 130.8f);
        path.quadTo(226.5f, 131.4f, 220.05f, 133.95f);
        path.quadTo(215.1f, 135.95f, 209.25f, 140.3f);
        path.lineTo(217.35f, 140.6f);
        path.lineTo(217.35f, 140.9f);
        path.quadTo(212.15f, 141.35f, 208.65f, 145.55f);
        path.quadTo(205.8f, 149.1f, 204.45f, 155.0f);
        path.lineTo(204.45f, 155.1f);
        path.lineTo(204.6f, 155.1f);
        path.quadTo(205.0f, 154.35f, 206.1f, 153.4f);
        path.quadTo(207.45f, 152.25f, 209.25f, 151.4f);
        path.quadTo(209.25f, 152.5f, 208.85f, 154.15f);
        path.quadTo(208.35f, 155.9f, 208.35f, 157.1f);
        path.quadTo(208.35f, 159.2f, 208.95f, 161.6f);
        path.quadTo(210.2f, 160.9f, 212.5f, 160.15f);
        path.lineTo(214.65f, 159.5f);
        path.lineTo(216.15f, 159.2f);
        path.quadTo(217.45f, 159.2f, 217.4f, 160.45f);
        path.lineTo(217.4f, 160.55f);
        path.close();
    }

    private static void draw_193(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_193(path);
        paint.setColor(Color.argb(255, 19, 19, 19));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_194(Path path)
    {
        path.reset();
        path.moveTo(275.2f, 222.15f);
        path.lineTo(276.65f, 236.15f);
        path.quadTo(277.55f, 241.5f, 277.55f, 244.95f);
        path.quadTo(277.55f, 246.3f, 276.65f, 248.75f);
        path.quadTo(275.75f, 251.15f, 275.75f, 252.35f);
        path.quadTo(275.75f, 254.65f, 277.4f, 256.05f);
        path.quadTo(279.05f, 257.45f, 279.05f, 259.8f);
        path.quadTo(279.05f, 261.2f, 280.1f, 267.35f);
        path.lineTo(281.15f, 274.2f);
        path.quadTo(281.15f, 277.25f, 274.75f, 278.05f);
        path.quadTo(268.25f, 278.8f, 268.25f, 280.2f);
        path.quadTo(268.25f, 282.7f, 272.75f, 283.2f);
        path.quadTo(275.15f, 283.45f, 279.15f, 283.2f);
        path.quadTo(297.3f, 283.2f, 297.3f, 279.1f);
        path.quadTo(297.3f, 277.2f, 295.95f, 276.55f);
        path.lineTo(293.0f, 275.95f);
        path.quadTo(288.65f, 275.05f, 288.65f, 268.5f);
        path.quadTo(288.65f, 266.7f, 289.8f, 263.7f);
        path.quadTo(291.0f, 260.7f, 291.0f, 259.25f);
        path.quadTo(291.0f, 257.25f, 289.1f, 255.25f);
        path.quadTo(287.15f, 253.3f, 287.15f, 249.75f);
        path.quadTo(287.15f, 246.85f, 290.3f, 236.65f);
        path.quadTo(293.4f, 226.45f, 293.4f, 219.7f);
        path.quadTo(293.4f, 214.05f, 289.8f, 209.2f);
        path.quadTo(286.05f, 204.1f, 281.15f, 204.1f);
        path.quadTo(274.85f, 204.1f, 274.3f, 212.7f);
        path.lineTo(274.45f, 214.0f);
        path.lineTo(275.2f, 222.15f);
        path.close();
    }

    private static void draw_194(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_194(path);
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0644073f, -0.123535f, 0.0f, 305.7f, 157.95f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_195(Path path)
    {
        path.reset();
        path.moveTo(330.45f, 222.15f);
        path.lineTo(329.0f, 236.15f);
        path.quadTo(328.1f, 241.5f, 328.1f, 244.95f);
        path.quadTo(328.1f, 246.3f, 329.0f, 248.75f);
        path.quadTo(329.9f, 251.15f, 329.9f, 252.35f);
        path.quadTo(329.9f, 254.65f, 328.25f, 256.05f);
        path.quadTo(326.6f, 257.45f, 326.6f, 259.8f);
        path.lineTo(325.55f, 267.35f);
        path.lineTo(324.5f, 274.2f);
        path.quadTo(324.5f, 277.25f, 330.9f, 278.05f);
        path.quadTo(337.4f, 278.8f, 337.4f, 280.2f);
        path.quadTo(337.4f, 282.7f, 332.9f, 283.2f);
        path.quadTo(330.5f, 283.45f, 326.5f, 283.2f);
        path.quadTo(308.35f, 283.2f, 308.35f, 279.1f);
        path.quadTo(308.35f, 277.2f, 309.7f, 276.55f);
        path.lineTo(312.65f, 275.95f);
        path.quadTo(317.0f, 275.05f, 317.0f, 268.5f);
        path.quadTo(317.0f, 266.7f, 315.85f, 263.7f);
        path.quadTo(314.65f, 260.7f, 314.65f, 259.25f);
        path.quadTo(314.65f, 257.25f, 316.55f, 255.25f);
        path.quadTo(318.5f, 253.3f, 318.5f, 249.75f);
        path.quadTo(318.5f, 246.85f, 315.35f, 236.65f);
        path.quadTo(312.25f, 226.45f, 312.25f, 219.7f);
        path.quadTo(312.25f, 214.05f, 315.85f, 209.2f);
        path.quadTo(319.6f, 204.1f, 324.5f, 204.1f);
        path.quadTo(330.8f, 204.1f, 331.35f, 212.7f);
        path.lineTo(331.2f, 214.0f);
        path.lineTo(330.45f, 222.15f);
        path.close();
    }

    private static void draw_195(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_195(path);
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0644073f, 0.123535f, 0.0f, 299.95f, 157.95f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_196(Path path)
    {
        path.reset();
        path.moveTo(395.9f, 155.25f);
        path.quadTo(393.2f, 143.6f, 388.75f, 139.2f);
        path.quadTo(384.15f, 134.85f, 374.55f, 134.85f);
        path.quadTo(361.65f, 134.85f, 354.8f, 139.6f);
        path.quadTo(346.2f, 145.65f, 346.2f, 159.7f);
        path.lineTo(347.8f, 175.7f);
        path.quadTo(349.55f, 192.3f, 350.0f, 201.15f);
        path.quadTo(350.35f, 208.0f, 352.25f, 233.95f);
        path.quadTo(353.15f, 246.1f, 356.0f, 271.6f);
        path.lineTo(355.45f, 271.6f);
        path.lineTo(350.4f, 273.75f);
        path.quadTo(347.8f, 274.75f, 347.8f, 277.3f);
        path.quadTo(347.8f, 279.85f, 354.0f, 279.85f);
        path.quadTo(357.25f, 279.85f, 363.1f, 276.7f);
        path.lineTo(367.7f, 273.95f);
        path.lineTo(367.25f, 266.15f);
        path.quadTo(367.25f, 254.55f, 370.1f, 248.3f);
        path.quadTo(372.55f, 242.9f, 376.5f, 242.9f);
        path.quadTo(380.95f, 242.9f, 381.2f, 259.3f);
        path.quadTo(381.35f, 267.35f, 380.7f, 275.55f);
        path.lineTo(380.85f, 275.75f);
        path.quadTo(382.4f, 276.85f, 386.45f, 278.2f);
        path.quadTo(391.95f, 280.2f, 394.35f, 280.2f);
        path.quadTo(396.5f, 280.2f, 398.8f, 279.25f);
        path.quadTo(401.0f, 278.3f, 401.0f, 277.5f);
        path.quadTo(401.0f, 275.25f, 396.5f, 274.2f);
        path.lineTo(394.5f, 273.8f);
        path.quadTo(397.2f, 250.0f, 397.2f, 194.3f);
        path.lineTo(396.55f, 175.0f);
        path.lineTo(396.65f, 165.1f);
        path.quadTo(396.8f, 159.05f, 395.9f, 155.25f);
        path.close();
        path.moveTo(375.2f, 209.75f);
        path.lineTo(373.75f, 211.25f);
        path.lineTo(374.55f, 212.3f);
        path.lineTo(373.75f, 211.25f);
        path.lineTo(375.2f, 209.75f);
        path.close();
    }

    private static void draw_196(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_196(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0681458f, 0.0f, 0.0f, 0.0681458f, 372.95f, 134.2f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_197(Path path)
    {
        path.reset();
        path.moveTo(372.0f, 212.6f);
        path.lineTo(373.75f, 211.25f);
        path.lineTo(372.65f, 209.75f);
    }

    private static void draw_197(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_197(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_198(Path path)
    {
        path.reset();
        path.moveTo(373.75f, 211.25f);
        path.lineTo(375.2f, 209.75f);
    }

    private static void draw_198(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_198(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_199(Path path)
    {
        path.reset();
        path.moveTo(373.75f, 211.25f);
        path.lineTo(374.55f, 212.3f);
    }

    private static void draw_199(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_199(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_200(Path path)
    {
        path.reset();
        path.moveTo(370.4f, 229.45f);
        path.quadTo(369.05f, 229.45f, 367.85f, 230.55f);
        path.quadTo(366.7f, 231.7f, 366.7f, 234.4f);
        path.quadTo(366.7f, 237.1f, 368.65f, 239.35f);
        path.quadTo(370.65f, 241.55f, 374.4f, 244.1f);
        path.lineTo(374.65f, 244.05f);
        path.quadTo(376.55f, 243.25f, 379.1f, 241.15f);
        path.quadTo(383.75f, 237.45f, 383.75f, 233.45f);
        path.quadTo(383.75f, 232.0f, 382.75f, 230.65f);
        path.quadTo(381.65f, 229.05f, 380.05f, 229.05f);
        path.quadTo(378.05f, 229.05f, 376.5f, 230.8f);
        path.quadTo(375.7f, 231.75f, 375.2f, 233.1f);
        path.lineTo(373.7f, 231.2f);
        path.quadTo(371.95f, 229.45f, 370.4f, 229.45f);
        path.close();
    }

    private static void draw_200(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_200(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_201(Path path)
    {
        path.reset();
        path.moveTo(354.65f, 178.25f);
        path.quadTo(354.1f, 178.25f, 353.55f, 178.75f);
        path.quadTo(353.05f, 179.25f, 353.05f, 180.4f);
        path.quadTo(353.05f, 181.55f, 353.9f, 182.5f);
        path.lineTo(356.35f, 184.55f);
        path.lineTo(356.45f, 184.5f);
        path.quadTo(357.3f, 184.2f, 358.4f, 183.3f);
        path.quadTo(360.35f, 181.7f, 360.35f, 180.0f);
        path.quadTo(360.35f, 179.35f, 359.95f, 178.8f);
        path.quadTo(359.5f, 178.1f, 358.8f, 178.1f);
        path.quadTo(357.95f, 178.1f, 357.25f, 178.85f);
        path.quadTo(356.9f, 179.25f, 356.7f, 179.85f);
        path.lineTo(356.05f, 179.0f);
        path.quadTo(355.3f, 178.25f, 354.65f, 178.25f);
        path.close();
    }

    private static void draw_201(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_201(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_202(Path path)
    {
        path.reset();
        path.moveTo(384.75f, 178.25f);
        path.quadTo(384.2f, 178.25f, 383.65f, 178.75f);
        path.quadTo(383.15f, 179.25f, 383.15f, 180.4f);
        path.quadTo(383.15f, 181.55f, 384.0f, 182.5f);
        path.quadTo(384.85f, 183.45f, 386.45f, 184.55f);
        path.lineTo(386.55f, 184.5f);
        path.lineTo(388.5f, 183.3f);
        path.quadTo(390.45f, 181.7f, 390.45f, 180.0f);
        path.quadTo(390.45f, 179.35f, 390.05f, 178.8f);
        path.quadTo(389.6f, 178.1f, 388.9f, 178.1f);
        path.quadTo(388.05f, 178.1f, 387.35f, 178.85f);
        path.lineTo(386.8f, 179.85f);
        path.lineTo(386.15f, 179.0f);
        path.quadTo(385.4f, 178.25f, 384.75f, 178.25f);
        path.close();
    }

    private static void draw_202(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_202(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_203(Path path)
    {
        path.reset();
        path.moveTo(380.4f, 225.75f);
        path.lineTo(380.4f, 224.35f);
        path.lineTo(380.15f, 224.35f);
        path.lineTo(380.05f, 225.3f);
        path.quadTo(380.05f, 226.1f, 380.15f, 225.75f);
        path.lineTo(380.4f, 225.75f);
        path.close();
        path.moveTo(381.75f, 225.75f);
        path.lineTo(382.4f, 225.7f);
        path.lineTo(382.3f, 224.95f);
        path.quadTo(381.75f, 225.1f, 381.75f, 225.75f);
        path.close();
        path.moveTo(381.0f, 226.9f);
        path.quadTo(380.6f, 227.1f, 380.55f, 227.2f);
        path.lineTo(380.45f, 227.65f);
        path.lineTo(380.8f, 227.6f);
        path.lineTo(381.0f, 226.9f);
        path.close();
        path.moveTo(382.3f, 227.05f);
        path.lineTo(382.4f, 227.75f);
        path.lineTo(382.7f, 227.65f);
        path.quadTo(382.85f, 226.9f, 383.25f, 226.25f);
        path.quadTo(382.3f, 226.25f, 382.3f, 227.05f);
        path.close();
        path.moveTo(393.55f, 245.05f);
        path.quadTo(393.95f, 245.55f, 395.45f, 245.45f);
        path.quadTo(394.75f, 244.4f, 393.95f, 244.1f);
        path.lineTo(392.9f, 244.0f);
        path.lineTo(392.8f, 244.4f);
        path.lineTo(393.55f, 245.05f);
        path.close();
        path.moveTo(387.5f, 246.65f);
        path.lineTo(387.5f, 246.7f);
        path.lineTo(388.6f, 247.75f);
        path.lineTo(388.65f, 247.6f);
        path.quadTo(388.45f, 247.1f, 387.5f, 246.65f);
        path.close();
        path.moveTo(382.4f, 250.4f);
        path.lineTo(382.4f, 251.25f);
        path.lineTo(382.7f, 251.2f);
        path.quadTo(382.7f, 250.65f, 383.35f, 250.0f);
        path.quadTo(382.55f, 249.9f, 382.4f, 250.4f);
        path.close();
        path.moveTo(386.1f, 252.0f);
        path.quadTo(385.5f, 252.15f, 385.5f, 253.2f);
        path.lineTo(385.55f, 253.75f);
        path.lineTo(385.7f, 253.8f);
        path.quadTo(386.3f, 253.25f, 386.3f, 252.45f);
        path.lineTo(386.2f, 251.9f);
        path.lineTo(386.1f, 252.0f);
        path.close();
        path.moveTo(394.75f, 250.4f);
        path.lineTo(395.45f, 250.65f);
        path.lineTo(394.4f, 249.85f);
        path.lineTo(394.15f, 249.9f);
        path.lineTo(394.75f, 250.4f);
        path.close();
        path.moveTo(388.45f, 253.5f);
        path.lineTo(388.75f, 253.4f);
        path.lineTo(388.35f, 251.75f);
        path.lineTo(388.1f, 251.8f);
        path.quadTo(388.1f, 252.3f, 388.45f, 253.5f);
        path.close();
        path.moveTo(392.8f, 254.45f);
        path.lineTo(392.5f, 253.95f);
        path.quadTo(391.95f, 253.9f, 391.95f, 254.15f);
        path.lineTo(392.8f, 254.45f);
        path.close();
        path.moveTo(374.8f, 225.7f);
        path.quadTo(374.4f, 225.7f, 374.65f, 224.95f);
        path.lineTo(374.15f, 224.9f);
        path.quadTo(373.95f, 224.95f, 373.95f, 225.45f);
        path.quadTo(373.95f, 226.25f, 374.1f, 225.9f);
        path.lineTo(374.7f, 225.85f);
        path.lineTo(374.8f, 225.7f);
        path.close();
        path.moveTo(365.7f, 226.25f);
        path.lineTo(365.5f, 226.3f);
        path.quadTo(365.95f, 227.05f, 366.7f, 227.05f);
        path.lineTo(366.6f, 226.8f);
        path.lineTo(365.7f, 226.25f);
        path.close();
        path.moveTo(367.85f, 225.2f);
        path.lineTo(367.7f, 225.35f);
        path.lineTo(368.35f, 226.1f);
        path.lineTo(368.65f, 225.75f);
        path.quadTo(368.35f, 225.3f, 367.85f, 225.2f);
        path.close();
        path.moveTo(371.3f, 225.7f);
        path.lineTo(371.15f, 224.95f);
        path.lineTo(370.9f, 224.95f);
        path.lineTo(370.8f, 225.45f);
        path.quadTo(370.8f, 226.25f, 371.05f, 225.85f);
        path.lineTo(371.3f, 225.7f);
        path.close();
        path.moveTo(371.15f, 227.75f);
        path.quadTo(371.15f, 228.8f, 371.85f, 228.3f);
        path.quadTo(371.45f, 227.5f, 371.8f, 226.9f);
        path.quadTo(371.15f, 227.05f, 371.15f, 227.75f);
        path.close();
        path.moveTo(369.25f, 228.3f);
        path.lineTo(369.15f, 228.05f);
        path.lineTo(368.2f, 227.05f);
        path.lineTo(367.95f, 227.35f);
        path.lineTo(369.25f, 228.3f);
        path.close();
        path.moveTo(367.7f, 229.25f);
        path.quadTo(367.55f, 228.8f, 366.6f, 228.7f);
        path.lineTo(366.45f, 228.95f);
        path.quadTo(367.4f, 229.1f, 367.4f, 229.6f);
        path.lineTo(367.7f, 229.25f);
        path.close();
        path.moveTo(376.65f, 227.65f);
        path.lineTo(376.55f, 227.2f);
        path.quadTo(376.0f, 227.35f, 376.0f, 228.65f);
        path.lineTo(376.25f, 228.65f);
        path.quadTo(376.65f, 228.45f, 376.65f, 227.65f);
        path.close();
        path.moveTo(379.2f, 228.3f);
        path.lineTo(379.5f, 228.25f);
        path.lineTo(379.75f, 226.55f);
        path.quadTo(379.25f, 226.95f, 379.25f, 227.45f);
        path.lineTo(379.2f, 228.3f);
        path.close();
        path.moveTo(374.35f, 227.85f);
        path.quadTo(373.7f, 227.85f, 373.7f, 228.65f);
        path.lineTo(373.75f, 229.35f);
        path.lineTo(374.1f, 229.25f);
        path.lineTo(374.35f, 227.85f);
        path.close();
        path.moveTo(361.9f, 243.75f);
        path.lineTo(362.3f, 244.1f);
        path.lineTo(362.95f, 244.15f);
        path.lineTo(362.55f, 243.7f);
        path.lineTo(361.9f, 243.75f);
        path.close();
        path.moveTo(354.55f, 246.65f);
        path.lineTo(354.3f, 247.3f);
        path.quadTo(354.7f, 247.5f, 354.9f, 247.05f);
        path.lineTo(355.2f, 246.3f);
        path.lineTo(354.55f, 246.65f);
        path.close();
        path.moveTo(353.7f, 255.4f);
        path.lineTo(354.15f, 255.5f);
        path.lineTo(355.85f, 252.4f);
        path.quadTo(355.35f, 252.45f, 354.9f, 253.4f);
        path.lineTo(353.7f, 255.4f);
        path.close();
        path.moveTo(360.7f, 247.3f);
        path.quadTo(360.7f, 247.7f, 361.6f, 248.4f);
        path.quadTo(361.0f, 247.6f, 360.95f, 246.95f);
        path.lineTo(360.7f, 246.95f);
        path.lineTo(360.7f, 247.3f);
        path.close();
        path.moveTo(356.25f, 251.25f);
        path.lineTo(356.55f, 251.2f);
        path.lineTo(356.5f, 249.75f);
        path.lineTo(356.15f, 249.85f);
        path.lineTo(356.25f, 251.25f);
        path.close();
        path.moveTo(359.35f, 255.55f);
        path.lineTo(359.1f, 255.55f);
        path.lineTo(359.05f, 256.2f);
        path.quadTo(359.05f, 257.3f, 359.75f, 256.75f);
        path.lineTo(359.35f, 255.55f);
        path.close();
        path.moveTo(360.55f, 252.4f);
        path.lineTo(361.35f, 252.2f);
        path.lineTo(360.7f, 251.75f);
        path.lineTo(360.4f, 251.4f);
        path.lineTo(360.2f, 251.4f);
        path.quadTo(360.0f, 251.4f, 360.0f, 251.9f);
        path.lineTo(360.05f, 252.4f);
        path.lineTo(360.55f, 252.4f);
        path.close();
        path.moveTo(364.2f, 256.2f);
        path.lineTo(364.15f, 257.0f);
        path.quadTo(364.15f, 257.5f, 364.3f, 257.7f);
        path.lineTo(364.5f, 257.95f);
        path.lineTo(364.85f, 257.9f);
        path.lineTo(364.45f, 256.2f);
        path.lineTo(364.2f, 256.2f);
        path.close();
        path.moveTo(365.95f, 261.45f);
        path.lineTo(365.7f, 261.6f);
        path.quadTo(365.7f, 262.1f, 366.3f, 262.5f);
        path.lineTo(367.3f, 263.05f);
        path.lineTo(365.95f, 261.45f);
        path.close();
        path.moveTo(366.05f, 264.75f);
        path.quadTo(365.8f, 264.75f, 365.7f, 264.9f);
        path.lineTo(366.7f, 265.95f);
        path.lineTo(366.05f, 264.75f);
        path.close();
        path.moveTo(365.15f, 268.0f);
        path.lineTo(365.1f, 267.05f);
        path.lineTo(364.85f, 267.05f);
        path.lineTo(364.75f, 267.5f);
        path.lineTo(364.85f, 268.1f);
        path.lineTo(365.0f, 268.15f);
        path.lineTo(365.15f, 268.0f);
        path.close();
        path.moveTo(360.95f, 260.65f);
        path.lineTo(360.7f, 260.65f);
        path.lineTo(360.7f, 262.6f);
        path.lineTo(360.85f, 262.75f);
        path.lineTo(361.0f, 262.6f);
        path.lineTo(360.95f, 260.65f);
        path.close();
        path.moveTo(356.0f, 262.5f);
        path.lineTo(355.9f, 262.0f);
        path.lineTo(355.85f, 262.2f);
        path.quadTo(355.3f, 262.5f, 354.65f, 264.35f);
        path.lineTo(354.9f, 264.35f);
        path.quadTo(356.0f, 263.2f, 356.0f, 262.5f);
        path.close();
        path.moveTo(358.25f, 265.2f);
        path.lineTo(358.05f, 264.5f);
        path.lineTo(357.85f, 264.5f);
        path.quadTo(357.65f, 265.35f, 355.9f, 266.55f);
        path.lineTo(356.7f, 266.7f);
        path.quadTo(358.15f, 266.8f, 358.25f, 265.2f);
        path.close();
        path.moveTo(363.15f, 263.7f);
        path.quadTo(363.4f, 263.0f, 363.15f, 262.25f);
        path.lineTo(362.95f, 262.25f);
        path.lineTo(362.85f, 263.0f);
        path.lineTo(362.95f, 263.7f);
        path.lineTo(363.15f, 263.7f);
        path.close();
        path.moveTo(355.7f, 269.6f);
        path.quadTo(355.5f, 269.65f, 355.6f, 270.05f);
        path.lineTo(355.9f, 270.0f);
        path.lineTo(356.15f, 269.25f);
        path.lineTo(355.7f, 269.6f);
        path.close();
        path.moveTo(361.9f, 267.7f);
        path.quadTo(362.05f, 268.3f, 362.55f, 268.8f);
        path.lineTo(362.6f, 268.55f);
        path.lineTo(362.2f, 267.6f);
        path.lineTo(361.9f, 267.7f);
        path.close();
        path.moveTo(359.1f, 270.0f);
        path.lineTo(358.7f, 268.55f);
        path.lineTo(358.4f, 268.65f);
        path.lineTo(358.8f, 270.05f);
        path.lineTo(359.1f, 270.0f);
        path.close();
        path.moveTo(392.4f, 257.8f);
        path.lineTo(393.2f, 257.65f);
        path.lineTo(391.55f, 257.15f);
        path.lineTo(391.55f, 257.4f);
        path.quadTo(391.7f, 257.8f, 392.4f, 257.8f);
        path.close();
        path.moveTo(390.05f, 263.4f);
        path.quadTo(389.55f, 263.05f, 389.3f, 262.25f);
        path.lineTo(389.05f, 262.25f);
        path.lineTo(389.0f, 262.8f);
        path.lineTo(389.05f, 263.45f);
        path.lineTo(389.55f, 263.55f);
        path.lineTo(390.05f, 263.4f);
        path.close();
        path.moveTo(393.05f, 262.75f);
        path.lineTo(393.55f, 263.4f);
        path.lineTo(393.85f, 263.05f);
        path.lineTo(393.05f, 261.45f);
        path.lineTo(393.05f, 261.55f);
        path.lineTo(392.9f, 261.4f);
        path.quadTo(392.8f, 261.3f, 392.8f, 261.8f);
        path.lineTo(393.05f, 262.75f);
        path.close();
        path.moveTo(393.15f, 265.15f);
        path.lineTo(392.75f, 264.75f);
        path.lineTo(392.6f, 264.9f);
        path.lineTo(393.35f, 265.95f);
        path.lineTo(393.55f, 265.75f);
        path.lineTo(393.15f, 265.15f);
        path.close();
        path.moveTo(383.35f, 264.0f);
        path.lineTo(383.25f, 263.85f);
        path.lineTo(382.4f, 263.75f);
        path.quadTo(382.4f, 264.15f, 382.55f, 264.35f);
        path.lineTo(383.35f, 264.0f);
        path.close();
        path.moveTo(386.45f, 264.65f);
        path.lineTo(386.45f, 263.2f);
        path.lineTo(386.2f, 263.2f);
        path.lineTo(386.2f, 264.65f);
        path.lineTo(386.45f, 264.65f);
        path.close();
        path.moveTo(387.4f, 270.85f);
        path.lineTo(387.15f, 270.85f);
        path.lineTo(387.1f, 271.35f);
        path.quadTo(387.1f, 271.8f, 387.25f, 271.9f);
        path.lineTo(387.65f, 272.0f);
        path.lineTo(387.7f, 271.8f);
        path.lineTo(387.4f, 270.85f);
        path.close();
        path.moveTo(384.6f, 268.15f);
        path.lineTo(384.55f, 268.25f);
        path.lineTo(383.35f, 270.05f);
        path.lineTo(383.8f, 270.15f);
        path.lineTo(384.7f, 268.7f);
        path.lineTo(384.6f, 268.15f);
        path.close();
        path.moveTo(387.7f, 266.1f);
        path.lineTo(387.5f, 266.1f);
        path.lineTo(387.4f, 266.65f);
        path.lineTo(387.5f, 267.3f);
        path.lineTo(387.7f, 267.3f);
        path.quadTo(387.95f, 266.7f, 387.7f, 266.1f);
        path.close();
        path.moveTo(382.0f, 268.15f);
        path.lineTo(382.95f, 266.7f);
        path.quadTo(382.7f, 266.7f, 381.4f, 268.15f);
        path.lineTo(382.0f, 268.15f);
        path.close();
        path.moveTo(390.75f, 268.7f);
        path.lineTo(390.6f, 268.0f);
        path.lineTo(390.35f, 268.0f);
        path.quadTo(390.35f, 268.7f, 390.8f, 269.1f);
        path.lineTo(390.75f, 268.7f);
        path.close();
        path.moveTo(393.55f, 268.3f);
        path.lineTo(393.15f, 267.35f);
        path.lineTo(392.9f, 267.35f);
        path.quadTo(392.9f, 267.7f, 393.35f, 268.5f);
        path.lineTo(393.55f, 268.3f);
        path.close();
    }

    private static void draw_203(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_203(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_204(Path path)
    {
        path.reset();
        path.moveTo(322.65f, 136.7f);
        path.quadTo(328.75f, 130.6f, 328.75f, 122.0f);
        path.quadTo(328.75f, 113.35f, 322.65f, 107.25f);
        path.quadTo(316.55f, 101.15f, 307.9f, 101.15f);
        path.quadTo(299.3f, 101.15f, 293.2f, 107.25f);
        path.quadTo(287.05f, 113.35f, 287.05f, 122.0f);
        path.quadTo(287.05f, 130.6f, 293.2f, 136.7f);
        path.quadTo(299.3f, 142.85f, 307.9f, 142.85f);
        path.quadTo(316.55f, 142.85f, 322.65f, 136.7f);
        path.close();
        path.moveTo(295.5f, 154.35f);
        path.quadTo(291.4f, 152.9f, 287.45f, 150.5f);
        path.quadTo(284.85f, 148.95f, 282.8f, 147.1f);
        path.quadTo(283.9f, 152.25f, 286.05f, 156.45f);
        path.quadTo(288.95f, 162.0f, 291.15f, 162.0f);
        path.quadTo(293.0f, 162.0f, 294.15f, 159.15f);
        path.lineTo(295.5f, 154.35f);
        path.close();
        path.moveTo(327.6f, 149.05f);
        path.quadTo(322.9f, 153.3f, 316.5f, 155.05f);
        path.quadTo(316.7f, 157.8f, 317.15f, 159.2f);
        path.quadTo(318.0f, 162.0f, 320.05f, 162.0f);
        path.quadTo(323.05f, 162.0f, 326.2f, 153.45f);
        path.lineTo(327.6f, 149.05f);
        path.close();
    }

    private static void draw_204(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_204(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_205(Path path)
    {
        path.reset();
        path.moveTo(282.8f, 147.1f);
        path.quadTo(275.35f, 140.45f, 274.45f, 130.25f);
        path.quadTo(273.65f, 135.25f, 273.65f, 136.7f);
        path.quadTo(273.65f, 152.6f, 284.45f, 163.1f);
        path.quadTo(293.65f, 172.05f, 303.9f, 172.05f);
        path.quadTo(322.45f, 172.05f, 330.85f, 157.7f);
        path.quadTo(336.85f, 147.4f, 337.15f, 131.15f);
        path.quadTo(335.7f, 138.95f, 331.15f, 145.1f);
        path.quadTo(329.55f, 147.35f, 327.6f, 149.05f);
        path.lineTo(326.2f, 153.45f);
        path.quadTo(323.05f, 162.0f, 320.05f, 162.0f);
        path.quadTo(318.0f, 162.0f, 317.15f, 159.2f);
        path.quadTo(316.7f, 157.8f, 316.5f, 155.05f);
        path.quadTo(312.1f, 156.2f, 307.0f, 156.2f);
        path.quadTo(301.15f, 156.2f, 295.5f, 154.35f);
        path.lineTo(294.15f, 159.15f);
        path.quadTo(293.0f, 162.0f, 291.15f, 162.0f);
        path.quadTo(288.95f, 162.0f, 286.05f, 156.45f);
        path.quadTo(283.9f, 152.25f, 282.8f, 147.1f);
        path.close();
    }

    private static void draw_205(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_205(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_206(Path path)
    {
        path.reset();
        path.moveTo(316.75f, 112.65f);
        path.quadTo(313.2f, 109.1f, 308.1f, 109.1f);
        path.quadTo(303.0f, 109.1f, 299.35f, 112.65f);
        path.quadTo(295.8f, 116.25f, 295.8f, 121.35f);
        path.quadTo(295.8f, 126.45f, 299.35f, 130.0f);
        path.quadTo(303.0f, 133.65f, 308.1f, 133.65f);
        path.quadTo(313.2f, 133.65f, 316.75f, 130.0f);
        path.quadTo(320.35f, 126.45f, 320.35f, 121.35f);
        path.quadTo(320.35f, 116.25f, 316.75f, 112.65f);
        path.close();
    }

    private static void draw_206(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_206(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_207(Path path)
    {
        path.reset();
        path.moveTo(258.45f, 157.65f);
        path.lineTo(251.35f, 156.05f);
        path.quadTo(247.15f, 154.9f, 245.3f, 152.75f);
        path.lineTo(244.8f, 152.55f);
        path.lineTo(238.1f, 149.8f);
        path.quadTo(233.25f, 147.9f, 230.55f, 147.9f);
        path.quadTo(224.6f, 147.9f, 218.2f, 154.3f);
        path.quadTo(212.05f, 160.4f, 212.05f, 165.5f);
        path.quadTo(212.05f, 167.35f, 214.05f, 172.85f);
        path.quadTo(215.8f, 177.8f, 218.05f, 182.75f);
        path.quadTo(220.05f, 187.25f, 221.55f, 192.2f);
        path.quadTo(222.6f, 195.55f, 223.05f, 197.8f);
        path.lineTo(223.05f, 197.85f);
        path.quadTo(219.65f, 199.15f, 217.35f, 202.35f);
        path.quadTo(214.45f, 206.3f, 214.45f, 212.0f);
        path.quadTo(214.45f, 218.5f, 222.8f, 222.35f);
        path.quadTo(229.5f, 225.35f, 237.4f, 225.35f);
        path.quadTo(264.65f, 225.35f, 264.65f, 209.9f);
        path.quadTo(264.65f, 206.0f, 261.8f, 201.85f);
        path.quadTo(259.8f, 198.9f, 257.65f, 197.65f);
        path.lineTo(257.25f, 197.4f);
        path.lineTo(257.1f, 196.5f);
        path.lineTo(257.1f, 192.75f);
        path.lineTo(257.1f, 190.7f);
        path.lineTo(257.35f, 186.3f);
        path.quadTo(257.35f, 184.65f, 257.95f, 180.35f);
        path.lineTo(258.3f, 178.25f);
        path.quadTo(259.9f, 177.7f, 261.55f, 176.45f);
        path.quadTo(266.0f, 173.15f, 266.0f, 167.6f);
        path.quadTo(266.0f, 159.8f, 258.45f, 157.65f);
        path.close();
    }

    private static void draw_207(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_207(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0402679f, 0.0f, 0.0f, 0.0402679f, 235.4f, 131.55f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_208(Path path)
    {
        path.reset();
        path.moveTo(254.4f, 167.5f);
        path.quadTo(253.6f, 165.6f, 251.35f, 164.3f);
        path.quadTo(250.55f, 163.85f, 247.2f, 162.9f);
        path.lineTo(246.05f, 162.5f);
        path.lineTo(245.3f, 162.1f);
        path.quadTo(243.85f, 162.0f, 243.25f, 161.6f);
        path.lineTo(240.45f, 161.15f);
        path.quadTo(236.4f, 161.15f, 233.05f, 163.9f);
        path.quadTo(229.2f, 167.1f, 229.2f, 172.3f);
        path.quadTo(229.2f, 176.9f, 232.65f, 180.25f);
        path.quadTo(236.05f, 183.6f, 240.6f, 183.6f);
        path.quadTo(246.2f, 183.6f, 250.15f, 180.8f);
        path.quadTo(254.95f, 177.45f, 254.95f, 171.55f);
        path.quadTo(254.95f, 169.0f, 254.4f, 167.5f);
        path.close();
    }

    private static void draw_208(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_208(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0368652f, 0.0f, 0.0f, 0.0368652f, 265.45f, 173.9f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_209(Path path)
    {
        path.reset();
        path.moveTo(256.6f, 201.0f);
        path.quadTo(251.85f, 201.0f, 247.0f, 206.3f);
        path.quadTo(241.4f, 212.35f, 241.4f, 220.65f);
        path.quadTo(241.4f, 224.25f, 243.65f, 230.45f);
        path.lineTo(246.8f, 238.9f);
        path.lineTo(246.6f, 239.25f);
        path.quadTo(241.55f, 245.85f, 241.55f, 255.9f);
        path.quadTo(241.55f, 262.35f, 243.85f, 267.1f);
        path.lineTo(246.2f, 271.6f);
        path.lineTo(244.9f, 273.25f);
        path.quadTo(243.55f, 275.15f, 243.55f, 276.35f);
        path.quadTo(243.55f, 279.45f, 245.8f, 280.65f);
        path.lineTo(251.15f, 283.45f);
        path.quadTo(257.0f, 287.85f, 261.9f, 287.85f);
        path.quadTo(265.3f, 287.85f, 265.3f, 286.35f);
        path.quadTo(265.3f, 285.7f, 264.65f, 285.35f);
        path.lineTo(263.1f, 284.65f);
        path.quadTo(262.2f, 284.25f, 260.55f, 282.4f);
        path.lineTo(256.95f, 277.7f);
        path.lineTo(256.45f, 277.15f);
        path.quadTo(256.15f, 273.4f, 256.15f, 270.05f);
        path.quadTo(256.15f, 264.5f, 258.6f, 248.65f);
        path.lineTo(258.6f, 248.25f);
        path.quadTo(259.5f, 247.35f, 260.15f, 245.9f);
        path.quadTo(260.95f, 244.1f, 260.95f, 242.6f);
        path.lineTo(260.45f, 240.05f);
        path.lineTo(260.35f, 239.8f);
        path.lineTo(262.7f, 229.6f);
        path.quadTo(265.05f, 218.05f, 265.05f, 213.35f);
        path.quadTo(265.05f, 208.25f, 263.5f, 205.1f);
        path.quadTo(261.35f, 201.0f, 256.6f, 201.0f);
        path.close();
    }

    private static void draw_209(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_209(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0393524f, 0.0f, 0.0f, 0.0393524f, 262.5f, 243.0f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_210(Path path)
    {
        path.reset();
        path.moveTo(223.8f, 198.1f);
        path.quadTo(218.75f, 198.1f, 215.5f, 203.3f);
        path.quadTo(212.7f, 207.65f, 212.7f, 212.3f);
        path.quadTo(212.7f, 219.0f, 219.25f, 228.65f);
        path.quadTo(224.1f, 235.9f, 228.95f, 239.3f);
        path.lineTo(228.8f, 239.3f);
        path.quadTo(221.4f, 241.4f, 217.9f, 249.2f);
        path.quadTo(215.25f, 255.0f, 215.25f, 262.35f);
        path.quadTo(215.25f, 264.0f, 215.55f, 266.65f);
        path.lineTo(215.8f, 268.7f);
        path.lineTo(213.4f, 271.1f);
        path.quadTo(212.05f, 272.8f, 212.05f, 274.45f);
        path.quadTo(212.05f, 276.35f, 215.65f, 279.45f);
        path.lineTo(219.65f, 282.6f);
        path.quadTo(222.5f, 285.2f, 224.2f, 285.95f);
        path.quadTo(226.0f, 286.75f, 229.85f, 286.75f);
        path.lineTo(231.75f, 286.75f);
        path.quadTo(233.2f, 286.5f, 233.2f, 285.6f);
        path.quadTo(233.2f, 284.4f, 231.35f, 283.05f);
        path.quadTo(228.8f, 281.15f, 227.75f, 279.55f);
        path.lineTo(225.45f, 274.55f);
        path.quadTo(224.35f, 272.15f, 223.2f, 270.85f);
        path.quadTo(226.25f, 264.8f, 234.45f, 256.2f);
        path.quadTo(240.45f, 250.0f, 244.5f, 246.9f);
        path.quadTo(245.45f, 246.55f, 246.25f, 245.75f);
        path.lineTo(246.75f, 245.3f);
        path.quadTo(248.5f, 243.4f, 248.5f, 240.45f);
        path.lineTo(248.4f, 238.5f);
        path.lineTo(247.3f, 236.1f);
        path.lineTo(246.9f, 235.15f);
        path.quadTo(239.0f, 214.2f, 237.35f, 210.7f);
        path.quadTo(231.05f, 198.1f, 223.8f, 198.1f);
        path.close();
    }

    private static void draw_210(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_210(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0416107f, 0.0f, 0.0f, 0.0416107f, 250.7f, 240.9f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_211(Path path)
    {
        path.reset();
        path.moveTo(239.15f, 208.7f);
        path.quadTo(237.8f, 208.7f, 236.6f, 209.8f);
        path.quadTo(235.45f, 210.95f, 235.45f, 213.65f);
        path.quadTo(235.45f, 216.35f, 237.4f, 218.6f);
        path.quadTo(239.4f, 220.8f, 243.15f, 223.35f);
        path.lineTo(243.4f, 223.3f);
        path.quadTo(245.3f, 222.5f, 247.85f, 220.4f);
        path.quadTo(252.5f, 216.7f, 252.5f, 212.7f);
        path.quadTo(252.5f, 211.25f, 251.5f, 209.9f);
        path.quadTo(250.4f, 208.3f, 248.8f, 208.3f);
        path.quadTo(246.8f, 208.3f, 245.25f, 210.05f);
        path.quadTo(244.45f, 211.0f, 243.95f, 212.35f);
        path.lineTo(242.45f, 210.45f);
        path.quadTo(240.7f, 208.7f, 239.15f, 208.7f);
        path.close();
    }

    private static void draw_211(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_211(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_212(Path path)
    {
        path.reset();
        path.moveTo(250.1f, 168.35f);
        path.quadTo(249.45f, 168.35f, 248.85f, 168.9f);
        path.quadTo(248.25f, 169.5f, 248.25f, 170.85f);
        path.quadTo(248.25f, 172.15f, 249.25f, 173.3f);
        path.quadTo(250.2f, 174.4f, 252.1f, 175.65f);
        path.lineTo(252.2f, 175.6f);
        path.quadTo(253.15f, 175.2f, 254.4f, 174.2f);
        path.quadTo(256.7f, 172.35f, 256.7f, 170.35f);
        path.quadTo(256.7f, 169.65f, 256.25f, 168.95f);
        path.quadTo(255.7f, 168.15f, 254.9f, 168.15f);
        path.quadTo(253.9f, 168.15f, 253.1f, 169.05f);
        path.lineTo(252.5f, 170.2f);
        path.lineTo(251.75f, 169.25f);
        path.quadTo(250.85f, 168.35f, 250.1f, 168.35f);
        path.close();
    }

    private static void draw_212(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_212(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_213(Path path)
    {
        path.reset();
        path.moveTo(262.7f, 163.1f);
        path.quadTo(262.1f, 163.1f, 261.55f, 163.6f);
        path.quadTo(261.0f, 164.1f, 261.0f, 165.3f);
        path.quadTo(261.0f, 166.55f, 261.9f, 167.55f);
        path.lineTo(264.5f, 169.7f);
        path.lineTo(264.6f, 169.65f);
        path.lineTo(266.6f, 168.35f);
        path.quadTo(268.7f, 166.7f, 268.7f, 164.9f);
        path.quadTo(268.7f, 164.25f, 268.3f, 163.65f);
        path.quadTo(267.75f, 162.9f, 267.05f, 162.9f);
        path.quadTo(266.15f, 162.9f, 265.45f, 163.7f);
        path.quadTo(265.1f, 164.15f, 264.85f, 164.75f);
        path.lineTo(264.2f, 163.9f);
        path.quadTo(263.4f, 163.1f, 262.7f, 163.1f);
        path.close();
    }

    private static void draw_213(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_213(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_214(Path path)
    {
        path.reset();
        path.moveTo(258.6f, 90.05f);
        path.quadTo(257.05f, 90.05f, 255.25f, 91.7f);
        path.quadTo(253.6f, 93.3f, 253.35f, 94.8f);
        path.lineTo(253.35f, 95.85f);
        path.lineTo(252.35f, 95.6f);
        path.quadTo(250.5f, 95.6f, 249.4f, 96.55f);
        path.quadTo(248.0f, 97.7f, 248.0f, 99.75f);
        path.quadTo(248.0f, 101.65f, 249.0f, 103.05f);
        path.quadTo(249.6f, 103.9f, 250.55f, 104.45f);
        path.lineTo(249.55f, 104.95f);
        path.quadTo(247.4f, 106.3f, 247.4f, 109.3f);
        path.quadTo(247.4f, 112.1f, 249.15f, 113.25f);
        path.quadTo(250.0f, 113.8f, 251.6f, 113.95f);
        path.quadTo(249.8f, 114.8f, 249.8f, 117.2f);
        path.quadTo(249.8f, 118.35f, 250.35f, 118.9f);
        path.lineTo(251.15f, 119.55f);
        path.lineTo(249.8f, 120.1f);
        path.quadTo(247.4f, 121.45f, 247.4f, 123.9f);
        path.quadTo(247.4f, 125.6f, 248.25f, 126.8f);
        path.lineTo(249.0f, 127.5f);
        path.lineTo(249.55f, 127.9f);
        path.lineTo(249.15f, 128.35f);
        path.quadTo(248.35f, 129.55f, 248.25f, 131.1f);
        path.lineTo(248.2f, 131.65f);
        path.quadTo(248.2f, 137.45f, 252.8f, 137.45f);
        path.lineTo(254.5f, 137.3f);
        path.lineTo(255.25f, 136.75f);
        path.lineTo(256.0f, 138.35f);
        path.quadTo(257.5f, 141.05f, 260.2f, 141.05f);
        path.quadTo(261.55f, 141.05f, 262.6f, 140.15f);
        path.lineTo(263.7f, 138.9f);
        path.quadTo(265.55f, 140.4f, 267.8f, 140.4f);
        path.quadTo(271.3f, 140.4f, 273.9f, 139.05f);
        path.quadTo(277.5f, 137.15f, 277.5f, 133.15f);
        path.quadTo(277.5f, 131.1f, 276.25f, 129.35f);
        path.lineTo(275.5f, 128.45f);
        path.quadTo(277.45f, 128.3f, 278.7f, 126.85f);
        path.quadTo(279.9f, 125.4f, 279.9f, 123.5f);
        path.quadTo(279.9f, 121.5f, 278.95f, 119.9f);
        path.quadTo(278.25f, 118.65f, 277.05f, 118.15f);
        path.lineTo(277.9f, 117.55f);
        path.quadTo(280.3f, 115.6f, 280.3f, 112.9f);
        path.quadTo(280.3f, 110.1f, 278.3f, 107.55f);
        path.quadTo(275.9f, 104.55f, 272.35f, 104.55f);
        path.lineTo(271.05f, 104.55f);
        path.lineTo(271.15f, 103.6f);
        path.quadTo(271.15f, 101.85f, 270.35f, 100.55f);
        path.quadTo(269.3f, 98.9501f, 267.3f, 98.9501f);
        path.quadTo(266.25f, 98.9501f, 265.25f, 99.7001f);
        path.lineTo(265.3f, 98.2501f);
        path.quadTo(265.3f, 95.4501f, 263.7f, 93.0001f);
        path.quadTo(261.75f, 90.05f, 258.6f, 90.05f);
        path.close();
    }

    private static void draw_214(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_214(path);
        paint.setColor(Color.argb(255, 255, 102, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_215(Path path)
    {
        path.reset();
        path.moveTo(259.35f, 95.6f);
        path.quadTo(254.15f, 80.15f, 241.55f, 78.95f);
        path.lineTo(236.35f, 78.8f);
        path.quadTo(228.35f, 79.95f, 220.9f, 84.9f);
        path.quadTo(211.25f, 91.45f, 208.5f, 101.25f);
        path.lineTo(208.5f, 103.25f);
        path.lineTo(208.8f, 103.15f);
        path.quadTo(207.95f, 106.35f, 208.1f, 110.95f);
        path.quadTo(208.1f, 127.8f, 215.25f, 139.9f);
        path.quadTo(223.55f, 153.85f, 237.95f, 153.85f);
        path.quadTo(262.65f, 153.85f, 262.65f, 120.35f);
        path.quadTo(262.65f, 105.55f, 259.35f, 95.6f);
        path.close();
    }

    private static void draw_215(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_215(path);
        paint.setColor(Color.argb(255, 254, 174, 103));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_216(Path path)
    {
        path.reset();
        path.moveTo(223.85f, 128.9f);
        path.quadTo(225.3f, 128.9f, 226.25f, 127.85f);
        path.quadTo(227.3f, 126.9f, 227.3f, 125.45f);
        path.quadTo(227.3f, 124.05f, 226.25f, 123.0f);
        path.quadTo(225.3f, 122.05f, 223.85f, 122.05f);
        path.quadTo(222.45f, 122.05f, 221.4f, 123.0f);
        path.quadTo(220.45f, 124.05f, 220.45f, 125.45f);
        path.quadTo(220.45f, 126.9f, 221.4f, 127.85f);
        path.quadTo(222.45f, 128.9f, 223.85f, 128.9f);
        path.close();
        path.moveTo(261.95f, 124.75f);
        path.quadTo(262.85f, 123.95f, 262.85f, 122.85f);
        path.quadTo(262.85f, 121.65f, 261.95f, 120.75f);
        path.quadTo(261.15f, 119.95f, 260.05f, 119.95f);
        path.quadTo(258.85f, 119.95f, 257.95f, 120.75f);
        path.quadTo(257.15f, 121.65f, 257.15f, 122.85f);
        path.quadTo(257.15f, 123.95f, 257.95f, 124.75f);
        path.quadTo(258.85f, 125.65f, 260.05f, 125.65f);
        path.quadTo(261.15f, 125.65f, 261.95f, 124.75f);
        path.close();
    }

    private static void draw_216(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_216(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_217(Path path)
    {
        path.reset();
        path.moveTo(236.85f, 113.35f);
        path.quadTo(234.65f, 111.15f, 231.55f, 111.15f);
        path.quadTo(228.45f, 111.15f, 226.3f, 113.35f);
        path.quadTo(224.1f, 115.55f, 224.1f, 118.65f);
        path.quadTo(224.1f, 121.75f, 226.3f, 123.95f);
        path.quadTo(228.45f, 126.15f, 231.55f, 126.15f);
        path.quadTo(234.65f, 126.15f, 236.85f, 123.95f);
        path.lineTo(237.15f, 123.65f);
        path.quadTo(239.05f, 121.55f, 239.05f, 118.65f);
        path.quadTo(239.05f, 115.75f, 237.15f, 113.65f);
        path.lineTo(236.85f, 113.35f);
        path.close();
    }

    private static void draw_217(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_217(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_218(Path path)
    {
        path.reset();
        path.moveTo(234.7f, 121.8f);
        path.quadTo(236.05f, 120.5f, 236.05f, 118.65f);
        path.quadTo(236.05f, 116.75f, 234.7f, 115.4f);
        path.quadTo(233.4f, 114.1f, 231.5f, 114.1f);
        path.quadTo(229.65f, 114.1f, 228.3f, 115.4f);
        path.quadTo(227.0f, 116.75f, 227.0f, 118.65f);
        path.quadTo(227.0f, 120.5f, 228.3f, 121.8f);
        path.quadTo(229.65f, 123.15f, 231.5f, 123.15f);
        path.quadTo(233.4f, 123.15f, 234.7f, 121.8f);
        path.close();
    }

    private static void draw_218(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_218(path);
        paint.setColor(Color.argb(255, 0, 51, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_219(Path path)
    {
        path.reset();
        path.moveTo(258.45f, 111.7f);
        path.quadTo(256.55f, 109.85f, 253.9f, 109.85f);
        path.quadTo(251.25f, 109.85f, 249.35f, 111.7f);
        path.quadTo(247.45f, 113.6f, 247.45f, 116.3f);
        path.quadTo(247.45f, 118.95f, 249.35f, 120.85f);
        path.quadTo(251.25f, 122.75f, 253.9f, 122.75f);
        path.quadTo(256.55f, 122.75f, 258.45f, 120.85f);
        path.lineTo(258.7f, 120.6f);
        path.quadTo(260.35f, 118.75f, 260.35f, 116.3f);
        path.quadTo(260.35f, 113.8f, 258.7f, 111.95f);
        path.lineTo(258.45f, 111.7f);
        path.close();
    }

    private static void draw_219(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_219(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_220(Path path)
    {
        path.reset();
        path.moveTo(256.7f, 118.75f);
        path.quadTo(257.9f, 117.65f, 257.9f, 116.05f);
        path.quadTo(257.9f, 114.45f, 256.7f, 113.25f);
        path.quadTo(255.55f, 112.15f, 253.95f, 112.15f);
        path.quadTo(252.35f, 112.15f, 251.2f, 113.25f);
        path.quadTo(250.05f, 114.45f, 250.05f, 116.05f);
        path.quadTo(250.05f, 117.65f, 251.2f, 118.75f);
        path.quadTo(252.35f, 119.95f, 253.95f, 119.95f);
        path.quadTo(255.55f, 119.95f, 256.7f, 118.75f);
        path.close();
    }

    private static void draw_220(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_220(path);
        paint.setColor(Color.argb(255, 0, 51, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_221(Path path)
    {
        path.reset();
        path.moveTo(244.1f, 121.75f);
        path.lineTo(242.75f, 121.8f);
        path.lineTo(243.65f, 125.7f);
        path.quadTo(244.9f, 130.35f, 245.85f, 130.35f);
        path.quadTo(255.6f, 130.35f, 259.25f, 127.15f);
        path.quadTo(254.0f, 122.45f, 244.2f, 121.75f);
        path.lineTo(244.1f, 121.75f);
        path.close();
    }

    private static void draw_221(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_221(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_222(Path path)
    {
        path.reset();
        path.moveTo(226.1f, 127.7f);
        path.quadTo(226.4f, 136.7f, 230.7f, 143.3f);
        path.quadTo(233.5f, 147.55f, 237.1f, 149.45f);
        path.quadTo(239.9f, 150.8f, 243.15f, 150.8f);
        path.quadTo(249.6f, 150.8f, 253.45f, 145.65f);
        path.quadTo(256.4f, 141.65f, 256.6f, 136.7f);
        path.lineTo(256.6f, 135.75f);
        path.quadTo(256.6f, 134.5f, 256.05f, 132.15f);
        path.quadTo(254.6f, 134.1f, 253.5f, 134.7f);
        path.lineTo(252.65f, 134.9f);
        path.quadTo(251.3f, 134.9f, 249.85f, 133.1f);
        path.lineTo(248.25f, 131.3f);
        path.quadTo(247.55f, 131.3f, 246.9f, 133.2f);
        path.lineTo(246.0f, 135.65f);
        path.lineTo(244.75f, 133.2f);
        path.quadTo(243.95f, 131.85f, 243.05f, 131.85f);
        path.quadTo(242.5f, 131.85f, 240.1f, 133.6f);
        path.quadTo(237.75f, 135.3f, 235.6f, 135.3f);
        path.quadTo(232.85f, 135.3f, 229.5f, 132.4f);
        path.quadTo(226.5f, 129.7f, 226.1f, 127.7f);
        path.close();
        path.moveTo(231.2f, 137.6f);
        path.lineTo(230.3f, 135.45f);
        path.lineTo(231.9f, 136.7f);
        path.quadTo(233.5f, 137.9f, 234.3f, 138.05f);
        path.lineTo(237.75f, 138.8f);
        path.lineTo(240.6f, 139.0f);
        path.quadTo(250.65f, 139.0f, 253.75f, 135.6f);
        path.lineTo(253.85f, 137.2f);
        path.lineTo(253.85f, 138.4f);
        path.quadTo(253.45f, 142.2f, 250.65f, 144.45f);
        path.lineTo(249.45f, 145.25f);
        path.quadTo(246.95f, 146.6f, 243.7f, 146.6f);
        path.quadTo(239.9f, 146.6f, 236.75f, 144.35f);
        path.lineTo(234.55f, 142.45f);
        path.quadTo(232.45f, 140.3f, 231.2f, 137.6f);
        path.close();
    }

    private static void draw_222(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_222(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_223(Path path)
    {
        path.reset();
        path.moveTo(253.85f, 138.4f);
        path.lineTo(253.85f, 137.2f);
        path.lineTo(253.75f, 135.6f);
        path.quadTo(250.65f, 139.0f, 240.6f, 139.0f);
        path.lineTo(237.75f, 138.8f);
        path.lineTo(234.3f, 138.05f);
        path.quadTo(233.5f, 137.9f, 231.9f, 136.7f);
        path.lineTo(230.3f, 135.45f);
        path.lineTo(231.2f, 137.6f);
        path.quadTo(232.95f, 138.85f, 235.5f, 139.9f);
        path.quadTo(239.8f, 141.65f, 243.55f, 141.65f);
        path.quadTo(249.35f, 141.65f, 253.85f, 138.4f);
        path.close();
    }

    private static void draw_223(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_223(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_224(Path path)
    {
        path.reset();
        path.moveTo(249.45f, 145.25f);
        path.lineTo(250.65f, 144.45f);
        path.quadTo(253.45f, 142.2f, 253.85f, 138.4f);
        path.quadTo(249.35f, 141.65f, 243.55f, 141.65f);
        path.quadTo(239.8f, 141.65f, 235.5f, 139.9f);
        path.quadTo(232.95f, 138.85f, 231.2f, 137.6f);
        path.quadTo(232.45f, 140.3f, 234.55f, 142.45f);
        path.lineTo(236.75f, 144.35f);
        path.quadTo(239.0f, 142.85f, 242.75f, 142.85f);
        path.quadTo(246.55f, 142.85f, 249.45f, 145.25f);
        path.close();
    }

    private static void draw_224(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_224(path);
        paint.setColor(Color.argb(255, 109, 35, 35));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_225(Path path)
    {
        path.reset();
        path.moveTo(236.75f, 144.35f);
        path.quadTo(239.9f, 146.6f, 243.7f, 146.6f);
        path.quadTo(246.95f, 146.6f, 249.45f, 145.25f);
        path.quadTo(246.55f, 142.85f, 242.75f, 142.85f);
        path.quadTo(239.0f, 142.85f, 236.75f, 144.35f);
        path.close();
    }

    private static void draw_225(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_225(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_226(Path path)
    {
        path.reset();
        path.moveTo(241.55f, 148.4f);
        path.quadTo(241.4f, 148.5f, 241.4f, 149.05f);
        path.quadTo(241.4f, 149.45f, 241.55f, 149.6f);
        path.lineTo(241.6f, 149.95f);
        path.lineTo(242.25f, 150.0f);
        path.lineTo(243.15f, 149.85f);
        path.lineTo(243.15f, 149.05f);
        path.quadTo(242.65f, 148.4f, 242.1f, 148.4f);
        path.lineTo(241.55f, 148.4f);
        path.close();
        path.moveTo(240.35f, 149.05f);
        path.lineTo(240.35f, 148.25f);
        path.quadTo(238.9f, 147.05f, 237.85f, 146.9f);
        path.lineTo(237.8f, 146.9f);
        path.lineTo(237.7f, 146.8f);
        path.lineTo(237.5f, 146.8f);
        path.lineTo(236.85f, 146.9f);
        path.quadTo(237.25f, 148.35f, 237.7f, 148.8f);
        path.quadTo(238.2f, 149.2f, 239.4f, 149.2f);
        path.lineTo(240.35f, 149.05f);
        path.close();
    }

    private static void draw_226(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_226(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_227(Path path)
    {
        path.reset();
        path.moveTo(251.35f, 67.35f);
        path.quadTo(249.5f, 64.8f, 246.15f, 64.8f);
        path.quadTo(244.35f, 64.8f, 242.25f, 66.4f);
        path.quadTo(241.0f, 67.35f, 240.35f, 68.4f);
        path.quadTo(238.6f, 66.0f, 237.35f, 65.2f);
        path.quadTo(235.8f, 64.25f, 232.95f, 64.25f);
        path.quadTo(229.2f, 64.25f, 226.95f, 66.25f);
        path.quadTo(224.8f, 68.15f, 224.8f, 71.1f);
        path.lineTo(224.9f, 72.0f);
        path.quadTo(221.05f, 67.85f, 216.45f, 67.85f);
        path.quadTo(212.55f, 67.85f, 210.45f, 71.05f);
        path.quadTo(209.05f, 73.25f, 209.05f, 75.5f);
        path.quadTo(209.05f, 76.6f, 209.85f, 78.2f);
        path.lineTo(209.35f, 78.05f);
        path.lineTo(206.35f, 77.55f);
        path.quadTo(204.4f, 77.55f, 203.45f, 79.0f);
        path.quadTo(202.65f, 80.1f, 202.65f, 81.55f);
        path.quadTo(202.65f, 84.0f, 203.95f, 85.45f);
        path.lineTo(203.0f, 85.35f);
        path.quadTo(194.7f, 85.35f, 194.7f, 93.9f);
        path.quadTo(194.7f, 95.25f, 195.1f, 96.55f);
        path.quadTo(193.6f, 96.75f, 192.05f, 97.4f);
        path.quadTo(188.15f, 99.0f, 188.15f, 102.2f);
        path.quadTo(188.15f, 103.55f, 188.95f, 104.35f);
        path.lineTo(187.7f, 104.8f);
        path.quadTo(185.55f, 105.95f, 185.55f, 108.8f);
        path.lineTo(185.75f, 110.0f);
        path.lineTo(186.55f, 110.15f);
        path.lineTo(187.6f, 110.45f);
        path.quadTo(186.15f, 110.95f, 185.75f, 110.0f);
        path.lineTo(183.05f, 109.7f);
        path.quadTo(181.05f, 109.7f, 179.0f, 111.25f);
        path.quadTo(176.6f, 113.1f, 176.6f, 115.5f);
        path.quadTo(176.6f, 117.15f, 177.7f, 119.0f);
        path.lineTo(178.1f, 119.55f);
        path.lineTo(175.95f, 119.25f);
        path.quadTo(173.95f, 119.25f, 172.6f, 120.45f);
        path.quadTo(171.2f, 121.65f, 171.2f, 123.8f);
        path.quadTo(171.2f, 126.35f, 172.8f, 127.35f);
        path.lineTo(173.95f, 127.95f);
        path.lineTo(171.4f, 129.45f);
        path.quadTo(167.85f, 132.15f, 167.85f, 135.6f);
        path.quadTo(167.85f, 139.0f, 170.0f, 141.15f);
        path.quadTo(172.15f, 143.3f, 175.9f, 143.3f);
        path.quadTo(177.95f, 143.3f, 179.55f, 142.5f);
        path.lineTo(179.7f, 142.45f);
        path.quadTo(180.05f, 144.25f, 181.15f, 145.7f);
        path.quadTo(182.8f, 147.95f, 185.55f, 147.95f);
        path.quadTo(188.3f, 147.95f, 190.45f, 146.15f);
        path.quadTo(191.9f, 145.0f, 192.55f, 143.45f);
        path.lineTo(193.65f, 145.3f);
        path.quadTo(195.5f, 147.55f, 197.95f, 147.55f);
        path.quadTo(200.6f, 147.55f, 202.4f, 144.6f);
        path.quadTo(203.4f, 143.0f, 203.85f, 141.05f);
        path.lineTo(203.95f, 141.25f);
        path.quadTo(205.7f, 143.7f, 207.75f, 143.7f);
        path.quadTo(211.05f, 143.7f, 213.25f, 141.7f);
        path.quadTo(215.4f, 139.8f, 215.4f, 137.35f);
        path.quadTo(215.4f, 135.8f, 215.0f, 135.0f);
        path.lineTo(213.9f, 133.9f);
        path.lineTo(215.1f, 132.8f);
        path.quadTo(217.25f, 130.5f, 217.25f, 128.1f);
        path.quadTo(217.25f, 125.6f, 215.8f, 124.1f);
        path.lineTo(212.3f, 121.65f);
        path.lineTo(212.7f, 121.3f);
        path.quadTo(213.8f, 120.5f, 213.8f, 119.55f);
        path.quadTo(213.8f, 118.7f, 212.95f, 117.55f);
        path.lineTo(212.7f, 117.25f);
        path.lineTo(214.55f, 116.45f);
        path.quadTo(215.8f, 115.5f, 215.8f, 112.95f);
        path.quadTo(215.8f, 110.95f, 214.95f, 109.45f);
        path.lineTo(213.4f, 107.45f);
        path.lineTo(214.45f, 107.5f);
        path.quadTo(217.0f, 107.5f, 219.0f, 105.55f);
        path.quadTo(221.0f, 103.55f, 221.0f, 100.9f);
        path.lineTo(221.0f, 100.6f);
        path.quadTo(222.2f, 101.45f, 224.4f, 101.45f);
        path.quadTo(228.55f, 101.45f, 229.9f, 98.8999f);
        path.lineTo(230.65f, 96.7499f);
        path.lineTo(231.45f, 97.5499f);
        path.lineTo(233.65f, 97.8999f);
        path.quadTo(235.5f, 97.8999f, 236.35f, 96.5999f);
        path.quadTo(236.95f, 95.8999f, 237.25f, 94.6999f);
        path.quadTo(237.8f, 95.7999f, 239.15f, 96.7499f);
        path.quadTo(241.15f, 98.0999f, 243.7f, 98.0999f);
        path.quadTo(246.95f, 98.0999f, 248.65f, 95.9499f);
        path.quadTo(249.1f, 97.2499f, 250.45f, 98.2999f);
        path.quadTo(252.55f, 99.8499f, 255.2f, 99.8499f);
        path.quadTo(258.85f, 99.8499f, 260.85f, 96.5499f);
        path.quadTo(262.25f, 94.0499f, 262.25f, 91.3499f);
        path.lineTo(262.25f, 90.3999f);
        path.lineTo(263.7f, 90.6999f);
        path.quadTo(266.35f, 90.6999f, 267.85f, 89.0999f);
        path.quadTo(269.2f, 87.5999f, 269.2f, 85.1999f);
        path.quadTo(269.2f, 81.0499f, 264.8f, 79.6499f);
        path.quadTo(263.0f, 78.9999f, 260.75f, 78.9999f);
        path.quadTo(263.2f, 76.0499f, 263.2f, 73.8999f);
        path.quadTo(263.2f, 69.8499f, 258.1f, 69.8499f);
        path.quadTo(255.1f, 69.8499f, 252.85f, 71.8999f);
        path.quadTo(252.7f, 69.25f, 251.35f, 67.35f);
        path.close();
    }

    private static void draw_227(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_227(path);
        paint.setColor(Color.argb(255, 255, 102, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_228(Path path)
    {
        path.reset();
        path.moveTo(231.7f, 173.3f);
        path.lineTo(232.6f, 173.3f);
        path.quadTo(232.9f, 173.05f, 233.05f, 171.9f);
        path.lineTo(232.9f, 172.05f);
        path.quadTo(232.45f, 173.1f, 231.7f, 173.3f);
        path.close();
        path.moveTo(220.65f, 180.55f);
        path.lineTo(221.9f, 181.3f);
        path.lineTo(222.15f, 180.5f);
        path.lineTo(221.85f, 180.75f);
        path.lineTo(220.65f, 180.55f);
        path.close();
    }

    private static void draw_228(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_228(path);
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0644073f, -0.123535f, 0.0f, 305.7f, 157.8f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_229(Path path)
    {
        path.reset();
        path.moveTo(233.05f, 171.9f);
        path.lineTo(233.05f, 170.95f);
        path.lineTo(233.3f, 171.0f);
        path.lineTo(233.2f, 169.95f);
        path.lineTo(233.8f, 169.95f);
        path.lineTo(235.0f, 170.85f);
        path.quadTo(234.6f, 169.55f, 232.6f, 166.0f);
        path.lineTo(230.5f, 161.9f);
        path.lineTo(232.9f, 161.9f);
        path.quadTo(232.15f, 160.7f, 229.0f, 157.85f);
        path.quadTo(225.95f, 155.05f, 225.15f, 153.8f);
        path.lineTo(227.2f, 152.3f);
        path.quadTo(225.15f, 151.6f, 223.1f, 150.25f);
        path.lineTo(221.4f, 148.95f);
        path.quadTo(220.5f, 148.05f, 220.35f, 147.2f);
        path.lineTo(217.45f, 145.55f);
        path.lineTo(213.85f, 143.3f);
        path.quadTo(210.65f, 145.65f, 208.0f, 149.7f);
        path.quadTo(205.05f, 154.3f, 203.85f, 159.2f);
        path.lineTo(203.85f, 162.5f);
        path.lineTo(204.9f, 160.85f);
        path.quadTo(205.35f, 159.8f, 205.95f, 159.2f);
        path.lineTo(205.55f, 161.95f);
        path.quadTo(205.05f, 164.3f, 205.05f, 165.6f);
        path.lineTo(205.1f, 169.5f);
        path.lineTo(206.25f, 173.85f);
        path.lineTo(206.85f, 172.35f);
        path.quadTo(207.15f, 171.4f, 207.75f, 171.15f);
        path.lineTo(210.4f, 175.65f);
        path.quadTo(212.0f, 178.4f, 213.45f, 179.55f);
        path.quadTo(213.45f, 178.35f, 214.05f, 176.55f);
        path.quadTo(215.4f, 177.0f, 217.9f, 179.0f);
        path.quadTo(219.25f, 180.15f, 220.65f, 180.55f);
        path.lineTo(221.85f, 180.75f);
        path.lineTo(222.15f, 180.5f);
        path.lineTo(222.25f, 177.35f);
        path.lineTo(223.4f, 179.6f);
        path.quadTo(223.95f, 180.5f, 225.2f, 180.5f);
        path.quadTo(226.65f, 180.5f, 227.0f, 178.85f);
        path.quadTo(227.2f, 177.4f, 226.65f, 175.3f);
        path.lineTo(227.75f, 176.9f);
        path.quadTo(228.5f, 177.7f, 229.45f, 177.7f);
        path.quadTo(230.45f, 177.7f, 230.65f, 176.15f);
        path.lineTo(230.65f, 172.9f);
        path.quadTo(230.9f, 173.2f, 231.7f, 173.3f);
        path.quadTo(232.45f, 173.1f, 232.9f, 172.05f);
        path.lineTo(233.05f, 171.9f);
        path.close();
    }

    private static void draw_229(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_229(path);
        paint.setColor(Color.argb(255, 19, 19, 19));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_230(Path path)
    {
        path.reset();
        path.moveTo(214.3f, 164.15f);
        path.quadTo(212.8f, 161.2f, 212.3f, 159.05f);
        path.lineTo(212.25f, 159.55f);
        path.quadTo(212.25f, 160.5f, 212.8f, 161.85f);
        path.quadTo(213.35f, 163.35f, 214.3f, 164.15f);
        path.close();
    }

    private static void draw_230(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_230(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.00437927f, 0.0f, 0.0f, 0.00437927f, 213.05f, 161.35f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_231(Path path)
    {
        path.reset();
        path.moveTo(212.3f, 159.05f);
        path.lineTo(212.9f, 157.0f);
        path.quadTo(213.45f, 155.4f, 213.45f, 154.05f);
        path.quadTo(213.45f, 150.55f, 211.7f, 147.85f);
        path.quadTo(209.7f, 144.8f, 206.6f, 144.8f);
        path.lineTo(204.65f, 145.2f);
        path.lineTo(204.65f, 144.4f);
        path.quadTo(205.05f, 142.95f, 205.05f, 138.6f);
        path.lineTo(205.05f, 134.85f);
        path.quadTo(204.75f, 132.05f, 203.0f, 132.05f);
        path.quadTo(199.1f, 132.05f, 199.1f, 137.8f);
        path.quadTo(199.1f, 140.55f, 199.25f, 142.35f);
        path.lineTo(198.15f, 138.75f);
        path.quadTo(196.3f, 133.65f, 194.55f, 133.65f);
        path.quadTo(192.55f, 133.65f, 192.55f, 137.65f);
        path.quadTo(192.55f, 140.2f, 193.75f, 142.95f);
        path.quadTo(194.85f, 145.65f, 196.7f, 147.45f);
        path.quadTo(194.55f, 148.2f, 193.75f, 149.6f);
        path.quadTo(193.1f, 150.7f, 193.1f, 153.1f);
        path.quadTo(193.1f, 156.1f, 195.4f, 158.25f);
        path.quadTo(197.65f, 160.2f, 201.1f, 160.75f);
        path.quadTo(203.55f, 161.15f, 204.35f, 165.35f);
        path.lineTo(205.05f, 172.3f);
        path.quadTo(206.35f, 180.5f, 210.3f, 187.75f);
        path.quadTo(215.45f, 197.0f, 221.8f, 197.0f);
        path.quadTo(225.15f, 197.0f, 226.2f, 195.4f);
        path.quadTo(227.0f, 194.2f, 227.0f, 190.85f);
        path.quadTo(227.0f, 186.85f, 225.85f, 183.85f);
        path.quadTo(224.85f, 181.05f, 221.4f, 175.5f);
        path.quadTo(217.9f, 170.55f, 215.75f, 166.85f);
        path.quadTo(214.85f, 165.45f, 214.3f, 164.15f);
        path.quadTo(213.35f, 163.35f, 212.8f, 161.85f);
        path.quadTo(212.25f, 160.5f, 212.25f, 159.55f);
        path.lineTo(212.3f, 159.05f);
        path.close();
    }

    private static void draw_231(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_231(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0384674f, 0.0f, 0.0f, 0.0384674f, 230.25f, 192.05f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_232(Path path)
    {
        path.reset();
        path.moveTo(205.05f, 153.15f);
        path.quadTo(205.05f, 151.55f, 203.4f, 150.3f);
        path.quadTo(201.7f, 149.0f, 199.35f, 148.6f);
        path.lineTo(198.7f, 148.6f);
        path.lineTo(197.5f, 148.6f);
        path.quadTo(195.75f, 148.8f, 195.75f, 150.05f);
        path.quadTo(195.75f, 151.65f, 198.15f, 153.15f);
        path.quadTo(200.35f, 154.6f, 202.45f, 154.6f);
        path.lineTo(203.85f, 154.35f);
        path.quadTo(205.05f, 153.95f, 205.05f, 153.15f);
        path.close();
    }

    private static void draw_232(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_232(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.00982666f, 0.0f, 0.0f, 0.00982666f, 205.7f, 154.35f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_233(Path path)
    {
        path.reset();
        path.moveTo(202.5f, 151.9f);
        path.quadTo(202.5f, 154.35f, 204.75f, 154.35f);
        path.quadTo(206.35f, 154.35f, 208.25f, 152.2f);
        path.quadTo(210.1f, 150.15f, 210.1f, 148.7f);
        path.quadTo(210.1f, 146.4f, 207.75f, 146.4f);
        path.quadTo(206.9f, 146.4f, 205.8f, 147.1f);
        path.lineTo(205.3f, 147.45f);
        path.lineTo(205.05f, 147.5f);
        path.quadTo(202.5f, 148.8f, 202.5f, 151.9f);
        path.close();
    }

    private static void draw_233(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_233(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0103302f, 0.0f, 0.0f, 0.0103302f, 203.45f, 154.6f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_234(Path path)
    {
        path.reset();
        path.moveTo(202.4f, 157.45f);
        path.quadTo(202.4f, 156.0f, 200.9f, 154.9f);
        path.quadTo(199.4f, 153.75f, 197.3f, 153.4f);
        path.lineTo(196.75f, 153.4f);
        path.lineTo(195.65f, 153.4f);
        path.quadTo(194.1f, 153.55f, 194.1f, 154.7f);
        path.quadTo(194.1f, 156.1f, 196.25f, 157.45f);
        path.quadTo(198.2f, 158.7f, 200.05f, 158.7f);
        path.lineTo(201.35f, 158.5f);
        path.quadTo(202.4f, 158.15f, 202.4f, 157.45f);
        path.close();
    }

    private static void draw_234(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_234(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.00872803f, 0.0f, 0.0f, 0.00872803f, 202.95f, 158.5f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_235(Path path)
    {
        path.reset();
        path.moveTo(380.95f, 172.4f);
        path.lineTo(380.05f, 172.4f);
        path.quadTo(379.75f, 172.15f, 379.6f, 171.0f);
        path.lineTo(379.75f, 171.15f);
        path.quadTo(380.2f, 172.2f, 380.95f, 172.4f);
        path.close();
        path.moveTo(392.0f, 179.65f);
        path.lineTo(390.75f, 180.4f);
        path.lineTo(390.5f, 179.6f);
        path.lineTo(390.8f, 179.85f);
        path.lineTo(392.0f, 179.65f);
        path.close();
    }

    private static void draw_235(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_235(path);
        Shader shader = create_gradient_6();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0644073f, 0.123535f, 0.0f, 306.95f, 156.9f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_236(Path path)
    {
        path.reset();
        path.moveTo(379.6f, 171.0f);
        path.lineTo(379.6f, 170.05f);
        path.lineTo(379.35f, 170.1f);
        path.lineTo(379.45f, 169.05f);
        path.lineTo(378.85f, 169.05f);
        path.lineTo(377.65f, 169.95f);
        path.quadTo(378.05f, 168.65f, 380.05f, 165.1f);
        path.lineTo(382.15f, 161.0f);
        path.lineTo(379.75f, 161.0f);
        path.quadTo(380.5f, 159.8f, 383.65f, 156.95f);
        path.lineTo(387.5f, 152.9f);
        path.lineTo(385.45f, 151.4f);
        path.quadTo(387.5f, 150.7f, 389.55f, 149.35f);
        path.lineTo(391.25f, 148.05f);
        path.quadTo(392.15f, 147.15f, 392.3f, 146.3f);
        path.lineTo(395.2f, 144.65f);
        path.lineTo(398.8f, 142.4f);
        path.quadTo(402.0f, 144.75f, 404.65f, 148.8f);
        path.quadTo(407.6f, 153.4f, 408.8f, 158.3f);
        path.lineTo(408.8f, 161.6f);
        path.quadTo(408.25f, 161.05f, 407.75f, 159.95f);
        path.quadTo(407.3f, 158.9f, 406.7f, 158.3f);
        path.lineTo(407.1f, 161.05f);
        path.lineTo(407.6f, 164.7f);
        path.lineTo(407.55f, 168.6f);
        path.lineTo(406.4f, 172.95f);
        path.lineTo(405.8f, 171.45f);
        path.quadTo(405.5f, 170.5f, 404.9f, 170.25f);
        path.lineTo(402.25f, 174.75f);
        path.quadTo(400.65f, 177.5f, 399.2f, 178.65f);
        path.quadTo(399.2f, 177.45f, 398.6f, 175.65f);
        path.quadTo(397.25f, 176.1f, 394.75f, 178.1f);
        path.quadTo(393.4f, 179.25f, 392.0f, 179.65f);
        path.lineTo(390.8f, 179.85f);
        path.lineTo(390.5f, 179.6f);
        path.lineTo(390.4f, 176.45f);
        path.lineTo(389.25f, 178.7f);
        path.quadTo(388.7f, 179.6f, 387.45f, 179.6f);
        path.quadTo(386.0f, 179.6f, 385.65f, 177.95f);
        path.quadTo(385.45f, 176.5f, 386.0f, 174.4f);
        path.lineTo(384.9f, 176.0f);
        path.quadTo(384.15f, 176.8f, 383.2f, 176.8f);
        path.quadTo(382.2f, 176.8f, 382.0f, 175.25f);
        path.lineTo(382.0f, 172.0f);
        path.quadTo(381.75f, 172.3f, 380.95f, 172.4f);
        path.quadTo(380.2f, 172.2f, 379.75f, 171.15f);
        path.lineTo(379.6f, 171.0f);
        path.close();
    }

    private static void draw_236(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_236(path);
        paint.setColor(Color.argb(255, 19, 19, 19));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_237(Path path)
    {
        path.reset();
        path.moveTo(372.25f, 68.85f);
        path.quadTo(360.85f, 68.85f, 351.4f, 83.2f);
        path.quadTo(341.4f, 98.25f, 341.4f, 118.4f);
        path.quadTo(341.4f, 136.5f, 350.8f, 145.85f);
        path.quadTo(359.1f, 154.1f, 371.85f, 153.1f);
        path.lineTo(371.85f, 152.75f);
        path.lineTo(373.7f, 152.95f);
        path.lineTo(376.9f, 152.95f);
        path.quadTo(388.25f, 152.95f, 394.8f, 145.75f);
        path.quadTo(401.2f, 138.75f, 401.2f, 126.8f);
        path.quadTo(401.2f, 102.9f, 396.8f, 89.55f);
        path.quadTo(389.95f, 68.85f, 372.25f, 68.85f);
        path.close();
    }

    private static void draw_237(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_237(path);
        Shader shader = create_gradient_7();
        shader.setLocalMatrix(createMatrix(0.0697479f, 0.0f, 0.0f, 0.0697479f, 374.55f, 51.65f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_238(Path path)
    {
        path.reset();
        path.moveTo(350.9f, 114.3f);
        path.quadTo(352.85f, 115.1f, 354.1f, 115.1f);
        path.quadTo(358.4f, 115.1f, 358.5f, 111.65f);
        path.quadTo(358.55f, 108.9f, 353.8f, 109.6f);
        path.quadTo(348.9f, 110.3f, 348.9f, 112.7f);
        path.quadTo(348.9f, 113.4f, 350.9f, 114.3f);
        path.close();
    }

    private static void draw_238(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_238(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_239(Path path)
    {
        path.reset();
        path.moveTo(356.75f, 100.1f);
        path.quadTo(354.8f, 100.1f, 354.8f, 100.75f);
        path.quadTo(354.8f, 101.55f, 354.9f, 101.45f);
        path.lineTo(355.8f, 101.65f);
        path.lineTo(356.75f, 101.45f);
        path.lineTo(356.9f, 101.3f);
        path.lineTo(356.95f, 100.85f);
        path.lineTo(356.9f, 100.25f);
        path.lineTo(356.75f, 100.1f);
        path.close();
        path.moveTo(354.0f, 101.8f);
        path.lineTo(353.8f, 101.3f);
        path.lineTo(352.1f, 101.0f);
        path.lineTo(351.95f, 101.45f);
        path.quadTo(351.95f, 102.25f, 352.75f, 102.5f);
        path.quadTo(353.85f, 102.35f, 354.0f, 101.8f);
        path.close();
        path.moveTo(347.8f, 103.85f);
        path.lineTo(348.45f, 103.95f);
        path.lineTo(349.1f, 103.8f);
        path.lineTo(349.15f, 103.45f);
        path.lineTo(349.0f, 103.0f);
        path.quadTo(347.9f, 102.75f, 347.5f, 103.4f);
        path.lineTo(347.8f, 103.85f);
        path.close();
        path.moveTo(351.65f, 102.65f);
        path.lineTo(351.25f, 101.95f);
        path.quadTo(350.2f, 101.95f, 350.05f, 102.4f);
        path.lineTo(350.35f, 103.15f);
        path.lineTo(351.55f, 102.9f);
        path.lineTo(351.65f, 102.65f);
        path.close();
    }

    private static void draw_239(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_239(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_240(Path path)
    {
        path.reset();
        path.moveTo(352.8f, 113.4f);
        path.quadTo(353.3f, 113.0f, 353.3f, 112.4f);
        path.quadTo(353.3f, 111.75f, 352.8f, 111.25f);
        path.quadTo(352.4f, 110.85f, 351.8f, 110.85f);
        path.quadTo(351.05f, 110.85f, 350.65f, 111.25f);
        path.quadTo(350.25f, 111.75f, 350.25f, 112.4f);
        path.quadTo(350.25f, 113.0f, 350.65f, 113.4f);
        path.quadTo(351.05f, 113.9f, 351.8f, 113.9f);
        path.quadTo(352.4f, 113.9f, 352.8f, 113.4f);
        path.close();
    }

    private static void draw_240(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_240(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_241(Path path)
    {
        path.reset();
        path.moveTo(388.2f, 115.1f);
        path.quadTo(389.5f, 115.1f, 391.4f, 114.3f);
        path.quadTo(393.4f, 113.4f, 393.4f, 112.7f);
        path.quadTo(393.4f, 110.3f, 388.55f, 109.6f);
        path.quadTo(383.75f, 108.9f, 383.85f, 111.65f);
        path.quadTo(383.9f, 115.1f, 388.2f, 115.1f);
        path.close();
    }

    private static void draw_241(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_241(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_242(Path path)
    {
        path.reset();
        path.moveTo(394.8f, 103.4f);
        path.quadTo(394.45f, 102.75f, 393.3f, 103.0f);
        path.lineTo(393.15f, 103.45f);
        path.lineTo(393.25f, 103.8f);
        path.lineTo(393.85f, 103.95f);
        path.lineTo(394.5f, 103.85f);
        path.lineTo(394.8f, 103.4f);
        path.close();
        path.moveTo(385.6f, 100.1f);
        path.lineTo(385.4f, 100.25f);
        path.lineTo(385.35f, 100.85f);
        path.lineTo(385.4f, 101.3f);
        path.lineTo(385.6f, 101.45f);
        path.quadTo(385.75f, 101.65f, 386.55f, 101.65f);
        path.lineTo(387.4f, 101.45f);
        path.lineTo(387.5f, 100.75f);
        path.quadTo(387.5f, 100.1f, 385.6f, 100.1f);
        path.close();
        path.moveTo(388.3f, 101.8f);
        path.quadTo(388.45f, 102.35f, 389.55f, 102.5f);
        path.quadTo(390.35f, 102.25f, 390.35f, 101.45f);
        path.lineTo(390.2f, 101.0f);
        path.lineTo(388.55f, 101.3f);
        path.lineTo(388.3f, 101.8f);
        path.close();
        path.moveTo(392.25f, 102.4f);
        path.quadTo(392.1f, 101.95f, 391.1f, 101.95f);
        path.lineTo(390.7f, 102.65f);
        path.lineTo(390.75f, 102.9f);
        path.lineTo(391.95f, 103.15f);
        path.lineTo(392.25f, 102.4f);
        path.close();
    }

    private static void draw_242(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_242(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_243(Path path)
    {
        path.reset();
        path.moveTo(385.35f, 113.35f);
        path.quadTo(385.75f, 113.8f, 386.4f, 113.8f);
        path.quadTo(387.1f, 113.8f, 387.5f, 113.35f);
        path.quadTo(387.9f, 112.95f, 387.9f, 112.3f);
        path.quadTo(387.9f, 111.65f, 387.5f, 111.2f);
        path.quadTo(387.1f, 110.8f, 386.4f, 110.8f);
        path.quadTo(385.75f, 110.8f, 385.35f, 111.2f);
        path.quadTo(384.9f, 111.65f, 384.9f, 112.3f);
        path.quadTo(384.9f, 112.95f, 385.35f, 113.35f);
        path.close();
    }

    private static void draw_243(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_243(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_244(Path path)
    {
        path.reset();
        path.moveTo(371.55f, 104.95f);
        path.quadTo(368.85f, 104.95f, 368.55f, 114.75f);
        path.quadTo(368.35f, 121.85f, 367.9f, 125.3f);
        path.lineTo(367.5f, 127.15f);
        path.lineTo(366.95f, 128.15f);
        path.lineTo(366.15f, 129.3f);
        path.quadTo(364.55f, 131.6f, 364.55f, 132.7f);
        path.quadTo(364.55f, 133.5f, 364.85f, 134.3f);
        path.lineTo(367.1f, 134.3f);
        path.quadTo(368.55f, 133.0f, 369.0f, 134.85f);
        path.quadTo(369.65f, 137.15f, 370.75f, 137.15f);
        path.quadTo(371.85f, 137.15f, 372.1f, 136.45f);
        path.lineTo(372.5f, 134.0f);
        path.quadTo(373.45f, 134.0f, 374.1f, 134.6f);
        path.lineTo(376.0f, 134.6f);
        path.lineTo(376.35f, 132.85f);
        path.lineTo(374.75f, 127.45f);
        path.quadTo(373.25f, 123.15f, 373.8f, 119.3f);
        path.quadTo(374.35f, 115.5f, 374.25f, 111.75f);
        path.quadTo(374.1f, 104.95f, 371.55f, 104.95f);
        path.close();
    }

    private static void draw_244(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_244(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_245(Path path)
    {
        path.reset();
        path.moveTo(392.45f, 122.65f);
        path.lineTo(393.55f, 121.25f);
    }

    private static void draw_245(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_245(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_246(Path path)
    {
        path.reset();
        path.moveTo(387.8f, 123.8f);
        path.quadTo(388.6f, 122.35f, 390.05f, 121.55f);
    }

    private static void draw_246(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_246(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_247(Path path)
    {
        path.reset();
        path.moveTo(384.0f, 123.8f);
        path.quadTo(385.6f, 121.4f, 387.15f, 120.6f);
    }

    private static void draw_247(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_247(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_248(Path path)
    {
        path.reset();
        path.moveTo(355.6f, 123.8f);
        path.lineTo(356.9f, 122.2f);
    }

    private static void draw_248(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_248(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_249(Path path)
    {
        path.reset();
        path.moveTo(351.8f, 123.8f);
        path.lineTo(353.7f, 121.85f);
    }

    private static void draw_249(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_249(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_250(Path path)
    {
        path.reset();
        path.moveTo(348.3f, 124.1f);
        path.quadTo(349.0f, 122.5f, 350.2f, 120.9f);
    }

    private static void draw_250(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_250(path);
        paint.setColor(Color.argb(255, 255, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_251(Path path)
    {
        path.reset();
        path.moveTo(380.65f, 139.25f);
        path.quadTo(379.3f, 140.6f, 377.7f, 140.6f);
        path.quadTo(376.75f, 140.6f, 375.15f, 139.95f);
        path.quadTo(373.55f, 139.3f, 372.75f, 139.3f);
        path.lineTo(371.25f, 139.55f);
        path.lineTo(369.9f, 140.9f);
        path.lineTo(368.95f, 139.1f);
        path.quadTo(368.45f, 138.35f, 367.5f, 138.35f);
        path.quadTo(366.45f, 138.35f, 364.0f, 139.65f);
        path.quadTo(363.35f, 139.95f, 362.85f, 140.3f);
        path.quadTo(361.85f, 140.85f, 361.5f, 141.25f);
        path.lineTo(361.6f, 141.45f);
        path.lineTo(362.15f, 142.45f);
        path.lineTo(361.1f, 145.2f);
        path.quadTo(360.65f, 146.9f, 360.65f, 150.0f);
        path.quadTo(360.65f, 156.75f, 363.2f, 159.1f);
        path.quadTo(365.65f, 161.3f, 372.9f, 161.3f);
        path.quadTo(378.1f, 161.3f, 380.7f, 159.7f);
        path.quadTo(383.9f, 157.8f, 383.9f, 153.35f);
        path.quadTo(383.9f, 151.65f, 382.4f, 147.2f);
        path.lineTo(381.2f, 144.0f);
        path.quadTo(382.95f, 142.1f, 382.95f, 138.85f);
        path.quadTo(382.95f, 136.75f, 382.65f, 136.15f);
        path.lineTo(382.0f, 136.15f);
        path.quadTo(382.0f, 137.9f, 380.65f, 139.25f);
        path.close();
        path.moveTo(379.75f, 145.05f);
        path.quadTo(379.5f, 148.65f, 378.0f, 151.25f);
        path.quadTo(375.6f, 155.25f, 370.7f, 155.25f);
        path.quadTo(362.55f, 155.25f, 362.55f, 145.7f);
        path.lineTo(362.85f, 143.15f);
        path.lineTo(365.35f, 144.8f);
        path.quadTo(368.7f, 146.35f, 373.7f, 146.35f);
        path.quadTo(377.55f, 146.35f, 379.75f, 145.05f);
        path.close();
    }

    private static void draw_251(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_251(path);
        paint.setColor(Color.argb(255, 213, 87, 87));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_252(Path path)
    {
        path.reset();
        path.moveTo(379.75f, 145.05f);
        path.quadTo(377.55f, 146.35f, 373.7f, 146.35f);
        path.quadTo(368.7f, 146.35f, 365.35f, 144.8f);
        path.lineTo(362.85f, 143.15f);
        path.lineTo(362.55f, 145.7f);
        path.quadTo(362.55f, 155.25f, 370.7f, 155.25f);
        path.quadTo(375.6f, 155.25f, 378.0f, 151.25f);
        path.quadTo(379.5f, 148.65f, 379.75f, 145.05f);
        path.close();
    }

    private static void draw_252(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_252(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_253(Path path)
    {
        path.reset();
        path.moveTo(383.65f, 134.6f);
        path.lineTo(385.4f, 134.7f);
        path.quadTo(385.4f, 135.9f, 385.6f, 136.15f);
        path.lineTo(386.3f, 136.15f);
        path.lineTo(386.55f, 135.9f);
        path.lineTo(386.05f, 134.4f);
        path.quadTo(385.6f, 133.5f, 383.35f, 134.0f);
        path.lineTo(383.35f, 134.4f);
        path.lineTo(383.65f, 134.6f);
        path.close();
    }

    private static void draw_253(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_253(path);
        paint.setColor(Color.argb(255, 255, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_254(Path path)
    {
        path.reset();
        path.moveTo(373.1f, 147.45f);
        path.lineTo(372.45f, 147.45f);
        path.lineTo(372.45f, 150.55f);
        path.lineTo(368.8f, 150.8f);
        path.lineTo(368.7f, 150.05f);
        path.lineTo(368.95f, 146.5f);
        path.quadTo(368.3f, 146.8f, 368.3f, 149.2f);
        path.lineTo(368.4f, 150.8f);
        path.quadTo(367.1f, 150.55f, 365.7f, 149.25f);
        path.quadTo(365.85f, 148.5f, 366.35f, 147.75f);
        path.lineTo(366.95f, 146.4f);
        path.lineTo(366.9f, 145.95f);
        path.lineTo(366.8f, 146.1f);
        path.quadTo(365.95f, 146.3f, 365.45f, 147.85f);
        path.lineTo(365.2f, 148.8f);
        path.lineTo(363.55f, 146.8f);
        path.quadTo(363.3f, 146.8f, 363.2f, 146.95f);
        path.lineTo(364.65f, 149.35f);
        path.lineTo(365.15f, 149.75f);
        path.lineTo(365.35f, 150.55f);
        path.lineTo(365.6f, 150.15f);
        path.lineTo(365.6f, 150.05f);
        path.quadTo(366.75f, 150.65f, 368.4f, 151.05f);
        path.lineTo(368.4f, 151.35f);
        path.quadTo(368.55f, 152.45f, 369.35f, 153.75f);
        path.lineTo(369.65f, 153.65f);
        path.quadTo(368.95f, 152.55f, 368.8f, 151.1f);
        path.lineTo(372.6f, 151.35f);
        path.quadTo(373.25f, 153.0f, 373.5f, 152.2f);
        path.lineTo(373.1f, 151.35f);
        path.quadTo(374.3f, 151.2f, 375.65f, 150.15f);
        path.lineTo(375.75f, 150.3f);
        path.quadTo(376.05f, 150.25f, 376.15f, 150.0f);
        path.lineTo(376.05f, 149.85f);
        path.lineTo(376.15f, 149.75f);
        path.lineTo(377.9f, 147.85f);
        path.lineTo(377.5f, 147.7f);
        path.lineTo(375.8f, 149.25f);
        path.lineTo(375.4f, 147.35f);
        path.lineTo(374.95f, 147.45f);
        path.quadTo(375.0f, 148.7f, 375.4f, 149.6f);
        path.lineTo(372.95f, 150.45f);
        path.lineTo(372.85f, 149.65f);
        path.lineTo(373.1f, 147.45f);
        path.close();
    }

    private static void draw_254(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_254(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_255(Path path)
    {
        path.reset();
        path.moveTo(421.15f, 107.8f);
        path.quadTo(421.95f, 105.15f, 422.35f, 104.7f);
        path.lineTo(420.5f, 104.45f);
        path.quadTo(420.8f, 103.45f, 420.35f, 103.2f);
        path.lineTo(419.5f, 103.15f);
        path.lineTo(417.7f, 103.4f);
        path.lineTo(417.45f, 101.85f);
        path.quadTo(414.2f, 102.3f, 413.55f, 103.4f);
        path.quadTo(413.95f, 101.6f, 411.9f, 101.6f);
        path.quadTo(410.75f, 101.6f, 409.7f, 102.1f);
        path.quadTo(409.75f, 100.25f, 408.1f, 100.05f);
        path.lineTo(405.3f, 100.05f);
        path.quadTo(405.7f, 99.1f, 405.0f, 98.85f);
        path.lineTo(403.65f, 98.75f);
        path.quadTo(402.5f, 98.75f, 401.45f, 99.3f);
        path.lineTo(401.15f, 97.85f);
        path.lineTo(399.9f, 97.75f);
        path.quadTo(399.05f, 97.75f, 398.35f, 98.25f);
        path.lineTo(398.1f, 97.95f);
        path.lineTo(397.6f, 97.75f);
        path.quadTo(396.05f, 97.75f, 396.05f, 98.9f);
        path.quadTo(396.05f, 99.75f, 397.1f, 101.0f);
        path.lineTo(398.1f, 102.4f);
        path.lineTo(397.8f, 102.3f);
        path.quadTo(397.6f, 102.4f, 397.6f, 102.75f);
        path.quadTo(397.6f, 103.45f, 398.15f, 104.05f);
        path.lineTo(399.65f, 105.2f);
        path.lineTo(398.95f, 105.6f);
        path.lineTo(398.9f, 106.35f);
        path.lineTo(399.15f, 107.25f);
        path.lineTo(399.4f, 108.15f);
        path.lineTo(398.35f, 109.7f);
        path.quadTo(398.35f, 110.15f, 399.05f, 111.0f);
        path.lineTo(400.15f, 112.4f);
        path.lineTo(399.4f, 112.95f);
        path.quadTo(398.9f, 113.4f, 398.9f, 113.7f);
        path.quadTo(398.9f, 114.35f, 399.4f, 115.0f);
        path.lineTo(400.15f, 115.7f);
        path.lineTo(400.15f, 115.65f);
        path.lineTo(400.15f, 115.7f);
        path.quadTo(400.15f, 116.3f, 400.7f, 116.8f);
        path.quadTo(401.05f, 116.75f, 401.7f, 116.2f);
        path.lineTo(402.5f, 115.5f);
        path.lineTo(403.0f, 116.3f);
        path.lineTo(405.05f, 116.3f);
        path.lineTo(405.3f, 114.75f);
        path.quadTo(405.7f, 115.5f, 406.75f, 115.5f);
        path.lineTo(408.1f, 115.0f);
        path.quadTo(408.75f, 114.4f, 408.65f, 113.8f);
        path.quadTo(408.75f, 113.95f, 408.95f, 113.95f);
        path.quadTo(409.5f, 114.75f, 410.2f, 114.75f);
        path.quadTo(411.05f, 114.75f, 411.5f, 113.7f);
        path.lineTo(412.0f, 112.4f);
        path.lineTo(412.55f, 112.75f);
        path.quadTo(413.05f, 113.2f, 413.45f, 113.2f);
        path.quadTo(414.55f, 113.2f, 415.05f, 112.55f);
        path.quadTo(415.75f, 111.85f, 415.35f, 110.35f);
        path.quadTo(416.4f, 110.9f, 417.15f, 110.9f);
        path.quadTo(418.1f, 110.9f, 418.45f, 110.3f);
        path.lineTo(419.0f, 108.8f);
        path.quadTo(420.65f, 109.35f, 421.15f, 107.8f);
        path.close();
    }

    private static void draw_255(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_255(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_256(Path path)
    {
        path.reset();
        path.moveTo(320.65f, 107.75f);
        path.quadTo(319.85f, 105.1f, 319.45f, 104.65f);
        path.lineTo(321.3f, 104.4f);
        path.quadTo(321.0f, 103.4f, 321.45f, 103.15f);
        path.lineTo(322.3f, 103.1f);
        path.lineTo(324.1f, 103.35f);
        path.quadTo(324.1f, 102.35f, 324.35f, 101.8f);
        path.quadTo(327.6f, 102.25f, 328.25f, 103.35f);
        path.quadTo(327.85f, 101.55f, 329.9f, 101.55f);
        path.quadTo(331.05f, 101.55f, 332.1f, 102.05f);
        path.quadTo(332.05f, 100.2f, 333.7f, 100.0f);
        path.lineTo(336.5f, 100.0f);
        path.quadTo(336.1f, 99.05f, 336.8f, 98.8f);
        path.lineTo(338.15f, 98.7f);
        path.quadTo(339.3f, 98.7f, 340.35f, 99.25f);
        path.lineTo(340.65f, 97.8f);
        path.lineTo(341.9f, 97.7f);
        path.quadTo(342.75f, 97.7f, 343.45f, 98.2f);
        path.lineTo(343.7f, 97.9f);
        path.quadTo(343.8f, 97.7f, 344.2f, 97.7f);
        path.quadTo(345.75f, 97.7f, 345.75f, 98.85f);
        path.quadTo(345.75f, 99.7f, 344.7f, 100.95f);
        path.lineTo(343.7f, 102.35f);
        path.lineTo(344.0f, 102.25f);
        path.lineTo(344.2f, 102.7f);
        path.quadTo(344.2f, 103.4f, 343.65f, 104.0f);
        path.lineTo(342.15f, 105.15f);
        path.lineTo(342.85f, 105.55f);
        path.lineTo(342.9f, 106.3f);
        path.lineTo(342.65f, 107.2f);
        path.lineTo(342.4f, 108.1f);
        path.lineTo(343.45f, 109.65f);
        path.lineTo(342.75f, 110.95f);
        path.lineTo(341.65f, 112.35f);
        path.lineTo(342.4f, 112.9f);
        path.lineTo(342.9f, 113.65f);
        path.quadTo(342.9f, 114.3f, 342.4f, 114.95f);
        path.lineTo(341.65f, 115.65f);
        path.lineTo(341.65f, 115.6f);
        path.lineTo(341.65f, 115.65f);
        path.quadTo(341.65f, 116.25f, 341.1f, 116.75f);
        path.lineTo(340.1f, 116.15f);
        path.lineTo(339.3f, 115.45f);
        path.quadTo(338.8f, 116.0f, 338.8f, 116.25f);
        path.lineTo(336.75f, 116.25f);
        path.lineTo(336.5f, 114.7f);
        path.quadTo(336.1f, 115.45f, 335.05f, 115.45f);
        path.quadTo(334.35f, 115.45f, 333.7f, 114.95f);
        path.quadTo(333.05f, 114.35f, 333.15f, 113.75f);
        path.lineTo(332.85f, 113.9f);
        path.quadTo(332.3f, 114.7f, 331.6f, 114.7f);
        path.quadTo(330.75f, 114.7f, 330.3f, 113.65f);
        path.lineTo(329.8f, 112.35f);
        path.lineTo(329.25f, 112.7f);
        path.quadTo(328.75f, 113.15f, 328.35f, 113.15f);
        path.quadTo(327.25f, 113.15f, 326.75f, 112.5f);
        path.quadTo(326.05f, 111.8f, 326.45f, 110.3f);
        path.quadTo(325.4f, 110.85f, 324.65f, 110.85f);
        path.quadTo(323.7f, 110.85f, 323.35f, 110.25f);
        path.lineTo(322.8f, 108.75f);
        path.quadTo(321.15f, 109.3f, 320.65f, 107.75f);
        path.close();
    }

    private static void draw_256(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_256(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_257(Path path)
    {
        path.reset();
        path.moveTo(338.25f, 114.85f);
        path.quadTo(336.35f, 114.85f, 335.2f, 116.15f);
        path.quadTo(334.25f, 117.25f, 334.25f, 118.85f);
        path.quadTo(334.25f, 121.15f, 336.15f, 122.25f);
        path.lineTo(339.7f, 123.8f);
        path.lineTo(342.85f, 123.8f);
        path.lineTo(342.7f, 116.85f);
        path.lineTo(342.7f, 116.15f);
        path.lineTo(341.35f, 115.5f);
        path.quadTo(339.7f, 114.85f, 338.25f, 114.85f);
        path.close();
    }

    private static void draw_257(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_257(path);
        paint.setColor(Color.argb(255, 254, 174, 103));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_258(Path path)
    {
        path.reset();
        path.moveTo(403.75f, 114.85f);
        path.quadTo(405.65f, 114.85f, 406.8f, 116.15f);
        path.quadTo(407.75f, 117.25f, 407.75f, 118.85f);
        path.quadTo(407.75f, 121.15f, 405.85f, 122.25f);
        path.lineTo(402.3f, 123.8f);
        path.lineTo(399.15f, 123.8f);
        path.quadTo(399.15f, 119.5f, 399.3f, 116.85f);
        path.lineTo(399.3f, 116.15f);
        path.lineTo(400.65f, 115.5f);
        path.quadTo(402.3f, 114.85f, 403.75f, 114.85f);
        path.close();
    }

    private static void draw_258(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_258(path);
        paint.setColor(Color.argb(255, 254, 174, 103));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_259(Path path)
    {
        path.reset();
        path.moveTo(483.8f, 182.35f);
        path.quadTo(478.85f, 177.4f, 471.95f, 177.4f);
        path.quadTo(465.0f, 177.4f, 460.15f, 182.35f);
        path.quadTo(455.2f, 187.2f, 455.2f, 194.15f);
        path.quadTo(455.2f, 201.05f, 460.15f, 206.0f);
        path.quadTo(465.0f, 210.85f, 471.95f, 210.85f);
        path.quadTo(478.85f, 210.85f, 483.8f, 206.0f);
        path.quadTo(488.65f, 201.05f, 488.65f, 194.15f);
        path.quadTo(488.65f, 187.2f, 483.8f, 182.35f);
        path.close();
    }

    private static void draw_259(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_259(path);
        Shader shader = create_gradient_12();
        shader.setLocalMatrix(createMatrix(0.0f, 0.020401f, -0.020401f, 0.0f, 471.95f, 194.15f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_260(Path path)
    {
        path.reset();
        path.moveTo(462.05f, 204.05f);
        path.quadTo(457.85f, 199.9f, 457.85f, 194.1f);
        path.quadTo(457.85f, 188.25f, 462.05f, 184.15f);
        path.quadTo(466.15f, 180.0f, 471.95f, 180.0f);
        path.quadTo(477.8f, 180.0f, 481.9f, 184.15f);
        path.quadTo(486.0f, 188.25f, 486.0f, 194.1f);
        path.quadTo(486.0f, 199.9f, 481.9f, 204.05f);
        path.quadTo(477.8f, 208.1f, 471.95f, 208.1f);
        path.quadTo(466.15f, 208.1f, 462.05f, 204.05f);
    }

    private static void draw_260(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_260(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_261(Path path)
    {
        path.reset();
        path.moveTo(480.4f, 188.7f);
        path.lineTo(478.45f, 188.7f);
        path.lineTo(478.25f, 188.3f);
        path.lineTo(477.75f, 187.35f);
        path.lineTo(466.9f, 187.35f);
        path.lineTo(466.3f, 188.7f);
        path.lineTo(463.95f, 188.7f);
        path.lineTo(463.95f, 199.8f);
        path.lineTo(480.4f, 199.8f);
        path.lineTo(480.4f, 188.7f);
        path.close();
    }

    private static void draw_261(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_261(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_262(Path path)
    {
        path.reset();
        path.moveTo(472.35f, 197.8f);
        path.quadTo(474.05f, 197.8f, 475.25f, 196.55f);
        path.quadTo(476.5f, 195.35f, 476.5f, 193.6f);
        path.quadTo(476.5f, 191.9f, 475.25f, 190.65f);
        path.quadTo(474.05f, 189.45f, 472.35f, 189.45f);
        path.quadTo(470.6f, 189.45f, 469.35f, 190.65f);
        path.quadTo(468.15f, 191.9f, 468.15f, 193.6f);
        path.quadTo(468.15f, 195.35f, 469.35f, 196.55f);
        path.quadTo(470.6f, 197.8f, 472.35f, 197.8f);
        path.close();
    }

    private static void draw_262(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_262(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_263(Path path)
    {
        path.reset();
        path.moveTo(145.2f, 198.3f);
        path.lineTo(143.0f, 198.4f);
        path.lineTo(137.75f, 198.1f);
        path.lineTo(137.65f, 198.1f);
        path.quadTo(133.7f, 198.1f, 130.6f, 199.55f);
        path.quadTo(128.8f, 200.35f, 127.2f, 201.65f);
        path.quadTo(123.35f, 204.7f, 123.35f, 208.45f);
        path.quadTo(123.35f, 215.1f, 133.1f, 219.5f);
        path.lineTo(137.2f, 221.55f);
        path.lineTo(140.75f, 223.15f);
        path.lineTo(145.15f, 223.75f);
        path.quadTo(148.8f, 224.9f, 150.85f, 225.1f);
        path.lineTo(154.45f, 225.2f);
        path.lineTo(161.7f, 226.5f);
        path.lineTo(164.8f, 226.15f);
        path.quadTo(167.0f, 225.7f, 167.0f, 224.85f);
        path.lineTo(166.9f, 224.0f);
        path.lineTo(166.4f, 223.4f);
        path.lineTo(166.2f, 223.0f);
        path.lineTo(165.75f, 222.25f);
        path.lineTo(165.75f, 222.2f);
        path.lineTo(165.75f, 222.05f);
        path.quadTo(165.75f, 220.6f, 167.2f, 218.6f);
        path.quadTo(168.65f, 216.5f, 168.65f, 215.2f);
        path.quadTo(168.65f, 209.05f, 161.15f, 203.9f);
        path.quadTo(154.55f, 199.3f, 145.2f, 198.3f);
        path.close();
    }

    private static void draw_263(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_263(path);
        Shader shader = create_gradient_5();
        shader.setLocalMatrix(createMatrix(0.0f, 0.0209198f, -0.0173187f, 0.0f, 145.75f, 205.2f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_264(Path path)
    {
        path.reset();
        path.moveTo(146.55f, 220.35f);
        path.lineTo(147.2f, 220.75f);
        path.lineTo(147.6f, 221.0f);
        path.quadTo(151.5f, 223.55f, 155.55f, 223.55f);
        path.lineTo(157.25f, 223.15f);
        path.quadTo(157.5f, 222.8f, 157.7f, 222.75f);
        path.quadTo(161.0f, 221.55f, 162.2f, 219.55f);
        path.quadTo(162.8f, 218.5f, 163.05f, 217.05f);
        path.lineTo(163.85f, 217.15f);
        path.quadTo(166.55f, 217.15f, 168.8f, 214.5f);
        path.quadTo(169.9f, 213.25f, 171.2f, 210.75f);
        path.lineTo(171.2f, 210.45f);
        path.lineTo(171.2f, 209.6f);
        path.quadTo(170.85f, 201.6f, 165.75f, 191.8f);
        path.lineTo(155.8f, 174.5f);
        path.quadTo(148.3f, 182.8f, 139.95f, 183.35f);
        path.lineTo(139.95f, 198.65f);
        path.quadTo(138.9f, 197.15f, 138.1f, 196.9f);
        path.lineTo(135.5f, 196.75f);
        path.quadTo(132.6f, 196.75f, 131.0f, 199.3f);
        path.quadTo(129.75f, 201.35f, 129.75f, 203.75f);
        path.quadTo(129.75f, 208.3f, 133.5f, 213.9f);
        path.lineTo(138.05f, 220.35f);
        path.lineTo(136.7f, 221.0f);
        path.quadTo(135.4f, 221.35f, 134.85f, 221.6f);
        path.quadTo(135.5f, 222.9f, 136.85f, 223.3f);
        path.lineTo(139.3f, 223.55f);
        path.quadTo(142.95f, 223.55f, 144.9f, 222.15f);
        path.lineTo(146.25f, 220.8f);
        path.quadTo(142.25f, 216.9f, 140.8f, 215.1f);
        path.quadTo(139.3f, 213.25f, 138.25f, 211.25f);
        path.lineTo(138.35f, 211.15f);
        path.quadTo(139.45f, 212.95f, 141.55f, 215.15f);
        path.quadTo(144.35f, 218.2f, 146.65f, 220.25f);
        path.lineTo(146.55f, 220.35f);
        path.close();
        path.moveTo(163.05f, 217.05f);
        path.lineTo(162.9f, 217.05f);
        path.lineTo(163.05f, 217.05f);
        path.close();
    }

    private static void draw_264(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_264(path);
        paint.setColor(Color.argb(255, 254, 174, 103));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_265(Path path)
    {
        path.reset();
        path.moveTo(146.25f, 220.8f);
        path.lineTo(146.55f, 220.35f);
        path.lineTo(146.65f, 220.25f);
        path.quadTo(144.35f, 218.2f, 141.55f, 215.15f);
        path.quadTo(139.45f, 212.95f, 138.35f, 211.15f);
        path.lineTo(138.25f, 211.25f);
        path.quadTo(139.3f, 213.25f, 140.8f, 215.1f);
        path.quadTo(142.25f, 216.9f, 146.25f, 220.8f);
        path.close();
    }

    private static void draw_265(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_265(path);
        paint.setColor(Color.argb(255, 255, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_266(Path path)
    {
        path.reset();
        path.moveTo(162.35f, 210.75f);
        path.quadTo(161.8f, 210.85f, 161.8f, 211.65f);
        path.lineTo(161.85f, 212.05f);
        path.lineTo(162.0f, 212.05f);
        path.quadTo(162.5f, 211.8f, 162.5f, 211.1f);
        path.lineTo(162.35f, 210.75f);
        path.close();
        path.moveTo(159.05f, 212.35f);
        path.lineTo(159.05f, 212.75f);
        path.lineTo(159.8f, 213.25f);
        path.lineTo(160.4f, 213.0f);
        path.lineTo(159.25f, 212.35f);
        path.lineTo(159.05f, 212.35f);
        path.close();
    }

    private static void draw_266(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_266(path);
        paint.setColor(Color.argb(255, 255, 102, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_267(Path path)
    {
        path.reset();
        path.moveTo(128.0f, 149.65f);
        path.quadTo(123.55f, 154.45f, 123.55f, 162.4f);
        path.quadTo(125.1f, 170.7f, 128.85f, 176.85f);
        path.lineTo(130.05f, 177.85f);
        path.lineTo(129.75f, 178.2f);
        path.quadTo(135.9f, 187.25f, 145.5f, 187.25f);
        path.quadTo(150.55f, 187.25f, 154.75f, 184.1f);
        path.quadTo(159.85f, 180.25f, 159.85f, 173.9f);
        path.quadTo(159.85f, 166.15f, 155.4f, 157.3f);
        path.quadTo(149.25f, 145.2f, 138.5f, 145.2f);
        path.quadTo(132.2f, 145.2f, 128.0f, 149.65f);
        path.close();
    }

    private static void draw_267(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_267(path);
        paint.setColor(Color.argb(255, 254, 174, 103));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_268(Path path)
    {
        path.reset();
        path.moveTo(135.7f, 140.15f);
        path.quadTo(134.75f, 139.05f, 133.5f, 139.05f);
        path.quadTo(131.65f, 139.05f, 130.8f, 140.5f);
        path.lineTo(129.6f, 141.9f);
        path.lineTo(126.0f, 142.25f);
        path.quadTo(124.5f, 143.05f, 123.85f, 146.7f);
        path.lineTo(122.4f, 146.4f);
        path.quadTo(120.25f, 146.4f, 118.45f, 147.8f);
        path.quadTo(116.5f, 149.35f, 116.5f, 151.0f);
        path.quadTo(116.5f, 153.25f, 117.65f, 154.6f);
        path.lineTo(119.2f, 156.25f);
        path.quadTo(119.0f, 156.5f, 117.95f, 156.75f);
        path.quadTo(117.0f, 157.2f, 117.0f, 158.25f);
        path.quadTo(117.0f, 160.25f, 119.55f, 162.55f);
        path.quadTo(121.85f, 164.65f, 123.05f, 164.4f);
        path.lineTo(123.05f, 164.55f);
        path.quadTo(122.9f, 164.55f, 122.55f, 164.85f);
        path.quadTo(122.25f, 165.1f, 122.25f, 165.35f);
        path.quadTo(122.25f, 165.9f, 123.35f, 167.25f);
        path.quadTo(124.7f, 168.85f, 126.15f, 168.85f);
        path.quadTo(127.35f, 168.85f, 128.55f, 168.2f);
        path.quadTo(130.45f, 167.2f, 131.0f, 166.95f);
        path.lineTo(131.0f, 167.1f);
        path.quadTo(130.55f, 167.75f, 130.55f, 169.4f);
        path.quadTo(130.55f, 170.55f, 131.2f, 171.4f);
        path.quadTo(132.05f, 172.5f, 133.9f, 172.5f);
        path.quadTo(135.25f, 172.5f, 137.0f, 171.4f);
        path.lineTo(139.6f, 169.5f);
        path.lineTo(140.9f, 169.5f);
        path.quadTo(140.4f, 171.75f, 141.3f, 174.2f);
        path.quadTo(142.4f, 177.6f, 145.85f, 177.6f);
        path.lineTo(147.45f, 177.55f);
        path.lineTo(148.0f, 178.35f);
        path.quadTo(149.25f, 179.7f, 151.35f, 179.7f);
        path.quadTo(154.7f, 179.7f, 153.95f, 176.2f);
        path.quadTo(154.85f, 177.8f, 156.7f, 177.8f);
        path.quadTo(159.05f, 177.8f, 159.05f, 175.65f);
        path.lineTo(158.65f, 173.9f);
        path.lineTo(158.35f, 173.0f);
        path.lineTo(159.0f, 173.65f);
        path.quadTo(159.85f, 174.3f, 160.9f, 174.3f);
        path.quadTo(162.35f, 174.3f, 163.35f, 173.3f);
        path.quadTo(164.35f, 172.45f, 164.35f, 171.15f);
        path.quadTo(164.35f, 170.35f, 163.95f, 169.2f);
        path.quadTo(163.45f, 167.65f, 162.75f, 167.25f);
        path.quadTo(164.9f, 167.05f, 165.75f, 166.4f);
        path.quadTo(166.9f, 165.65f, 166.9f, 164.15f);
        path.quadTo(166.9f, 162.3f, 165.15f, 160.9f);
        path.lineTo(163.05f, 159.3f);
        path.lineTo(164.4f, 158.1f);
        path.quadTo(164.8f, 157.55f, 164.8f, 156.35f);
        path.quadTo(164.8f, 154.05f, 162.9f, 152.6f);
        path.quadTo(161.15f, 151.25f, 159.85f, 151.65f);
        path.quadTo(160.2f, 151.0f, 160.2f, 150.15f);
        path.quadTo(160.2f, 148.7f, 158.45f, 146.85f);
        path.quadTo(156.6f, 144.95f, 154.75f, 144.95f);
        path.lineTo(152.85f, 145.25f);
        path.quadTo(153.15f, 143.05f, 152.45f, 141.7f);
        path.quadTo(151.5f, 140.0f, 149.1f, 140.0f);
        path.quadTo(148.25f, 140.0f, 146.7f, 140.55f);
        path.lineTo(145.35f, 141.15f);
        path.lineTo(144.35f, 139.95f);
        path.quadTo(143.35f, 138.75f, 141.8f, 138.75f);
        path.quadTo(139.7f, 138.75f, 138.35f, 140.0f);
        path.lineTo(136.7f, 141.3f);
        path.lineTo(135.7f, 140.15f);
        path.close();
        path.moveTo(158.1f, 172.5f);
        path.lineTo(158.2f, 172.7f);
        path.lineTo(157.95f, 172.35f);
        path.lineTo(158.1f, 172.5f);
        path.close();
    }

    private static void draw_268(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_268(path);
        paint.setColor(Color.argb(255, 255, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_269(Path path)
    {
        path.reset();
        path.moveTo(129.35f, 169.2f);
        path.quadTo(128.45f, 169.0f, 128.45f, 171.35f);
        path.quadTo(128.45f, 173.5f, 129.35f, 173.8f);
        path.quadTo(130.2f, 172.15f, 130.2f, 171.0f);
        path.quadTo(130.2f, 169.35f, 129.35f, 169.2f);
        path.close();
        path.moveTo(132.95f, 176.35f);
        path.quadTo(132.45f, 174.05f, 131.1f, 174.05f);
        path.quadTo(130.6f, 174.05f, 130.55f, 174.2f);
        path.lineTo(130.45f, 174.75f);
        path.lineTo(130.85f, 175.95f);
        path.quadTo(131.4f, 177.15f, 132.2f, 177.15f);
        path.quadTo(132.95f, 177.15f, 132.95f, 176.35f);
        path.close();
    }

    private static void draw_269(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_269(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_270(Path path)
    {
        path.reset();
        path.moveTo(131.0f, 183.2f);
        path.quadTo(132.75f, 183.2f, 132.75f, 181.55f);
        path.quadTo(132.75f, 180.8f, 131.4f, 178.75f);
        path.quadTo(129.9f, 176.35f, 128.8f, 176.45f);
        path.lineTo(128.7f, 178.0f);
        path.lineTo(128.95f, 180.75f);
        path.quadTo(129.5f, 183.2f, 131.0f, 183.2f);
        path.close();
    }

    private static void draw_270(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_270(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_271(Path path)
    {
        path.reset();
        path.moveTo(149.1f, 188.05f);
        path.lineTo(148.7f, 189.65f);
        path.quadTo(148.4f, 190.6f, 148.4f, 191.15f);
        path.lineTo(148.4f, 191.9f);
        path.quadTo(148.55f, 192.6f, 149.35f, 192.6f);
        path.quadTo(150.15f, 192.6f, 150.2f, 192.05f);
        path.lineTo(150.2f, 191.15f);
        path.quadTo(150.2f, 190.3f, 149.9f, 189.9f);
        path.lineTo(149.85f, 190.05f);
        path.lineTo(149.85f, 191.15f);
        path.quadTo(149.9f, 191.8f, 149.1f, 192.2f);
        path.lineTo(148.7f, 190.7f);
        path.lineTo(149.35f, 188.45f);
        path.lineTo(149.25f, 188.05f);
        path.lineTo(149.1f, 188.05f);
        path.close();
        path.moveTo(157.25f, 186.05f);
        path.lineTo(157.1f, 186.05f);
        path.lineTo(157.0f, 186.85f);
        path.lineTo(157.3f, 187.45f);
        path.quadTo(157.65f, 188.0f, 158.1f, 188.15f);
        path.lineTo(158.25f, 186.7f);
        path.lineTo(158.2f, 186.4f);
        path.lineTo(158.05f, 186.4f);
        path.lineTo(157.7f, 187.65f);
        path.lineTo(157.65f, 187.6f);
        path.lineTo(157.25f, 186.05f);
        path.close();
        path.moveTo(152.6f, 195.45f);
        path.lineTo(152.6f, 194.75f);
        path.lineTo(152.4f, 193.8f);
        path.lineTo(152.2f, 195.25f);
        path.lineTo(152.05f, 195.25f);
        path.lineTo(151.75f, 194.3f);
        path.lineTo(151.8f, 193.5f);
        path.quadTo(151.4f, 193.7f, 151.4f, 194.3f);
        path.lineTo(151.6f, 195.45f);
        path.lineTo(152.05f, 195.65f);
        path.lineTo(152.6f, 195.45f);
        path.close();
        path.moveTo(141.3f, 178.6f);
        path.lineTo(141.15f, 178.6f);
        path.lineTo(141.3f, 182.4f);
        path.lineTo(141.8f, 182.4f);
        path.quadTo(142.25f, 182.15f, 142.25f, 180.9f);
        path.quadTo(142.25f, 179.6f, 141.85f, 179.3f);
        path.lineTo(141.85f, 180.75f);
        path.lineTo(141.55f, 182.0f);
        path.lineTo(141.3f, 178.6f);
        path.close();
        path.moveTo(144.1f, 181.45f);
        path.lineTo(144.35f, 181.95f);
        path.lineTo(145.05f, 181.75f);
        path.lineTo(145.05f, 180.55f);
        path.lineTo(144.95f, 180.4f);
        path.lineTo(144.8f, 180.5f);
        path.lineTo(144.75f, 181.55f);
        path.lineTo(144.55f, 181.55f);
        path.quadTo(144.35f, 181.05f, 144.5f, 180.5f);
        path.quadTo(144.1f, 180.65f, 144.1f, 181.45f);
        path.close();
        path.moveTo(137.55f, 175.4f);
        path.lineTo(137.3f, 173.5f);
        path.lineTo(137.15f, 173.5f);
        path.quadTo(137.3f, 174.05f, 137.05f, 175.95f);
        path.quadTo(137.0f, 177.6f, 138.1f, 177.6f);
        path.lineTo(138.75f, 177.3f);
        path.lineTo(138.75f, 176.65f);
        path.lineTo(138.65f, 175.55f);
        path.lineTo(138.45f, 175.55f);
        path.quadTo(138.25f, 175.8f, 138.35f, 176.45f);
        path.lineTo(138.05f, 177.3f);
        path.quadTo(137.45f, 176.75f, 137.55f, 175.4f);
        path.close();
        path.moveTo(135.55f, 174.3f);
        path.lineTo(135.4f, 174.3f);
        path.lineTo(135.15f, 175.25f);
        path.lineTo(134.85f, 175.25f);
        path.lineTo(134.75f, 173.9f);
        path.lineTo(134.6f, 173.9f);
        path.lineTo(134.6f, 175.45f);
        path.lineTo(135.15f, 175.55f);
        path.lineTo(135.5f, 175.3f);
        path.lineTo(135.55f, 174.3f);
        path.close();
        path.moveTo(134.9f, 200.65f);
        path.lineTo(134.6f, 200.65f);
        path.lineTo(134.5f, 203.3f);
        path.quadTo(134.7f, 203.9f, 135.25f, 203.9f);
        path.quadTo(135.65f, 203.9f, 135.9f, 202.9f);
        path.lineTo(135.65f, 201.75f);
        path.lineTo(135.5f, 202.0f);
        path.lineTo(135.25f, 203.5f);
        path.quadTo(134.75f, 202.9f, 134.75f, 202.1f);
        path.lineTo(134.9f, 200.65f);
        path.close();
        path.moveTo(140.35f, 208.85f);
        path.lineTo(140.1f, 208.85f);
        path.lineTo(140.0f, 209.65f);
        path.lineTo(139.95f, 209.6f);
        path.lineTo(139.7f, 209.1f);
        path.lineTo(139.6f, 209.9f);
        path.quadTo(139.6f, 210.45f, 139.95f, 210.45f);
        path.lineTo(140.25f, 210.4f);
        path.lineTo(140.5f, 209.65f);
        path.lineTo(140.35f, 208.85f);
        path.close();
        path.moveTo(145.6f, 214.05f);
        path.lineTo(145.45f, 214.05f);
        path.lineTo(145.35f, 214.85f);
        path.lineTo(145.5f, 215.9f);
        path.quadTo(145.75f, 216.85f, 146.25f, 216.85f);
        path.lineTo(146.65f, 216.75f);
        path.lineTo(146.65f, 214.45f);
        path.lineTo(146.5f, 214.35f);
        path.lineTo(146.3f, 216.45f);
        path.quadTo(145.9f, 216.05f, 145.75f, 215.15f);
        path.lineTo(145.6f, 214.05f);
        path.close();
    }

    private static void draw_271(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_271(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_272(Path path)
    {
        path.reset();
        path.moveTo(164.1f, 220.4f);
        path.lineTo(164.1f, 221.0f);
        path.lineTo(164.4f, 221.45f);
        path.lineTo(164.55f, 221.5f);
        path.lineTo(164.45f, 221.5f);
        path.lineTo(164.4f, 221.45f);
        path.quadTo(164.0f, 221.35f, 163.55f, 221.7f);
        path.quadTo(163.0f, 222.1f, 163.0f, 222.7f);
        path.lineTo(163.2f, 223.35f);
        path.quadTo(162.3f, 223.4f, 161.7f, 224.0f);
        path.quadTo(161.1f, 224.6f, 161.1f, 225.3f);
        path.quadTo(161.1f, 226.3f, 162.9f, 226.8f);
        path.lineTo(165.6f, 227.2f);
        path.quadTo(167.45f, 227.2f, 168.8f, 226.45f);
        path.quadTo(170.2f, 225.7f, 170.2f, 224.75f);
        path.quadTo(170.2f, 224.3f, 169.8f, 223.95f);
        path.quadTo(169.4f, 223.55f, 168.75f, 223.45f);
        path.lineTo(168.65f, 223.35f);
        path.quadTo(169.0f, 223.2f, 169.0f, 222.5f);
        path.quadTo(169.0f, 221.8f, 168.6f, 221.6f);
        path.lineTo(167.6f, 221.4f);
        path.quadTo(167.85f, 220.3f, 166.3f, 220.05f);
        path.quadTo(164.75f, 219.7f, 164.75f, 218.75f);
        path.quadTo(164.45f, 218.8f, 164.25f, 219.45f);
        path.quadTo(164.1f, 219.95f, 164.1f, 220.4f);
        path.close();
    }

    private static void draw_272(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_272(path);
        paint.setColor(Color.argb(255, 102, 51, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_273(Path path)
    {
        path.reset();
        path.moveTo(542.55f, 245.05f);
        path.lineTo(542.55f, 246.25f);
        path.quadTo(543.6f, 248.0f, 545.7f, 260.85f);
        path.lineTo(545.7f, 280.6f);
        path.lineTo(535.7f, 273.5f);
        path.quadTo(527.6f, 267.85f, 520.7f, 267.1f);
        path.lineTo(508.2f, 267.1f);
        path.quadTo(507.9f, 268.95f, 509.2f, 271.95f);
        path.quadTo(510.45f, 275.05f, 513.3f, 279.25f);
        path.quadTo(522.9f, 293.45f, 523.8f, 295.2f);
        path.quadTo(527.8f, 302.4f, 529.95f, 308.65f);
        path.quadTo(532.15f, 314.9f, 532.15f, 319.1f);
        path.quadTo(530.2f, 319.1f, 521.25f, 315.2f);
        path.lineTo(521.15f, 315.15f);
        path.quadTo(510.3f, 310.4f, 508.2f, 309.75f);
        path.lineTo(496.75f, 309.75f);
        path.lineTo(502.65f, 321.55f);
        path.quadTo(506.35f, 329.1f, 507.15f, 331.6f);
        path.quadTo(494.15f, 330.0f, 481.15f, 331.6f);
        path.quadTo(485.7f, 338.25f, 491.85f, 350.15f);
        path.quadTo(497.35f, 360.8f, 500.55f, 365.0f);
        path.quadTo(505.8f, 371.75f, 513.15f, 374.85f);
        path.quadTo(521.6f, 378.45f, 535.25f, 378.45f);
        path.quadTo(562.25f, 378.45f, 575.95f, 356.65f);
        path.quadTo(587.4f, 338.4f, 587.4f, 309.75f);
        path.quadTo(587.4f, 295.9f, 584.45f, 280.55f);
        path.quadTo(548.95f, 243.95f, 544.65f, 241.05f);
        path.lineTo(542.55f, 241.05f);
        path.lineTo(542.55f, 245.05f);
        path.close();
    }

    private static void draw_273(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_273(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_274(Path path)
    {
        path.reset();
        path.moveTo(522.3f, 232.85f);
        path.quadTo(523.3f, 233.05f, 524.15f, 233.9f);
        path.lineTo(525.15f, 234.95f);
        path.lineTo(528.2f, 237.7f);
        path.quadTo(531.5f, 241.05f, 533.4f, 245.25f);
        path.quadTo(535.05f, 248.9f, 533.8f, 252.85f);
        path.quadTo(528.65f, 255.0f, 525.95f, 250.55f);
        path.quadTo(523.3f, 246.25f, 519.65f, 242.5f);
        path.quadTo(515.9f, 238.6f, 511.7f, 235.35f);
        path.quadTo(507.25f, 231.85f, 504.3f, 227.35f);
        path.quadTo(502.4f, 224.35f, 505.2f, 223.45f);
        path.quadTo(509.65f, 225.0f, 513.65f, 227.45f);
        path.lineTo(521.5f, 232.35f);
        path.lineTo(522.3f, 232.85f);
        path.close();
        path.moveTo(542.55f, 245.05f);
        path.quadTo(536.0f, 237.6f, 526.3f, 230.2f);
        path.quadTo(506.4f, 215.05f, 492.6f, 215.05f);
        path.quadTo(488.45f, 215.05f, 487.4f, 216.15f);
        path.quadTo(486.35f, 217.2f, 486.35f, 221.3f);
        path.lineTo(492.05f, 232.6f);
        path.quadTo(498.95f, 246.65f, 504.55f, 260.45f);
        path.lineTo(507.4f, 267.6f);
        path.lineTo(508.2f, 267.1f);
        path.lineTo(520.7f, 267.1f);
        path.quadTo(527.6f, 267.85f, 535.7f, 273.5f);
        path.lineTo(545.7f, 280.6f);
        path.lineTo(545.7f, 260.85f);
        path.quadTo(543.6f, 248.0f, 542.55f, 246.25f);
        path.lineTo(542.55f, 245.05f);
        path.close();
        path.moveTo(509.2f, 271.95f);
        path.lineTo(509.1f, 272.0f);
        path.quadTo(518.05f, 296.15f, 521.15f, 315.15f);
        path.lineTo(521.25f, 315.2f);
        path.quadTo(530.2f, 319.1f, 532.15f, 319.1f);
        path.quadTo(532.15f, 314.9f, 529.95f, 308.65f);
        path.quadTo(527.8f, 302.4f, 523.8f, 295.2f);
        path.quadTo(522.9f, 293.45f, 513.3f, 279.25f);
        path.quadTo(510.45f, 275.05f, 509.2f, 271.95f);
        path.close();
    }

    private static void draw_274(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_274(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_275(Path path)
    {
        path.reset();
        path.moveTo(522.3f, 232.85f);
        path.lineTo(521.5f, 232.35f);
        path.lineTo(513.65f, 227.45f);
        path.quadTo(509.65f, 225.0f, 505.2f, 223.45f);
        path.quadTo(502.4f, 224.35f, 504.3f, 227.35f);
        path.quadTo(507.25f, 231.85f, 511.7f, 235.35f);
        path.quadTo(515.9f, 238.6f, 519.65f, 242.5f);
        path.quadTo(523.3f, 246.25f, 525.95f, 250.55f);
        path.quadTo(528.65f, 255.0f, 533.8f, 252.85f);
        path.quadTo(535.05f, 248.9f, 533.4f, 245.25f);
        path.quadTo(531.5f, 241.05f, 528.2f, 237.7f);
        path.lineTo(525.15f, 234.95f);
        path.lineTo(524.15f, 233.9f);
        path.quadTo(523.3f, 233.05f, 522.3f, 232.85f);
        path.close();
    }

    private static void draw_275(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_275(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_276(Path path)
    {
        path.reset();
        path.moveTo(66.85f, 251.0f);
        path.lineTo(66.85f, 252.2f);
        path.quadTo(65.8f, 253.95f, 63.7f, 266.8f);
        path.lineTo(63.7f, 286.55f);
        path.quadTo(69.5f, 282.35f, 73.7f, 279.45f);
        path.quadTo(81.8f, 273.8f, 88.7f, 273.05f);
        path.lineTo(101.2f, 273.05f);
        path.quadTo(101.5f, 274.9f, 100.2f, 277.9f);
        path.quadTo(98.95f, 281.0f, 96.1f, 285.2f);
        path.quadTo(86.5f, 299.4f, 85.6f, 301.15f);
        path.quadTo(81.6f, 308.35f, 79.45f, 314.6f);
        path.quadTo(77.25f, 320.85f, 77.25f, 325.05f);
        path.quadTo(79.2f, 325.05f, 88.15f, 321.15f);
        path.lineTo(88.25f, 321.1f);
        path.quadTo(99.1f, 316.35f, 101.2f, 315.7f);
        path.lineTo(112.65f, 315.7f);
        path.lineTo(106.75f, 327.5f);
        path.quadTo(103.05f, 335.05f, 102.25f, 337.55f);
        path.quadTo(115.25f, 335.95f, 128.25f, 337.55f);
        path.quadTo(123.7f, 344.2f, 117.55f, 356.1f);
        path.quadTo(112.05f, 366.75f, 108.85f, 370.95f);
        path.quadTo(103.6f, 377.7f, 96.25f, 380.8f);
        path.quadTo(87.8f, 384.4f, 74.15f, 384.4f);
        path.quadTo(47.15f, 384.4f, 33.45f, 362.6f);
        path.quadTo(22.0f, 344.35f, 22.0f, 315.7f);
        path.quadTo(22.0f, 301.85f, 24.95f, 286.5f);
        path.quadTo(60.45f, 249.9f, 64.75f, 247.0f);
        path.lineTo(66.85f, 247.0f);
        path.lineTo(66.85f, 251.0f);
        path.close();
    }

    private static void draw_276(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_276(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_277(Path path)
    {
        path.reset();
        path.moveTo(87.1f, 238.8f);
        path.quadTo(86.1f, 239.0f, 85.25f, 239.85f);
        path.lineTo(84.25f, 240.9f);
        path.quadTo(82.7f, 242.15f, 81.2f, 243.65f);
        path.quadTo(77.9f, 247.0f, 76.0f, 251.2f);
        path.quadTo(74.35f, 254.85f, 75.6f, 258.8f);
        path.quadTo(80.75f, 260.95f, 83.45f, 256.5f);
        path.quadTo(86.1f, 252.2f, 89.75f, 248.45f);
        path.quadTo(93.5f, 244.55f, 97.7f, 241.3f);
        path.quadTo(102.15f, 237.8f, 105.1f, 233.3f);
        path.quadTo(107.0f, 230.3f, 104.2f, 229.4f);
        path.quadTo(99.75f, 230.95f, 95.75f, 233.4f);
        path.lineTo(87.9f, 238.3f);
        path.lineTo(87.1f, 238.8f);
        path.close();
        path.moveTo(66.85f, 251.0f);
        path.quadTo(73.4f, 243.55f, 83.1f, 236.15f);
        path.quadTo(103.0f, 221.0f, 116.8f, 221.0f);
        path.quadTo(120.95f, 221.0f, 122.0f, 222.1f);
        path.quadTo(123.05f, 223.15f, 123.05f, 227.25f);
        path.lineTo(117.35f, 238.55f);
        path.quadTo(110.45f, 252.6f, 104.85f, 266.4f);
        path.quadTo(103.35f, 270.0f, 102.0f, 273.55f);
        path.lineTo(101.2f, 273.05f);
        path.lineTo(88.7f, 273.05f);
        path.quadTo(81.8f, 273.8f, 73.7f, 279.45f);
        path.quadTo(69.5f, 282.35f, 63.7f, 286.55f);
        path.lineTo(63.7f, 266.8f);
        path.quadTo(65.8f, 253.95f, 66.85f, 252.2f);
        path.lineTo(66.85f, 251.0f);
        path.close();
        path.moveTo(100.2f, 277.9f);
        path.lineTo(100.3f, 277.95f);
        path.quadTo(91.35f, 302.1f, 88.25f, 321.1f);
        path.lineTo(88.15f, 321.15f);
        path.quadTo(79.2f, 325.05f, 77.25f, 325.05f);
        path.quadTo(77.25f, 320.85f, 79.45f, 314.6f);
        path.quadTo(81.6f, 308.35f, 85.6f, 301.15f);
        path.quadTo(86.5f, 299.4f, 96.1f, 285.2f);
        path.quadTo(98.95f, 281.0f, 100.2f, 277.9f);
        path.close();
    }

    private static void draw_277(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_277(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_278(Path path)
    {
        path.reset();
        path.moveTo(87.1f, 238.8f);
        path.lineTo(87.9f, 238.3f);
        path.lineTo(95.75f, 233.4f);
        path.quadTo(99.75f, 230.95f, 104.2f, 229.4f);
        path.quadTo(107.0f, 230.3f, 105.1f, 233.3f);
        path.quadTo(102.15f, 237.8f, 97.7f, 241.3f);
        path.quadTo(93.5f, 244.55f, 89.75f, 248.45f);
        path.quadTo(86.1f, 252.2f, 83.45f, 256.5f);
        path.quadTo(80.75f, 260.95f, 75.6f, 258.8f);
        path.quadTo(74.35f, 254.85f, 76.0f, 251.2f);
        path.quadTo(77.9f, 247.0f, 81.2f, 243.65f);
        path.quadTo(82.7f, 242.15f, 84.25f, 240.9f);
        path.lineTo(85.25f, 239.85f);
        path.quadTo(86.1f, 239.0f, 87.1f, 238.8f);
        path.close();
    }

    private static void draw_278(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_278(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_279(Path path)
    {
        path.reset();
        path.moveTo(791.65f, 240.7f);
        path.lineTo(749.5f, 313.65f);
        path.quadTo(746.85f, 318.3f, 748.25f, 323.4f);
        path.quadTo(749.65f, 328.5f, 754.2f, 331.15f);
        path.lineTo(827.2f, 373.25f);
        path.quadTo(831.8f, 375.95f, 836.9f, 374.6f);
        path.quadTo(842.1f, 373.25f, 844.75f, 368.6f);
        path.lineTo(886.9f, 295.65f);
        path.quadTo(889.55f, 291.0f, 888.15f, 285.85f);
        path.quadTo(886.8f, 280.75f, 882.2f, 278.05f);
        path.lineTo(809.2f, 235.95f);
        path.quadTo(804.65f, 233.3f, 799.5f, 234.65f);
        path.quadTo(794.3f, 236.05f, 791.65f, 240.7f);
        path.close();
    }

    private static void draw_279(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_279(path);
        paint.setColor(Color.argb(255, 91, 192, 112));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(12.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void draw_280(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_279(path);
        paint.setColor(Color.argb(255, 91, 192, 112));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_280(Path path)
    {
        path.reset();
        path.moveTo(856.75f, 277.4f);
        path.lineTo(856.4f, 280.85f);
        path.lineTo(855.35f, 291.0f);
        path.lineTo(851.55f, 297.55f);
        path.lineTo(847.95f, 295.5f);
        path.quadTo(847.15f, 294.5f, 845.95f, 290.0f);
        path.lineTo(844.35f, 283.9f);
        path.quadTo(841.35f, 288.1f, 839.95f, 288.95f);
        path.quadTo(838.4f, 289.95f, 836.05f, 288.65f);
        path.quadTo(834.65f, 287.8f, 833.35f, 285.2f);
        path.lineTo(831.55f, 281.25f);
        path.quadTo(829.05f, 282.75f, 826.35f, 284.4f);
        path.quadTo(824.3f, 285.0f, 820.7f, 282.9f);
        path.quadTo(818.35f, 281.55f, 817.8f, 280.55f);
        path.lineTo(816.2f, 276.35f);
        path.quadTo(814.95f, 276.75f, 813.05f, 277.7f);
        path.quadTo(811.4f, 278.3f, 809.65f, 277.3f);
        path.quadTo(807.15f, 275.85f, 806.75f, 273.85f);
        path.quadTo(806.4f, 271.7f, 807.75f, 267.5f);
        path.lineTo(801.1f, 272.65f);
        path.quadTo(794.9f, 276.75f, 793.1f, 275.7f);
        path.quadTo(790.15f, 274.0f, 794.4f, 264.0f);
        path.quadTo(796.35f, 259.55f, 798.2f, 256.25f);
        path.quadTo(788.5f, 253.65f, 784.25f, 261.0f);
        path.quadTo(780.6f, 267.3f, 780.6f, 275.85f);
        path.quadTo(781.55f, 285.15f, 783.6f, 292.05f);
        path.lineTo(784.1f, 293.6f);
        path.lineTo(784.55f, 295.15f);
        path.quadTo(786.65f, 297.35f, 788.1f, 300.15f);
        path.lineTo(790.4f, 298.75f);
        path.quadTo(791.05f, 298.3f, 791.7f, 298.0f);
        path.quadTo(797.45f, 294.85f, 802.3f, 297.65f);
        path.quadTo(805.4f, 299.45f, 805.95f, 300.85f);
        path.lineTo(807.95f, 305.7f);
        path.quadTo(810.45f, 304.7f, 811.85f, 305.05f);
        path.quadTo(812.55f, 305.2f, 815.6f, 306.95f);
        path.quadTo(826.85f, 313.45f, 826.1f, 329.6f);
        path.quadTo(825.85f, 335.55f, 824.0f, 344.45f);
        path.lineTo(820.95f, 357.45f);
        path.lineTo(825.5f, 356.4f);
        path.quadTo(832.3f, 354.1f, 839.1f, 346.55f);
        path.quadTo(845.9f, 339.1f, 854.05f, 324.95f);
        path.quadTo(864.15f, 307.5f, 866.3f, 298.55f);
        path.quadTo(869.7f, 284.7f, 859.6f, 278.9f);
        path.lineTo(856.75f, 277.4f);
        path.close();
        path.moveTo(786.6f, 301.35f);
        path.lineTo(786.7f, 301.6f);
        path.lineTo(786.95f, 301.55f);
        path.lineTo(786.6f, 301.35f);
        path.close();
        path.moveTo(799.45f, 317.15f);
        path.lineTo(797.45f, 316.85f);
        path.lineTo(795.9f, 316.2f);
        path.lineTo(795.6f, 316.05f);
        path.lineTo(794.15f, 314.8f);
        path.lineTo(788.5f, 310.2f);
        path.quadTo(789.15f, 315.15f, 788.15f, 321.1f);
        path.lineTo(786.1f, 331.7f);
        path.quadTo(785.65f, 334.65f, 785.8f, 337.0f);
        path.quadTo(786.0f, 339.15f, 786.6f, 340.85f);
        path.quadTo(787.95f, 344.4f, 791.9f, 347.3f);
        path.quadTo(794.3f, 342.05f, 796.35f, 334.8f);
        path.quadTo(799.2f, 324.95f, 799.45f, 317.15f);
        path.close();
    }

    private static Shader create_gradient_15()
    {
        int colors[] = {
            Color.argb(255, 153, 0, 0),
            Color.argb(255, 102, 0, 0)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_281(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_280(path);
        Shader shader = create_gradient_15();
        shader.setLocalMatrix(createMatrix(-0.0282135f, 0.0488586f, -0.0492554f, -0.0284424f, 812.05f, 305.2f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_281(Path path)
    {
        path.reset();
        path.moveTo(788.1f, 300.15f);
        path.quadTo(786.65f, 297.35f, 784.55f, 295.15f);
        path.quadTo(782.5f, 292.9f, 779.9f, 291.2f);
        path.lineTo(778.1f, 290.05f);
        path.lineTo(776.85f, 289.45f);
        path.lineTo(769.8f, 289.25f);
        path.quadTo(766.6f, 290.7f, 764.1f, 295.05f);
        path.quadTo(762.1f, 298.5f, 762.15f, 299.85f);
        path.quadTo(762.0f, 301.4f, 764.1f, 302.6f);
        path.quadTo(765.4f, 303.35f, 767.9f, 302.6f);
        path.lineTo(773.15f, 300.7f);
        path.lineTo(776.55f, 299.8f);
        path.quadTo(781.9f, 298.9f, 786.25f, 301.2f);
        path.lineTo(786.5f, 301.1f);
        path.lineTo(786.6f, 301.35f);
        path.lineTo(786.95f, 301.55f);
        path.lineTo(789.6f, 303.35f);
        path.lineTo(788.1f, 300.15f);
        path.close();
    }

    private static void draw_282(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_281(path);
        paint.setColor(Color.argb(255, 255, 51, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_282(Path path)
    {
        path.reset();
        path.moveTo(820.95f, 357.45f);
        path.lineTo(824.0f, 344.45f);
        path.quadTo(825.85f, 335.55f, 826.1f, 329.6f);
        path.quadTo(826.85f, 313.45f, 815.6f, 306.95f);
        path.quadTo(812.55f, 305.2f, 811.85f, 305.05f);
        path.quadTo(810.45f, 304.7f, 807.95f, 305.7f);
        path.lineTo(805.95f, 300.85f);
        path.quadTo(805.4f, 299.45f, 802.3f, 297.65f);
        path.quadTo(797.45f, 294.85f, 791.7f, 298.0f);
        path.quadTo(791.05f, 298.3f, 790.4f, 298.75f);
        path.lineTo(788.1f, 300.15f);
        path.lineTo(789.6f, 303.35f);
        path.lineTo(790.15f, 304.9f);
        path.lineTo(792.1f, 311.6f);
        path.quadTo(792.85f, 313.5f, 794.15f, 314.8f);
        path.lineTo(795.6f, 316.05f);
        path.lineTo(795.9f, 316.2f);
        path.lineTo(797.45f, 316.85f);
        path.lineTo(799.45f, 317.15f);
        path.lineTo(804.15f, 317.05f);
        path.quadTo(810.0f, 316.4f, 812.75f, 318.0f);
        path.quadTo(818.95f, 321.55f, 819.05f, 338.8f);
        path.quadTo(819.1f, 351.25f, 817.4f, 357.5f);
        path.lineTo(820.95f, 357.45f);
        path.close();
    }

    private static void draw_283(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_282(path);
        paint.setColor(Color.argb(255, 255, 83, 126));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_283(Path path)
    {
        path.reset();
        path.moveTo(817.4f, 357.5f);
        path.quadTo(819.1f, 351.25f, 819.05f, 338.8f);
        path.quadTo(818.95f, 321.55f, 812.75f, 318.0f);
        path.quadTo(810.0f, 316.4f, 804.15f, 317.05f);
        path.lineTo(799.45f, 317.15f);
        path.quadTo(799.2f, 324.95f, 796.35f, 334.8f);
        path.quadTo(794.3f, 342.05f, 791.9f, 347.3f);
        path.quadTo(792.85f, 347.95f, 793.95f, 348.6f);
        path.quadTo(804.25f, 354.55f, 811.1f, 356.45f);
        path.quadTo(814.4f, 357.4f, 817.4f, 357.5f);
        path.close();
        path.moveTo(786.95f, 301.55f);
        path.lineTo(786.7f, 301.6f);
        path.lineTo(786.6f, 301.35f);
        path.lineTo(786.25f, 301.2f);
        path.quadTo(781.9f, 298.9f, 776.55f, 299.8f);
        path.lineTo(780.35f, 303.4f);
        path.lineTo(782.45f, 305.2f);
        path.lineTo(788.5f, 310.2f);
        path.lineTo(794.15f, 314.8f);
        path.quadTo(792.85f, 313.5f, 792.1f, 311.6f);
        path.lineTo(790.15f, 304.9f);
        path.lineTo(789.6f, 303.35f);
        path.lineTo(786.95f, 301.55f);
        path.close();
    }

    private static void draw_284(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_283(path);
        paint.setColor(Color.argb(255, 194, 46, 98));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_284(Path path)
    {
        path.reset();
        path.moveTo(798.2f, 256.25f);
        path.quadTo(796.35f, 259.55f, 794.4f, 264.0f);
        path.quadTo(790.15f, 274.0f, 793.1f, 275.7f);
        path.quadTo(794.9f, 276.75f, 801.1f, 272.65f);
        path.lineTo(807.75f, 267.5f);
        path.quadTo(806.4f, 271.7f, 806.75f, 273.85f);
        path.quadTo(807.15f, 275.85f, 809.65f, 277.3f);
        path.quadTo(811.4f, 278.3f, 813.05f, 277.7f);
        path.quadTo(814.95f, 276.75f, 816.2f, 276.35f);
        path.lineTo(817.8f, 280.55f);
        path.quadTo(818.35f, 281.55f, 820.7f, 282.9f);
        path.quadTo(824.3f, 285.0f, 826.35f, 284.4f);
        path.quadTo(829.05f, 282.75f, 831.55f, 281.25f);
        path.lineTo(833.35f, 285.2f);
        path.quadTo(834.65f, 287.8f, 836.05f, 288.65f);
        path.quadTo(838.4f, 289.95f, 839.95f, 288.95f);
        path.quadTo(841.35f, 288.1f, 844.35f, 283.9f);
        path.lineTo(845.95f, 290.0f);
        path.quadTo(847.15f, 294.5f, 847.95f, 295.5f);
        path.lineTo(851.55f, 297.55f);
        path.lineTo(855.35f, 291.0f);
        path.lineTo(856.4f, 280.85f);
        path.lineTo(856.75f, 277.4f);
        path.quadTo(853.3f, 275.6f, 849.8f, 274.5f);
        path.quadTo(846.1f, 273.25f, 840.95f, 272.35f);
        path.lineTo(831.7f, 270.75f);
        path.quadTo(826.05f, 269.65f, 820.85f, 267.85f);
        path.quadTo(818.95f, 267.15f, 813.1f, 263.55f);
        path.quadTo(806.5f, 259.55f, 802.85f, 257.9f);
        path.quadTo(800.4f, 256.85f, 798.2f, 256.25f);
        path.close();
    }

    private static void draw_285(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_284(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_285(Path path)
    {
        path.reset();
        path.moveTo(1132.45f, -42.4f);
        path.lineTo(1132.45f, 11.0f);
        path.quadTo(1132.45f, 14.35f, 1134.85f, 16.75f);
        path.quadTo(1137.25f, 19.05f, 1140.55f, 19.05f);
        path.lineTo(1193.95f, 19.05f);
        path.quadTo(1197.3f, 19.05f, 1199.7f, 16.75f);
        path.quadTo(1202.1f, 14.35f, 1202.1f, 11.0f);
        path.lineTo(1202.1f, -42.4f);
        path.quadTo(1202.1f, -45.75f, 1199.7f, -48.2f);
        path.quadTo(1197.3f, -50.6f, 1193.95f, -50.6f);
        path.lineTo(1140.55f, -50.6f);
        path.quadTo(1137.25f, -50.6f, 1134.85f, -48.2f);
        path.quadTo(1132.45f, -45.75f, 1132.45f, -42.4f);
        path.close();
    }

    private static void draw_286(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_285(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(12.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_286(Path path)
    {
        path.reset();
        path.moveTo(1132.45f, -36.05f);
        path.quadTo(1134.5f, -36.05f, 1136.0f, -34.3f);
        path.quadTo(1137.65f, -32.6f, 1138.4f, -32.6f);
        path.lineTo(1139.2f, -32.8f);
        path.lineTo(1139.2f, -34.2f);
        path.lineTo(1138.65f, -36.75f);
        path.quadTo(1138.1f, -38.7f, 1138.1f, -39.4f);
        path.quadTo(1138.1f, -41.8f, 1139.6f, -41.8f);
        path.quadTo(1142.25f, -41.8f, 1147.3f, -37.85f);
        path.lineTo(1149.3f, -36.2f);
        path.quadTo(1149.7f, -35.2f, 1151.3f, -34.35f);
        path.lineTo(1155.0f, -32.6f);
        path.quadTo(1158.75f, -30.35f, 1158.75f, -27.35f);
        path.quadTo(1158.75f, -22.6f, 1156.05f, -19.75f);
        path.quadTo(1153.45f, -17.05f, 1149.4f, -17.05f);
        path.lineTo(1147.05f, -17.45f);
        path.lineTo(1143.8f, -17.85f);
        path.quadTo(1144.8f, -19.3f, 1143.75f, -20.15f);
        path.lineTo(1142.15f, -20.85f);
        path.quadTo(1141.6f, -21.2f, 1140.5f, -22.5f);
        path.lineTo(1138.9f, -24.4f);
        path.quadTo(1137.85f, -25.6f, 1132.8f, -28.65f);
        path.lineTo(1132.45f, -28.85f);
        path.lineTo(1132.45f, -3.85f);
        path.quadTo(1134.05f, -3.4f, 1136.2f, -0.750002f);
        path.quadTo(1138.85f, 2.5f, 1141.35f, 2.5f);
        path.quadTo(1142.75f, 2.5f, 1142.8f, 0.649998f);
        path.lineTo(1142.45f, -3.3f);
        path.quadTo(1141.95f, -9.15f, 1146.7f, -9.15f);
        path.quadTo(1148.2f, -9.15f, 1150.95f, -5.7f);
        path.quadTo(1153.65f, -2.35f, 1154.6f, -2.35f);
        path.quadTo(1155.0f, -2.35f, 1156.1f, -3.15f);
        path.lineTo(1157.6f, -4.0f);
        path.quadTo(1158.2f, -4.0f, 1159.65f, -2.15f);
        path.quadTo(1161.15f, -0.350003f, 1163.95f, -0.450003f);
        path.quadTo(1165.55f, -0.500003f, 1167.35f, 2.45f);
        path.quadTo(1169.25f, 5.55f, 1170.35f, 5.55f);
        path.quadTo(1172.1f, 5.55f, 1175.3f, -1.0f);
        path.quadTo(1178.55f, -7.5f, 1181.35f, -7.5f);
        path.quadTo(1183.0f, -7.5f, 1183.7f, -5.6f);
        path.quadTo(1184.45f, -3.75f, 1185.85f, -3.75f);
        path.quadTo(1187.3f, -3.75f, 1188.0f, -6.0f);
        path.quadTo(1188.65f, -8.35f, 1191.45f, -8.35f);
        path.quadTo(1192.85f, -8.35f, 1193.95f, -7.35f);
        path.quadTo(1194.95f, -6.45f, 1195.5f, -6.45f);
        path.quadTo(1196.05f, -6.45f, 1197.05f, -7.8f);
        path.quadTo(1198.05f, -9.15f, 1200.55f, -9.15f);
        path.lineTo(1202.1f, -9.05f);
        path.lineTo(1202.1f, -18.0f);
        path.lineTo(1197.95f, -19.75f);
        path.lineTo(1195.8f, -18.3f);
        path.quadTo(1193.95f, -16.75f, 1192.75f, -16.5f);
        path.lineTo(1186.5f, -15.7f);
        path.quadTo(1183.65f, -15.7f, 1181.65f, -19.5f);
        path.quadTo(1180.0f, -22.6f, 1180.0f, -25.2f);
        path.lineTo(1181.1f, -29.5f);
        path.quadTo(1182.15f, -33.4f, 1182.15f, -35.0f);
        path.quadTo(1182.15f, -35.8f, 1179.5f, -36.65f);
        path.quadTo(1177.0f, -37.45f, 1175.65f, -37.45f);
        path.lineTo(1173.45f, -37.0f);
        path.lineTo(1171.3f, -36.65f);
        path.quadTo(1168.35f, -36.65f, 1166.45f, -39.5f);
        path.quadTo(1164.55f, -42.2f, 1165.55f, -44.8f);
        path.quadTo(1160.7f, -44.25f, 1158.55f, -50.6f);
        path.lineTo(1140.55f, -50.6f);
        path.quadTo(1137.25f, -50.6f, 1134.85f, -48.2f);
        path.quadTo(1132.45f, -45.75f, 1132.45f, -42.4f);
        path.lineTo(1132.45f, -36.05f);
        path.close();
    }

    private static Shader create_gradient_16()
    {
        int colors[] = {
            Color.argb(255, 102, 102, 102),
            Color.argb(255, 0, 0, 0)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_287(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_286(path);
        Shader shader = create_gradient_16();
        shader.setLocalMatrix(createMatrix(0.0f, -0.0424957f, 0.0424957f, 0.0f, 1167.3f, -15.75f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_287(Path path)
    {
        path.reset();
        path.moveTo(1132.45f, -28.85f);
        path.lineTo(1132.8f, -28.65f);
        path.quadTo(1137.85f, -25.6f, 1138.9f, -24.4f);
        path.lineTo(1140.5f, -22.5f);
        path.quadTo(1141.6f, -21.2f, 1142.15f, -20.85f);
        path.lineTo(1143.75f, -20.15f);
        path.quadTo(1144.8f, -19.3f, 1143.8f, -17.85f);
        path.lineTo(1147.05f, -17.45f);
        path.lineTo(1149.4f, -17.05f);
        path.quadTo(1153.45f, -17.05f, 1156.05f, -19.75f);
        path.quadTo(1158.75f, -22.6f, 1158.75f, -27.35f);
        path.quadTo(1158.75f, -30.35f, 1155.0f, -32.6f);
        path.lineTo(1151.3f, -34.35f);
        path.quadTo(1149.7f, -35.2f, 1149.3f, -36.2f);
        path.lineTo(1147.3f, -37.85f);
        path.quadTo(1142.25f, -41.8f, 1139.6f, -41.8f);
        path.quadTo(1138.1f, -41.8f, 1138.1f, -39.4f);
        path.quadTo(1138.1f, -38.7f, 1138.65f, -36.75f);
        path.lineTo(1139.2f, -34.2f);
        path.lineTo(1139.2f, -32.8f);
        path.lineTo(1138.4f, -32.6f);
        path.quadTo(1137.65f, -32.6f, 1136.0f, -34.3f);
        path.quadTo(1134.5f, -36.05f, 1132.45f, -36.05f);
        path.lineTo(1132.45f, -28.85f);
        path.close();
        path.moveTo(1202.1f, -9.05f);
        path.lineTo(1200.55f, -9.15f);
        path.quadTo(1198.05f, -9.15f, 1197.05f, -7.8f);
        path.quadTo(1196.05f, -6.45f, 1195.5f, -6.45f);
        path.quadTo(1194.95f, -6.45f, 1193.95f, -7.35f);
        path.quadTo(1192.85f, -8.35f, 1191.45f, -8.35f);
        path.quadTo(1188.65f, -8.35f, 1188.0f, -6.0f);
        path.quadTo(1187.3f, -3.75f, 1185.85f, -3.75f);
        path.quadTo(1184.45f, -3.75f, 1183.7f, -5.6f);
        path.quadTo(1183.0f, -7.5f, 1181.35f, -7.5f);
        path.quadTo(1178.55f, -7.5f, 1175.3f, -1.0f);
        path.quadTo(1172.1f, 5.55f, 1170.35f, 5.55f);
        path.quadTo(1169.25f, 5.55f, 1167.35f, 2.45f);
        path.quadTo(1165.55f, -0.5f, 1163.95f, -0.45f);
        path.quadTo(1161.15f, -0.35f, 1159.65f, -2.15f);
        path.quadTo(1158.2f, -4.0f, 1157.6f, -4.0f);
        path.lineTo(1156.1f, -3.15f);
        path.quadTo(1155.0f, -2.35f, 1154.6f, -2.35f);
        path.quadTo(1153.65f, -2.35f, 1150.95f, -5.7f);
        path.quadTo(1148.2f, -9.15f, 1146.7f, -9.15f);
        path.quadTo(1141.95f, -9.15f, 1142.45f, -3.3f);
        path.lineTo(1142.8f, 0.649999f);
        path.quadTo(1142.75f, 2.5f, 1141.35f, 2.5f);
        path.quadTo(1138.85f, 2.5f, 1136.2f, -0.750001f);
        path.quadTo(1134.05f, -3.4f, 1132.45f, -3.85f);
        path.lineTo(1132.45f, 11.0f);
        path.quadTo(1132.45f, 14.35f, 1134.85f, 16.75f);
        path.quadTo(1137.25f, 19.05f, 1140.55f, 19.05f);
        path.lineTo(1193.95f, 19.05f);
        path.quadTo(1197.3f, 19.05f, 1199.7f, 16.75f);
        path.quadTo(1202.1f, 14.35f, 1202.1f, 11.0f);
        path.lineTo(1202.1f, -9.05f);
        path.close();
        path.moveTo(1158.55f, -50.6f);
        path.quadTo(1160.7f, -44.25f, 1165.55f, -44.8f);
        path.quadTo(1164.55f, -42.2f, 1166.45f, -39.5f);
        path.quadTo(1168.35f, -36.65f, 1171.3f, -36.65f);
        path.lineTo(1173.45f, -37.0f);
        path.lineTo(1175.65f, -37.45f);
        path.quadTo(1177.0f, -37.45f, 1179.5f, -36.65f);
        path.quadTo(1182.15f, -35.8f, 1182.15f, -35.0f);
        path.quadTo(1182.15f, -33.4f, 1181.1f, -29.5f);
        path.lineTo(1180.0f, -25.2f);
        path.quadTo(1180.0f, -22.6f, 1181.65f, -19.5f);
        path.quadTo(1183.65f, -15.7f, 1186.5f, -15.7f);
        path.lineTo(1192.75f, -16.5f);
        path.quadTo(1193.95f, -16.75f, 1195.8f, -18.3f);
        path.lineTo(1197.95f, -19.75f);
        path.lineTo(1202.1f, -18.0f);
        path.lineTo(1202.1f, -42.4f);
        path.quadTo(1202.1f, -45.75f, 1199.7f, -48.2f);
        path.quadTo(1197.3f, -50.6f, 1193.95f, -50.6f);
        path.lineTo(1158.55f, -50.6f);
        path.close();
    }

    private static void draw_288(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_287(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_288(Path path)
    {
        path.reset();
        path.moveTo(1150.35f, -30.75f);
        path.quadTo(1149.25f, -30.65f, 1149.25f, -28.65f);
        path.quadTo(1149.25f, -28.35f, 1151.05f, -27.55f);
        path.quadTo(1152.8f, -26.75f, 1152.8f, -26.2f);
        path.lineTo(1152.4f, -25.25f);
        path.lineTo(1152.0f, -24.4f);
        path.lineTo(1152.25f, -24.65f);
        path.quadTo(1152.25f, -24.95f, 1153.05f, -24.95f);
        path.lineTo(1154.45f, -24.65f);
        path.quadTo(1155.25f, -24.3f, 1155.25f, -23.6f);
        path.quadTo(1155.25f, -22.4f, 1153.6f, -21.85f);
        path.lineTo(1151.45f, -21.4f);
        path.quadTo(1150.7f, -21.15f, 1150.75f, -19.1f);
        path.quadTo(1150.75f, -17.3f, 1149.7f, -17.3f);
        path.quadTo(1148.85f, -17.3f, 1148.05f, -18.15f);
        path.quadTo(1147.25f, -18.95f, 1146.45f, -18.95f);
        path.lineTo(1144.85f, -18.7f);
        path.lineTo(1143.3f, -18.4f);
        path.quadTo(1142.7f, -18.4f, 1141.5f, -19.0f);
        path.lineTo(1141.0f, -19.3f);
        path.quadTo(1142.15f, -29.5f, 1149.55f, -35.5f);
        path.quadTo(1157.0f, -41.55f, 1168.45f, -41.55f);
        path.lineTo(1174.5f, -40.9f);
        path.quadTo(1176.15f, -40.35f, 1177.7f, -39.3f);
        path.lineTo(1176.45f, -39.1f);
        path.quadTo(1175.8f, -39.1f, 1174.45f, -39.65f);
        path.lineTo(1172.55f, -40.15f);
        path.lineTo(1171.85f, -40.15f);
        path.lineTo(1171.55f, -38.0f);
        path.lineTo(1170.2f, -38.0f);
        path.quadTo(1168.3f, -38.65f, 1167.2f, -39.05f);
        path.lineTo(1164.65f, -39.1f);
        path.lineTo(1160.25f, -38.45f);
        path.quadTo(1157.55f, -37.6f, 1156.9f, -36.1f);
        path.quadTo(1155.75f, -36.1f, 1154.15f, -35.2f);
        path.lineTo(1151.45f, -33.9f);
        path.quadTo(1151.45f, -30.8f, 1150.35f, -30.75f);
        path.close();
        path.moveTo(1156.9f, -30.4f);
        path.lineTo(1156.9f, -31.5f);
        path.quadTo(1157.85f, -32.35f, 1160.15f, -33.25f);
        path.quadTo(1163.3f, -34.45f, 1165.6f, -34.45f);
        path.lineTo(1169.6f, -33.85f);
        path.quadTo(1171.75f, -33.15f, 1172.1f, -32.0f);
        path.quadTo(1171.7f, -31.15f, 1170.3f, -31.15f);
        path.lineTo(1167.5f, -31.2f);
        path.lineTo(1167.5f, -29.3f);
        path.quadTo(1168.4f, -28.45f, 1168.85f, -28.45f);
        path.lineTo(1168.85f, -27.65f);
        path.lineTo(1167.4f, -27.4f);
        path.quadTo(1166.55f, -27.4f, 1165.2f, -27.95f);
        path.lineTo(1163.15f, -28.45f);
        path.quadTo(1162.25f, -28.45f, 1161.75f, -27.65f);
        path.quadTo(1161.25f, -26.85f, 1160.85f, -26.85f);
        path.quadTo(1159.9f, -26.85f, 1156.9f, -30.25f);
        path.lineTo(1156.9f, -30.4f);
        path.close();
        path.moveTo(1149.55f, -1.25f);
        path.quadTo(1150.45f, -1.0f, 1152.35f, 0.3f);
        path.quadTo(1154.15f, 1.55f, 1154.95f, 1.7f);
        path.quadTo(1156.15f, 2.0f, 1157.6f, 2.85f);
        path.lineTo(1159.6f, 4.15f);
        path.lineTo(1159.6f, 5.55f);
        path.lineTo(1157.05f, 5.8f);
        path.quadTo(1155.9f, 5.8f, 1154.7f, 5.3f);
        path.lineTo(1152.15f, 4.75f);
        path.lineTo(1151.8f, 4.5f);
        path.quadTo(1149.5f, 2.45f, 1149.55f, 0.9f);
        path.lineTo(1149.55f, -1.25f);
        path.close();
        path.moveTo(1184.95f, -37.55f);
        path.quadTo(1177.35f, -43.8f, 1167.15f, -43.8f);
        path.quadTo(1155.35f, -43.8f, 1147.0f, -35.5f);
        path.quadTo(1138.7f, -27.1f, 1138.7f, -15.35f);
        path.quadTo(1138.7f, -3.55f, 1147.0f, 4.7f);
        path.quadTo(1155.35f, 13.1f, 1167.15f, 13.1f);
        path.quadTo(1178.9f, 13.1f, 1187.25f, 4.7f);
        path.quadTo(1195.6f, -3.55f, 1195.6f, -15.35f);
        path.quadTo(1195.6f, -21.4f, 1193.45f, -26.55f);
        path.lineTo(1193.35f, -26.35f);
        path.quadTo(1192.6f, -24.55f, 1191.45f, -24.4f);
        path.lineTo(1188.4f, -26.95f);
        path.quadTo(1185.45f, -29.45f, 1185.45f, -30.25f);
        path.quadTo(1185.45f, -31.4f, 1186.25f, -31.65f);
        path.quadTo(1187.05f, -31.85f, 1187.05f, -32.55f);
        path.quadTo(1187.05f, -33.1f, 1186.0f, -34.15f);
        path.quadTo(1184.9f, -35.2f, 1184.9f, -36.65f);
        path.lineTo(1184.95f, -37.55f);
        path.close();
        path.moveTo(1184.9f, -28.0f);
        path.lineTo(1184.95f, -27.95f);
        path.lineTo(1186.0f, -25.2f);
        path.quadTo(1186.95f, -21.9f, 1188.7f, -21.5f);
        path.quadTo(1190.05f, -21.25f, 1190.05f, -19.95f);
        path.quadTo(1190.05f, -19.2f, 1189.15f, -18.15f);
        path.quadTo(1188.15f, -17.05f, 1188.15f, -16.25f);
        path.quadTo(1188.15f, -15.35f, 1188.7f, -14.6f);
        path.quadTo(1189.3f, -13.8f, 1190.05f, -13.8f);
        path.quadTo(1190.5f, -13.8f, 1191.25f, -14.6f);
        path.quadTo(1192.1f, -15.4f, 1192.8f, -15.4f);
        path.quadTo(1193.35f, -15.4f, 1193.85f, -14.35f);
        path.quadTo(1194.4f, -13.3f, 1194.4f, -12.3f);
        path.quadTo(1194.4f, -11.05f, 1193.4f, -8.1f);
        path.lineTo(1191.95f, -4.8f);
        path.quadTo(1191.55f, -4.1f, 1190.0f, -3.5f);
        path.quadTo(1188.55f, -2.85f, 1188.15f, -2.35f);
        path.lineTo(1186.85f, -0.850004f);
        path.quadTo(1186.1f, -0.200004f, 1185.6f, -0.200004f);
        path.quadTo(1182.7f, -0.200004f, 1182.7f, -3.9f);
        path.quadTo(1182.7f, -6.15f, 1183.8f, -8.0f);
        path.quadTo(1184.9f, -9.85001f, 1184.9f, -11.05f);
        path.lineTo(1183.7f, -13.0f);
        path.quadTo(1182.45f, -14.95f, 1182.45f, -16.5f);
        path.quadTo(1182.45f, -17.2f, 1183.25f, -18.55f);
        path.lineTo(1184.1f, -20.3f);
        path.lineTo(1181.35f, -29.0f);
        path.quadTo(1181.9f, -29.55f, 1182.9f, -29.55f);
        path.lineTo(1183.95f, -28.95f);
        path.lineTo(1184.9f, -28.0f);
        path.close();
        path.moveTo(1176.9f, -29.3f);
        path.lineTo(1177.95f, -29.2f);
        path.quadTo(1178.35f, -28.9f, 1178.65f, -27.65f);
        path.quadTo(1178.85f, -26.9f, 1179.75f, -26.1f);
        path.quadTo(1180.55f, -25.35f, 1180.55f, -24.85f);
        path.quadTo(1180.55f, -23.85f, 1180.25f, -23.6f);
        path.quadTo(1179.1f, -23.65f, 1177.55f, -25.2f);
        path.lineTo(1176.45f, -26.3f);
        path.quadTo(1175.45f, -27.35f, 1175.0f, -27.05f);
        path.quadTo(1174.7f, -27.45f, 1174.55f, -27.95f);
        path.quadTo(1175.25f, -28.1f, 1175.5f, -28.75f);
        path.quadTo(1175.7f, -29.3f, 1176.9f, -29.3f);
        path.close();
    }

    private static void draw_289(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_288(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_289(Path path)
    {
        path.reset();
        path.moveTo(1150.35f, -30.75f);
        path.quadTo(1151.45f, -30.8f, 1151.45f, -33.9f);
        path.lineTo(1154.15f, -35.2f);
        path.quadTo(1155.75f, -36.1f, 1156.9f, -36.1f);
        path.quadTo(1157.55f, -37.6f, 1160.25f, -38.45f);
        path.lineTo(1164.65f, -39.1f);
        path.lineTo(1167.2f, -39.05f);
        path.quadTo(1168.3f, -38.65f, 1170.2f, -38.0f);
        path.lineTo(1171.55f, -38.0f);
        path.lineTo(1171.85f, -40.15f);
        path.lineTo(1172.55f, -40.15f);
        path.lineTo(1174.45f, -39.65f);
        path.quadTo(1175.8f, -39.1f, 1176.45f, -39.1f);
        path.lineTo(1177.7f, -39.3f);
        path.quadTo(1176.15f, -40.35f, 1174.5f, -40.9f);
        path.lineTo(1168.45f, -41.55f);
        path.quadTo(1157.0f, -41.55f, 1149.55f, -35.5f);
        path.quadTo(1142.15f, -29.5f, 1141.0f, -19.3f);
        path.lineTo(1141.5f, -19.0f);
        path.quadTo(1142.7f, -18.4f, 1143.3f, -18.4f);
        path.lineTo(1144.85f, -18.7f);
        path.lineTo(1146.45f, -18.95f);
        path.quadTo(1147.25f, -18.95f, 1148.05f, -18.15f);
        path.quadTo(1148.85f, -17.3f, 1149.7f, -17.3f);
        path.quadTo(1150.75f, -17.3f, 1150.75f, -19.1f);
        path.quadTo(1150.7f, -21.15f, 1151.45f, -21.4f);
        path.lineTo(1153.6f, -21.85f);
        path.quadTo(1155.25f, -22.4f, 1155.25f, -23.6f);
        path.quadTo(1155.25f, -24.3f, 1154.45f, -24.65f);
        path.lineTo(1153.05f, -24.95f);
        path.quadTo(1152.25f, -24.95f, 1152.25f, -24.65f);
        path.lineTo(1152.0f, -24.4f);
        path.lineTo(1152.4f, -25.25f);
        path.lineTo(1152.8f, -26.2f);
        path.quadTo(1152.8f, -26.75f, 1151.05f, -27.55f);
        path.quadTo(1149.25f, -28.35f, 1149.25f, -28.65f);
        path.quadTo(1149.25f, -30.65f, 1150.35f, -30.75f);
        path.close();
        path.moveTo(1156.9f, -30.4f);
        path.lineTo(1156.9f, -30.25f);
        path.quadTo(1159.9f, -26.85f, 1160.85f, -26.85f);
        path.quadTo(1161.25f, -26.85f, 1161.75f, -27.65f);
        path.quadTo(1162.25f, -28.45f, 1163.15f, -28.45f);
        path.lineTo(1165.2f, -27.95f);
        path.quadTo(1166.55f, -27.4f, 1167.4f, -27.4f);
        path.lineTo(1168.85f, -27.65f);
        path.lineTo(1168.85f, -28.45f);
        path.quadTo(1168.4f, -28.45f, 1167.5f, -29.3f);
        path.lineTo(1167.5f, -31.2f);
        path.lineTo(1170.3f, -31.15f);
        path.quadTo(1171.7f, -31.15f, 1172.1f, -32.0f);
        path.quadTo(1171.75f, -33.15f, 1169.6f, -33.85f);
        path.lineTo(1165.6f, -34.45f);
        path.quadTo(1163.3f, -34.45f, 1160.15f, -33.25f);
        path.quadTo(1157.85f, -32.35f, 1156.9f, -31.5f);
        path.lineTo(1156.9f, -30.4f);
        path.close();
        path.moveTo(1149.55f, -1.25f);
        path.lineTo(1149.55f, 0.9f);
        path.quadTo(1149.5f, 2.45f, 1151.8f, 4.5f);
        path.lineTo(1152.15f, 4.75f);
        path.lineTo(1154.7f, 5.3f);
        path.quadTo(1155.9f, 5.8f, 1157.05f, 5.8f);
        path.lineTo(1159.6f, 5.55f);
        path.lineTo(1159.6f, 4.15f);
        path.lineTo(1157.6f, 2.85f);
        path.quadTo(1156.15f, 2.0f, 1154.95f, 1.7f);
        path.quadTo(1154.15f, 1.55f, 1152.35f, 0.3f);
        path.quadTo(1150.45f, -1.0f, 1149.55f, -1.25f);
        path.close();
        path.moveTo(1193.45f, -26.55f);
        path.quadTo(1191.3f, -31.4f, 1187.25f, -35.5f);
        path.lineTo(1184.95f, -37.55f);
        path.lineTo(1184.9f, -36.65f);
        path.quadTo(1184.9f, -35.2f, 1186.0f, -34.15f);
        path.quadTo(1187.05f, -33.1f, 1187.05f, -32.55f);
        path.quadTo(1187.05f, -31.85f, 1186.25f, -31.65f);
        path.quadTo(1185.45f, -31.4f, 1185.45f, -30.25f);
        path.quadTo(1185.45f, -29.45f, 1188.4f, -26.95f);
        path.lineTo(1191.45f, -24.4f);
        path.quadTo(1192.6f, -24.55f, 1193.35f, -26.35f);
        path.lineTo(1193.45f, -26.55f);
        path.close();
        path.moveTo(1184.9f, -28.0f);
        path.lineTo(1183.95f, -28.95f);
        path.lineTo(1182.9f, -29.55f);
        path.quadTo(1181.9f, -29.55f, 1181.35f, -29.0f);
        path.lineTo(1184.1f, -20.3f);
        path.lineTo(1183.25f, -18.55f);
        path.quadTo(1182.45f, -17.2f, 1182.45f, -16.5f);
        path.quadTo(1182.45f, -14.95f, 1183.7f, -13.0f);
        path.lineTo(1184.9f, -11.05f);
        path.quadTo(1184.9f, -9.85f, 1183.8f, -8.0f);
        path.quadTo(1182.7f, -6.15f, 1182.7f, -3.9f);
        path.quadTo(1182.7f, -0.2f, 1185.6f, -0.2f);
        path.quadTo(1186.1f, -0.2f, 1186.85f, -0.85f);
        path.lineTo(1188.15f, -2.35f);
        path.quadTo(1188.55f, -2.85f, 1190.0f, -3.5f);
        path.quadTo(1191.55f, -4.1f, 1191.95f, -4.8f);
        path.lineTo(1193.4f, -8.1f);
        path.quadTo(1194.4f, -11.05f, 1194.4f, -12.3f);
        path.quadTo(1194.4f, -13.3f, 1193.85f, -14.35f);
        path.quadTo(1193.35f, -15.4f, 1192.8f, -15.4f);
        path.quadTo(1192.1f, -15.4f, 1191.25f, -14.6f);
        path.quadTo(1190.5f, -13.8f, 1190.05f, -13.8f);
        path.quadTo(1189.3f, -13.8f, 1188.7f, -14.6f);
        path.quadTo(1188.15f, -15.35f, 1188.15f, -16.25f);
        path.quadTo(1188.15f, -17.05f, 1189.15f, -18.15f);
        path.quadTo(1190.05f, -19.2f, 1190.05f, -19.95f);
        path.quadTo(1190.05f, -21.25f, 1188.7f, -21.5f);
        path.quadTo(1186.95f, -21.9f, 1186.0f, -25.2f);
        path.lineTo(1184.95f, -27.95f);
        path.lineTo(1184.9f, -28.0f);
        path.close();
        path.moveTo(1176.9f, -29.3f);
        path.quadTo(1175.7f, -29.3f, 1175.5f, -28.75f);
        path.quadTo(1175.25f, -28.1f, 1174.55f, -27.95f);
        path.quadTo(1174.7f, -27.45f, 1175.0f, -27.05f);
        path.quadTo(1175.45f, -27.35f, 1176.45f, -26.3f);
        path.lineTo(1177.55f, -25.2f);
        path.quadTo(1179.1f, -23.65f, 1180.25f, -23.6f);
        path.quadTo(1180.55f, -23.85f, 1180.55f, -24.85f);
        path.quadTo(1180.55f, -25.35f, 1179.75f, -26.1f);
        path.quadTo(1178.85f, -26.9f, 1178.65f, -27.65f);
        path.quadTo(1178.35f, -28.9f, 1177.95f, -29.2f);
        path.lineTo(1176.9f, -29.3f);
        path.close();
    }

    private static void draw_290(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_289(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_290(Path path)
    {
        path.reset();
        path.moveTo(1161.05f, 11.1f);
        path.lineTo(1160.1f, 10.65f);
        path.quadTo(1159.55f, 10.8f, 1160.95f, 11.7f);
        path.lineTo(1162.35f, 12.7f);
        path.lineTo(1163.35f, 13.6f);
        path.lineTo(1164.0f, 14.4f);
        path.lineTo(1164.1f, 14.55f);
        path.lineTo(1164.3f, 15.1f);
        path.lineTo(1164.35f, 14.8f);
        path.lineTo(1164.55f, 14.85f);
        path.lineTo(1164.55f, 14.75f);
        path.lineTo(1164.4f, 14.5f);
        path.lineTo(1164.45f, 13.9f);
        path.quadTo(1164.7f, 14.6f, 1164.95f, 14.3f);
        path.lineTo(1164.9f, 13.95f);
        path.quadTo(1165.15f, 14.5f, 1165.75f, 14.8f);
        path.quadTo(1165.3f, 14.0f, 1165.1f, 13.1f);
        path.lineTo(1164.9f, 12.05f);
        path.quadTo(1166.15f, 13.7f, 1167.4f, 14.05f);
        path.lineTo(1168.2f, 14.8f);
        path.lineTo(1168.15f, 14.6f);
        path.lineTo(1167.3f, 13.35f);
        path.lineTo(1167.25f, 13.3f);
        path.lineTo(1168.2f, 13.7f);
        path.quadTo(1167.6f, 13.3f, 1167.1f, 12.35f);
        path.lineTo(1166.5f, 10.55f);
        path.lineTo(1166.5f, 10.5f);
        path.lineTo(1166.55f, 9.05f);
        path.lineTo(1166.45f, 7.65f);
        path.quadTo(1166.2f, 7.95f, 1166.2f, 8.4f);
        path.lineTo(1166.15f, 8.05f);
        path.lineTo(1165.85f, 5.8f);
        path.lineTo(1165.65f, 3.55f);
        path.lineTo(1165.55f, 3.55f);
        path.quadTo(1165.4f, 4.4f, 1165.6f, 5.2f);
        path.lineTo(1165.9f, 7.45f);
        path.lineTo(1166.0f, 9.65f);
        path.quadTo(1166.05f, 10.7f, 1166.4f, 11.8f);
        path.lineTo(1166.45f, 11.95f);
        path.lineTo(1167.0f, 13.4f);
        path.lineTo(1167.25f, 13.85f);
        path.lineTo(1166.9f, 13.6f);
        path.lineTo(1166.3f, 13.05f);
        path.lineTo(1165.7f, 12.5f);
        path.lineTo(1165.05f, 11.85f);
        path.lineTo(1164.7f, 10.9f);
        path.lineTo(1164.6f, 9.3f);
        path.lineTo(1164.65f, 7.2f);
        path.lineTo(1164.55f, 5.2f);
        path.quadTo(1164.3f, 5.9f, 1164.3f, 6.9f);
        path.lineTo(1164.35f, 8.95f);
        path.lineTo(1164.4f, 10.3f);
        path.lineTo(1164.2f, 10.1f);
        path.lineTo(1163.8f, 9.45f);
        path.lineTo(1163.8f, 9.0f);
        path.lineTo(1163.85f, 6.95f);
        path.lineTo(1163.75f, 4.95f);
        path.quadTo(1163.35f, 5.5f, 1163.45f, 6.55f);
        path.lineTo(1163.5f, 8.6f);
        path.lineTo(1163.5f, 9.0f);
        path.lineTo(1163.15f, 8.2f);
        path.lineTo(1162.3f, 6.2f);
        path.lineTo(1161.75f, 3.9f);
        path.lineTo(1161.3f, 1.65f);
        path.quadTo(1160.9f, 2.3f, 1161.1f, 3.45f);
        path.lineTo(1161.7f, 5.9f);
        path.lineTo(1162.9f, 8.75f);
        path.lineTo(1163.6f, 10.1f);
        path.lineTo(1163.75f, 10.8f);
        path.lineTo(1163.85f, 11.7f);
        path.lineTo(1162.65f, 10.05f);
        path.quadTo(1161.85f, 9.05f, 1160.75f, 8.3f);
        path.lineTo(1158.8f, 7.05f);
        path.lineTo(1156.75f, 5.75f);
        path.quadTo(1157.3f, 6.6f, 1159.2f, 7.8f);
        path.quadTo(1160.75f, 8.7f, 1162.05f, 9.95f);
        path.lineTo(1163.55f, 11.9f);
        path.lineTo(1163.95f, 12.65f);
        path.lineTo(1163.95f, 13.1f);
        path.lineTo(1164.0f, 14.05f);
        path.lineTo(1163.8f, 13.75f);
        path.lineTo(1163.05f, 12.75f);
        path.lineTo(1162.1f, 11.85f);
        path.lineTo(1161.05f, 11.1f);
        path.close();
        path.moveTo(1166.45f, 6.3f);
        path.lineTo(1166.4f, 6.3f);
        path.quadTo(1166.2f, 6.75f, 1166.45f, 7.5f);
        path.lineTo(1167.0f, 8.9f);
        path.lineTo(1167.65f, 10.75f);
        path.lineTo(1168.35f, 12.45f);
        path.quadTo(1169.05f, 13.55f, 1169.95f, 14.15f);
        path.lineTo(1169.05f, 12.9f);
        path.lineTo(1168.2f, 11.35f);
        path.lineTo(1167.6f, 9.75f);
        path.lineTo(1167.0f, 8.1f);
        path.lineTo(1166.45f, 6.3f);
        path.close();
        path.moveTo(1163.95f, 11.05f);
        path.lineTo(1163.9f, 10.55f);
        path.lineTo(1164.45f, 11.4f);
        path.lineTo(1164.6f, 13.05f);
        path.lineTo(1164.2f, 12.2f);
        path.lineTo(1163.95f, 11.05f);
        path.close();
    }

    private static void draw_291(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_290(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_291(Path path)
    {
        path.reset();
        path.moveTo(1183.55f, -0.85f);
        path.lineTo(1182.7f, -0.8f);
        path.quadTo(1181.4f, -0.8f, 1180.05f, -2.4f);
        path.lineTo(1178.35f, -4.85f);
        path.lineTo(1176.95f, -7.55f);
        path.lineTo(1175.25f, -10.05f);
        path.quadTo(1173.75f, -11.7f, 1172.8f, -11.75f);
        path.lineTo(1171.2f, -12.0f);
        path.quadTo(1170.1f, -12.15f, 1169.65f, -12.6f);
        path.lineTo(1168.35f, -15.5f);
        path.quadTo(1167.55f, -17.65f, 1166.2f, -17.65f);
        path.quadTo(1164.5f, -17.65f, 1164.5f, -13.25f);
        path.quadTo(1164.5f, -10.65f, 1165.75f, -8.5f);
        path.lineTo(1165.75f, -8.25f);
        path.lineTo(1164.15f, -7.95f);
        path.quadTo(1162.9f, -7.95f, 1161.95f, -8.95f);
        path.lineTo(1161.65f, -8.95f);
        path.lineTo(1161.65f, -8.25f);
        path.quadTo(1162.3f, -7.15f, 1163.85f, -5.45f);
        path.quadTo(1165.1f, -3.85f, 1165.05f, -1.6f);
        path.lineTo(1164.95f, 2.75f);
        path.quadTo(1165.0f, 5.4f, 1165.6f, 7.0f);
        path.quadTo(1166.7f, 9.85f, 1169.95f, 12.8f);
        path.quadTo(1170.9f, 13.7f, 1172.1f, 15.7f);
        path.lineTo(1172.8f, 17.25f);
        path.quadTo(1174.05f, 18.35f, 1176.55f, 18.65f);
        path.lineTo(1180.7f, 18.6f);
        path.lineTo(1188.15f, 18.2f);
        path.lineTo(1195.8f, 17.25f);
        path.quadTo(1199.1f, 15.65f, 1199.7f, 11.55f);
        path.lineTo(1199.95f, 5.85f);
        path.lineTo(1190.05f, 4.15f);
        path.quadTo(1187.6f, 3.95f, 1185.45f, 1.95f);
        path.quadTo(1183.7f, 0.35f, 1181.65f, 0.35f);
        path.lineTo(1182.35f, 0.0999996f);
        path.lineTo(1183.8f, -0.75f);
        path.lineTo(1183.85f, -0.8f);
        path.lineTo(1183.8f, -0.8f);
        path.lineTo(1183.55f, -0.85f);
        path.close();
    }

    private static void draw_292(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_291(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_292(Path path)
    {
        path.reset();
        path.moveTo(1172.8f, 17.25f);
        path.lineTo(1172.1f, 15.7f);
        path.quadTo(1170.9f, 13.7f, 1169.95f, 12.8f);
        path.quadTo(1166.7f, 9.85f, 1165.6f, 7.0f);
        path.quadTo(1165.0f, 5.4f, 1164.95f, 2.75f);
        path.lineTo(1165.05f, -1.6f);
        path.quadTo(1165.1f, -3.85f, 1163.85f, -5.45f);
        path.quadTo(1162.3f, -7.15f, 1161.65f, -8.25f);
        path.lineTo(1161.65f, -8.95f);
        path.lineTo(1161.95f, -8.95f);
        path.quadTo(1162.9f, -7.95f, 1164.15f, -7.95f);
        path.lineTo(1165.75f, -8.25f);
        path.lineTo(1165.75f, -8.5f);
        path.quadTo(1164.5f, -10.65f, 1164.5f, -13.25f);
        path.quadTo(1164.5f, -17.65f, 1166.2f, -17.65f);
        path.quadTo(1167.55f, -17.65f, 1168.35f, -15.5f);
        path.lineTo(1169.65f, -12.6f);
        path.quadTo(1170.1f, -12.15f, 1171.2f, -12.0f);
        path.lineTo(1172.8f, -11.75f);
        path.quadTo(1173.75f, -11.7f, 1175.25f, -10.05f);
        path.lineTo(1176.95f, -7.55f);
        path.lineTo(1178.35f, -4.85f);
        path.lineTo(1180.05f, -2.4f);
        path.quadTo(1181.4f, -0.800001f, 1182.7f, -0.800001f);
        path.lineTo(1183.55f, -0.850001f);
        path.quadTo(1181.1f, -1.55f, 1178.95f, -4.95f);
        path.lineTo(1175.9f, -11.05f);
        path.quadTo(1175.4f, -12.2f, 1173.05f, -12.7f);
        path.quadTo(1170.25f, -13.3f, 1169.65f, -13.8f);
        path.lineTo(1168.35f, -16.4f);
        path.quadTo(1167.3f, -18.7f, 1166.55f, -18.7f);
        path.quadTo(1165.0f, -18.7f, 1164.2f, -16.25f);
        path.quadTo(1163.7f, -14.55f, 1163.7f, -12.6f);
        path.quadTo(1163.7f, -11.25f, 1164.2f, -10.2f);
        path.lineTo(1165.05f, -8.6f);
        path.lineTo(1163.7f, -8.6f);
        path.quadTo(1163.35f, -8.95f, 1162.5f, -9.3f);
        path.quadTo(1161.65f, -9.7f, 1161.25f, -10.25f);
        path.quadTo(1160.5f, -7.9f, 1162.25f, -6.05f);
        path.quadTo(1164.35f, -3.95f, 1164.2f, -1.0f);
        path.quadTo(1164.15f, 4.55f, 1165.85f, 9.6f);
        path.quadTo(1166.4f, 11.1f, 1168.9f, 12.95f);
        path.quadTo(1171.45f, 14.85f, 1171.85f, 15.85f);
        path.quadTo(1172.15f, 16.65f, 1172.8f, 17.25f);
        path.close();
    }

    private static void draw_293(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_292(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_293(Path path)
    {
        path.reset();
        path.moveTo(-524.5f, 25.8f);
        path.quadTo(-528.75f, 25.8f, -531.8f, 28.8f);
        path.lineTo(-579.1f, 76.1f);
        path.quadTo(-582.05f, 79.05f, -582.05f, 83.3f);
        path.quadTo(-582.05f, 87.55f, -579.1f, 90.5f);
        path.lineTo(-531.8f, 137.8f);
        path.quadTo(-528.75f, 140.85f, -524.5f, 140.85f);
        path.quadTo(-520.35f, 140.75f, -517.4f, 137.8f);
        path.lineTo(-470.1f, 90.5f);
        path.quadTo(-467.05f, 87.5f, -467.0f, 83.3f);
        path.quadTo(-467.0f, 79.05f, -470.05f, 76.05f);
        path.lineTo(-517.3f, 28.75f);
        path.quadTo(-520.3f, 25.8f, -524.5f, 25.8f);
        path.close();
    }

    private static void draw_294(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_293(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(12.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void draw_295(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_293(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_294(Path path)
    {
        path.reset();
        path.moveTo(-514.0f, 50.55f);
        path.lineTo(-514.65f, 49.9f);
        path.lineTo(-516.1f, 48.55f);
        path.quadTo(-525.6f, 40.05f, -536.3f, 45.05f);
        path.quadTo(-540.1f, 46.75f, -545.65f, 51.4f);
        path.quadTo(-535.55f, 47.7f, -530.25f, 47.2f);
        path.quadTo(-521.7f, 46.55f, -514.0f, 50.55f);
        path.close();
        path.moveTo(-491.6f, 101.35f);
        path.quadTo(-490.5f, 94.25f, -493.65f, 86.3f);
        path.quadTo(-497.8f, 75.45f, -501.9f, 67.85f);
        path.quadTo(-507.05f, 58.1f, -512.95f, 51.7f);
        path.quadTo(-511.4f, 53.85f, -510.25f, 57.2f);
        path.quadTo(-508.55f, 61.7f, -507.9f, 66.25f);
        path.quadTo(-507.45f, 69.3f, -505.35f, 73.5f);
        path.quadTo(-504.25f, 75.8f, -501.35f, 80.5f);
        path.lineTo(-496.8f, 87.15f);
        path.quadTo(-493.9f, 91.35f, -492.95f, 94.7f);
        path.quadTo(-491.85f, 98.3f, -491.6f, 101.35f);
        path.close();
        path.moveTo(-552.7f, 99.75f);
        path.quadTo(-543.9f, 105.55f, -531.05f, 111.1f);
        path.quadTo(-518.95f, 116.4f, -510.85f, 117.3f);
        path.quadTo(-514.45f, 115.6f, -518.2f, 113.05f);
        path.quadTo(-528.6f, 106.15f, -531.0f, 104.85f);
        path.quadTo(-535.75f, 102.4f, -546.15f, 101.0f);
        path.lineTo(-552.7f, 99.75f);
        path.close();
        path.moveTo(-555.65f, 60.5f);
        path.lineTo(-557.2f, 62.05f);
        path.quadTo(-561.95f, 66.8f, -564.4f, 70.65f);
        path.lineTo(-565.35f, 72.9f);
        path.lineTo(-566.35f, 74.9f);
        path.quadTo(-567.9f, 78.15f, -567.9f, 81.35f);
        path.quadTo(-567.8f, 86.85f, -563.25f, 91.4f);
        path.lineTo(-561.85f, 92.8f);
        path.quadTo(-565.7f, 86.85f, -564.0f, 78.25f);
        path.quadTo(-562.25f, 69.1f, -555.65f, 60.5f);
        path.close();
    }

    private static Shader create_gradient_17()
    {
        int colors[] = {
            Color.argb(255, 255, 255, 255),
            Color.argb(255, 153, 153, 153)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new RadialGradient(0.0f, 0.0f, 819.2f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_296(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_294(path);
        Shader shader = create_gradient_17();
        shader.setLocalMatrix(createMatrix(0.0411987f, -0.0411987f, 0.0603485f, 0.0603485f, -527.2f, 82.15f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_295(Path path)
    {
        path.reset();
        path.moveTo(-512.95f, 51.7f);
        path.lineTo(-514.0f, 50.55f);
        path.quadTo(-521.7f, 46.55f, -530.25f, 47.2f);
        path.quadTo(-535.55f, 47.7f, -545.65f, 51.4f);
        path.lineTo(-553.15f, 58.1f);
        path.lineTo(-555.65f, 60.5f);
        path.quadTo(-562.25f, 69.1f, -564.0f, 78.25f);
        path.quadTo(-565.7f, 86.85f, -561.85f, 92.8f);
        path.quadTo(-558.0f, 96.35f, -552.7f, 99.75f);
        path.lineTo(-546.15f, 101.0f);
        path.quadTo(-535.75f, 102.4f, -531.0f, 104.85f);
        path.quadTo(-528.6f, 106.15f, -518.2f, 113.05f);
        path.quadTo(-514.45f, 115.6f, -510.85f, 117.3f);
        path.quadTo(-502.15f, 118.4f, -498.25f, 114.5f);
        path.quadTo(-492.7f, 108.95f, -491.6f, 101.45f);
        path.lineTo(-491.6f, 101.35f);
        path.quadTo(-491.85f, 98.3f, -492.95f, 94.7f);
        path.quadTo(-493.9f, 91.35f, -496.8f, 87.15f);
        path.lineTo(-501.35f, 80.5f);
        path.quadTo(-504.25f, 75.8f, -505.35f, 73.5f);
        path.quadTo(-507.45f, 69.3f, -507.9f, 66.25f);
        path.quadTo(-508.55f, 61.7f, -510.25f, 57.2f);
        path.quadTo(-511.4f, 53.85f, -512.95f, 51.7f);
        path.close();
    }

    private static void draw_297(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_295(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_296(Path path)
    {
        path.reset();
        path.moveTo(-507.2f, 112.75f);
        path.quadTo(-504.9f, 111.45f, -502.95f, 109.5f);
        path.quadTo(-500.15f, 106.7f, -498.5f, 103.95f);
        path.lineTo(-498.35f, 103.7f);
        path.lineTo(-498.55f, 103.6f);
        path.quadTo(-498.65f, 101.6f, -500.2f, 100.05f);
        path.quadTo(-501.05f, 99.2f, -502.1f, 98.75f);
        path.lineTo(-505.2f, 98.85f);
        path.lineTo(-505.3f, 98.75f);
        path.lineTo(-506.1f, 99.25f);
        path.lineTo(-507.65f, 100.3f);
        path.quadTo(-508.3f, 100.95f, -508.85f, 103.3f);
        path.lineTo(-508.9f, 103.35f);
        path.lineTo(-509.0f, 103.35f);
        path.lineTo(-510.15f, 103.3f);
        path.lineTo(-510.4f, 103.35f);
        path.quadTo(-510.6f, 103.35f, -511.15f, 103.9f);
        path.lineTo(-511.05f, 104.1f);
        path.quadTo(-513.35f, 106.4f, -512.9f, 108.75f);
        path.lineTo(-512.75f, 109.3f);
        path.lineTo(-512.6f, 109.55f);
        path.lineTo(-512.5f, 109.95f);
        path.lineTo(-511.75f, 111.1f);
        path.quadTo(-510.05f, 112.8f, -507.2f, 112.75f);
        path.close();
    }

    private static void draw_298(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_296(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_297(Path path)
    {
        path.reset();
        path.moveTo(-498.35f, 103.7f);
        path.lineTo(-498.25f, 103.4f);
        path.quadTo(-496.0f, 99.35f, -497.9f, 97.45f);
        path.quadTo(-498.6f, 96.75f, -499.75f, 96.3f);
        path.quadTo(-499.25f, 95.7f, -499.1f, 94.95f);
        path.lineTo(-498.75f, 92.6f);
        path.lineTo(-498.85f, 92.6f);
        path.quadTo(-499.25f, 94.1f, -499.4f, 94.25f);
        path.lineTo(-500.4f, 95.35f);
        path.lineTo(-501.05f, 96.0f);
        path.lineTo(-500.85f, 95.9f);
        path.lineTo(-501.5f, 96.45f);
        path.lineTo(-503.05f, 97.4f);
        path.lineTo(-505.25f, 98.7f);
        path.lineTo(-505.3f, 98.75f);
        path.lineTo(-505.2f, 98.85f);
        path.lineTo(-502.1f, 98.75f);
        path.quadTo(-501.05f, 99.2f, -500.2f, 100.05f);
        path.quadTo(-498.65f, 101.6f, -498.55f, 103.6f);
        path.lineTo(-498.35f, 103.7f);
        path.close();
        path.moveTo(-511.15f, 103.9f);
        path.lineTo(-511.85f, 104.5f);
        path.lineTo(-513.65f, 107.0f);
        path.lineTo(-515.6f, 109.65f);
        path.quadTo(-516.5f, 110.55f, -517.55f, 111.0f);
        path.lineTo(-515.5f, 110.45f);
        path.quadTo(-515.5f, 110.25f, -515.15f, 110.3f);
        path.lineTo(-515.05f, 110.3f);
        path.lineTo(-514.55f, 110.7f);
        path.quadTo(-514.2f, 111.05f, -513.8f, 111.95f);
        path.lineTo(-513.1f, 113.15f);
        path.quadTo(-511.45f, 114.8f, -507.9f, 113.05f);
        path.lineTo(-507.2f, 112.75f);
        path.quadTo(-510.05f, 112.8f, -511.75f, 111.1f);
        path.lineTo(-512.5f, 109.95f);
        path.lineTo(-512.6f, 109.55f);
        path.lineTo(-512.75f, 109.3f);
        path.lineTo(-512.9f, 108.75f);
        path.quadTo(-513.35f, 106.4f, -511.05f, 104.1f);
        path.lineTo(-511.15f, 103.9f);
        path.close();
    }

    private static void draw_299(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_297(path);
        paint.setColor(Color.argb(255, 153, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_298(Path path)
    {
        path.reset();
        path.moveTo(-519.95f, 97.9f);
        path.lineTo(-517.85f, 98.4f);
        path.quadTo(-514.55f, 99.0f, -513.3f, 97.75f);
        path.quadTo(-511.8f, 96.25f, -512.65f, 93.5f);
        path.quadTo(-513.9f, 90.65f, -513.9f, 89.65f);
        path.lineTo(-513.95f, 92.8f);
        path.quadTo(-514.05f, 95.6f, -514.95f, 96.5f);
        path.quadTo(-515.7f, 97.25f, -518.05f, 97.6f);
        path.lineTo(-519.95f, 97.9f);
        path.close();
    }

    private static void draw_300(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_298(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_299(Path path)
    {
        path.reset();
        path.moveTo(-548.75f, 88.6f);
        path.lineTo(-549.35f, 89.0f);
        path.lineTo(-549.45f, 89.0f);
        path.quadTo(-550.05f, 89.6f, -549.85f, 90.9f);
        path.quadTo(-549.65f, 92.0f, -548.85f, 92.8f);
        path.quadTo(-547.2f, 94.45f, -544.3f, 91.55f);
        path.quadTo(-542.15f, 89.4f, -543.95f, 87.6f);
        path.quadTo(-545.1f, 86.45f, -546.45f, 87.2f);
        path.lineTo(-547.55f, 87.9f);
        path.lineTo(-548.75f, 88.6f);
        path.close();
    }

    private static void draw_301(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_299(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_300(Path path)
    {
        path.reset();
        path.moveTo(-547.55f, 87.9f);
        path.lineTo(-546.45f, 87.2f);
        path.quadTo(-545.1f, 86.45f, -543.95f, 87.6f);
        path.quadTo(-542.15f, 89.4f, -544.3f, 91.55f);
        path.quadTo(-547.2f, 94.45f, -548.85f, 92.8f);
        path.quadTo(-549.65f, 92.0f, -549.85f, 90.9f);
        path.quadTo(-550.05f, 89.6f, -549.45f, 89.0f);
        path.lineTo(-549.35f, 89.0f);
        path.lineTo(-548.75f, 88.6f);
        path.lineTo(-547.9f, 87.95f);
        path.lineTo(-547.55f, 87.9f);
        path.close();
        path.moveTo(-543.6f, 80.25f);
        path.quadTo(-549.7f, 80.15f, -556.2f, 86.65f);
        path.quadTo(-558.6f, 89.05f, -559.4f, 91.85f);
        path.lineTo(-559.8f, 94.05f);
        path.lineTo(-559.15f, 93.1f);
        path.lineTo(-556.5f, 89.75f);
        path.quadTo(-550.25f, 83.5f, -544.75f, 82.8f);
        path.lineTo(-543.75f, 82.7f);
        path.lineTo(-542.85f, 82.4f);
        path.quadTo(-542.25f, 81.8f, -542.85f, 81.0f);
        path.lineTo(-543.6f, 80.25f);
        path.close();
        path.moveTo(-540.95f, 83.7f);
        path.quadTo(-544.3f, 83.05f, -549.35f, 87.4f);
        path.quadTo(-556.3f, 93.15f, -558.9f, 93.25f);
        path.quadTo(-554.3f, 97.15f, -549.35f, 97.1f);
        path.quadTo(-544.05f, 97.1f, -539.75f, 92.8f);
        path.quadTo(-535.65f, 88.7f, -540.1f, 84.45f);
        path.lineTo(-540.95f, 83.7f);
        path.close();
    }

    private static void draw_302(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_300(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_301(Path path)
    {
        path.reset();
        path.moveTo(-543.6f, 80.25f);
        path.lineTo(-542.85f, 81.0f);
        path.quadTo(-542.25f, 81.8f, -542.85f, 82.4f);
        path.lineTo(-542.8f, 82.75f);
        path.lineTo(-541.6f, 82.95f);
        path.lineTo(-539.25f, 83.6f);
        path.quadTo(-536.35f, 84.9f, -530.5f, 90.95f);
        path.quadTo(-525.2f, 96.45f, -521.4f, 97.15f);
        path.lineTo(-521.8f, 96.45f);
        path.lineTo(-521.85f, 96.1f);
        path.quadTo(-523.55f, 94.0f, -527.55f, 90.0f);
        path.quadTo(-535.85f, 81.7f, -541.45f, 80.5f);
        path.lineTo(-543.6f, 80.25f);
        path.close();
    }

    private static void draw_303(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_301(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_302(Path path)
    {
        path.reset();
        path.moveTo(-522.95f, 63.3f);
        path.lineTo(-522.25f, 62.1f);
        path.lineTo(-521.85f, 61.5f);
        path.lineTo(-521.85f, 61.4f);
        path.quadTo(-521.25f, 60.8f, -519.95f, 61.0f);
        path.quadTo(-518.85f, 61.2f, -518.05f, 62.0f);
        path.quadTo(-516.4f, 63.65f, -519.3f, 66.55f);
        path.quadTo(-521.45f, 68.7f, -523.25f, 66.9f);
        path.quadTo(-524.4f, 65.75f, -523.65f, 64.4f);
        path.lineTo(-522.95f, 63.3f);
        path.close();
    }

    private static void draw_304(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_302(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_303(Path path)
    {
        path.reset();
        path.moveTo(-522.25f, 62.1f);
        path.lineTo(-522.9f, 62.95f);
        path.lineTo(-522.95f, 63.3f);
        path.lineTo(-523.65f, 64.4f);
        path.quadTo(-524.4f, 65.75f, -523.25f, 66.9f);
        path.quadTo(-521.45f, 68.7f, -519.3f, 66.55f);
        path.quadTo(-516.4f, 63.65f, -518.05f, 62.0f);
        path.quadTo(-518.85f, 61.2f, -519.95f, 61.0f);
        path.quadTo(-521.25f, 60.8f, -521.85f, 61.4f);
        path.lineTo(-521.85f, 61.5f);
        path.lineTo(-522.25f, 62.1f);
        path.close();
        path.moveTo(-528.45f, 68.0f);
        path.quadTo(-529.05f, 68.6f, -529.85f, 68.0f);
        path.lineTo(-530.6f, 67.25f);
        path.quadTo(-530.7f, 61.15f, -524.2f, 54.65f);
        path.quadTo(-521.8f, 52.25f, -519.0f, 51.45f);
        path.lineTo(-516.8f, 51.05f);
        path.lineTo(-517.75f, 51.7f);
        path.quadTo(-519.65f, 52.9f, -521.1f, 54.35f);
        path.quadTo(-527.35f, 60.6f, -528.05f, 66.1f);
        path.lineTo(-528.15f, 67.1f);
        path.lineTo(-528.45f, 68.0f);
        path.close();
        path.moveTo(-527.15f, 69.9f);
        path.quadTo(-527.8f, 66.55f, -523.45f, 61.5f);
        path.quadTo(-517.7f, 54.55f, -517.6f, 51.95f);
        path.quadTo(-513.7f, 56.55f, -513.75f, 61.5f);
        path.quadTo(-513.75f, 66.8f, -518.05f, 71.1f);
        path.quadTo(-522.15f, 75.2f, -526.4f, 70.75f);
        path.lineTo(-527.15f, 69.9f);
        path.close();
    }

    private static void draw_305(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_303(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_304(Path path)
    {
        path.reset();
        path.moveTo(-528.45f, 68.0f);
        path.lineTo(-528.1f, 68.05f);
        path.lineTo(-527.9f, 69.25f);
        path.lineTo(-527.25f, 71.6f);
        path.quadTo(-525.95f, 74.5f, -519.9f, 80.35f);
        path.quadTo(-514.4f, 85.65f, -513.7f, 89.45f);
        path.quadTo(-514.05f, 89.1f, -514.4f, 89.05f);
        path.lineTo(-514.75f, 89.0f);
        path.lineTo(-520.85f, 83.3f);
        path.quadTo(-529.15f, 75.0f, -530.35f, 69.4f);
        path.lineTo(-530.6f, 67.25f);
        path.lineTo(-529.85f, 68.0f);
        path.quadTo(-529.05f, 68.6f, -528.45f, 68.0f);
        path.close();
    }

    private static void draw_306(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_304(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_305(Path path)
    {
        path.reset();
        path.moveTo(1146.2f, 59.95f);
        path.lineTo(1076.0f, 41.15f);
        path.quadTo(1071.65f, 39.95f, 1067.65f, 42.25f);
        path.quadTo(1063.65f, 44.55f, 1062.5f, 49.0f);
        path.lineTo(1043.7f, 119.15f);
        path.quadTo(1042.5f, 123.6f, 1044.8f, 127.6f);
        path.quadTo(1047.15f, 131.5f, 1051.5f, 132.7f);
        path.lineTo(1121.7f, 151.5f);
        path.quadTo(1126.1f, 152.65f, 1130.05f, 150.45f);
        path.quadTo(1134.05f, 148.15f, 1135.25f, 143.7f);
        path.lineTo(1154.05f, 73.55f);
        path.quadTo(1155.2f, 69.1f, 1152.9f, 65.1f);
        path.quadTo(1150.6f, 61.1f, 1146.2f, 59.95f);
        path.close();
    }

    private static void draw_307(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_305(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(12.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static Shader create_gradient_18()
    {
        int colors[] = {
            Color.argb(255, 255, 255, 255),
            Color.argb(255, 0, 0, 0)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new RadialGradient(0.0f, 0.0f, 819.2f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_308(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_305(path);
        Shader shader = create_gradient_18();
        shader.setLocalMatrix(createMatrix(0.0736847f, 0.0197449f, -0.0197449f, 0.0736847f, 1106.3f, 106.85f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_306(Path path)
    {
        path.reset();
        path.moveTo(1092.55f, 45.55f);
        path.quadTo(1092.2f, 45.8f, 1092.15f, 46.45f);
        path.lineTo(1092.1f, 47.95f);
        path.lineTo(1092.45f, 49.55f);
        path.lineTo(1092.95f, 50.95f);
        path.lineTo(1093.15f, 52.55f);
        path.lineTo(1092.7f, 53.0f);
        path.lineTo(1092.35f, 53.7f);
        path.lineTo(1092.15f, 54.3f);
        path.lineTo(1091.7f, 54.7f);
        path.lineTo(1091.25f, 55.2f);
        path.lineTo(1090.85f, 55.6f);
        path.lineTo(1088.9f, 55.75f);
        path.quadTo(1088.25f, 56.15f, 1088.0f, 56.75f);
        path.lineTo(1087.4f, 57.85f);
        path.lineTo(1086.85f, 58.8f);
        path.lineTo(1086.1f, 59.7f);
        path.quadTo(1085.35f, 59.9f, 1084.7f, 60.25f);
        path.lineTo(1083.4f, 60.85f);
        path.quadTo(1082.9f, 60.95f, 1082.5f, 61.2f);
        path.quadTo(1082.9f, 60.0f, 1083.7f, 59.0f);
        path.quadTo(1085.8f, 56.4f, 1086.4f, 54.15f);
        path.quadTo(1087.15f, 53.7f, 1087.2f, 52.4f);
        path.quadTo(1087.2f, 50.85f, 1086.5f, 49.55f);
        path.quadTo(1085.8f, 48.15f, 1085.9f, 46.55f);
        path.lineTo(1086.1f, 43.85f);
        path.lineTo(1085.15f, 43.6f);
        path.lineTo(1085.05f, 45.25f);
        path.quadTo(1084.85f, 46.7f, 1085.15f, 48.2f);
        path.lineTo(1085.8f, 51.5f);
        path.lineTo(1086.15f, 53.6f);
        path.lineTo(1086.0f, 53.6f);
        path.lineTo(1085.65f, 53.85f);
        path.lineTo(1083.05f, 57.9f);
        path.quadTo(1081.1f, 60.35f, 1080.3f, 63.65f);
        path.quadTo(1079.65f, 66.8f, 1081.0f, 69.75f);
        path.quadTo(1082.5f, 73.0f, 1082.45f, 76.6f);
        path.quadTo(1082.5f, 79.65f, 1080.8f, 82.2f);
        path.lineTo(1080.55f, 82.3f);
        path.lineTo(1079.55f, 82.3f);
        path.lineTo(1079.15f, 82.35f);
        path.lineTo(1079.05f, 82.65f);
        path.lineTo(1078.45f, 84.8f);
        path.lineTo(1077.5f, 86.75f);
        path.quadTo(1076.6f, 88.2f, 1074.9f, 88.45f);
        path.quadTo(1073.05f, 88.75f, 1071.5f, 89.55f);
        path.lineTo(1069.65f, 89.3f);
        path.lineTo(1068.55f, 89.45f);
        path.quadTo(1068.2f, 89.45f, 1067.95f, 89.65f);
        path.quadTo(1067.65f, 89.85f, 1067.6f, 90.15f);
        path.lineTo(1066.9f, 91.55f);
        path.lineTo(1066.1f, 93.1f);
        path.lineTo(1065.65f, 94.2f);
        path.lineTo(1065.3f, 93.1f);
        path.quadTo(1063.0f, 85.0f, 1064.3f, 76.1f);
        path.quadTo(1064.55f, 74.5f, 1064.1f, 72.95f);
        path.quadTo(1061.9f, 65.75f, 1069.1f, 60.65f);
        path.quadTo(1069.7f, 59.2f, 1069.8f, 57.65f);
        path.lineTo(1070.15f, 53.4f);
        path.lineTo(1070.15f, 49.45f);
        path.lineTo(1069.55f, 45.2f);
        path.quadTo(1069.2f, 43.35f, 1068.3f, 42.0f);
        path.quadTo(1067.9f, 42.1f, 1067.65f, 42.25f);
        path.lineTo(1066.65f, 42.9f);
        path.lineTo(1067.1f, 44.2f);
        path.quadTo(1067.95f, 46.05f, 1068.25f, 48.15f);
        path.lineTo(1068.5f, 51.95f);
        path.quadTo(1068.65f, 53.8f, 1068.1f, 55.65f);
        path.quadTo(1067.6f, 57.15f, 1067.55f, 58.75f);
        path.lineTo(1065.55f, 60.7f);
        path.lineTo(1062.65f, 64.2f);
        path.quadTo(1061.35f, 65.8f, 1060.65f, 67.75f);
        path.quadTo(1060.0f, 69.65f, 1060.15f, 71.6f);
        path.quadTo(1060.45f, 74.0f, 1062.15f, 75.7f);
        path.quadTo(1062.35f, 80.7f, 1061.9f, 85.8f);
        path.quadTo(1061.25f, 93.55f, 1063.4f, 101.15f);
        path.quadTo(1063.75f, 102.8f, 1063.55f, 104.25f);
        path.quadTo(1062.5f, 102.75f, 1060.3f, 101.65f);
        path.quadTo(1058.55f, 100.75f, 1057.55f, 99.15f);
        path.quadTo(1057.0f, 98.15f, 1056.75f, 96.9f);
        path.lineTo(1056.35f, 94.8f);
        path.quadTo(1056.05f, 93.6f, 1056.25f, 92.25f);
        path.lineTo(1056.15f, 92.0f);
        path.lineTo(1056.0f, 91.65f);
        path.lineTo(1056.15f, 91.65f);
        path.lineTo(1056.4f, 91.55f);
        path.lineTo(1056.25f, 91.35f);
        path.lineTo(1055.55f, 90.95f);
        path.lineTo(1054.9f, 89.95f);
        path.quadTo(1055.0f, 89.0f, 1054.45f, 88.1f);
        path.quadTo(1053.85f, 87.1f, 1054.2f, 85.95f);
        path.lineTo(1054.45f, 84.8f);
        path.lineTo(1055.3f, 83.65f);
        path.lineTo(1056.05f, 82.4f);
        path.lineTo(1056.5f, 81.1f);
        path.lineTo(1056.9f, 79.8f);
        path.quadTo(1057.2f, 79.1f, 1057.1f, 78.4f);
        path.quadTo(1056.3f, 78.15f, 1056.2f, 79.1f);
        path.lineTo(1055.85f, 80.75f);
        path.lineTo(1055.2f, 82.2f);
        path.lineTo(1054.4f, 83.5f);
        path.quadTo(1054.35f, 82.5f, 1054.45f, 81.4f);
        path.lineTo(1054.2f, 79.95f);
        path.lineTo(1053.6f, 82.1f);
        path.lineTo(1053.6f, 83.3f);
        path.quadTo(1053.65f, 84.6f, 1053.3f, 85.8f);
        path.quadTo(1052.95f, 87.25f, 1053.6f, 88.65f);
        path.lineTo(1053.45f, 88.5f);
        path.lineTo(1052.15f, 87.6f);
        path.lineTo(1051.55f, 89.75f);
        path.lineTo(1052.45f, 90.4f);
        path.quadTo(1053.5f, 91.05f, 1054.2f, 92.3f);
        path.lineTo(1054.1f, 92.25f);
        path.lineTo(1052.6f, 92.85f);
        path.lineTo(1051.0f, 93.15f);
        path.lineTo(1050.6f, 93.25f);
        path.lineTo(1050.4f, 94.1f);
        path.lineTo(1051.45f, 93.85f);
        path.lineTo(1053.55f, 93.45f);
        path.lineTo(1054.2f, 93.25f);
        path.lineTo(1054.25f, 95.1f);
        path.lineTo(1055.05f, 98.7f);
        path.quadTo(1055.65f, 100.3f, 1056.8f, 101.45f);
        path.lineTo(1058.85f, 103.25f);
        path.quadTo(1061.05f, 104.9f, 1063.5f, 104.5f);
        path.lineTo(1063.4f, 104.75f);
        path.quadTo(1061.7f, 110.45f, 1057.7f, 115.5f);
        path.quadTo(1056.1f, 117.5f, 1055.1f, 119.7f);
        path.lineTo(1054.95f, 118.75f);
        path.lineTo(1053.9f, 115.0f);
        path.quadTo(1053.4f, 113.4f, 1054.05f, 111.75f);
        path.lineTo(1054.4f, 110.8f);
        path.lineTo(1054.45f, 110.5f);
        path.lineTo(1054.35f, 109.85f);
        path.lineTo(1054.25f, 108.1f);
        path.lineTo(1054.4f, 106.15f);
        path.lineTo(1054.05f, 105.8f);
        path.quadTo(1053.1f, 104.7f, 1051.65f, 104.6f);
        path.lineTo(1048.7f, 104.15f);
        path.lineTo(1048.65f, 104.1f);
        path.lineTo(1048.55f, 103.85f);
        path.quadTo(1048.2f, 103.65f, 1048.1f, 104.0f);
        path.lineTo(1047.75f, 103.9f);
        path.lineTo(1047.7f, 104.2f);
        path.lineTo(1048.0f, 104.4f);
        path.lineTo(1047.9f, 104.6f);
        path.lineTo(1047.5f, 104.9f);
        path.lineTo(1047.1f, 106.35f);
        path.lineTo(1048.4f, 105.5f);
        path.lineTo(1048.5f, 105.2f);
        path.lineTo(1048.5f, 104.9f);
        path.lineTo(1048.6f, 104.65f);
        path.lineTo(1053.4f, 106.75f);
        path.quadTo(1053.3f, 107.85f, 1053.5f, 109.0f);
        path.quadTo(1053.6f, 110.55f, 1053.1f, 112.1f);
        path.quadTo(1052.55f, 113.7f, 1053.05f, 115.15f);
        path.lineTo(1053.75f, 116.65f);
        path.lineTo(1053.85f, 116.9f);
        path.lineTo(1054.05f, 117.5f);
        path.quadTo(1054.5f, 118.35f, 1054.45f, 119.35f);
        path.lineTo(1054.7f, 120.6f);
        path.quadTo(1053.05f, 124.75f, 1053.95f, 129.55f);
        path.lineTo(1054.8f, 133.55f);
        path.lineTo(1057.45f, 134.25f);
        path.quadTo(1056.8f, 131.4f, 1056.6f, 128.6f);
        path.quadTo(1056.1f, 122.0f, 1059.3f, 116.6f);
        path.lineTo(1062.0f, 115.85f);
        path.quadTo(1065.7f, 114.75f, 1069.25f, 116.55f);
        path.quadTo(1071.6f, 117.7f, 1074.3f, 117.9f);
        path.quadTo(1077.35f, 118.0f, 1078.85f, 115.95f);
        path.quadTo(1081.05f, 112.55f, 1084.8f, 111.1f);
        path.quadTo(1088.45f, 109.75f, 1090.8f, 107.0f);
        path.quadTo(1089.4f, 107.35f, 1088.05f, 108.2f);
        path.lineTo(1085.15f, 110.0f);
        path.lineTo(1082.3f, 111.55f);
        path.quadTo(1080.55f, 112.45f, 1079.75f, 113.9f);
        path.quadTo(1079.05f, 115.25f, 1077.95f, 116.3f);
        path.lineTo(1075.05f, 116.3f);
        path.quadTo(1070.75f, 116.0f, 1066.6f, 114.65f);
        path.lineTo(1063.4f, 114.25f);
        path.quadTo(1061.3f, 114.4f, 1060.0f, 115.4f);
        path.quadTo(1061.3f, 113.55f, 1062.95f, 111.85f);
        path.quadTo(1064.75f, 110.1f, 1065.4f, 108.0f);
        path.quadTo(1067.15f, 101.95f, 1066.05f, 95.9f);
        path.lineTo(1066.3f, 94.65f);
        path.lineTo(1067.0f, 93.05f);
        path.lineTo(1067.85f, 91.6f);
        path.quadTo(1068.15f, 90.95f, 1068.8f, 90.45f);
        path.quadTo(1070.85f, 91.05f, 1072.75f, 90.4f);
        path.quadTo(1074.65f, 89.75f, 1076.4f, 88.9f);
        path.lineTo(1078.65f, 87.55f);
        path.lineTo(1078.75f, 87.05f);
        path.lineTo(1078.95f, 86.45f);
        path.lineTo(1079.1f, 85.95f);
        path.lineTo(1079.25f, 85.4f);
        path.lineTo(1079.4f, 84.9f);
        path.lineTo(1079.5f, 84.3f);
        path.lineTo(1079.65f, 83.8f);
        path.lineTo(1079.75f, 83.6f);
        path.lineTo(1080.4f, 83.6f);
        path.lineTo(1080.75f, 83.65f);
        path.lineTo(1081.15f, 83.6f);
        path.quadTo(1082.75f, 81.65f, 1083.1f, 79.0f);
        path.quadTo(1083.65f, 75.55f, 1082.85f, 72.0f);
        path.quadTo(1082.05f, 68.75f, 1081.75f, 65.45f);
        path.quadTo(1081.55f, 63.55f, 1082.15f, 62.0f);
        path.lineTo(1082.65f, 61.85f);
        path.lineTo(1084.45f, 61.25f);
        path.lineTo(1085.45f, 60.85f);
        path.quadTo(1086.2f, 60.7f, 1086.85f, 60.2f);
        path.lineTo(1087.15f, 59.75f);
        path.lineTo(1087.5f, 59.25f);
        path.lineTo(1088.0f, 58.55f);
        path.lineTo(1088.35f, 58.0f);
        path.lineTo(1089.0f, 57.35f);
        path.lineTo(1089.4f, 56.95f);
        path.lineTo(1091.45f, 56.45f);
        path.lineTo(1092.55f, 55.6f);
        path.lineTo(1093.45f, 54.5f);
        path.lineTo(1094.05f, 53.2f);
        path.lineTo(1094.45f, 51.85f);
        path.lineTo(1094.35f, 51.55f);
        path.quadTo(1093.9f, 51.05f, 1093.8f, 50.6f);
        path.lineTo(1093.65f, 49.6f);
        path.lineTo(1093.55f, 48.65f);
        path.lineTo(1093.45f, 47.8f);
        path.lineTo(1093.15f, 46.9f);
        path.lineTo(1093.2f, 46.6f);
        path.lineTo(1093.25f, 46.3f);
        path.lineTo(1093.5f, 46.05f);
        path.lineTo(1093.55f, 45.8f);
        path.lineTo(1092.55f, 45.55f);
        path.close();
        path.moveTo(1098.1f, 73.7f);
        path.quadTo(1097.8f, 73.8f, 1097.4f, 74.05f);
        path.lineTo(1096.95f, 74.45f);
        path.lineTo(1096.45f, 74.9f);
        path.quadTo(1096.15f, 75.05f, 1095.9f, 75.3f);
        path.lineTo(1095.55f, 76.65f);
        path.lineTo(1095.25f, 77.75f);
        path.lineTo(1095.0f, 78.45f);
        path.quadTo(1094.8f, 79.2f, 1094.95f, 79.85f);
        path.quadTo(1095.15f, 80.75f, 1094.7f, 81.55f);
        path.quadTo(1094.55f, 81.9f, 1094.55f, 82.2f);
        path.lineTo(1093.15f, 83.5f);
        path.quadTo(1091.75f, 85.2f, 1089.55f, 86.0f);
        path.quadTo(1087.65f, 86.65f, 1086.55f, 88.25f);
        path.lineTo(1084.45f, 91.15f);
        path.lineTo(1082.8f, 92.75f);
        path.lineTo(1082.75f, 92.8f);
        path.lineTo(1078.95f, 92.5f);
        path.lineTo(1078.6f, 92.75f);
        path.lineTo(1078.25f, 92.85f);
        path.lineTo(1077.9f, 93.05f);
        path.lineTo(1077.65f, 93.35f);
        path.lineTo(1077.55f, 93.6f);
        path.quadTo(1075.4f, 93.8f, 1073.45f, 92.8f);
        path.lineTo(1072.5f, 91.85f);
        path.lineTo(1072.1f, 91.5f);
        path.lineTo(1072.05f, 91.45f);
        path.quadTo(1071.7f, 90.5f, 1071.15f, 90.95f);
        path.lineTo(1071.85f, 91.95f);
        path.lineTo(1072.8f, 92.95f);
        path.lineTo(1073.15f, 93.4f);
        path.quadTo(1075.1f, 94.85f, 1077.5f, 94.55f);
        path.lineTo(1077.9f, 94.35f);
        path.lineTo(1078.3f, 94.2f);
        path.lineTo(1078.4f, 93.95f);
        path.lineTo(1078.6f, 93.8f);
        path.lineTo(1078.9f, 93.55f);
        path.lineTo(1079.25f, 93.45f);
        path.lineTo(1083.2f, 93.8f);
        path.lineTo(1084.5f, 92.5f);
        path.lineTo(1086.95f, 89.4f);
        path.quadTo(1087.75f, 88.05f, 1089.2f, 87.35f);
        path.quadTo(1091.35f, 86.35f, 1093.25f, 84.75f);
        path.lineTo(1096.05f, 82.4f);
        path.lineTo(1097.9f, 81.1f);
        path.lineTo(1100.1f, 81.5f);
        path.lineTo(1100.45f, 81.45f);
        path.lineTo(1101.05f, 81.1f);
        path.lineTo(1101.3f, 80.65f);
        path.lineTo(1101.05f, 80.6f);
        path.lineTo(1100.8f, 80.5f);
        path.lineTo(1097.9f, 80.05f);
        path.lineTo(1096.5f, 80.8f);
        path.lineTo(1095.5f, 81.45f);
        path.lineTo(1095.7f, 80.7f);
        path.lineTo(1095.75f, 79.85f);
        path.quadTo(1095.7f, 79.15f, 1096.0f, 78.45f);
        path.lineTo(1096.35f, 77.15f);
        path.lineTo(1096.7f, 75.8f);
        path.lineTo(1097.3f, 75.35f);
        path.quadTo(1097.5f, 75.15f, 1097.75f, 75.05f);
        path.lineTo(1098.85f, 74.65f);
        path.lineTo(1099.25f, 74.5f);
        path.lineTo(1099.55f, 73.95f);
        path.lineTo(1100.0f, 73.15f);
        path.lineTo(1100.3f, 72.5f);
        path.lineTo(1100.55f, 71.65f);
        path.lineTo(1100.8f, 70.85f);
        path.quadTo(1100.9f, 70.35f, 1100.6f, 69.95f);
        path.lineTo(1100.35f, 70.0f);
        path.quadTo(1100.15f, 70.0f, 1100.05f, 70.15f);
        path.lineTo(1099.9f, 70.6f);
        path.lineTo(1099.7f, 71.4f);
        path.lineTo(1099.45f, 72.25f);
        path.lineTo(1098.9f, 73.05f);
        path.lineTo(1098.7f, 73.4f);
        path.lineTo(1098.1f, 73.7f);
        path.close();
        path.moveTo(1084.8f, 49.3f);
        path.quadTo(1083.6f, 48.5f, 1082.95f, 47.35f);
        path.quadTo(1082.3f, 46.1f, 1081.15f, 45.15f);
        path.quadTo(1080.2f, 44.15f, 1079.65f, 42.8f);
        path.lineTo(1079.45f, 42.05f);
        path.lineTo(1078.25f, 41.7f);
        path.lineTo(1078.35f, 42.4f);
        path.quadTo(1079.05f, 44.4f, 1080.2f, 46.0f);
        path.quadTo(1082.15f, 48.65f, 1084.8f, 49.3f);
        path.close();
        path.moveTo(1144.7f, 76.45f);
        path.lineTo(1144.65f, 76.75f);
        path.quadTo(1144.6f, 77.5f, 1144.1f, 78.0f);
        path.lineTo(1143.3f, 79.25f);
        path.lineTo(1142.65f, 80.2f);
        path.lineTo(1141.6f, 81.3f);
        path.lineTo(1140.7f, 82.65f);
        path.lineTo(1140.35f, 82.85f);
        path.lineTo(1140.05f, 82.9f);
        path.lineTo(1139.55f, 82.9f);
        path.quadTo(1138.35f, 79.35f, 1138.4f, 75.8f);
        path.quadTo(1138.45f, 69.7f, 1136.0f, 63.6f);
        path.quadTo(1134.55f, 59.85f, 1132.8f, 56.35f);
        path.lineTo(1131.45f, 56.0f);
        path.quadTo(1132.2f, 59.1f, 1133.55f, 62.9f);
        path.quadTo(1135.2f, 67.2f, 1135.55f, 71.45f);
        path.lineTo(1136.25f, 75.8f);
        path.quadTo(1132.15f, 76.8f, 1129.2f, 74.35f);
        path.lineTo(1129.05f, 72.9f);
        path.lineTo(1128.9f, 71.7f);
        path.lineTo(1128.6f, 69.95f);
        path.lineTo(1128.1f, 68.2f);
        path.quadTo(1127.5f, 66.8f, 1126.4f, 66.15f);
        path.lineTo(1126.55f, 65.95f);
        path.lineTo(1126.7f, 65.7f);
        path.lineTo(1126.9f, 65.2f);
        path.lineTo(1127.05f, 64.7f);
        path.lineTo(1127.2f, 64.1f);
        path.lineTo(1127.25f, 63.6f);
        path.lineTo(1127.2f, 63.0f);
        path.lineTo(1127.1f, 62.45f);
        path.lineTo(1126.85f, 62.5f);
        path.quadTo(1126.6f, 62.85f, 1126.7f, 63.15f);
        path.lineTo(1126.65f, 64.1f);
        path.lineTo(1126.55f, 65.15f);
        path.lineTo(1126.15f, 66.0f);
        path.lineTo(1125.7f, 65.75f);
        path.lineTo(1125.55f, 65.4f);
        path.lineTo(1125.35f, 64.1f);
        path.lineTo(1125.3f, 62.9f);
        path.lineTo(1124.95f, 61.75f);
        path.quadTo(1124.6f, 61.2f, 1124.7f, 60.55f);
        path.lineTo(1124.5f, 59.4f);
        path.quadTo(1123.8f, 59.45f, 1123.85f, 60.45f);
        path.lineTo(1124.05f, 61.6f);
        path.quadTo(1124.4f, 62.6f, 1124.3f, 63.7f);
        path.quadTo(1124.25f, 64.85f, 1125.0f, 65.75f);
        path.lineTo(1127.45f, 68.4f);
        path.lineTo(1127.45f, 69.0f);
        path.lineTo(1127.5f, 70.25f);
        path.lineTo(1127.9f, 71.45f);
        path.lineTo(1128.3f, 72.55f);
        path.lineTo(1128.3f, 73.85f);
        path.quadTo(1128.1f, 74.6f, 1128.45f, 75.25f);
        path.quadTo(1130.9f, 77.85f, 1134.6f, 77.65f);
        path.quadTo(1135.8f, 77.6f, 1136.5f, 77.1f);
        path.quadTo(1136.95f, 79.4f, 1137.7f, 81.65f);
        path.lineTo(1139.25f, 86.7f);
        path.quadTo(1140.55f, 91.0f, 1142.4f, 95.1f);
        path.lineTo(1142.05f, 95.4f);
        path.lineTo(1141.75f, 96.15f);
        path.quadTo(1141.75f, 96.6f, 1141.4f, 96.9f);
        path.lineTo(1140.65f, 97.65f);
        path.lineTo(1139.7f, 98.2f);
        path.lineTo(1138.75f, 97.9f);
        path.lineTo(1137.15f, 96.7f);
        path.lineTo(1135.7f, 95.2f);
        path.lineTo(1134.3f, 93.35f);
        path.lineTo(1132.1f, 92.95f);
        path.lineTo(1132.0f, 92.45f);
        path.lineTo(1131.95f, 92.25f);
        path.lineTo(1131.8f, 91.85f);
        path.lineTo(1131.65f, 91.6f);
        path.lineTo(1131.5f, 91.2f);
        path.lineTo(1131.35f, 90.7f);
        path.quadTo(1131.35f, 90.45f, 1131.15f, 90.35f);
        path.lineTo(1130.7f, 89.95f);
        path.lineTo(1130.55f, 89.75f);
        path.lineTo(1129.45f, 89.2f);
        path.lineTo(1129.25f, 89.0f);
        path.lineTo(1128.8f, 88.7f);
        path.lineTo(1128.55f, 88.8f);
        path.lineTo(1128.45f, 88.95f);
        path.quadTo(1128.75f, 89.4f, 1129.2f, 89.65f);
        path.lineTo(1130.0f, 90.25f);
        path.lineTo(1130.1f, 90.35f);
        path.lineTo(1130.95f, 91.05f);
        path.lineTo(1130.95f, 91.25f);
        path.lineTo(1131.15f, 91.65f);
        path.lineTo(1131.1f, 91.95f);
        path.lineTo(1131.2f, 92.2f);
        path.lineTo(1131.3f, 92.55f);
        path.lineTo(1131.4f, 92.95f);
        path.quadTo(1131.05f, 93.0f, 1130.7f, 93.3f);
        path.quadTo(1130.1f, 93.7f, 1129.4f, 93.5f);
        path.lineTo(1129.2f, 93.25f);
        path.lineTo(1129.15f, 93.0f);
        path.lineTo(1129.05f, 92.75f);
        path.lineTo(1128.85f, 92.3f);
        path.lineTo(1128.75f, 92.1f);
        path.lineTo(1128.55f, 92.0f);
        path.lineTo(1128.4f, 92.3f);
        path.lineTo(1128.3f, 92.5f);
        path.lineTo(1128.4f, 92.85f);
        path.lineTo(1128.4f, 93.1f);
        path.lineTo(1128.35f, 93.4f);
        path.lineTo(1128.35f, 93.6f);
        path.lineTo(1128.45f, 94.0f);
        path.lineTo(1128.7f, 94.25f);
        path.lineTo(1129.5f, 94.65f);
        path.lineTo(1130.7f, 94.05f);
        path.quadTo(1131.2f, 93.7f, 1131.8f, 93.6f);
        path.lineTo(1132.95f, 93.9f);
        path.lineTo(1133.05f, 93.75f);
        path.lineTo(1132.95f, 93.55f);
        path.lineTo(1132.85f, 93.5f);
        path.quadTo(1133.5f, 93.55f, 1133.75f, 94.15f);
        path.quadTo(1133.75f, 94.8f, 1134.3f, 95.35f);
        path.lineTo(1136.35f, 97.55f);
        path.quadTo(1137.85f, 99.3f, 1140.05f, 99.05f);
        path.lineTo(1140.3f, 98.95f);
        path.lineTo(1141.3f, 98.25f);
        path.lineTo(1141.9f, 97.6f);
        path.lineTo(1142.35f, 96.85f);
        path.quadTo(1142.5f, 96.3f, 1142.75f, 95.9f);
        path.lineTo(1144.25f, 98.8f);
        path.lineTo(1146.35f, 102.3f);
        path.lineTo(1147.25f, 98.85f);
        path.lineTo(1145.3f, 94.75f);
        path.lineTo(1141.45f, 87.3f);
        path.quadTo(1140.5f, 85.6f, 1139.9f, 83.9f);
        path.quadTo(1140.75f, 83.9f, 1141.55f, 82.9f);
        path.lineTo(1143.05f, 81.1f);
        path.lineTo(1144.25f, 79.45f);
        path.lineTo(1145.05f, 77.8f);
        path.lineTo(1145.65f, 75.95f);
        path.quadTo(1144.6f, 74.4f, 1143.95f, 72.6f);
        path.quadTo(1143.15f, 70.3f, 1144.1f, 68.1f);
        path.lineTo(1146.15f, 63.8f);
        path.quadTo(1147.1f, 62.05f, 1146.8f, 60.1f);
        path.lineTo(1146.3f, 59.95f);
        path.quadTo(1146.3f, 61.0f, 1145.75f, 62.05f);
        path.lineTo(1143.6f, 66.7f);
        path.quadTo(1142.45f, 69.05f, 1143.05f, 71.7f);
        path.quadTo(1143.55f, 74.2f, 1144.7f, 76.45f);
        path.close();
        path.moveTo(1126.85f, 77.35f);
        path.lineTo(1126.3f, 77.55f);
        path.lineTo(1125.7f, 77.7f);
        path.lineTo(1125.35f, 78.4f);
        path.quadTo(1124.75f, 78.95f, 1123.25f, 78.85f);
        path.lineTo(1121.95f, 79.0f);
        path.lineTo(1121.2f, 79.0f);
        path.lineTo(1118.1f, 78.9f);
        path.lineTo(1118.2f, 79.05f);
        path.lineTo(1120.45f, 79.95f);
        path.lineTo(1121.1f, 80.2f);
        path.lineTo(1121.55f, 80.05f);
        path.lineTo(1121.9f, 79.95f);
        path.lineTo(1122.85f, 79.65f);
        path.lineTo(1123.55f, 79.7f);
        path.lineTo(1125.85f, 79.5f);
        path.lineTo(1126.1f, 79.25f);
        path.lineTo(1126.15f, 79.05f);
        path.lineTo(1126.25f, 78.75f);
        path.lineTo(1126.4f, 78.5f);
        path.lineTo(1127.0f, 78.3f);
        path.lineTo(1127.45f, 78.2f);
        path.lineTo(1128.2f, 78.1f);
        path.lineTo(1128.55f, 78.1f);
        path.lineTo(1129.7f, 77.95f);
        path.quadTo(1130.2f, 78.0f, 1130.0f, 77.45f);
        path.lineTo(1129.8f, 77.4f);
        path.lineTo(1128.45f, 77.25f);
        path.lineTo(1127.35f, 77.3f);
        path.lineTo(1126.85f, 77.35f);
        path.close();
        path.moveTo(1134.95f, 97.95f);
        path.lineTo(1135.15f, 97.7f);
        path.lineTo(1135.2f, 97.4f);
        path.lineTo(1135.05f, 97.15f);
        path.lineTo(1134.15f, 97.2f);
        path.quadTo(1133.4f, 97.4f, 1133.05f, 98.1f);
        path.lineTo(1132.4f, 98.95f);
        path.lineTo(1131.65f, 99.6f);
        path.lineTo(1130.95f, 100.4f);
        path.lineTo(1130.9f, 100.7f);
        path.lineTo(1130.75f, 101.2f);
        path.lineTo(1130.6f, 101.8f);
        path.lineTo(1130.55f, 102.0f);
        path.lineTo(1130.5f, 102.3f);
        path.lineTo(1130.55f, 102.55f);
        path.lineTo(1130.55f, 102.85f);
        path.lineTo(1130.75f, 103.25f);
        path.lineTo(1131.3f, 102.55f);
        path.lineTo(1131.55f, 101.7f);
        path.quadTo(1131.7f, 101.1f, 1132.15f, 100.65f);
        path.lineTo(1132.95f, 99.8f);
        path.lineTo(1133.3f, 99.05f);
        path.quadTo(1133.4f, 98.5f, 1133.85f, 98.3f);
        path.lineTo(1134.35f, 98.2f);
        path.lineTo(1134.65f, 98.1f);
        path.lineTo(1134.95f, 97.95f);
        path.close();
        path.moveTo(1136.4f, 104.85f);
        path.lineTo(1136.1f, 105.3f);
        path.lineTo(1136.55f, 105.35f);
        path.lineTo(1138.0f, 104.85f);
        path.lineTo(1139.4f, 104.0f);
        path.quadTo(1140.1f, 103.7f, 1140.45f, 102.85f);
        path.lineTo(1140.75f, 101.15f);
        path.lineTo(1140.55f, 99.7f);
        path.lineTo(1140.4f, 99.7f);
        path.lineTo(1140.1f, 100.1f);
        path.lineTo(1140.0f, 100.6f);
        path.lineTo(1139.95f, 101.2f);
        path.lineTo(1139.9f, 101.7f);
        path.lineTo(1139.75f, 102.3f);
        path.lineTo(1139.6f, 102.8f);
        path.lineTo(1139.05f, 103.25f);
        path.lineTo(1138.05f, 103.85f);
        path.lineTo(1137.0f, 104.45f);
        path.lineTo(1136.4f, 104.85f);
        path.close();
    }

    private static void draw_309(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_306(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_307(Path path)
    {
        path.reset();
        path.moveTo(1092.0f, 85.55f);
        path.quadTo(1082.65f, 91.0f, 1079.85f, 101.45f);
        path.quadTo(1077.05f, 111.9f, 1082.4f, 121.3f);
        path.quadTo(1087.9f, 130.7f, 1098.35f, 133.5f);
        path.quadTo(1108.8f, 136.3f, 1118.2f, 130.85f);
        path.quadTo(1127.55f, 125.45f, 1130.35f, 115.0f);
        path.quadTo(1133.15f, 104.55f, 1127.8f, 95.1f);
        path.quadTo(1122.3f, 85.8f, 1111.85f, 83.0f);
        path.quadTo(1101.4f, 80.2f, 1092.0f, 85.55f);
        path.close();
    }

    private static void draw_310(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_307(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_308(Path path)
    {
        path.reset();
        path.moveTo(1132.0f, 90.4f);
        path.quadTo(1130.4f, 92.7f, 1126.25f, 94.85f);
        path.quadTo(1117.95f, 99.2f, 1106.75f, 96.2f);
        path.quadTo(1101.6f, 94.8f, 1096.25f, 90.15f);
        path.quadTo(1092.2f, 86.6f, 1090.9f, 83.95f);
        path.quadTo(1088.2f, 87.25f, 1086.2f, 91.85f);
        path.quadTo(1081.1f, 104.3f, 1076.6f, 109.2f);
        path.lineTo(1067.7f, 116.65f);
        path.quadTo(1064.25f, 119.35f, 1062.45f, 126.1f);
        path.quadTo(1061.2f, 130.75f, 1061.5f, 133.35f);
        path.quadTo(1061.6f, 134.5f, 1062.1f, 135.5f);
        path.lineTo(1076.85f, 139.45f);
        path.quadTo(1076.2f, 136.45f, 1076.9f, 133.8f);
        path.quadTo(1078.25f, 128.65f, 1082.3f, 126.45f);
        path.quadTo(1086.25f, 124.3f, 1086.85f, 122.2f);
        path.lineTo(1086.85f, 122.15f);
        path.lineTo(1086.9f, 122.05f);
        path.quadTo(1087.3f, 120.65f, 1087.25f, 117.3f);
        path.lineTo(1087.25f, 116.65f);
        path.quadTo(1087.05f, 112.85f, 1087.75f, 110.3f);
        path.quadTo(1088.15f, 108.85f, 1089.05f, 106.9f);
        path.lineTo(1097.1f, 109.8f);
        path.lineTo(1103.7f, 111.9f);
        path.quadTo(1108.3f, 113.1f, 1116.55f, 113.9f);
        path.lineTo(1125.15f, 114.4f);
        path.lineTo(1124.6f, 117.45f);
        path.quadTo(1124.0f, 119.5f, 1121.05f, 124.2f);
        path.lineTo(1119.45f, 126.75f);
        path.quadTo(1118.1f, 129.0f, 1117.6f, 130.45f);
        path.lineTo(1117.5f, 130.9f);
        path.quadTo(1116.9f, 133.05f, 1118.65f, 136.6f);
        path.quadTo(1120.4f, 140.1f, 1119.95f, 141.7f);
        path.quadTo(1119.45f, 143.55f, 1115.05f, 147.55f);
        path.lineTo(1114.95f, 147.65f);
        path.lineTo(1113.3f, 149.25f);
        path.lineTo(1121.7f, 151.5f);
        path.quadTo(1126.1f, 152.65f, 1130.05f, 150.45f);
        path.quadTo(1132.05f, 149.3f, 1133.3f, 147.65f);
        path.quadTo(1134.55f, 142.9f, 1133.55f, 138.05f);
        path.quadTo(1132.2f, 131.65f, 1132.3f, 128.7f);
        path.quadTo(1132.35f, 125.25f, 1133.8f, 118.75f);
        path.quadTo(1135.15f, 112.25f, 1135.3f, 108.85f);
        path.quadTo(1135.85f, 98.05f, 1132.0f, 90.4f);
        path.close();
    }

    private static void draw_311(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_308(path);
        paint.setColor(Color.argb(255, 204, 102, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_309(Path path)
    {
        path.reset();
        path.moveTo(1086.85f, 122.2f);
        path.quadTo(1086.25f, 124.3f, 1082.3f, 126.45f);
        path.quadTo(1078.25f, 128.65f, 1076.9f, 133.8f);
        path.quadTo(1076.2f, 136.45f, 1076.85f, 139.45f);
        path.lineTo(1079.35f, 140.15f);
        path.lineTo(1079.4f, 140.15f);
        path.lineTo(1079.4f, 140.1f);
        path.quadTo(1082.9f, 138.9f, 1085.2f, 138.35f);
        path.lineTo(1091.75f, 137.1f);
        path.quadTo(1093.65f, 136.45f, 1094.5f, 134.95f);
        path.lineTo(1092.55f, 133.0f);
        path.lineTo(1091.3f, 131.55f);
        path.lineTo(1090.5f, 130.3f);
        path.lineTo(1088.95f, 127.7f);
        path.lineTo(1087.9f, 125.35f);
        path.lineTo(1086.85f, 122.2f);
        path.close();
        path.moveTo(1115.05f, 147.55f);
        path.quadTo(1119.45f, 143.55f, 1119.95f, 141.7f);
        path.quadTo(1120.4f, 140.1f, 1118.65f, 136.6f);
        path.quadTo(1116.9f, 133.05f, 1117.5f, 130.9f);
        path.lineTo(1117.4f, 130.7f);
        path.lineTo(1114.25f, 133.3f);
        path.lineTo(1111.8f, 135.35f);
        path.lineTo(1109.8f, 136.5f);
        path.quadTo(1107.2f, 137.8f, 1104.4f, 138.05f);
        path.quadTo(1104.55f, 139.2f, 1105.15f, 140.15f);
        path.quadTo(1106.15f, 141.9f, 1108.3f, 143.3f);
        path.quadTo(1112.8f, 145.85f, 1115.05f, 147.55f);
        path.close();
    }

    private static void draw_312(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_309(path);
        paint.setColor(Color.argb(255, 133, 44, 133));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_310(Path path)
    {
        path.reset();
        path.moveTo(1090.9f, 83.95f);
        path.quadTo(1092.2f, 86.6f, 1096.25f, 90.15f);
        path.quadTo(1101.6f, 94.8f, 1106.75f, 96.2f);
        path.quadTo(1117.95f, 99.2f, 1126.25f, 94.85f);
        path.quadTo(1130.4f, 92.7f, 1132.0f, 90.4f);
        path.lineTo(1131.3f, 89.15f);
        path.quadTo(1126.2f, 80.35f, 1115.7f, 77.55f);
        path.quadTo(1105.75f, 74.85f, 1098.45f, 78.2f);
        path.quadTo(1094.1f, 80.1f, 1090.9f, 83.95f);
        path.close();
    }

    private static void draw_313(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_310(path);
        paint.setColor(Color.argb(255, 228, 177, 228));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_311(Path path)
    {
        path.reset();
        path.moveTo(1119.45f, 126.75f);
        path.lineTo(1121.05f, 124.2f);
        path.quadTo(1124.0f, 119.5f, 1124.6f, 117.45f);
        path.lineTo(1125.15f, 114.4f);
        path.lineTo(1116.55f, 113.9f);
        path.quadTo(1108.3f, 113.1f, 1103.7f, 111.9f);
        path.lineTo(1097.1f, 109.8f);
        path.lineTo(1089.05f, 106.9f);
        path.quadTo(1088.15f, 108.85f, 1087.75f, 110.3f);
        path.quadTo(1087.05f, 112.85f, 1087.25f, 116.65f);
        path.lineTo(1087.25f, 117.3f);
        path.quadTo(1090.85f, 117.75f, 1094.65f, 117.15f);
        path.quadTo(1100.05f, 116.25f, 1103.4f, 117.15f);
        path.quadTo(1106.45f, 117.95f, 1108.15f, 119.75f);
        path.lineTo(1111.9f, 123.25f);
        path.quadTo(1113.25f, 124.15f, 1116.25f, 125.4f);
        path.lineTo(1119.45f, 126.75f);
        path.close();
    }

    private static void draw_314(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_311(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_312(Path path)
    {
        path.reset();
        path.moveTo(1100.7f, 120.25f);
        path.quadTo(1099.5f, 122.35f, 1099.3f, 123.0f);
        path.quadTo(1098.85f, 124.75f, 1101.2f, 125.35f);
        path.lineTo(1103.25f, 125.55f);
        path.quadTo(1103.3f, 125.2f, 1103.65f, 125.3f);
        path.lineTo(1103.85f, 124.6f);
        path.lineTo(1101.0f, 123.8f);
        path.quadTo(1101.0f, 122.95f, 1101.35f, 121.1f);
        path.lineTo(1101.85f, 117.85f);
        path.lineTo(1100.7f, 120.25f);
        path.close();
    }

    private static void draw_315(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_312(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_313(Path path)
    {
        path.reset();
        path.moveTo(1108.6f, 132.75f);
        path.quadTo(1108.0f, 132.1f, 1106.8f, 129.55f);
        path.quadTo(1105.95f, 127.8f, 1104.15f, 127.35f);
        path.lineTo(1102.6f, 127.1f);
        path.quadTo(1101.9f, 127.15f, 1101.0f, 128.0f);
        path.lineTo(1100.6f, 127.1f);
        path.quadTo(1100.05f, 126.25f, 1099.5f, 126.1f);
        path.lineTo(1096.85f, 126.15f);
        path.lineTo(1093.2f, 127.1f);
        path.quadTo(1095.35f, 128.5f, 1096.35f, 130.55f);
        path.quadTo(1097.05f, 131.9f, 1099.65f, 132.6f);
        path.lineTo(1104.35f, 133.1f);
        path.lineTo(1108.6f, 132.85f);
        path.lineTo(1108.6f, 132.75f);
        path.close();
    }

    private static void draw_316(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_313(path);
        paint.setColor(Color.argb(255, 153, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_314(Path path)
    {
        path.reset();
        path.moveTo(1088.95f, 127.7f);
        path.lineTo(1090.55f, 125.6f);
        path.quadTo(1091.5f, 124.5f, 1093.7f, 123.9f);
        path.quadTo(1095.55f, 123.4f, 1096.2f, 121.75f);
        path.quadTo(1093.0f, 122.5f, 1087.9f, 125.35f);
        path.lineTo(1088.95f, 127.7f);
        path.close();
        path.moveTo(1092.55f, 133.0f);
        path.lineTo(1092.7f, 132.45f);
        path.quadTo(1093.1f, 131.0f, 1092.7f, 130.4f);
        path.lineTo(1091.3f, 131.55f);
        path.lineTo(1092.55f, 133.0f);
        path.close();
        path.moveTo(1099.25f, 137.5f);
        path.lineTo(1099.0f, 136.45f);
        path.quadTo(1098.7f, 135.1f, 1097.8f, 134.4f);
        path.quadTo(1097.35f, 134.95f, 1096.9f, 136.6f);
        path.quadTo(1098.0f, 137.15f, 1099.25f, 137.5f);
        path.close();
        path.moveTo(1103.65f, 138.0f);
        path.quadTo(1103.05f, 136.5f, 1101.15f, 136.1f);
        path.lineTo(1100.65f, 137.85f);
        path.lineTo(1103.7f, 138.1f);
        path.lineTo(1103.65f, 138.0f);
        path.close();
        path.moveTo(1114.25f, 133.3f);
        path.quadTo(1114.25f, 132.2f, 1113.55f, 131.0f);
        path.quadTo(1112.35f, 128.9f, 1111.1f, 129.2f);
        path.lineTo(1110.55f, 126.75f);
        path.lineTo(1109.85f, 126.55f);
        path.lineTo(1109.5f, 127.3f);
        path.quadTo(1109.15f, 127.75f, 1109.05f, 128.25f);
        path.quadTo(1108.8f, 129.1f, 1109.5f, 132.05f);
        path.quadTo(1110.15f, 134.35f, 1109.8f, 136.5f);
        path.lineTo(1111.8f, 135.35f);
        path.lineTo(1114.25f, 133.3f);
        path.close();
    }

    private static void draw_317(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_314(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_315(Path path)
    {
        path.reset();
        path.moveTo(1087.25f, 117.3f);
        path.quadTo(1087.3f, 120.65f, 1086.9f, 122.05f);
        path.lineTo(1086.85f, 122.2f);
        path.lineTo(1087.9f, 125.35f);
        path.quadTo(1093.0f, 122.5f, 1096.2f, 121.75f);
        path.quadTo(1095.55f, 123.4f, 1093.7f, 123.9f);
        path.quadTo(1091.5f, 124.5f, 1090.55f, 125.6f);
        path.lineTo(1088.95f, 127.7f);
        path.lineTo(1090.5f, 130.3f);
        path.lineTo(1091.3f, 131.55f);
        path.lineTo(1092.7f, 130.4f);
        path.quadTo(1093.1f, 131.0f, 1092.7f, 132.45f);
        path.lineTo(1092.55f, 133.0f);
        path.lineTo(1094.5f, 134.95f);
        path.lineTo(1096.9f, 136.6f);
        path.quadTo(1097.35f, 134.95f, 1097.8f, 134.4f);
        path.quadTo(1098.7f, 135.1f, 1099.0f, 136.45f);
        path.lineTo(1099.25f, 137.5f);
        path.lineTo(1099.45f, 137.55f);
        path.lineTo(1100.65f, 137.85f);
        path.lineTo(1101.15f, 136.1f);
        path.quadTo(1103.05f, 136.5f, 1103.65f, 138.0f);
        path.lineTo(1103.7f, 138.1f);
        path.lineTo(1104.4f, 138.05f);
        path.quadTo(1107.2f, 137.8f, 1109.8f, 136.5f);
        path.quadTo(1110.15f, 134.35f, 1109.5f, 132.05f);
        path.quadTo(1108.8f, 129.1f, 1109.05f, 128.25f);
        path.quadTo(1109.15f, 127.75f, 1109.5f, 127.3f);
        path.lineTo(1109.85f, 126.55f);
        path.lineTo(1110.55f, 126.75f);
        path.lineTo(1111.1f, 129.2f);
        path.quadTo(1112.35f, 128.9f, 1113.55f, 131.0f);
        path.quadTo(1114.25f, 132.2f, 1114.25f, 133.3f);
        path.lineTo(1117.4f, 130.7f);
        path.lineTo(1117.6f, 130.45f);
        path.quadTo(1118.1f, 129.0f, 1119.45f, 126.75f);
        path.lineTo(1116.25f, 125.4f);
        path.quadTo(1113.25f, 124.15f, 1111.9f, 123.25f);
        path.lineTo(1108.15f, 119.75f);
        path.quadTo(1106.45f, 117.95f, 1103.4f, 117.15f);
        path.quadTo(1100.05f, 116.25f, 1094.65f, 117.15f);
        path.quadTo(1090.85f, 117.75f, 1087.25f, 117.3f);
        path.close();
        path.moveTo(1100.7f, 120.25f);
        path.lineTo(1101.85f, 117.85f);
        path.lineTo(1101.35f, 121.1f);
        path.quadTo(1101.0f, 122.95f, 1101.0f, 123.8f);
        path.lineTo(1103.85f, 124.6f);
        path.lineTo(1103.65f, 125.3f);
        path.quadTo(1103.3f, 125.2f, 1103.25f, 125.55f);
        path.lineTo(1101.2f, 125.35f);
        path.quadTo(1098.85f, 124.75f, 1099.3f, 123.0f);
        path.quadTo(1099.5f, 122.35f, 1100.7f, 120.25f);
        path.close();
        path.moveTo(1108.6f, 132.85f);
        path.lineTo(1104.35f, 133.1f);
        path.lineTo(1099.65f, 132.6f);
        path.quadTo(1097.05f, 131.9f, 1096.35f, 130.55f);
        path.quadTo(1095.35f, 128.5f, 1093.2f, 127.1f);
        path.lineTo(1096.85f, 126.15f);
        path.lineTo(1099.5f, 126.1f);
        path.quadTo(1100.05f, 126.25f, 1100.6f, 127.1f);
        path.lineTo(1101.0f, 128.0f);
        path.quadTo(1101.9f, 127.15f, 1102.6f, 127.1f);
        path.lineTo(1104.15f, 127.35f);
        path.quadTo(1105.95f, 127.8f, 1106.8f, 129.55f);
        path.quadTo(1108.0f, 132.1f, 1108.6f, 132.75f);
        path.lineTo(1108.95f, 132.85f);
        path.lineTo(1108.6f, 132.85f);
        path.close();
    }

    private static void draw_318(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_315(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_316(Path path)
    {
        path.reset();
        path.moveTo(1113.3f, 149.25f);
        path.lineTo(1114.95f, 147.65f);
        path.lineTo(1115.05f, 147.55f);
        path.quadTo(1112.8f, 145.85f, 1108.3f, 143.3f);
        path.quadTo(1106.15f, 141.9f, 1105.15f, 140.15f);
        path.quadTo(1104.5f, 139.85f, 1103.7f, 138.1f);
        path.lineTo(1100.65f, 137.85f);
        path.lineTo(1099.45f, 137.55f);
        path.lineTo(1099.25f, 137.5f);
        path.quadTo(1098.0f, 137.15f, 1096.9f, 136.6f);
        path.lineTo(1094.5f, 134.95f);
        path.quadTo(1093.65f, 136.45f, 1091.75f, 137.1f);
        path.lineTo(1085.2f, 138.35f);
        path.quadTo(1082.9f, 138.9f, 1079.4f, 140.1f);
        path.lineTo(1079.4f, 140.15f);
        path.lineTo(1113.3f, 149.25f);
        path.close();
    }

    private static void draw_319(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_316(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_317(Path path)
    {
        path.reset();
        path.moveTo(1116.9f, 56.3f);
        path.lineTo(1116.15f, 59.25f);
        path.lineTo(1114.95f, 58.95f);
        path.quadTo(1113.95f, 58.7f, 1113.15f, 59.3f);
        path.lineTo(1113.1f, 59.55f);
        path.lineTo(1113.05f, 59.75f);
        path.lineTo(1113.1f, 59.95f);
        path.quadTo(1113.9f, 61.1f, 1115.4f, 61.6f);
        path.lineTo(1115.55f, 61.6f);
        path.lineTo(1114.8f, 64.65f);
        path.quadTo(1114.2f, 67.4f, 1114.85f, 70.25f);
        path.quadTo(1116.0f, 75.1f, 1121.0f, 75.75f);
        path.lineTo(1121.75f, 75.3f);
        path.quadTo(1122.65f, 74.95f, 1123.0f, 74.2f);
        path.lineTo(1123.5f, 72.9f);
        path.lineTo(1123.75f, 71.55f);
        path.quadTo(1123.85f, 70.65f, 1123.0f, 70.3f);
        path.lineTo(1122.4f, 70.35f);
        path.quadTo(1121.85f, 70.5f, 1121.7f, 71.0f);
        path.lineTo(1121.5f, 71.8f);
        path.lineTo(1121.2f, 72.55f);
        path.lineTo(1120.7f, 73.05f);
        path.quadTo(1119.05f, 73.25f, 1118.2f, 71.5f);
        path.quadTo(1117.15f, 69.5f, 1117.05f, 67.2f);
        path.quadTo(1116.9f, 65.1f, 1117.3f, 63.0f);
        path.lineTo(1117.5f, 62.05f);
        path.lineTo(1121.3f, 61.85f);
        path.lineTo(1121.95f, 61.4f);
        path.lineTo(1121.95f, 61.1f);
        path.lineTo(1121.85f, 60.55f);
        path.lineTo(1121.65f, 60.2f);
        path.quadTo(1121.5f, 60.0f, 1121.2f, 59.95f);
        path.lineTo(1120.15f, 59.55f);
        path.lineTo(1120.15f, 59.65f);
        path.lineTo(1118.15f, 59.55f);
        path.lineTo(1118.45f, 58.7f);
        path.quadTo(1119.4f, 56.35f, 1118.45f, 54.45f);
        path.quadTo(1117.2f, 54.8f, 1116.9f, 56.3f);
        path.close();
        path.moveTo(1106.15f, 57.4f);
        path.lineTo(1106.15f, 57.5f);
        path.lineTo(1104.5f, 57.65f);
        path.lineTo(1104.05f, 57.85f);
        path.lineTo(1102.8f, 58.55f);
        path.quadTo(1102.2f, 58.9f, 1101.9f, 59.45f);
        path.lineTo(1101.4f, 60.7f);
        path.lineTo(1101.05f, 62.05f);
        path.lineTo(1100.85f, 62.85f);
        path.lineTo(1100.75f, 63.1f);
        path.lineTo(1100.8f, 63.4f);
        path.lineTo(1101.2f, 64.05f);
        path.quadTo(1101.85f, 65.3f, 1103.2f, 65.8f);
        path.lineTo(1105.25f, 66.6f);
        path.lineTo(1107.35f, 67.5f);
        path.lineTo(1107.9f, 67.8f);
        path.lineTo(1108.2f, 68.3f);
        path.lineTo(1108.55f, 69.05f);
        path.lineTo(1108.75f, 69.6f);
        path.lineTo(1108.85f, 70.25f);
        path.lineTo(1108.85f, 70.5f);
        path.lineTo(1108.9f, 71.1f);
        path.lineTo(1108.95f, 71.45f);
        path.lineTo(1108.85f, 71.75f);
        path.lineTo(1107.9f, 72.25f);
        path.lineTo(1106.75f, 72.5f);
        path.lineTo(1106.35f, 72.55f);
        path.lineTo(1103.95f, 72.25f);
        path.lineTo(1103.85f, 72.1f);
        path.lineTo(1103.8f, 72.0f);
        path.lineTo(1103.8f, 71.65f);
        path.lineTo(1103.8f, 71.35f);
        path.lineTo(1103.7f, 71.1f);
        path.lineTo(1103.5f, 70.75f);
        path.lineTo(1103.05f, 70.45f);
        path.lineTo(1102.6f, 70.45f);
        path.lineTo(1102.2f, 70.5f);
        path.lineTo(1101.8f, 70.95f);
        path.quadTo(1101.6f, 71.15f, 1101.65f, 71.45f);
        path.lineTo(1101.55f, 72.0f);
        path.lineTo(1101.55f, 72.55f);
        path.lineTo(1101.55f, 72.9f);
        path.lineTo(1101.8f, 73.5f);
        path.lineTo(1101.95f, 73.85f);
        path.lineTo(1102.15f, 74.2f);
        path.quadTo(1104.6f, 75.6f, 1107.3f, 75.05f);
        path.quadTo(1109.6f, 74.5f, 1110.75f, 72.6f);
        path.quadTo(1111.5f, 71.3f, 1111.35f, 69.95f);
        path.quadTo(1111.0f, 67.05f, 1108.4f, 65.95f);
        path.quadTo(1105.15f, 64.4f, 1103.25f, 62.5f);
        path.lineTo(1103.3f, 62.25f);
        path.lineTo(1103.4f, 61.95f);
        path.lineTo(1103.45f, 61.65f);
        path.lineTo(1103.5f, 61.45f);
        path.lineTo(1103.6f, 61.15f);
        path.lineTo(1103.65f, 60.9f);
        path.lineTo(1103.85f, 60.65f);
        path.lineTo(1104.05f, 60.45f);
        path.quadTo(1104.5f, 59.9f, 1105.2f, 59.8f);
        path.lineTo(1106.0f, 59.75f);
        path.lineTo(1106.25f, 59.7f);
        path.lineTo(1108.1f, 60.2f);
        path.lineTo(1108.45f, 60.3f);
        path.lineTo(1109.05f, 60.65f);
        path.lineTo(1109.15f, 60.85f);
        path.lineTo(1109.45f, 61.2f);
        path.lineTo(1109.5f, 61.45f);
        path.lineTo(1109.75f, 61.75f);
        path.lineTo(1110.35f, 61.85f);
        path.lineTo(1110.55f, 61.7f);
        path.lineTo(1110.65f, 61.45f);
        path.lineTo(1110.7f, 61.2f);
        path.lineTo(1110.8f, 60.9f);
        path.lineTo(1110.85f, 60.6f);
        path.lineTo(1110.75f, 60.35f);
        path.lineTo(1110.6f, 60.0f);
        path.lineTo(1110.5f, 59.65f);
        path.lineTo(1110.3f, 59.3f);
        path.lineTo(1109.95f, 59.05f);
        path.lineTo(1109.25f, 58.7f);
        path.lineTo(1108.6f, 58.3f);
        path.lineTo(1106.85f, 57.6f);
        path.lineTo(1106.15f, 57.4f);
        path.close();
        path.moveTo(1093.3f, 62.85f);
        path.lineTo(1093.45f, 62.85f);
        path.quadTo(1095.7f, 63.1f, 1096.35f, 65.1f);
        path.lineTo(1096.75f, 67.25f);
        path.lineTo(1096.7f, 69.0f);
        path.lineTo(1096.55f, 70.4f);
        path.lineTo(1096.3f, 70.9f);
        path.lineTo(1095.3f, 72.05f);
        path.lineTo(1093.8f, 73.05f);
        path.quadTo(1093.15f, 73.3f, 1092.6f, 73.65f);
        path.lineTo(1090.6f, 73.7f);
        path.quadTo(1090.1f, 72.45f, 1089.9f, 71.15f);
        path.lineTo(1089.55f, 68.8f);
        path.quadTo(1089.4f, 67.6f, 1089.75f, 66.3f);
        path.quadTo(1090.05f, 65.15f, 1090.75f, 64.25f);
        path.quadTo(1091.35f, 63.4f, 1092.25f, 62.9f);
        path.lineTo(1092.8f, 62.9f);
        path.lineTo(1093.3f, 62.85f);
        path.close();
        path.moveTo(1094.2f, 60.6f);
        path.lineTo(1092.65f, 60.55f);
        path.quadTo(1091.6f, 60.65f, 1090.95f, 61.25f);
        path.lineTo(1090.2f, 61.8f);
        path.lineTo(1089.4f, 62.45f);
        path.lineTo(1088.9f, 62.9f);
        path.lineTo(1088.6f, 63.05f);
        path.lineTo(1088.1f, 65.0f);
        path.lineTo(1087.6f, 67.4f);
        path.quadTo(1087.4f, 68.7f, 1087.6f, 70.0f);
        path.lineTo(1088.2f, 72.35f);
        path.lineTo(1088.75f, 74.6f);
        path.lineTo(1089.1f, 75.6f);
        path.quadTo(1091.1f, 77.05f, 1093.3f, 76.2f);
        path.quadTo(1095.85f, 75.2f, 1097.45f, 73.4f);
        path.quadTo(1099.2f, 71.35f, 1099.25f, 68.55f);
        path.quadTo(1099.25f, 66.0f, 1098.15f, 63.55f);
        path.quadTo(1097.05f, 61.0f, 1094.2f, 60.6f);
        path.close();
        path.moveTo(1086.25f, 69.1f);
        path.quadTo(1086.35f, 67.55f, 1085.95f, 65.85f);
        path.quadTo(1085.5f, 64.1f, 1084.15f, 62.85f);
        path.quadTo(1082.9f, 61.65f, 1080.85f, 61.75f);
        path.quadTo(1079.65f, 61.65f, 1078.35f, 62.2f);
        path.lineTo(1077.4f, 62.9f);
        path.lineTo(1077.35f, 62.45f);
        path.quadTo(1077.2f, 59.25f, 1076.6f, 56.2f);
        path.quadTo(1075.85f, 52.8f, 1073.95f, 50.15f);
        path.quadTo(1071.85f, 51.75f, 1073.5f, 55.4f);
        path.quadTo(1074.75f, 58.4f, 1074.9f, 61.6f);
        path.lineTo(1075.1f, 68.1f);
        path.lineTo(1075.0f, 74.45f);
        path.quadTo(1074.95f, 77.25f, 1075.3f, 79.95f);
        path.lineTo(1075.9f, 80.2f);
        path.lineTo(1076.35f, 80.35f);
        path.lineTo(1076.55f, 80.25f);
        path.lineTo(1076.75f, 80.1f);
        path.lineTo(1077.0f, 79.85f);
        path.quadTo(1077.65f, 77.7f, 1077.55f, 75.2f);
        path.lineTo(1077.45f, 68.8f);
        path.lineTo(1077.45f, 66.0f);
        path.quadTo(1077.6f, 65.5f, 1077.9f, 65.15f);
        path.lineTo(1078.4f, 64.75f);
        path.lineTo(1078.85f, 64.35f);
        path.lineTo(1079.4f, 63.95f);
        path.lineTo(1079.9f, 63.8f);
        path.quadTo(1083.75f, 63.8f, 1084.15f, 67.1f);
        path.quadTo(1084.35f, 68.9f, 1083.85f, 70.6f);
        path.lineTo(1083.05f, 73.6f);
        path.quadTo(1082.7f, 74.9f, 1083.2f, 76.15f);
        path.lineTo(1083.7f, 77.2f);
        path.lineTo(1084.3f, 77.5f);
        path.lineTo(1086.05f, 78.0f);
        path.lineTo(1086.55f, 78.05f);
        path.lineTo(1086.75f, 78.05f);
        path.lineTo(1087.65f, 77.45f);
        path.lineTo(1088.25f, 76.75f);
        path.lineTo(1088.5f, 75.95f);
        path.lineTo(1088.45f, 75.45f);
        path.lineTo(1088.3f, 74.85f);
        path.lineTo(1087.85f, 74.3f);
        path.lineTo(1087.45f, 74.2f);
        path.lineTo(1087.35f, 74.2f);
        path.lineTo(1087.05f, 74.35f);
        path.lineTo(1086.9f, 74.65f);
        path.lineTo(1086.7f, 74.8f);
        path.lineTo(1086.5f, 75.05f);
        path.lineTo(1086.35f, 75.35f);
        path.lineTo(1086.05f, 75.5f);
        path.lineTo(1085.6f, 75.4f);
        path.lineTo(1085.5f, 75.4f);
        path.quadTo(1084.95f, 74.05f, 1085.5f, 72.6f);
        path.quadTo(1086.05f, 70.9f, 1086.25f, 69.1f);
        path.close();
        path.moveTo(1065.75f, 56.65f);
        path.lineTo(1063.25f, 55.85f);
        path.lineTo(1063.25f, 55.95f);
        path.lineTo(1062.6f, 56.0f);
        path.quadTo(1062.35f, 56.0f, 1062.3f, 56.15f);
        path.lineTo(1061.9f, 56.3f);
        path.lineTo(1061.55f, 56.5f);
        path.lineTo(1061.2f, 56.65f);
        path.lineTo(1060.6f, 56.8f);
        path.lineTo(1060.35f, 56.85f);
        path.lineTo(1058.75f, 63.0f);
        path.lineTo(1059.15f, 62.0f);
        path.quadTo(1060.25f, 59.3f, 1063.0f, 58.1f);
        path.lineTo(1065.2f, 58.65f);
        path.quadTo(1066.4f, 59.0f, 1066.8f, 60.15f);
        path.lineTo(1067.15f, 61.7f);
        path.lineTo(1067.55f, 62.4f);
        path.lineTo(1068.35f, 62.75f);
        path.lineTo(1068.4f, 62.75f);
        path.quadTo(1069.1f, 62.2f, 1069.0f, 61.25f);
        path.lineTo(1068.6f, 59.15f);
        path.quadTo(1068.35f, 58.1f, 1067.45f, 57.45f);
        path.lineTo(1065.75f, 56.65f);
        path.close();
        path.moveTo(1067.05f, 68.6f);
        path.lineTo(1066.1f, 69.25f);
        path.lineTo(1065.45f, 69.65f);
        path.lineTo(1065.25f, 69.85f);
        path.lineTo(1065.05f, 70.7f);
        path.lineTo(1064.5f, 72.55f);
        path.quadTo(1064.15f, 73.35f, 1064.3f, 74.25f);
        path.quadTo(1064.45f, 75.2f, 1065.3f, 75.75f);
        path.quadTo(1066.6f, 76.55f, 1068.15f, 76.55f);
        path.lineTo(1068.45f, 76.45f);
        path.lineTo(1068.9f, 76.05f);
        path.lineTo(1069.25f, 75.5f);
        path.lineTo(1069.5f, 75.0f);
        path.lineTo(1069.55f, 74.45f);
        path.lineTo(1069.6f, 74.15f);
        path.lineTo(1069.65f, 73.9f);
        path.lineTo(1069.55f, 73.6f);
        path.lineTo(1069.4f, 73.3f);
        path.lineTo(1069.0f, 73.0f);
        path.lineTo(1068.65f, 72.95f);
        path.lineTo(1068.35f, 73.1f);
        path.lineTo(1068.1f, 73.3f);
        path.lineTo(1067.95f, 73.55f);
        path.lineTo(1067.9f, 73.85f);
        path.lineTo(1067.7f, 73.95f);
        path.lineTo(1067.1f, 73.85f);
        path.lineTo(1066.6f, 73.6f);
        path.lineTo(1066.6f, 73.5f);
        path.lineTo(1066.65f, 73.3f);
        path.lineTo(1066.7f, 73.1f);
        path.lineTo(1066.8f, 72.8f);
        path.lineTo(1066.85f, 72.5f);
        path.lineTo(1066.95f, 72.2f);
        path.lineTo(1067.0f, 72.0f);
        path.lineTo(1067.05f, 71.7f);
        path.lineTo(1067.2f, 71.45f);
        path.lineTo(1067.4f, 71.2f);
        path.quadTo(1067.55f, 71.05f, 1067.65f, 71.05f);
        path.lineTo(1067.9f, 70.85f);
        path.lineTo(1071.3f, 71.6f);
        path.lineTo(1071.35f, 71.7f);
        path.lineTo(1071.5f, 71.9f);
        path.lineTo(1072.15f, 73.9f);
        path.quadTo(1072.85f, 77.45f, 1069.5f, 79.25f);
        path.quadTo(1061.55f, 83.4f, 1057.9f, 74.0f);
        path.quadTo(1056.9f, 71.6f, 1057.1f, 69.1f);
        path.lineTo(1055.45f, 75.15f);
        path.quadTo(1055.95f, 76.65f, 1056.8f, 78.1f);
        path.quadTo(1060.85f, 85.15f, 1068.6f, 82.6f);
        path.quadTo(1072.85f, 81.2f, 1074.35f, 77.15f);
        path.quadTo(1075.75f, 73.05f, 1072.85f, 69.6f);
        path.lineTo(1072.3f, 69.3f);
        path.quadTo(1069.6f, 67.5f, 1067.05f, 68.6f);
        path.close();
    }

    private static Shader create_gradient_19()
    {
        int colors[] = {
            Color.argb(255, 255, 255, 255),
            Color.argb(255, 153, 153, 153)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_320(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_317(path);
        Shader shader = create_gradient_19();
        shader.setLocalMatrix(createMatrix(0.0f, -0.0214691f, 0.016098f, 1.52588e-05f, 1065.15f, 64.95f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_318(Path path)
    {
        path.reset();
        path.moveTo(-555.25f, -86.85f);
        path.quadTo(-557.6f, -89.2f, -560.9f, -89.2f);
        path.lineTo(-613.2f, -89.2f);
        path.quadTo(-616.45f, -89.2f, -618.8f, -86.85f);
        path.quadTo(-621.15f, -84.5f, -621.15f, -81.2f);
        path.lineTo(-621.15f, -28.9f);
        path.quadTo(-621.15f, -25.6f, -618.8f, -23.25f);
        path.quadTo(-616.45f, -20.95f, -613.2f, -20.95f);
        path.lineTo(-560.9f, -20.95f);
        path.quadTo(-557.6f, -20.95f, -555.25f, -23.25f);
        path.quadTo(-552.9f, -25.6f, -552.9f, -28.9f);
        path.lineTo(-552.9f, -81.2f);
        path.quadTo(-552.9f, -84.5f, -555.25f, -86.85f);
        path.close();
    }

    private static Shader create_gradient_20()
    {
        int colors[] = {
            Color.argb(255, 204, 204, 204),
            Color.argb(255, 153, 153, 153)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_321(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_318(path);
        Shader shader = create_gradient_20();
        shader.setLocalMatrix(createMatrix(-0.020813f, 0.0360565f, -0.0360565f, -0.020813f, -586.95f, -55.1f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void draw_322(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_318(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(12.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void draw_323(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_318(path);
        Shader shader = create_gradient_20();
        shader.setLocalMatrix(createMatrix(-0.020813f, 0.0360565f, -0.0360565f, -0.020813f, -586.95f, -55.1f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_319(Path path)
    {
        path.reset();
        path.moveTo(-596.15f, -34.15f);
        path.lineTo(-598.8f, -36.3f);
        path.lineTo(-599.5f, -36.7f);
        path.lineTo(-599.55f, -36.75f);
        path.lineTo(-600.45f, -37.4f);
        path.quadTo(-602.5f, -39.1f, -603.15f, -41.25f);
        path.lineTo(-604.6f, -40.75f);
        path.quadTo(-606.8f, -39.7f, -608.55f, -40.15f);
        path.lineTo(-608.8f, -39.85f);
        path.lineTo(-608.9f, -39.15f);
        path.quadTo(-608.9f, -37.8f, -607.55f, -36.15f);
        path.quadTo(-606.4f, -37.45f, -603.25f, -37.45f);
        path.quadTo(-606.4f, -37.45f, -607.55f, -36.15f);
        path.quadTo(-606.2f, -34.7f, -603.75f, -33.0f);
        path.lineTo(-603.25f, -32.65f);
        path.lineTo(-602.9f, -32.75f);
        path.lineTo(-602.85f, -32.8f);
        path.lineTo(-602.9f, -32.75f);
        path.lineTo(-603.15f, -32.65f);
        path.lineTo(-600.7f, -31.1f);
        path.quadTo(-598.7f, -30.0f, -597.65f, -30.0f);
        path.lineTo(-597.1f, -30.0f);
        path.lineTo(-595.95f, -31.0f);
        path.lineTo(-594.9f, -32.15f);
        path.lineTo(-596.1f, -34.05f);
        path.lineTo(-596.3f, -34.05f);
        path.lineTo(-596.15f, -34.15f);
        path.close();
        path.moveTo(-568.7f, -42.25f);
        path.lineTo(-571.1f, -43.55f);
        path.quadTo(-573.5f, -43.55f, -574.7f, -42.45f);
        path.lineTo(-574.75f, -42.35f);
        path.quadTo(-574.1f, -40.65f, -571.9f, -39.6f);
        path.lineTo(-571.4f, -39.4f);
        path.lineTo(-568.5f, -38.9f);
        path.quadTo(-567.85f, -39.15f, -566.45f, -40.55f);
        path.lineTo(-568.7f, -42.25f);
        path.close();
        path.moveTo(-566.45f, -40.55f);
        path.quadTo(-567.85f, -39.15f, -568.5f, -38.9f);
        path.lineTo(-567.0f, -38.45f);
        path.quadTo(-566.3f, -39.15f, -566.3f, -40.15f);
        path.lineTo(-566.45f, -40.55f);
        path.close();
        path.moveTo(-593.9f, -34.45f);
        path.lineTo(-592.2f, -34.7f);
        path.quadTo(-587.65f, -34.7f, -584.65f, -32.7f);
        path.quadTo(-581.7f, -30.6f, -580.65f, -30.6f);
        path.quadTo(-579.75f, -30.6f, -579.25f, -32.0f);
        path.quadTo(-578.95f, -32.95f, -578.95f, -33.9f);
        path.quadTo(-578.95f, -34.95f, -582.1f, -37.45f);
        path.quadTo(-585.05f, -39.85f, -585.35f, -39.85f);
        path.quadTo(-586.5f, -39.85f, -590.65f, -37.55f);
        path.lineTo(-593.35f, -35.95f);
        path.lineTo(-593.9f, -34.5f);
        path.lineTo(-593.9f, -34.45f);
        path.close();
    }

    private static void draw_324(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_319(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_320(Path path)
    {
        path.reset();
        path.moveTo(-578.95f, -55.2f);
        path.quadTo(-573.2f, -58.75f, -566.2f, -60.0f);
        path.lineTo(-562.05f, -60.5f);
        path.quadTo(-559.2f, -66.05f, -557.7f, -66.3f);
        path.quadTo(-555.8f, -66.7f, -554.9f, -67.4f);
        path.quadTo(-554.1f, -67.95f, -553.45f, -69.25f);
    }

    private static void draw_325(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_320(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_321(Path path)
    {
        path.reset();
        path.moveTo(-552.9f, -60.95f);
        path.lineTo(-562.05f, -60.5f);
        path.lineTo(-562.25f, -60.2f);
    }

    private static void draw_326(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_321(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_322(Path path)
    {
        path.reset();
        path.moveTo(-574.35f, -54.8f);
        path.lineTo(-570.75f, -55.5f);
        path.quadTo(-569.95f, -55.5f, -568.5f, -54.35f);
        path.quadTo(-567.25f, -53.5f, -565.55f, -51.85f);
        path.lineTo(-565.5f, -51.75f);
        path.quadTo(-561.3f, -47.6f, -559.85f, -47.0f);
        path.quadTo(-557.45f, -46.05f, -552.9f, -46.1f);
    }

    private static void draw_327(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_322(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_323(Path path)
    {
        path.reset();
        path.moveTo(-569.4f, -43.95f);
        path.quadTo(-568.5f, -43.25f, -565.5f, -42.35f);
        path.lineTo(-564.5f, -42.0f);
        path.lineTo(-563.75f, -42.25f);
        path.quadTo(-562.55f, -42.25f, -557.25f, -38.0f);
        path.lineTo(-552.9f, -34.4f);
    }

    private static void draw_328(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_323(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_324(Path path)
    {
        path.reset();
        path.moveTo(-577.55f, -64.35f);
        path.lineTo(-565.45f, -79.45f);
        path.quadTo(-560.6f, -85.1f, -556.8f, -88.05f);
    }

    private static void draw_329(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_324(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_325(Path path)
    {
        path.reset();
        path.moveTo(-581.95f, -87.55f);
        path.quadTo(-582.1f, -83.9f, -584.1f, -78.05f);
        path.lineTo(-584.8f, -75.85f);
        path.quadTo(-586.05f, -71.95f, -586.05f, -70.85f);
        path.lineTo(-585.35f, -68.5f);
        path.lineTo(-584.75f, -65.55f);
        path.quadTo(-584.75f, -64.5f, -585.35f, -62.45f);
        path.quadTo(-586.25f, -60.25f, -587.1f, -59.6f);
        path.lineTo(-587.45f, -59.25f);
        path.lineTo(-587.35f, -59.6f);
        path.lineTo(-586.75f, -61.3f);
    }

    private static void draw_330(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_325(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_326(Path path)
    {
        path.reset();
        path.moveTo(-583.65f, -87.55f);
        path.quadTo(-584.55f, -84.6f, -585.75f, -82.1f);
        path.lineTo(-585.35f, -79.15f);
        path.lineTo(-584.8f, -75.85f);
    }

    private static void draw_331(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_326(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_327(Path path)
    {
        path.reset();
        path.moveTo(-585.75f, -82.1f);
        path.lineTo(-586.75f, -80.05f);
        path.lineTo(-589.8f, -74.9f);
        path.lineTo(-589.8f, -74.1f);
        path.lineTo(-590.1f, -68.75f);
    }

    private static void draw_332(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_327(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_328(Path path)
    {
        path.reset();
        path.moveTo(-589.8f, -74.9f);
        path.quadTo(-589.9f, -81.45f, -591.2f, -82.75f);
        path.quadTo(-591.8f, -83.45f, -596.1f, -83.45f);
        path.quadTo(-597.1f, -83.45f, -598.0f, -84.8f);
        path.lineTo(-598.7f, -86.5f);
        path.lineTo(-597.85f, -89.2f);
    }

    private static void draw_333(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_328(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_329(Path path)
    {
        path.reset();
        path.moveTo(-591.2f, -69.45f);
        path.quadTo(-592.2f, -75.4f, -594.55f, -78.25f);
        path.quadTo(-596.4f, -80.7f, -598.8f, -80.7f);
        path.lineTo(-600.65f, -80.0f);
        path.quadTo(-602.1f, -79.3f, -602.55f, -79.3f);
        path.lineTo(-602.75f, -79.3f);
        path.lineTo(-603.0f, -79.45f);
        path.lineTo(-603.45f, -79.0f);
        path.lineTo(-606.05f, -76.35f);
        path.lineTo(-605.85f, -76.3f);
        path.lineTo(-602.25f, -75.0f);
        path.lineTo(-599.7f, -75.25f);
        path.quadTo(-597.6f, -75.25f, -595.95f, -73.15f);
        path.lineTo(-592.2f, -68.45f);
    }

    private static void draw_334(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_329(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_330(Path path)
    {
        path.reset();
        path.moveTo(-603.0f, -79.45f);
        path.quadTo(-603.95f, -79.75f, -605.2f, -81.25f);
        path.lineTo(-607.15f, -83.75f);
        path.quadTo(-607.65f, -83.7f, -609.15f, -81.7f);
        path.lineTo(-610.85f, -79.55f);
        path.lineTo(-611.0f, -79.3f);
        path.lineTo(-610.95f, -79.25f);
        path.quadTo(-609.8f, -78.45f, -608.7f, -77.8f);
        path.lineTo(-606.55f, -79.0f);
        path.lineTo(-603.45f, -79.0f);
    }

    private static void draw_335(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_330(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_331(Path path)
    {
        path.reset();
        path.moveTo(-596.6f, -68.1f);
        path.quadTo(-596.75f, -72.2f, -598.3f, -73.4f);
        path.lineTo(-602.25f, -75.0f);
    }

    private static void draw_336(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_331(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_332(Path path)
    {
        path.reset();
        path.moveTo(-592.55f, -53.1f);
        path.lineTo(-600.95f, -55.3f);
        path.lineTo(-608.9f, -57.2f);
        path.quadTo(-610.0f, -57.65f, -611.75f, -60.1f);
        path.quadTo(-613.4f, -62.55f, -615.0f, -63.0f);
        path.lineTo(-620.6f, -63.85f);
        path.lineTo(-621.15f, -63.9f);
    }

    private static void draw_337(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_332(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_333(Path path)
    {
        path.reset();
        path.moveTo(-600.7f, -41.85f);
        path.quadTo(-601.65f, -41.85f, -603.15f, -41.25f);
        path.quadTo(-602.5f, -39.1f, -600.45f, -37.4f);
        path.lineTo(-599.55f, -36.75f);
        path.lineTo(-599.5f, -36.7f);
        path.lineTo(-598.8f, -36.3f);
        path.lineTo(-596.15f, -34.15f);
        path.lineTo(-593.35f, -35.95f);
        path.quadTo(-592.85f, -37.55f, -592.55f, -37.8f);
    }

    private static void draw_338(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_333(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_334(Path path)
    {
        path.reset();
        path.moveTo(-603.15f, -41.25f);
        path.lineTo(-603.45f, -42.25f);
    }

    private static void draw_339(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_334(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_335(Path path)
    {
        path.reset();
        path.moveTo(-603.25f, -37.45f);
        path.lineTo(-600.45f, -37.4f);
    }

    private static void draw_340(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_335(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_336(Path path)
    {
        path.reset();
        path.moveTo(-568.5f, -54.35f);
        path.quadTo(-569.35f, -53.75f, -570.25f, -52.75f);
        path.lineTo(-568.65f, -52.75f);
        path.quadTo(-567.2f, -51.2f, -565.55f, -51.85f);
    }

    private static void draw_341(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_336(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_337(Path path)
    {
        path.reset();
        path.moveTo(-570.25f, -52.75f);
        path.lineTo(-572.1f, -50.1f);
        path.quadTo(-573.2f, -48.35f, -576.9f, -48.35f);
        path.quadTo(-578.4f, -48.35f, -578.5f, -48.9f);
    }

    private static void draw_342(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_337(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_338(Path path)
    {
        path.reset();
        path.moveTo(-576.9f, -40.55f);
        path.lineTo(-576.0f, -40.3f);
        path.quadTo(-575.45f, -41.7f, -574.75f, -42.35f);
        path.lineTo(-574.7f, -42.45f);
        path.quadTo(-573.5f, -43.55f, -571.1f, -43.55f);
        path.lineTo(-568.7f, -42.25f);
    }

    private static void draw_343(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_338(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_339(Path path)
    {
        path.reset();
        path.moveTo(-574.75f, -42.35f);
        path.quadTo(-574.1f, -40.65f, -571.9f, -39.6f);
        path.lineTo(-571.4f, -39.4f);
        path.lineTo(-568.5f, -38.9f);
        path.quadTo(-567.85f, -39.15f, -566.45f, -40.55f);
        path.lineTo(-564.5f, -42.0f);
        path.quadTo(-562.5f, -41.35f, -561.55f, -40.15f);
    }

    private static void draw_344(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_339(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_340(Path path)
    {
        path.reset();
        path.moveTo(-567.0f, -38.45f);
        path.lineTo(-568.5f, -38.9f);
    }

    private static void draw_345(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_340(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_341(Path path)
    {
        path.reset();
        path.moveTo(-576.0f, -40.3f);
        path.lineTo(-576.55f, -38.8f);
    }

    private static void draw_346(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_341(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_342(Path path)
    {
        path.reset();
        path.moveTo(-612.35f, -78.6f);
        path.lineTo(-612.95f, -78.75f);
        path.lineTo(-613.7f, -78.5f);
        path.lineTo(-617.4f, -77.8f);
        path.lineTo(-619.0f, -78.1f);
        path.lineTo(-621.4f, -78.85f);
    }

    private static void draw_347(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_342(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_343(Path path)
    {
        path.reset();
        path.moveTo(-611.0f, -79.3f);
        path.lineTo(-611.05f, -79.25f);
        path.lineTo(-610.95f, -79.25f);
    }

    private static void draw_348(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_343(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_344(Path path)
    {
        path.reset();
        path.moveTo(-621.4f, -81.25f);
        path.quadTo(-620.3f, -80.5f, -617.25f, -79.8f);
        path.lineTo(-612.95f, -78.75f);
        path.lineTo(-611.05f, -79.25f);
        path.lineTo(-611.6f, -78.7f);
    }

    private static void draw_349(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_344(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_345(Path path)
    {
        path.reset();
        path.moveTo(-611.0f, -79.3f);
        path.lineTo(-612.95f, -80.75f);
        path.quadTo(-615.75f, -82.9f, -620.5f, -84.35f);
    }

    private static void draw_350(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_345(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_346(Path path)
    {
        path.reset();
        path.moveTo(-606.05f, -76.35f);
        path.lineTo(-606.25f, -76.45f);
        path.lineTo(-607.45f, -75.45f);
        path.quadTo(-608.7f, -74.3f, -609.0f, -74.3f);
        path.quadTo(-609.65f, -74.3f, -610.7f, -75.2f);
        path.quadTo(-611.75f, -76.2f, -613.0f, -76.2f);
        path.quadTo(-613.8f, -76.2f, -615.65f, -75.1f);
        path.quadTo(-617.5f, -74.05f, -618.55f, -74.05f);
        path.lineTo(-620.85f, -74.3f);
        path.lineTo(-620.85f, -74.6f);
    }

    private static void draw_351(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_346(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_347(Path path)
    {
        path.reset();
        path.moveTo(-606.25f, -76.45f);
        path.lineTo(-608.7f, -77.8f);
    }

    private static void draw_352(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_347(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_348(Path path)
    {
        path.reset();
        path.moveTo(-593.35f, -35.95f);
        path.lineTo(-593.9f, -34.5f);
        path.lineTo(-593.9f, -34.45f);
    }

    private static void draw_353(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_348(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_349(Path path)
    {
        path.reset();
        path.moveTo(-594.9f, -32.15f);
        path.lineTo(-594.6f, -30.6f);
    }

    private static void draw_354(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_349(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_350(Path path)
    {
        path.reset();
        path.moveTo(-596.15f, -34.15f);
        path.lineTo(-596.1f, -34.05f);
        path.lineTo(-594.25f, -34.4f);
        path.lineTo(-593.9f, -34.45f);
    }

    private static void draw_355(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_350(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_351(Path path)
    {
        path.reset();
        path.moveTo(-596.15f, -34.15f);
        path.lineTo(-596.3f, -34.05f);
        path.lineTo(-596.1f, -34.05f);
        path.lineTo(-594.9f, -32.15f);
        path.lineTo(-595.95f, -31.0f);
        path.lineTo(-597.1f, -30.0f);
        path.quadTo(-599.35f, -27.8f, -599.35f, -24.4f);
        path.lineTo(-599.05f, -21.45f);
        path.lineTo(-599.05f, -20.95f);
    }

    private static void draw_356(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_351(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_352(Path path)
    {
        path.reset();
        path.moveTo(-602.85f, -32.8f);
        path.lineTo(-602.9f, -32.75f);
        path.lineTo(-603.15f, -32.65f);
    }

    private static void draw_357(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_352(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_353(Path path)
    {
        path.reset();
        path.moveTo(-602.9f, -32.75f);
        path.lineTo(-603.25f, -32.65f);
        path.lineTo(-603.15f, -32.65f);
        path.lineTo(-603.15f, -32.55f);
    }

    private static void draw_358(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_353(path);
        paint.setColor(Color.argb(255, 102, 102, 102));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_354(Path path)
    {
        path.reset();
        path.moveTo(-603.15f, -41.25f);
        path.lineTo(-604.6f, -40.75f);
        path.quadTo(-606.8f, -39.7f, -608.55f, -40.15f);
        path.lineTo(-608.8f, -39.85f);
        path.lineTo(-608.9f, -39.15f);
        path.quadTo(-608.9f, -37.8f, -607.55f, -36.15f);
        path.quadTo(-606.4f, -37.45f, -603.25f, -37.45f);
    }

    private static void draw_359(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_354(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_355(Path path)
    {
        path.reset();
        path.moveTo(-568.7f, -42.25f);
        path.lineTo(-566.45f, -40.55f);
        path.lineTo(-566.3f, -40.15f);
        path.quadTo(-566.3f, -39.15f, -567.0f, -38.45f);
    }

    private static void draw_360(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_355(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_356(Path path)
    {
        path.reset();
        path.moveTo(-568.5f, -38.9f);
        path.quadTo(-568.7f, -38.8f, -568.85f, -38.8f);
        path.quadTo(-569.95f, -38.8f, -571.4f, -39.4f);
        path.lineTo(-576.0f, -40.3f);
    }

    private static void draw_361(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_356(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_357(Path path)
    {
        path.reset();
        path.moveTo(-607.55f, -36.15f);
        path.lineTo(-607.85f, -35.5f);
        path.quadTo(-609.1f, -32.35f, -610.2f, -31.0f);
        path.lineTo(-610.45f, -30.7f);
        path.lineTo(-610.2f, -30.65f);
        path.lineTo(-609.75f, -30.6f);
        path.quadTo(-607.1f, -30.6f, -604.1f, -32.2f);
        path.lineTo(-603.25f, -32.65f);
        path.lineTo(-603.75f, -33.0f);
        path.quadTo(-606.2f, -34.7f, -607.55f, -36.15f);
    }

    private static void draw_362(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_357(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_358(Path path)
    {
        path.reset();
        path.moveTo(-603.15f, -32.55f);
        path.lineTo(-610.2f, -27.0f);
        path.lineTo(-611.95f, -25.55f);
        path.lineTo(-613.25f, -25.85f);
        path.lineTo(-614.7f, -26.2f);
    }

    private static void draw_363(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_358(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_359(Path path)
    {
        path.reset();
        path.moveTo(-619.9f, -24.6f);
        path.lineTo(-620.1f, -24.85f);
        path.lineTo(-620.05f, -24.85f);
        path.lineTo(-619.8f, -24.9f);
        path.lineTo(-618.3f, -25.45f);
        path.lineTo(-615.7f, -26.45f);
        path.quadTo(-613.9f, -27.55f, -610.6f, -30.6f);
        path.lineTo(-610.45f, -30.7f);
        path.lineTo(-610.55f, -30.7f);
        path.lineTo(-611.5f, -31.1f);
        path.quadTo(-612.5f, -31.7f, -612.65f, -31.7f);
        path.quadTo(-613.4f, -31.7f, -615.65f, -30.6f);
        path.quadTo(-617.9f, -29.6f, -620.5f, -29.6f);
    }

    private static void draw_364(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_359(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_360(Path path)
    {
        path.reset();
        path.moveTo(-593.9f, -34.45f);
        path.lineTo(-592.2f, -34.7f);
        path.quadTo(-587.65f, -34.7f, -584.65f, -32.7f);
        path.quadTo(-581.7f, -30.6f, -580.65f, -30.6f);
        path.quadTo(-579.75f, -30.6f, -579.25f, -32.0f);
        path.quadTo(-578.95f, -32.95f, -578.95f, -33.9f);
        path.quadTo(-578.95f, -34.95f, -582.1f, -37.45f);
        path.quadTo(-585.05f, -39.85f, -585.35f, -39.85f);
        path.quadTo(-586.5f, -39.85f, -590.65f, -37.55f);
        path.lineTo(-593.35f, -35.95f);
    }

    private static void draw_365(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_360(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_361(Path path)
    {
        path.reset();
        path.moveTo(-593.9f, -34.45f);
        path.lineTo(-594.9f, -32.15f);
    }

    private static void draw_366(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_361(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_362(Path path)
    {
        path.reset();
        path.moveTo(-594.6f, -30.6f);
        path.lineTo(-597.1f, -30.0f);
        path.lineTo(-597.65f, -30.0f);
        path.quadTo(-598.7f, -30.0f, -600.7f, -31.1f);
        path.lineTo(-603.15f, -29.6f);
        path.lineTo(-608.55f, -26.9f);
    }

    private static void draw_367(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_362(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_363(Path path)
    {
        path.reset();
        path.moveTo(-603.15f, -32.65f);
        path.lineTo(-600.7f, -31.1f);
        path.quadTo(-599.3f, -32.2f, -598.7f, -33.4f);
    }

    private static void draw_368(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_363(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_364(Path path)
    {
        path.reset();
        path.moveTo(-599.5f, -36.7f);
        path.quadTo(-600.3f, -34.45f, -602.85f, -32.8f);
    }

    private static void draw_369(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_364(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_365(Path path)
    {
        path.reset();
        path.moveTo(-589.35f, -69.2f);
        path.quadTo(-590.7f, -68.5f, -591.8f, -68.5f);
        path.quadTo(-593.65f, -68.5f, -593.85f, -71.25f);
        path.quadTo(-594.85f, -71.15f, -596.15f, -69.9f);
        path.quadTo(-597.45f, -68.5f, -598.75f, -68.5f);
        path.quadTo(-599.1f, -68.5f, -604.35f, -71.3f);
        path.lineTo(-605.55f, -71.9f);
        path.quadTo(-605.5f, -71.6f, -599.1f, -66.8f);
        path.quadTo(-592.5f, -61.95f, -592.5f, -61.25f);
        path.quadTo(-592.5f, -60.35f, -595.2f, -58.3f);
        path.quadTo(-597.95f, -56.2f, -597.95f, -55.55f);
        path.quadTo(-597.95f, -55.1f, -596.25f, -52.7f);
        path.quadTo(-594.55f, -50.25f, -594.55f, -49.45f);
        path.quadTo(-594.55f, -46.6f, -599.3f, -43.9f);
        path.quadTo(-604.05f, -41.35f, -604.05f, -39.2f);
        path.quadTo(-604.05f, -36.1f, -596.7f, -32.75f);
        path.lineTo(-593.45f, -34.95f);
        path.quadTo(-590.35f, -37.2f, -587.5f, -37.2f);
        path.quadTo(-584.8f, -37.2f, -584.05f, -36.15f);
        path.lineTo(-580.55f, -32.05f);
        path.quadTo(-579.6f, -31.25f, -576.7f, -30.85f);
        path.lineTo(-572.05f, -30.05f);
        path.lineTo(-572.05f, -32.05f);
        path.lineTo(-573.05f, -36.0f);
        path.quadTo(-573.7f, -38.2f, -573.75f, -39.55f);
        path.quadTo(-572.95f, -40.4f, -570.9f, -40.7f);
        path.quadTo(-568.55f, -41.05f, -567.3f, -41.95f);
        path.quadTo(-567.2f, -43.45f, -568.9f, -44.6f);
        path.lineTo(-573.05f, -47.75f);
        path.lineTo(-574.3f, -50.75f);
        path.lineTo(-575.1f, -53.55f);
        path.quadTo(-575.1f, -54.05f, -574.55f, -54.35f);
        path.quadTo(-574.1f, -54.7f, -574.1f, -55.45f);
        path.quadTo(-574.1f, -56.1f, -575.6f, -57.05f);
        path.quadTo(-577.15f, -58.0f, -577.15f, -59.65f);
        path.quadTo(-577.15f, -60.7f, -576.4f, -62.4f);
        path.lineTo(-574.75f, -65.8f);
        path.lineTo(-574.75f, -71.6f);
        path.lineTo(-579.9f, -66.55f);
        path.quadTo(-583.65f, -62.7f, -584.65f, -62.7f);
        path.quadTo(-586.75f, -62.7f, -587.1f, -65.85f);
        path.quadTo(-587.05f, -69.35f, -587.4f, -69.9f);
        path.quadTo(-588.0f, -69.9f, -589.35f, -69.2f);
        path.close();
    }

    private static void draw_370(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_365(path);
        paint.setColor(Color.argb(255, 102, 153, 102));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_366(Path path)
    {
        path.reset();
        path.moveTo(1043.3f, 196.1f);
        path.lineTo(966.05f, 175.4f);
        path.quadTo(961.25f, 174.15f, 956.85f, 176.65f);
        path.quadTo(952.45f, 179.25f, 951.15f, 184.1f);
        path.lineTo(930.45f, 261.35f);
        path.quadTo(929.15f, 266.25f, 931.65f, 270.6f);
        path.quadTo(934.25f, 274.95f, 939.05f, 276.2f);
        path.lineTo(1016.3f, 296.9f);
        path.quadTo(1021.15f, 298.25f, 1025.55f, 295.75f);
        path.quadTo(1029.95f, 293.25f, 1031.25f, 288.35f);
        path.lineTo(1051.95f, 211.1f);
        path.quadTo(1053.25f, 206.25f, 1050.75f, 201.8f);
        path.quadTo(1048.15f, 197.45f, 1043.3f, 196.1f);
        path.close();
    }

    private static void draw_371(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_366(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(12.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_367(Path path)
    {
        path.reset();
        path.moveTo(1044.1f, 215.25f);
        path.lineTo(1044.35f, 214.2f);
        path.quadTo(1045.5f, 209.95f, 1043.3f, 206.15f);
        path.quadTo(1041.1f, 202.3f, 1036.85f, 201.15f);
        path.lineTo(985.4f, 187.35f);
        path.lineTo(975.75f, 189.25f);
        path.lineTo(967.3f, 194.6f);
        path.lineTo(953.3f, 217.05f);
        path.lineTo(967.3f, 194.6f);
        path.lineTo(975.75f, 189.25f);
        path.lineTo(985.4f, 187.35f);
        path.lineTo(980.75f, 186.1f);
        path.lineTo(975.75f, 189.25f);
        path.lineTo(980.75f, 186.1f);
        path.lineTo(973.75f, 184.25f);
        path.lineTo(967.3f, 194.6f);
        path.lineTo(973.75f, 184.25f);
        path.lineTo(969.2f, 183.0f);
        path.quadTo(965.0f, 181.9f, 961.15f, 184.15f);
        path.quadTo(957.3f, 186.3f, 956.15f, 190.55f);
        path.lineTo(941.3f, 246.15f);
        path.lineTo(954.6f, 251.6f);
        path.lineTo(941.3f, 246.15f);
        path.lineTo(939.1f, 254.35f);
        path.lineTo(967.3f, 271.9f);
        path.lineTo(939.1f, 254.35f);
        path.lineTo(938.05f, 258.2f);
        path.quadTo(936.9f, 262.45f, 939.15f, 266.3f);
        path.quadTo(941.35f, 270.1f, 945.55f, 271.2f);
        path.lineTo(999.65f, 285.7f);
        path.lineTo(1013.2f, 289.35f);
        path.lineTo(1014.5f, 289.55f);
        path.quadTo(1018.05f, 290.15f, 1021.3f, 288.3f);
        path.quadTo(1025.1f, 286.1f, 1026.25f, 281.85f);
        path.lineTo(1040.9f, 227.2f);
        path.lineTo(1025.85f, 212.45f);
        path.lineTo(1040.9f, 227.2f);
        path.lineTo(1044.1f, 215.25f);
        path.close();
    }

    private static void draw_372(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_367(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_368(Path path)
    {
        path.reset();
        path.moveTo(985.4f, 187.35f);
        path.lineTo(1036.85f, 201.15f);
        path.quadTo(1041.1f, 202.3f, 1043.3f, 206.15f);
        path.quadTo(1045.5f, 209.95f, 1044.35f, 214.2f);
        path.lineTo(1044.1f, 215.25f);
        path.lineTo(1040.9f, 227.2f);
        path.lineTo(1044.9f, 231.05f);
        path.lineTo(1040.9f, 227.2f);
        path.lineTo(1026.25f, 281.85f);
        path.quadTo(1025.1f, 286.1f, 1021.3f, 288.3f);
        path.quadTo(1018.05f, 290.15f, 1014.5f, 289.55f);
        path.lineTo(1013.2f, 289.35f);
        path.lineTo(999.65f, 285.7f);
        path.lineTo(945.55f, 271.2f);
        path.quadTo(941.35f, 270.1f, 939.15f, 266.3f);
        path.quadTo(936.9f, 262.45f, 938.05f, 258.2f);
        path.lineTo(939.1f, 254.35f);
        path.lineTo(941.3f, 246.15f);
        path.lineTo(956.15f, 190.55f);
        path.quadTo(957.3f, 186.3f, 961.15f, 184.15f);
        path.quadTo(965.0f, 181.9f, 969.2f, 183.0f);
        path.lineTo(973.75f, 184.25f);
        path.lineTo(980.75f, 186.1f);
        path.lineTo(985.1f, 183.4f);
        path.lineTo(980.75f, 186.1f);
        path.lineTo(985.4f, 187.35f);
        path.close();
        path.moveTo(1050.75f, 201.8f);
        path.quadTo(1048.15f, 197.45f, 1043.3f, 196.1f);
        path.lineTo(966.05f, 175.4f);
        path.quadTo(961.25f, 174.15f, 956.85f, 176.65f);
        path.quadTo(952.45f, 179.25f, 951.15f, 184.1f);
        path.lineTo(930.45f, 261.35f);
        path.quadTo(929.15f, 266.25f, 931.65f, 270.6f);
        path.quadTo(934.25f, 274.95f, 939.05f, 276.2f);
        path.lineTo(1016.3f, 296.9f);
        path.quadTo(1021.15f, 298.25f, 1025.55f, 295.75f);
        path.quadTo(1029.95f, 293.25f, 1031.25f, 288.35f);
        path.lineTo(1051.95f, 211.1f);
        path.quadTo(1053.25f, 206.25f, 1050.75f, 201.8f);
        path.close();
    }

    private static void draw_373(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_368(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_369(Path path)
    {
        path.reset();
        path.moveTo(985.4f, 187.35f);
        path.lineTo(975.75f, 189.25f);
        path.lineTo(967.3f, 194.6f);
        path.lineTo(953.3f, 217.05f);
    }

    private static void draw_374(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_369(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_370(Path path)
    {
        path.reset();
        path.moveTo(1040.9f, 227.2f);
        path.lineTo(1025.85f, 212.45f);
    }

    private static void draw_375(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_370(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_371(Path path)
    {
        path.reset();
        path.moveTo(1040.9f, 227.2f);
        path.lineTo(1044.9f, 231.05f);
    }

    private static void draw_376(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_371(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_372(Path path)
    {
        path.reset();
        path.moveTo(1044.1f, 215.25f);
        path.lineTo(1012.05f, 199.5f);
    }

    private static void draw_377(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_372(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_373(Path path)
    {
        path.reset();
        path.moveTo(1014.5f, 289.55f);
        path.lineTo(1026.05f, 258.9f);
    }

    private static void draw_378(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_373(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_374(Path path)
    {
        path.reset();
        path.moveTo(985.4f, 187.35f);
        path.lineTo(993.75f, 185.75f);
    }

    private static void draw_379(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_374(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_375(Path path)
    {
        path.reset();
        path.moveTo(975.75f, 189.25f);
        path.lineTo(980.75f, 186.1f);
        path.lineTo(985.1f, 183.4f);
    }

    private static void draw_380(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_375(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_376(Path path)
    {
        path.reset();
        path.moveTo(973.75f, 184.25f);
        path.lineTo(967.3f, 194.6f);
    }

    private static void draw_381(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_376(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_377(Path path)
    {
        path.reset();
        path.moveTo(973.75f, 184.25f);
        path.lineTo(975.55f, 181.25f);
    }

    private static void draw_382(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_377(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_378(Path path)
    {
        path.reset();
        path.moveTo(939.4f, 245.45f);
        path.lineTo(941.3f, 246.15f);
        path.lineTo(954.6f, 251.6f);
    }

    private static void draw_383(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_378(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_379(Path path)
    {
        path.reset();
        path.moveTo(936.2f, 252.55f);
        path.lineTo(939.1f, 254.35f);
        path.lineTo(967.3f, 271.9f);
    }

    private static void draw_384(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_379(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_380(Path path)
    {
        path.reset();
        path.moveTo(999.65f, 285.7f);
        path.lineTo(1015.8f, 267.15f);
    }

    private static void draw_385(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_380(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_381(Path path)
    {
        path.reset();
        path.moveTo(999.65f, 285.7f);
        path.lineTo(997.6f, 288.05f);
    }

    private static void draw_386(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_381(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_382(Path path)
    {
        path.reset();
        path.moveTo(1017.65f, 198.8f);
        path.lineTo(1017.6f, 199.1f);
        path.lineTo(1017.75f, 198.9f);
        path.lineTo(1017.65f, 198.8f);
        path.close();
    }

    private static void draw_387(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_382(path);
        paint.setColor(Color.argb(255, 12, 109, 182));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_383(Path path)
    {
        path.reset();
        path.moveTo(970.8f, 223.8f);
        path.quadTo(972.45f, 210.15f, 973.5f, 206.3f);
        path.quadTo(974.8f, 201.5f, 977.4f, 198.45f);
        path.quadTo(974.1f, 196.55f, 973.25f, 196.3f);
        path.lineTo(970.35f, 195.9f);
        path.lineTo(968.8f, 196.75f);
        path.quadTo(953.8f, 205.4f, 948.45f, 221.6f);
        path.lineTo(951.4f, 218.75f);
        path.quadTo(958.35f, 212.6f, 964.4f, 214.2f);
        path.quadTo(968.05f, 215.2f, 969.85f, 222.85f);
        path.lineTo(970.1f, 223.95f);
        path.lineTo(970.35f, 225.2f);
        path.lineTo(970.55f, 226.25f);
        path.lineTo(970.85f, 224.0f);
        path.lineTo(970.8f, 223.8f);
        path.close();
        path.moveTo(1015.0f, 204.15f);
        path.lineTo(1015.15f, 203.75f);
        path.lineTo(1014.8f, 204.1f);
        path.lineTo(1015.0f, 204.15f);
        path.close();
        path.moveTo(1023.85f, 212.0f);
        path.lineTo(1023.4f, 214.3f);
        path.lineTo(1022.85f, 217.15f);
        path.lineTo(1024.5f, 217.65f);
        path.lineTo(1027.65f, 218.35f);
        path.lineTo(1027.35f, 218.0f);
        path.quadTo(1025.65f, 216.05f, 1023.85f, 212.0f);
        path.close();
        path.moveTo(963.6f, 272.2f);
        path.lineTo(967.45f, 274.8f);
        path.lineTo(969.75f, 274.05f);
        path.quadTo(973.05f, 272.5f, 974.45f, 267.3f);
        path.lineTo(975.7f, 261.1f);
        path.lineTo(973.45f, 258.45f);
        path.lineTo(973.15f, 258.05f);
        path.quadTo(973.25f, 259.3f, 972.95f, 260.4f);
        path.quadTo(971.9f, 264.35f, 967.25f, 269.0f);
        path.lineTo(963.6f, 272.2f);
        path.close();
        path.moveTo(1003.15f, 263.3f);
        path.lineTo(1000.15f, 264.7f);
        path.lineTo(999.9f, 265.2f);
        path.lineTo(999.9f, 265.25f);
        path.lineTo(1003.15f, 263.3f);
        path.close();
        path.moveTo(1025.95f, 254.0f);
        path.lineTo(1024.45f, 255.8f);
        path.lineTo(1024.8f, 256.65f);
        path.quadTo(1025.3f, 255.35f, 1025.95f, 254.0f);
        path.close();
        path.moveTo(1003.8f, 231.8f);
        path.lineTo(1004.4f, 229.6f);
        path.quadTo(1005.35f, 229.0f, 1006.35f, 228.5f);
        path.quadTo(1005.5f, 227.8f, 1004.4f, 227.5f);
        path.lineTo(1002.4f, 227.35f);
        path.quadTo(1002.0f, 227.6f, 1001.75f, 228.45f);
        path.quadTo(1001.25f, 230.4f, 1002.95f, 231.4f);
        path.lineTo(1003.8f, 231.8f);
        path.close();
        path.moveTo(1005.6f, 232.85f);
        path.lineTo(1003.8f, 231.8f);
        path.lineTo(1003.65f, 232.35f);
        path.lineTo(1005.6f, 232.85f);
        path.close();
        path.moveTo(1008.15f, 230.5f);
        path.lineTo(1007.7f, 231.55f);
        path.quadTo(1007.15f, 232.5f, 1006.4f, 233.05f);
        path.lineTo(1009.95f, 234.0f);
        path.lineTo(1010.9f, 233.0f);
        path.lineTo(1008.15f, 230.5f);
        path.close();
        path.moveTo(989.25f, 230.55f);
        path.lineTo(989.85f, 230.35f);
        path.lineTo(989.3f, 230.1f);
        path.quadTo(987.8f, 229.2f, 986.6f, 228.8f);
        path.quadTo(986.4f, 230.65f, 985.25f, 231.45f);
        path.quadTo(984.1f, 232.2f, 982.7f, 231.8f);
        path.quadTo(982.15f, 231.65f, 981.7f, 230.0f);
        path.lineTo(981.35f, 228.05f);
        path.lineTo(980.3f, 228.15f);
        path.quadTo(977.6f, 228.75f, 977.35f, 229.7f);
        path.quadTo(977.0f, 231.05f, 982.25f, 232.9f);
        path.quadTo(984.05f, 233.4f, 986.2f, 232.3f);
        path.lineTo(989.25f, 230.55f);
        path.close();
        path.moveTo(1023.55f, 237.65f);
        path.lineTo(1021.35f, 237.1f);
        path.lineTo(1021.35f, 237.6f);
        path.quadTo(1020.75f, 237.75f, 1020.65f, 238.15f);
        path.quadTo(1020.2f, 239.85f, 1022.15f, 241.95f);
        path.quadTo(1023.9f, 243.65f, 1025.4f, 244.05f);
        path.lineTo(1027.0f, 244.5f);
        path.quadTo(1028.2f, 244.6f, 1028.5f, 243.4f);
        path.quadTo(1028.75f, 242.6f, 1026.8f, 239.45f);
        path.quadTo(1026.75f, 240.45f, 1025.9f, 241.5f);
        path.quadTo(1025.0f, 242.7f, 1024.15f, 242.5f);
        path.quadTo(1022.95f, 242.15f, 1022.65f, 241.65f);
        path.quadTo(1022.4f, 241.05f, 1022.8f, 239.55f);
        path.lineTo(1023.35f, 237.95f);
        path.lineTo(1023.55f, 237.65f);
        path.close();
    }

    private static void draw_388(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_383(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_384(Path path)
    {
        path.reset();
        path.moveTo(948.45f, 221.6f);
        path.lineTo(947.6f, 224.35f);
        path.quadTo(942.75f, 242.55f, 952.15f, 258.8f);
        path.quadTo(956.85f, 266.9f, 963.6f, 272.2f);
        path.lineTo(967.25f, 269.0f);
        path.quadTo(971.9f, 264.35f, 972.95f, 260.4f);
        path.quadTo(973.25f, 259.3f, 973.15f, 258.05f);
        path.quadTo(970.3f, 254.5f, 969.4f, 251.35f);
        path.quadTo(968.95f, 249.15f, 968.8f, 243.1f);
        path.quadTo(969.15f, 242.9f, 968.8f, 242.75f);
        path.quadTo(966.75f, 241.4f, 965.35f, 236.35f);
        path.lineTo(964.7f, 233.2f);
        path.lineTo(964.95f, 233.1f);
        path.lineTo(964.6f, 232.85f);
        path.quadTo(964.25f, 230.55f, 964.4f, 228.5f);
        path.lineTo(964.9f, 225.75f);
        path.lineTo(965.65f, 223.0f);
        path.quadTo(966.35f, 221.5f, 968.4f, 222.05f);
        path.quadTo(969.2f, 222.25f, 969.85f, 222.85f);
        path.quadTo(968.05f, 215.2f, 964.4f, 214.2f);
        path.quadTo(958.35f, 212.6f, 951.4f, 218.75f);
        path.lineTo(948.45f, 221.6f);
        path.close();
        path.moveTo(969.8f, 233.4f);
        path.lineTo(968.85f, 233.15f);
        path.quadTo(969.25f, 233.35f, 969.7f, 234.4f);
        path.lineTo(969.6f, 235.05f);
        path.lineTo(969.85f, 234.85f);
        path.lineTo(969.7f, 234.4f);
        path.lineTo(969.8f, 233.4f);
        path.close();
    }

    private static Shader create_gradient_21()
    {
        int colors[] = {
            Color.argb(255, 176, 239, 255),
            Color.argb(255, 0, 102, 204)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_389(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_384(path);
        Shader shader = create_gradient_21();
        shader.setLocalMatrix(createMatrix(-0.0205994f, -1.52588e-05f, 0.0f, -0.0342865f, 960.25f, 242.3f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_385(Path path)
    {
        path.reset();
        path.moveTo(977.4f, 198.45f);
        path.quadTo(980.85f, 194.55f, 986.6f, 193.55f);
        path.lineTo(996.4f, 193.25f);
        path.lineTo(1006.9f, 193.55f);
        path.lineTo(1008.8f, 194.05f);
        path.lineTo(1003.25f, 192.25f);
        path.quadTo(985.9f, 187.6f, 970.35f, 195.9f);
        path.lineTo(973.25f, 196.3f);
        path.quadTo(974.1f, 196.55f, 977.4f, 198.45f);
        path.close();
        path.moveTo(1014.8f, 204.1f);
        path.lineTo(1014.6f, 204.05f);
        path.lineTo(1014.8f, 204.25f);
        path.lineTo(1014.8f, 204.1f);
        path.close();
    }

    private static Shader create_gradient_22()
    {
        int colors[] = {
            Color.argb(255, 255, 255, 255),
            Color.argb(255, 199, 104, 255)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_390(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_385(path);
        Shader shader = create_gradient_22();
        shader.setLocalMatrix(createMatrix(0.00257874f, -0.00961304f, 0.00956726f, 0.00256348f, 995.6f, 193.05f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_386(Path path)
    {
        path.reset();
        path.moveTo(1024.6f, 204.9f);
        path.lineTo(1023.85f, 212.0f);
        path.quadTo(1025.65f, 216.05f, 1027.35f, 218.0f);
        path.lineTo(1027.65f, 218.35f);
        path.lineTo(1031.75f, 218.55f);
        path.lineTo(1033.3f, 218.15f);
        path.lineTo(1030.85f, 213.35f);
        path.quadTo(1028.1f, 208.6f, 1024.6f, 204.9f);
        path.close();
        path.moveTo(1018.25f, 272.9f);
        path.quadTo(1031.1f, 263.65f, 1035.35f, 247.85f);
        path.quadTo(1037.55f, 239.65f, 1036.85f, 231.85f);
        path.quadTo(1034.2f, 241.85f, 1029.95f, 248.45f);
        path.lineTo(1025.95f, 254.0f);
        path.quadTo(1025.3f, 255.35f, 1024.8f, 256.65f);
        path.lineTo(1024.65f, 256.95f);
        path.lineTo(1024.85f, 257.0f);
        path.quadTo(1025.25f, 258.7f, 1024.8f, 260.55f);
        path.quadTo(1024.0f, 263.5f, 1022.1f, 266.8f);
        path.lineTo(1018.25f, 272.9f);
        path.close();
    }

    private static Shader create_gradient_23()
    {
        int colors[] = {
            Color.argb(255, 62, 188, 210),
            Color.argb(255, 255, 255, 255)
        };
        float locations[] = {
            0.0f,
            1.0f
        };
        return new LinearGradient(-819.2f, 0.0f, 819.2f, 0.0f, colors, locations, Shader.TileMode.CLAMP);
    }

    private static void draw_391(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_386(path);
        Shader shader = create_gradient_23();
        shader.setLocalMatrix(createMatrix(-0.0157623f, -0.00422668f, 0.0121765f, -0.0454254f, 1037.05f, 239.95f));
        paint.setShader(shader);
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setShader(null);
        canvas.restore();
    }

    private static void def_path_387(Path path)
    {
        path.reset();
        path.moveTo(1014.6f, 204.05f);
        path.lineTo(1009.95f, 202.2f);
        path.quadTo(1005.65f, 200.4f, 1004.55f, 200.1f);
        path.quadTo(998.55f, 198.5f, 997.75f, 198.6f);
        path.quadTo(997.3f, 198.65f, 989.8f, 202.05f);
        path.lineTo(985.6f, 203.0f);
        path.lineTo(982.75f, 203.65f);
        path.quadTo(979.05f, 204.4f, 978.2f, 207.55f);
        path.lineTo(976.75f, 216.3f);
        path.lineTo(975.6f, 219.85f);
        path.quadTo(974.5f, 221.9f, 972.9f, 221.15f);
        path.quadTo(972.35f, 223.2f, 970.8f, 223.8f);
        path.lineTo(970.85f, 224.0f);
        path.lineTo(970.55f, 226.25f);
        path.quadTo(970.1f, 229.5f, 969.8f, 233.4f);
        path.lineTo(969.7f, 234.4f);
        path.lineTo(969.85f, 234.85f);
        path.lineTo(970.8f, 240.0f);
        path.lineTo(971.15f, 243.05f);
        path.quadTo(972.05f, 252.0f, 975.7f, 253.15f);
        path.lineTo(979.5f, 256.0f);
        path.lineTo(980.35f, 251.6f);
        path.quadTo(981.8f, 246.15f, 987.9f, 245.15f);
        path.lineTo(991.65f, 245.0f);
        path.lineTo(991.1f, 243.75f);
        path.quadTo(988.6f, 237.25f, 989.25f, 230.55f);
        path.lineTo(986.2f, 232.3f);
        path.quadTo(984.05f, 233.4f, 982.25f, 232.9f);
        path.quadTo(977.0f, 231.05f, 977.35f, 229.7f);
        path.quadTo(977.6f, 228.75f, 980.3f, 228.15f);
        path.lineTo(981.35f, 228.05f);
        path.lineTo(981.5f, 228.0f);
        path.lineTo(985.15f, 228.25f);
        path.lineTo(986.4f, 228.6f);
        path.lineTo(986.6f, 228.8f);
        path.quadTo(987.8f, 229.2f, 989.3f, 230.1f);
        path.quadTo(989.55f, 228.15f, 990.1f, 226.2f);
        path.lineTo(990.8f, 224.0f);
        path.lineTo(986.5f, 223.65f);
        path.quadTo(978.6f, 222.85f, 976.8f, 223.85f);
        path.quadTo(979.65f, 220.25f, 982.0f, 219.6f);
        path.quadTo(984.15f, 219.05f, 989.1f, 220.4f);
        path.quadTo(989.9f, 220.6f, 991.55f, 221.35f);
        path.quadTo(994.85f, 211.3f, 999.75f, 204.3f);
        path.quadTo(1000.5f, 206.0f, 1002.25f, 208.15f);
        path.lineTo(1004.55f, 210.45f);
        path.lineTo(1006.35f, 206.75f);
        path.quadTo(1008.25f, 209.5f, 1013.9f, 212.8f);
        path.quadTo(1017.1f, 214.65f, 1019.7f, 215.9f);
        path.lineTo(1019.4f, 209.85f);
        path.lineTo(1018.75f, 204.35f);
        path.lineTo(1016.6f, 204.15f);
        path.lineTo(1015.0f, 204.15f);
        path.lineTo(1014.8f, 204.1f);
        path.lineTo(1014.8f, 204.25f);
        path.lineTo(1014.6f, 204.05f);
        path.close();
        path.moveTo(967.45f, 274.8f);
        path.quadTo(972.95f, 278.15f, 979.75f, 279.95f);
        path.lineTo(979.95f, 280.0f);
        path.lineTo(981.9f, 278.05f);
        path.lineTo(985.25f, 273.35f);
        path.lineTo(987.2f, 270.45f);
        path.lineTo(986.3f, 270.3f);
        path.quadTo(981.8f, 269.1f, 979.25f, 266.05f);
        path.lineTo(975.7f, 261.1f);
        path.lineTo(974.45f, 267.3f);
        path.quadTo(973.05f, 272.5f, 969.75f, 274.05f);
        path.lineTo(967.45f, 274.8f);
        path.close();
        path.moveTo(993.3f, 256.5f);
        path.quadTo(993.75f, 253.6f, 993.0f, 249.9f);
        path.quadTo(990.9f, 248.3f, 989.35f, 247.9f);
        path.quadTo(985.15f, 246.8f, 982.85f, 251.3f);
        path.quadTo(981.95f, 253.25f, 980.75f, 257.0f);
        path.lineTo(982.25f, 258.25f);
        path.quadTo(987.9f, 262.9f, 990.8f, 263.95f);
        path.lineTo(993.05f, 257.8f);
        path.lineTo(993.1f, 257.65f);
        path.lineTo(992.1f, 257.55f);
        path.lineTo(988.2f, 256.9f);
        path.lineTo(984.6f, 255.85f);
        path.quadTo(982.45f, 255.1f, 983.0f, 254.25f);
        path.lineTo(987.35f, 255.0f);
        path.lineTo(990.7f, 255.45f);
        path.lineTo(993.3f, 256.5f);
        path.close();
    }

    private static void draw_392(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_387(path);
        paint.setColor(Color.argb(255, 255, 207, 185));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_388(Path path)
    {
        path.reset();
        path.moveTo(979.95f, 280.0f);
        path.lineTo(980.5f, 280.15f);
        path.quadTo(995.85f, 284.0f, 1009.9f, 277.75f);
        path.lineTo(1014.2f, 275.4f);
        path.lineTo(1018.25f, 272.9f);
        path.lineTo(1022.1f, 266.8f);
        path.quadTo(1024.0f, 263.5f, 1024.8f, 260.55f);
        path.quadTo(1025.25f, 258.7f, 1024.85f, 257.0f);
        path.lineTo(1024.65f, 256.95f);
        path.lineTo(1024.8f, 256.65f);
        path.lineTo(1024.45f, 255.8f);
        path.lineTo(1023.65f, 254.85f);
        path.lineTo(1022.95f, 257.6f);
        path.lineTo(1022.3f, 259.2f);
        path.quadTo(1021.1f, 261.4f, 1019.1f, 263.75f);
        path.lineTo(1012.5f, 270.25f);
        path.lineTo(1017.75f, 262.7f);
        path.quadTo(1021.2f, 257.85f, 1022.45f, 254.25f);
        path.quadTo(1019.4f, 253.6f, 1011.9f, 258.3f);
        path.lineTo(1003.15f, 263.3f);
        path.lineTo(999.9f, 265.25f);
        path.lineTo(999.9f, 265.2f);
        path.lineTo(1000.15f, 264.7f);
        path.lineTo(1001.25f, 261.65f);
        path.quadTo(1002.0f, 258.9f, 1002.55f, 255.25f);
        path.lineTo(1002.85f, 252.9f);
        path.lineTo(1003.0f, 251.9f);
        path.quadTo(1003.1f, 249.5f, 1002.3f, 249.3f);
        path.lineTo(1001.9f, 249.3f);
        path.lineTo(1001.65f, 249.25f);
        path.quadTo(1000.9f, 249.35f, 1000.15f, 250.15f);
        path.quadTo(998.9f, 251.3f, 997.6f, 254.1f);
        path.lineTo(997.15f, 255.25f);
        path.quadTo(995.8f, 258.6f, 994.65f, 262.8f);
        path.lineTo(993.9f, 264.5f);
        path.quadTo(992.65f, 266.8f, 989.75f, 270.15f);
        path.lineTo(986.55f, 273.4f);
        path.lineTo(981.9f, 278.05f);
        path.lineTo(979.95f, 280.0f);
        path.close();
    }

    private static void draw_393(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_388(path);
        paint.setColor(Color.argb(255, 255, 222, 206));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_389(Path path)
    {
        path.reset();
        path.moveTo(1007.65f, 244.55f);
        path.lineTo(1008.75f, 244.7f);
        path.quadTo(1009.4f, 244.0f, 1009.7f, 242.8f);
        path.lineTo(1007.75f, 242.25f);
        path.quadTo(1007.5f, 243.2f, 1007.65f, 244.55f);
        path.close();
        path.moveTo(1013.55f, 244.25f);
        path.lineTo(1012.45f, 243.55f);
        path.quadTo(1012.15f, 244.4f, 1012.35f, 245.05f);
        path.lineTo(1012.55f, 245.25f);
        path.lineTo(1012.75f, 245.8f);
        path.lineTo(1013.15f, 246.0f);
        path.lineTo(1013.3f, 246.05f);
        path.lineTo(1014.65f, 246.25f);
        path.lineTo(1014.9f, 245.45f);
        path.lineTo(1013.55f, 244.25f);
        path.close();
    }

    private static void draw_394(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_389(path);
        paint.setColor(Color.argb(255, 184, 124, 88));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_390(Path path)
    {
        path.reset();
        path.moveTo(1017.75f, 198.9f);
        path.lineTo(1017.6f, 199.1f);
        path.lineTo(1017.65f, 198.8f);
        path.quadTo(1013.6f, 195.9f, 1008.8f, 194.05f);
        path.lineTo(1006.9f, 193.55f);
        path.lineTo(996.4f, 193.25f);
        path.lineTo(986.6f, 193.55f);
        path.quadTo(980.85f, 194.55f, 977.4f, 198.45f);
        path.quadTo(974.8f, 201.5f, 973.5f, 206.3f);
        path.quadTo(972.45f, 210.15f, 970.8f, 223.8f);
        path.quadTo(972.35f, 223.2f, 972.9f, 221.15f);
        path.quadTo(974.5f, 221.9f, 975.6f, 219.85f);
        path.lineTo(976.75f, 216.3f);
        path.lineTo(978.2f, 207.55f);
        path.quadTo(979.05f, 204.4f, 982.75f, 203.65f);
        path.lineTo(985.6f, 203.0f);
        path.lineTo(989.8f, 202.05f);
        path.quadTo(997.3f, 198.65f, 997.75f, 198.6f);
        path.quadTo(998.55f, 198.5f, 1004.55f, 200.1f);
        path.quadTo(1005.65f, 200.4f, 1009.95f, 202.2f);
        path.lineTo(1014.6f, 204.05f);
        path.lineTo(1014.8f, 204.1f);
        path.lineTo(1015.15f, 203.75f);
        path.lineTo(1015.0f, 204.15f);
        path.lineTo(1016.6f, 204.15f);
        path.lineTo(1018.75f, 204.35f);
        path.lineTo(1019.4f, 209.85f);
        path.lineTo(1019.7f, 215.9f);
        path.lineTo(1019.85f, 215.95f);
        path.quadTo(1021.4f, 216.7f, 1022.85f, 217.15f);
        path.lineTo(1023.4f, 214.3f);
        path.lineTo(1023.85f, 212.0f);
        path.lineTo(1024.6f, 204.9f);
        path.lineTo(1020.25f, 200.8f);
        path.lineTo(1017.75f, 198.9f);
        path.close();
        path.moveTo(1013.6f, 223.85f);
        path.quadTo(1012.45f, 222.45f, 1008.65f, 221.45f);
        path.lineTo(1005.8f, 220.75f);
        path.quadTo(1004.6f, 220.7f, 1003.55f, 221.75f);
        path.quadTo(1005.15f, 221.4f, 1008.85f, 224.2f);
        path.lineTo(1015.45f, 229.2f);
        path.quadTo(1014.75f, 225.15f, 1013.6f, 223.85f);
        path.close();
        path.moveTo(1028.55f, 230.6f);
        path.lineTo(1025.65f, 229.95f);
        path.quadTo(1023.75f, 229.95f, 1021.95f, 231.75f);
        path.quadTo(1024.0f, 230.55f, 1027.85f, 233.2f);
        path.quadTo(1029.7f, 234.45f, 1030.85f, 235.65f);
        path.quadTo(1032.0f, 236.8f, 1032.55f, 238.0f);
        path.lineTo(1033.15f, 235.6f);
        path.quadTo(1032.65f, 232.45f, 1031.75f, 231.65f);
        path.lineTo(1031.25f, 231.45f);
        path.lineTo(1028.55f, 230.6f);
        path.close();
        path.moveTo(991.55f, 221.35f);
        path.quadTo(989.9f, 220.6f, 989.1f, 220.4f);
        path.quadTo(984.15f, 219.05f, 982.0f, 219.6f);
        path.quadTo(979.65f, 220.25f, 976.8f, 223.85f);
        path.quadTo(978.6f, 222.85f, 986.5f, 223.65f);
        path.lineTo(990.8f, 224.0f);
        path.lineTo(991.55f, 221.35f);
        path.lineTo(991.8f, 221.4f);
        path.lineTo(991.55f, 221.35f);
        path.close();
        path.moveTo(1006.35f, 228.5f);
        path.quadTo(1005.35f, 229.0f, 1004.4f, 229.6f);
        path.lineTo(1003.8f, 231.8f);
        path.lineTo(1005.6f, 232.85f);
        path.lineTo(1006.4f, 233.05f);
        path.quadTo(1007.15f, 232.5f, 1007.7f, 231.55f);
        path.lineTo(1008.15f, 230.5f);
        path.lineTo(1007.35f, 229.5f);
        path.lineTo(1006.35f, 228.5f);
        path.close();
        path.moveTo(981.35f, 228.05f);
        path.lineTo(981.7f, 230.0f);
        path.quadTo(982.15f, 231.65f, 982.7f, 231.8f);
        path.quadTo(984.1f, 232.2f, 985.25f, 231.45f);
        path.quadTo(986.4f, 230.65f, 986.6f, 228.8f);
        path.lineTo(986.4f, 228.6f);
        path.lineTo(985.15f, 228.25f);
        path.lineTo(981.5f, 228.0f);
        path.lineTo(981.35f, 228.05f);
        path.close();
        path.moveTo(1026.8f, 239.45f);
        path.lineTo(1026.55f, 239.05f);
        path.lineTo(1026.1f, 238.35f);
        path.lineTo(1023.55f, 237.65f);
        path.lineTo(1023.35f, 237.95f);
        path.lineTo(1022.8f, 239.55f);
        path.quadTo(1022.4f, 241.05f, 1022.65f, 241.65f);
        path.quadTo(1022.95f, 242.15f, 1024.15f, 242.5f);
        path.quadTo(1025.0f, 242.7f, 1025.9f, 241.5f);
        path.quadTo(1026.75f, 240.45f, 1026.8f, 239.45f);
        path.close();
    }

    private static void draw_395(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_390(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_391(Path path)
    {
        path.reset();
        path.moveTo(993.0f, 249.9f);
        path.lineTo(991.65f, 245.0f);
        path.lineTo(987.9f, 245.15f);
        path.quadTo(981.8f, 246.15f, 980.35f, 251.6f);
        path.lineTo(979.5f, 256.0f);
        path.lineTo(975.7f, 253.15f);
        path.quadTo(972.05f, 252.0f, 971.15f, 243.05f);
        path.lineTo(970.8f, 240.0f);
        path.lineTo(969.85f, 234.85f);
        path.lineTo(969.6f, 235.05f);
        path.lineTo(968.8f, 242.75f);
        path.quadTo(969.15f, 242.9f, 968.8f, 243.1f);
        path.quadTo(968.95f, 249.15f, 969.4f, 251.35f);
        path.quadTo(970.3f, 254.5f, 973.15f, 258.05f);
        path.lineTo(973.45f, 258.45f);
        path.lineTo(975.7f, 261.1f);
        path.lineTo(979.25f, 266.05f);
        path.quadTo(981.8f, 269.1f, 986.3f, 270.3f);
        path.lineTo(987.2f, 270.45f);
        path.lineTo(990.8f, 263.95f);
        path.quadTo(987.9f, 262.9f, 982.25f, 258.25f);
        path.lineTo(980.75f, 257.0f);
        path.quadTo(981.95f, 253.25f, 982.85f, 251.3f);
        path.quadTo(985.15f, 246.8f, 989.35f, 247.9f);
        path.quadTo(990.9f, 248.3f, 993.0f, 249.9f);
        path.close();
    }

    private static void draw_396(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_391(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_392(Path path)
    {
        path.reset();
        path.moveTo(993.1f, 257.65f);
        path.lineTo(995.5f, 258.0f);
        path.lineTo(995.7f, 257.2f);
        path.lineTo(995.3f, 257.1f);
        path.lineTo(993.3f, 256.5f);
        path.lineTo(990.7f, 255.45f);
        path.lineTo(987.35f, 255.0f);
        path.lineTo(983.0f, 254.25f);
        path.quadTo(982.45f, 255.1f, 984.6f, 255.85f);
        path.lineTo(988.2f, 256.9f);
        path.lineTo(992.1f, 257.55f);
        path.lineTo(993.1f, 257.65f);
        path.close();
    }

    private static void draw_397(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_392(path);
        paint.setColor(Color.argb(255, 153, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_393(Path path)
    {
        path.reset();
        path.moveTo(1023.65f, 254.85f);
        path.lineTo(1022.5f, 254.25f);
        path.lineTo(1022.45f, 254.25f);
        path.quadTo(1021.2f, 257.85f, 1017.75f, 262.7f);
        path.lineTo(1012.5f, 270.25f);
        path.lineTo(1019.1f, 263.75f);
        path.quadTo(1021.1f, 261.4f, 1022.3f, 259.2f);
        path.lineTo(1022.95f, 257.6f);
        path.lineTo(1023.65f, 254.85f);
        path.close();
        path.moveTo(969.85f, 222.85f);
        path.quadTo(969.2f, 222.25f, 968.4f, 222.05f);
        path.quadTo(966.35f, 221.5f, 965.65f, 223.0f);
        path.lineTo(964.9f, 225.75f);
        path.lineTo(964.4f, 228.5f);
        path.quadTo(964.25f, 230.55f, 964.6f, 232.85f);
        path.lineTo(964.95f, 233.1f);
        path.lineTo(964.7f, 233.2f);
        path.lineTo(965.35f, 236.35f);
        path.quadTo(966.75f, 241.4f, 968.8f, 242.75f);
        path.lineTo(969.6f, 235.05f);
        path.lineTo(969.7f, 234.4f);
        path.quadTo(969.25f, 233.35f, 968.85f, 233.15f);
        path.lineTo(969.8f, 233.4f);
        path.quadTo(970.1f, 229.5f, 970.55f, 226.25f);
        path.lineTo(970.35f, 225.2f);
        path.lineTo(970.1f, 223.95f);
        path.lineTo(969.85f, 222.85f);
        path.close();
    }

    private static void draw_398(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_393(path);
        paint.setColor(Color.argb(255, 255, 159, 113));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_394(Path path)
    {
        path.reset();
        path.moveTo(1004.55f, 210.45f);
        path.lineTo(1002.25f, 208.15f);
        path.quadTo(1000.5f, 206.0f, 999.75f, 204.3f);
        path.quadTo(994.85f, 211.3f, 991.55f, 221.35f);
        path.lineTo(991.8f, 221.4f);
        path.lineTo(991.55f, 221.35f);
        path.lineTo(990.8f, 224.0f);
        path.lineTo(990.1f, 226.2f);
        path.quadTo(989.55f, 228.15f, 989.3f, 230.1f);
        path.lineTo(989.85f, 230.35f);
        path.lineTo(989.25f, 230.55f);
        path.quadTo(988.6f, 237.25f, 991.1f, 243.75f);
        path.lineTo(991.65f, 245.0f);
        path.lineTo(993.0f, 249.9f);
        path.quadTo(993.75f, 253.6f, 993.3f, 256.5f);
        path.lineTo(995.3f, 257.1f);
        path.lineTo(995.7f, 257.2f);
        path.lineTo(995.5f, 258.0f);
        path.lineTo(993.1f, 257.65f);
        path.lineTo(993.05f, 257.8f);
        path.lineTo(990.8f, 263.95f);
        path.lineTo(987.2f, 270.45f);
        path.lineTo(985.25f, 273.35f);
        path.lineTo(981.9f, 278.05f);
        path.lineTo(986.55f, 273.4f);
        path.lineTo(989.75f, 270.15f);
        path.quadTo(992.65f, 266.8f, 993.9f, 264.5f);
        path.lineTo(994.65f, 262.8f);
        path.quadTo(995.8f, 258.6f, 997.15f, 255.25f);
        path.lineTo(997.6f, 254.1f);
        path.quadTo(998.9f, 251.3f, 1000.15f, 250.15f);
        path.quadTo(999.65f, 248.85f, 998.45f, 247.35f);
        path.lineTo(997.8f, 246.65f);
        path.lineTo(997.1f, 245.8f);
        path.quadTo(995.25f, 243.75f, 994.6f, 242.55f);
        path.quadTo(993.25f, 240.25f, 993.65f, 237.1f);
        path.lineTo(995.0f, 231.45f);
        path.quadTo(996.1f, 227.35f, 1001.8f, 215.8f);
        path.lineTo(1004.55f, 210.45f);
        path.close();
    }

    private static void draw_399(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_394(path);
        paint.setColor(Color.argb(255, 126, 67, 27));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_395(Path path)
    {
        path.reset();
        path.moveTo(1022.85f, 217.15f);
        path.quadTo(1021.4f, 216.7f, 1019.85f, 215.95f);
        path.lineTo(1019.7f, 215.9f);
        path.quadTo(1017.1f, 214.65f, 1013.9f, 212.8f);
        path.quadTo(1008.25f, 209.5f, 1006.35f, 206.75f);
        path.lineTo(1004.55f, 210.45f);
        path.lineTo(1001.8f, 215.8f);
        path.quadTo(996.1f, 227.35f, 995.0f, 231.45f);
        path.lineTo(993.65f, 237.1f);
        path.quadTo(993.25f, 240.25f, 994.6f, 242.55f);
        path.quadTo(995.25f, 243.75f, 997.1f, 245.8f);
        path.lineTo(997.8f, 246.65f);
        path.lineTo(998.45f, 247.35f);
        path.quadTo(999.65f, 248.85f, 1000.15f, 250.15f);
        path.quadTo(1000.9f, 249.35f, 1001.65f, 249.25f);
        path.lineTo(1001.5f, 247.6f);
        path.lineTo(1001.5f, 245.35f);
        path.quadTo(1004.0f, 248.0f, 1007.3f, 250.15f);
        path.lineTo(1013.45f, 253.95f);
        path.lineTo(1010.25f, 255.85f);
        path.lineTo(1007.1f, 255.2f);
        path.lineTo(1004.0f, 254.2f);
        path.quadTo(1003.3f, 253.8f, 1002.85f, 252.9f);
        path.lineTo(1002.55f, 255.25f);
        path.quadTo(1002.0f, 258.9f, 1001.25f, 261.65f);
        path.lineTo(1000.15f, 264.7f);
        path.lineTo(1003.15f, 263.3f);
        path.lineTo(1011.9f, 258.3f);
        path.quadTo(1019.4f, 253.6f, 1022.45f, 254.25f);
        path.lineTo(1022.5f, 254.25f);
        path.lineTo(1023.65f, 254.85f);
        path.lineTo(1024.45f, 255.8f);
        path.lineTo(1025.95f, 254.0f);
        path.lineTo(1029.95f, 248.45f);
        path.quadTo(1034.2f, 241.85f, 1036.85f, 231.85f);
        path.lineTo(1036.2f, 227.1f);
        path.quadTo(1035.2f, 222.55f, 1033.3f, 218.15f);
        path.lineTo(1031.75f, 218.55f);
        path.lineTo(1027.65f, 218.35f);
        path.lineTo(1024.5f, 217.65f);
        path.lineTo(1022.85f, 217.15f);
        path.close();
        path.moveTo(1013.6f, 223.85f);
        path.quadTo(1014.75f, 225.15f, 1015.45f, 229.2f);
        path.lineTo(1008.85f, 224.2f);
        path.quadTo(1005.15f, 221.4f, 1003.55f, 221.75f);
        path.quadTo(1004.6f, 220.7f, 1005.8f, 220.75f);
        path.lineTo(1008.65f, 221.45f);
        path.quadTo(1012.45f, 222.45f, 1013.6f, 223.85f);
        path.close();
        path.moveTo(1028.55f, 230.6f);
        path.lineTo(1031.25f, 231.45f);
        path.lineTo(1031.75f, 231.65f);
        path.quadTo(1032.65f, 232.45f, 1033.15f, 235.6f);
        path.lineTo(1032.55f, 238.0f);
        path.quadTo(1032.0f, 236.8f, 1030.85f, 235.65f);
        path.quadTo(1029.7f, 234.45f, 1027.85f, 233.2f);
        path.quadTo(1024.0f, 230.55f, 1021.95f, 231.75f);
        path.quadTo(1023.75f, 229.95f, 1025.65f, 229.95f);
        path.lineTo(1028.55f, 230.6f);
        path.close();
        path.moveTo(1003.8f, 231.8f);
        path.lineTo(1002.95f, 231.4f);
        path.quadTo(1001.25f, 230.4f, 1001.75f, 228.45f);
        path.quadTo(1002.0f, 227.6f, 1002.4f, 227.35f);
        path.lineTo(1004.4f, 227.5f);
        path.quadTo(1005.5f, 227.8f, 1006.35f, 228.5f);
        path.lineTo(1007.35f, 229.5f);
        path.lineTo(1008.15f, 230.5f);
        path.lineTo(1010.9f, 233.0f);
        path.lineTo(1009.95f, 234.0f);
        path.lineTo(1006.4f, 233.05f);
        path.lineTo(1005.6f, 232.85f);
        path.lineTo(1003.65f, 232.35f);
        path.lineTo(1003.8f, 231.8f);
        path.close();
        path.moveTo(1026.8f, 239.45f);
        path.quadTo(1028.75f, 242.6f, 1028.5f, 243.4f);
        path.quadTo(1028.2f, 244.6f, 1027.0f, 244.5f);
        path.lineTo(1025.4f, 244.05f);
        path.quadTo(1023.9f, 243.65f, 1022.15f, 241.95f);
        path.quadTo(1020.2f, 239.85f, 1020.65f, 238.15f);
        path.quadTo(1020.75f, 237.75f, 1021.35f, 237.6f);
        path.lineTo(1021.35f, 237.1f);
        path.lineTo(1023.55f, 237.65f);
        path.lineTo(1026.1f, 238.35f);
        path.lineTo(1026.55f, 239.05f);
        path.lineTo(1026.8f, 239.45f);
        path.close();
        path.moveTo(1007.65f, 244.55f);
        path.quadTo(1007.5f, 243.2f, 1007.75f, 242.25f);
        path.lineTo(1009.7f, 242.8f);
        path.quadTo(1009.4f, 244.0f, 1008.75f, 244.7f);
        path.lineTo(1007.65f, 244.55f);
        path.close();
        path.moveTo(1013.55f, 244.25f);
        path.lineTo(1014.9f, 245.45f);
        path.lineTo(1014.65f, 246.25f);
        path.lineTo(1013.3f, 246.05f);
        path.lineTo(1013.15f, 246.0f);
        path.lineTo(1012.75f, 245.8f);
        path.lineTo(1012.55f, 245.25f);
        path.lineTo(1012.35f, 245.05f);
        path.quadTo(1012.15f, 244.4f, 1012.45f, 243.55f);
        path.lineTo(1013.55f, 244.25f);
        path.close();
    }

    private static void draw_400(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_395(path);
        paint.setColor(Color.argb(255, 255, 217, 208));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_396(Path path)
    {
        path.reset();
        path.moveTo(1002.85f, 252.9f);
        path.quadTo(1003.3f, 253.8f, 1004.0f, 254.2f);
        path.lineTo(1007.1f, 255.2f);
        path.lineTo(1010.25f, 255.85f);
        path.lineTo(1013.45f, 253.95f);
        path.lineTo(1007.3f, 250.15f);
        path.quadTo(1004.0f, 248.0f, 1001.5f, 245.35f);
        path.lineTo(1001.5f, 247.6f);
        path.lineTo(1001.65f, 249.25f);
        path.lineTo(1001.9f, 249.3f);
        path.lineTo(1002.3f, 249.3f);
        path.quadTo(1003.1f, 249.5f, 1003.0f, 251.9f);
        path.lineTo(1002.85f, 252.9f);
        path.close();
    }

    private static void draw_401(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_396(path);
        paint.setColor(Color.argb(255, 255, 153, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_397(Path path)
    {
        path.reset();
        path.moveTo(-239.4f, 212.25f);
        path.lineTo(-304.15f, 277.0f);
        path.quadTo(-308.2f, 281.05f, -308.2f, 286.85f);
        path.quadTo(-308.2f, 292.65f, -304.1f, 296.75f);
        path.lineTo(-239.35f, 361.5f);
        path.quadTo(-235.25f, 365.6f, -229.45f, 365.6f);
        path.quadTo(-223.7f, 365.55f, -219.65f, 361.5f);
        path.lineTo(-154.9f, 296.75f);
        path.quadTo(-150.8f, 292.65f, -150.75f, 286.9f);
        path.quadTo(-150.75f, 281.1f, -154.85f, 277.0f);
        path.lineTo(-219.6f, 212.25f);
        path.quadTo(-223.7f, 208.15f, -229.5f, 208.15f);
        path.quadTo(-235.3f, 208.15f, -239.4f, 212.25f);
        path.close();
    }

    private static void draw_402(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_397(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(12.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_398(Path path)
    {
        path.reset();
        path.moveTo(-239.4f, 212.25f);
        path.lineTo(-304.15f, 277.0f);
        path.quadTo(-308.2f, 281.05f, -308.2f, 286.85f);
        path.quadTo(-308.2f, 292.65f, -304.1f, 296.75f);
        path.lineTo(-239.35f, 361.5f);
        path.quadTo(-235.25f, 365.6f, -229.45f, 365.6f);
        path.quadTo(-223.7f, 365.55f, -219.65f, 361.5f);
        path.lineTo(-154.9f, 296.75f);
        path.quadTo(-150.8f, 292.65f, -150.75f, 286.9f);
        path.quadTo(-150.75f, 281.1f, -154.85f, 277.0f);
        path.lineTo(-219.6f, 212.25f);
        path.quadTo(-223.7f, 208.15f, -229.5f, 208.15f);
        path.quadTo(-235.3f, 208.15f, -239.4f, 212.25f);
        path.close();
        path.moveTo(-268.5f, 249.9f);
        path.lineTo(-238.45f, 219.85f);
        path.lineTo(-237.55f, 219.1f);
        path.quadTo(-234.2f, 216.15f, -229.55f, 216.05f);
        path.quadTo(-224.3f, 216.15f, -220.6f, 219.85f);
        path.lineTo(-162.45f, 278.0f);
        path.quadTo(-158.75f, 281.7f, -158.8f, 286.8f);
        path.quadTo(-158.8f, 292.05f, -162.5f, 295.75f);
        path.lineTo(-167.4f, 300.65f);
        path.lineTo(-171.95f, 305.2f);
        path.lineTo(-188.1f, 321.35f);
        path.lineTo(-192.55f, 325.8f);
        path.lineTo(-205.0f, 338.25f);
        path.lineTo(-207.65f, 340.9f);
        path.lineTo(-216.45f, 349.7f);
        path.lineTo(-220.65f, 353.9f);
        path.quadTo(-224.3f, 357.55f, -229.45f, 357.5f);
        path.quadTo(-234.65f, 357.6f, -238.35f, 353.9f);
        path.lineTo(-270.5f, 321.75f);
        path.lineTo(-296.5f, 295.75f);
        path.quadTo(-300.2f, 292.05f, -300.2f, 286.75f);
        path.quadTo(-300.2f, 283.75f, -298.95f, 281.3f);
        path.quadTo(-298.15f, 279.55f, -296.6f, 278.0f);
        path.lineTo(-268.5f, 249.9f);
        path.close();
    }

    private static void draw_403(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_398(path);
        paint.setColor(Color.argb(255, 138, 37, 53));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_399(Path path)
    {
        path.reset();
        path.moveTo(-237.55f, 219.1f);
        path.lineTo(-238.45f, 219.85f);
        path.lineTo(-268.5f, 249.9f);
        path.lineTo(-211.65f, 306.7f);
        path.quadTo(-209.75f, 305.2f, -210.15f, 300.7f);
        path.quadTo(-211.0f, 295.15f, -211.05f, 293.45f);
        path.lineTo(-210.4f, 292.8f);
        path.lineTo(-208.05f, 295.1f);
        path.lineTo(-208.8f, 301.9f);
        path.quadTo(-209.35f, 306.0f, -209.05f, 309.3f);
        path.lineTo(-207.75f, 310.6f);
        path.lineTo(-205.75f, 312.6f);
        path.quadTo(-204.45f, 311.9f, -201.3f, 308.75f);
        path.quadTo(-198.9f, 306.35f, -196.0f, 302.05f);
        path.quadTo(-193.35f, 298.2f, -192.7f, 296.1f);
        path.lineTo(-192.75f, 295.5f);
        path.lineTo(-192.55f, 295.4f);
        path.lineTo(-190.7f, 298.45f);
        path.lineTo(-189.0f, 301.35f);
        path.lineTo(-188.95f, 301.05f);
        path.lineTo(-188.6f, 300.7f);
        path.lineTo(-188.45f, 300.8f);
        path.quadTo(-187.0f, 303.05f, -186.3f, 305.65f);
        path.lineTo(-186.0f, 305.25f);
        path.quadTo(-185.55f, 304.4f, -185.2f, 301.95f);
        path.lineTo(-184.95f, 297.7f);
        path.lineTo(-184.3f, 297.05f);
        path.quadTo(-182.3f, 299.05f, -178.7f, 303.35f);
        path.quadTo(-177.25f, 301.5f, -177.05f, 297.1f);
        path.quadTo(-176.55f, 296.85f, -174.4f, 297.85f);
        path.quadTo(-174.9f, 296.55f, -175.5f, 295.4f);
        path.lineTo(-176.05f, 294.2f);
        path.lineTo(-176.85f, 292.8f);
        path.lineTo(-177.05f, 292.45f);
        path.lineTo(-178.8f, 292.5f);
        path.lineTo(-182.3f, 292.45f);
        path.lineTo(-187.45f, 291.9f);
        path.quadTo(-190.15f, 289.2f, -187.3f, 280.65f);
        path.quadTo(-186.2f, 277.45f, -186.1f, 275.1f);
        path.lineTo(-186.6f, 273.65f);
        path.lineTo(-188.3f, 268.75f);
        path.quadTo(-191.5f, 260.45f, -194.8f, 254.75f);
        path.lineTo(-195.05f, 254.9f);
        path.quadTo(-194.25f, 256.6f, -194.35f, 259.3f);
        path.lineTo(-194.35f, 261.05f);
        path.lineTo(-195.05f, 254.9f);
        path.lineTo(-195.5f, 254.15f);
        path.lineTo(-195.3f, 253.95f);
        path.lineTo(-196.8f, 251.75f);
        path.quadTo(-200.3f, 246.8f, -211.05f, 236.0f);
        path.quadTo(-220.7f, 226.4f, -223.5f, 224.45f);
        path.quadTo(-229.85f, 220.0f, -237.55f, 219.1f);
        path.close();
        path.moveTo(-194.35f, 261.05f);
        path.lineTo(-193.5f, 268.9f);
        path.quadTo(-192.4f, 277.45f, -196.2f, 281.25f);
        path.quadTo(-194.0f, 287.75f, -193.2f, 292.75f);
        path.lineTo(-201.8f, 277.6f);
        path.quadTo(-198.9f, 275.5f, -196.7f, 271.7f);
        path.quadTo(-194.45f, 267.7f, -194.5f, 265.05f);
        path.lineTo(-194.35f, 261.05f);
        path.close();
        path.moveTo(-222.75f, 239.35f);
        path.lineTo(-222.6f, 239.25f);
        path.lineTo(-222.6f, 239.35f);
        path.quadTo(-218.35f, 239.9f, -214.85f, 243.4f);
        path.quadTo(-209.0f, 249.25f, -210.05f, 256.8f);
        path.quadTo(-211.05f, 263.75f, -217.8f, 270.5f);
        path.quadTo(-221.45f, 274.1f, -225.9f, 275.3f);
        path.quadTo(-232.25f, 276.85f, -237.15f, 271.95f);
        path.quadTo(-243.4f, 265.7f, -242.4f, 258.8f);
        path.quadTo(-241.5f, 252.65f, -235.25f, 246.4f);
        path.quadTo(-233.35f, 244.5f, -228.3f, 241.95f);
        path.lineTo(-222.75f, 239.35f);
        path.close();
        path.moveTo(-215.5f, 282.75f);
        path.quadTo(-207.4f, 281.85f, -206.1f, 281.25f);
        path.quadTo(-205.3f, 283.25f, -205.5f, 283.65f);
        path.quadTo(-205.55f, 284.0f, -207.1f, 285.5f);
        path.quadTo(-211.9f, 290.35f, -223.25f, 283.5f);
        path.lineTo(-215.5f, 282.75f);
        path.close();
    }

    private static void draw_404(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_399(path);
        paint.setColor(Color.argb(255, 0, 153, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_400(Path path)
    {
        path.reset();
        path.moveTo(-177.05f, 292.45f);
        path.lineTo(-176.85f, 292.8f);
        path.lineTo(-176.05f, 294.2f);
        path.lineTo(-175.5f, 295.4f);
        path.lineTo(-171.3f, 298.35f);
        path.lineTo(-170.55f, 298.8f);
        path.lineTo(-167.4f, 300.65f);
        path.lineTo(-162.5f, 295.75f);
        path.quadTo(-158.8f, 292.05f, -158.8f, 286.8f);
        path.quadTo(-158.75f, 281.7f, -162.45f, 278.0f);
        path.lineTo(-220.6f, 219.85f);
        path.quadTo(-224.3f, 216.15f, -229.55f, 216.05f);
        path.quadTo(-234.2f, 216.15f, -237.55f, 219.1f);
        path.quadTo(-229.85f, 220.0f, -223.5f, 224.45f);
        path.quadTo(-220.7f, 226.4f, -211.05f, 236.0f);
        path.quadTo(-200.3f, 246.8f, -196.8f, 251.75f);
        path.lineTo(-195.3f, 253.95f);
        path.lineTo(-195.1f, 254.15f);
        path.lineTo(-194.8f, 254.75f);
        path.quadTo(-191.5f, 260.45f, -188.3f, 268.75f);
        path.lineTo(-186.6f, 273.65f);
        path.lineTo(-186.1f, 275.1f);
        path.quadTo(-183.7f, 281.15f, -177.05f, 292.45f);
        path.close();
        path.moveTo(-270.5f, 321.75f);
        path.lineTo(-238.35f, 353.9f);
        path.quadTo(-234.65f, 357.6f, -229.45f, 357.5f);
        path.quadTo(-224.3f, 357.55f, -220.65f, 353.9f);
        path.lineTo(-216.45f, 349.7f);
        path.quadTo(-217.1f, 347.55f, -218.7f, 344.4f);
        path.lineTo(-220.0f, 341.75f);
        path.quadTo(-228.3f, 341.75f, -234.15f, 340.05f);
        path.quadTo(-244.7f, 336.85f, -270.5f, 321.75f);
        path.close();
    }

    private static void draw_405(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_400(path);
        paint.setColor(Color.argb(255, 102, 51, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_401(Path path)
    {
        path.reset();
        path.moveTo(-209.05f, 309.3f);
        path.quadTo(-209.35f, 306.0f, -208.8f, 301.9f);
        path.lineTo(-208.05f, 295.1f);
        path.lineTo(-210.4f, 292.8f);
        path.lineTo(-211.05f, 293.45f);
        path.quadTo(-211.0f, 295.15f, -210.15f, 300.7f);
        path.quadTo(-209.75f, 305.2f, -211.65f, 306.7f);
        path.lineTo(-211.25f, 307.1f);
        path.lineTo(-211.9f, 306.95f);
        path.lineTo(-212.05f, 306.95f);
        path.lineTo(-212.1f, 306.9f);
        path.lineTo(-218.5f, 305.0f);
        path.quadTo(-223.7f, 303.35f, -225.6f, 304.7f);
        path.lineTo(-223.6f, 306.65f);
        path.lineTo(-215.2f, 309.05f);
        path.quadTo(-211.15f, 310.45f, -207.75f, 310.6f);
        path.lineTo(-209.05f, 309.3f);
        path.close();
        path.moveTo(-188.45f, 300.8f);
        path.lineTo(-188.6f, 300.7f);
        path.lineTo(-188.95f, 301.05f);
        path.lineTo(-189.0f, 301.35f);
        path.lineTo(-190.7f, 298.45f);
        path.lineTo(-192.55f, 295.4f);
        path.lineTo(-192.75f, 295.5f);
        path.lineTo(-192.7f, 296.1f);
        path.lineTo(-192.45f, 296.1f);
        path.quadTo(-191.85f, 300.75f, -194.2f, 305.95f);
        path.quadTo(-196.7f, 311.45f, -202.05f, 316.3f);
        path.lineTo(-200.8f, 317.55f);
        path.lineTo(-202.05f, 316.3f);
        path.lineTo(-202.15f, 316.2f);
        path.lineTo(-203.8f, 314.55f);
        path.quadTo(-206.1f, 315.55f, -207.55f, 317.0f);
        path.quadTo(-208.1f, 317.5f, -210.45f, 322.55f);
        path.quadTo(-212.8f, 327.55f, -214.0f, 328.75f);
        path.quadTo(-215.35f, 330.1f, -217.95f, 331.4f);
        path.quadTo(-215.6f, 331.65f, -214.5f, 330.95f);
        path.lineTo(-211.8f, 328.55f);
        path.quadTo(-210.15f, 326.9f, -208.35f, 324.15f);
        path.quadTo(-206.55f, 321.3f, -205.55f, 320.3f);
        path.quadTo(-203.2f, 317.95f, -200.8f, 317.55f);
        path.lineTo(-197.5f, 320.85f);
        path.lineTo(-193.9f, 317.85f);
        path.quadTo(-191.5f, 315.45f, -189.75f, 309.65f);
        path.quadTo(-188.35f, 304.95f, -188.6f, 302.3f);
        path.lineTo(-188.95f, 301.05f);
        path.lineTo(-188.45f, 300.8f);
        path.close();
        path.moveTo(-175.5f, 295.4f);
        path.quadTo(-174.9f, 296.55f, -174.4f, 297.85f);
        path.quadTo(-172.9f, 301.5f, -171.95f, 305.2f);
        path.lineTo(-167.4f, 300.65f);
        path.lineTo(-170.55f, 298.8f);
        path.lineTo(-171.3f, 298.35f);
        path.lineTo(-175.5f, 295.4f);
        path.close();
        path.moveTo(-194.35f, 261.05f);
        path.lineTo(-194.35f, 259.3f);
        path.quadTo(-194.25f, 256.6f, -195.05f, 254.9f);
        path.lineTo(-194.8f, 254.75f);
        path.lineTo(-195.1f, 254.15f);
        path.lineTo(-195.3f, 253.95f);
        path.lineTo(-195.5f, 254.15f);
        path.lineTo(-195.05f, 254.9f);
        path.lineTo(-194.35f, 261.05f);
        path.close();
        path.moveTo(-216.45f, 349.7f);
        path.lineTo(-207.65f, 340.9f);
        path.lineTo(-220.0f, 341.75f);
        path.lineTo(-218.7f, 344.4f);
        path.quadTo(-217.1f, 347.55f, -216.45f, 349.7f);
        path.close();
        path.moveTo(-222.75f, 239.35f);
        path.lineTo(-228.3f, 241.95f);
        path.quadTo(-233.35f, 244.5f, -235.25f, 246.4f);
        path.quadTo(-241.5f, 252.65f, -242.4f, 258.8f);
        path.quadTo(-243.4f, 265.7f, -237.15f, 271.95f);
        path.quadTo(-232.25f, 276.85f, -225.9f, 275.3f);
        path.quadTo(-221.45f, 274.1f, -217.8f, 270.5f);
        path.quadTo(-211.05f, 263.75f, -210.05f, 256.8f);
        path.quadTo(-209.0f, 249.25f, -214.85f, 243.4f);
        path.quadTo(-218.35f, 239.9f, -222.6f, 239.35f);
        path.lineTo(-222.6f, 239.25f);
        path.lineTo(-222.75f, 239.35f);
        path.close();
        path.moveTo(-248.1f, 283.5f);
        path.lineTo(-247.95f, 283.5f);
        path.lineTo(-247.6f, 283.15f);
        path.quadTo(-249.95f, 280.3f, -251.65f, 278.7f);
        path.quadTo(-253.55f, 276.9f, -255.25f, 276.3f);
        path.lineTo(-258.05f, 275.6f);
        path.lineTo(-258.15f, 275.6f);
        path.lineTo(-269.6f, 276.2f);
        path.quadTo(-280.3f, 277.55f, -284.0f, 281.25f);
        path.quadTo(-286.75f, 284.0f, -287.2f, 286.05f);
        path.quadTo(-287.65f, 287.9f, -286.6f, 292.45f);
        path.lineTo(-284.65f, 294.45f);
        path.lineTo(-282.5f, 290.35f);
        path.quadTo(-281.1f, 287.55f, -279.2f, 285.65f);
        path.quadTo(-276.65f, 283.1f, -269.0f, 280.35f);
        path.quadTo(-266.45f, 280.3f, -264.7f, 282.05f);
        path.quadTo(-263.8f, 282.95f, -264.35f, 284.2f);
        path.lineTo(-264.75f, 284.75f);
        path.quadTo(-265.15f, 285.5f, -267.5f, 287.85f);
        path.lineTo(-271.85f, 293.0f);
        path.quadTo(-275.55f, 298.9f, -271.65f, 302.8f);
        path.lineTo(-269.7f, 304.45f);
        path.lineTo(-267.05f, 304.4f);
        path.quadTo(-264.65f, 305.05f, -259.2f, 301.35f);
        path.lineTo(-254.8f, 297.85f);
        path.lineTo(-262.05f, 300.7f);
        path.quadTo(-266.05f, 302.1f, -269.1f, 300.45f);
        path.lineTo(-269.1f, 300.05f);
        path.quadTo(-269.3f, 298.9f, -269.15f, 297.4f);
        path.quadTo(-268.85f, 292.5f, -266.75f, 289.9f);
        path.quadTo(-266.25f, 291.0f, -265.0f, 292.25f);
        path.quadTo(-262.6f, 294.7f, -259.55f, 295.1f);
        path.quadTo(-256.6f, 295.45f, -254.95f, 293.8f);
        path.quadTo(-251.9f, 290.75f, -253.55f, 288.2f);
        path.lineTo(-257.4f, 284.05f);
        path.lineTo(-256.65f, 283.9f);
        path.quadTo(-251.8f, 282.55f, -248.1f, 283.5f);
        path.close();
        path.moveTo(-219.95f, 262.1f);
        path.quadTo(-223.2f, 265.35f, -227.55f, 265.7f);
        path.quadTo(-231.8f, 266.05f, -234.35f, 263.55f);
        path.quadTo(-235.3f, 262.55f, -235.7f, 261.35f);
        path.lineTo(-235.6f, 259.55f);
        path.lineTo(-235.15f, 256.7f);
        path.quadTo(-233.7f, 250.75f, -229.2f, 246.25f);
        path.quadTo(-226.5f, 243.55f, -222.95f, 242.65f);
        path.quadTo(-218.75f, 241.5f, -216.3f, 243.95f);
        path.quadTo(-213.4f, 246.85f, -215.35f, 253.5f);
        path.quadTo(-216.95f, 259.1f, -219.95f, 262.1f);
        path.close();
    }

    private static void draw_406(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_401(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_402(Path path)
    {
        path.reset();
        path.moveTo(-211.65f, 306.7f);
        path.lineTo(-268.5f, 249.9f);
        path.lineTo(-296.6f, 278.0f);
        path.quadTo(-298.15f, 279.55f, -298.95f, 281.3f);
        path.lineTo(-289.15f, 293.75f);
        path.lineTo(-279.25f, 305.15f);
        path.quadTo(-272.55f, 311.8f, -270.2f, 312.2f);
        path.lineTo(-255.95f, 312.6f);
        path.quadTo(-252.8f, 312.9f, -246.0f, 319.05f);
        path.quadTo(-242.5f, 322.4f, -238.15f, 327.15f);
        path.lineTo(-229.35f, 335.5f);
        path.quadTo(-226.35f, 337.4f, -221.9f, 338.1f);
        path.lineTo(-216.35f, 338.35f);
        path.quadTo(-212.3f, 338.15f, -205.0f, 338.25f);
        path.lineTo(-192.55f, 325.8f);
        path.lineTo(-194.95f, 323.4f);
        path.quadTo(-196.1f, 325.25f, -197.8f, 326.25f);
        path.lineTo(-197.0f, 326.25f);
        path.quadTo(-196.4f, 326.3f, -196.4f, 326.95f);
        path.lineTo(-196.65f, 327.6f);
        path.quadTo(-197.05f, 327.9f, -197.55f, 328.05f);
        path.quadTo(-197.95f, 328.3f, -198.5f, 328.45f);
        path.lineTo(-199.5f, 328.75f);
        path.lineTo(-199.5f, 328.35f);
        path.lineTo(-199.25f, 327.7f);
        path.lineTo(-198.45f, 326.8f);
        path.lineTo(-197.95f, 326.3f);
        path.quadTo(-200.5f, 327.75f, -204.05f, 327.8f);
        path.lineTo(-204.1f, 327.45f);
        path.quadTo(-203.65f, 327.4f, -201.85f, 326.4f);
        path.quadTo(-200.05f, 325.35f, -199.3f, 324.6f);
        path.quadTo(-197.95f, 323.25f, -197.5f, 320.85f);
        path.lineTo(-200.8f, 317.55f);
        path.quadTo(-203.2f, 317.95f, -205.55f, 320.3f);
        path.quadTo(-206.55f, 321.3f, -208.35f, 324.15f);
        path.quadTo(-210.15f, 326.9f, -211.8f, 328.55f);
        path.lineTo(-214.5f, 330.95f);
        path.quadTo(-215.6f, 331.65f, -217.95f, 331.4f);
        path.quadTo(-215.35f, 330.1f, -214.0f, 328.75f);
        path.quadTo(-212.8f, 327.55f, -210.45f, 322.55f);
        path.quadTo(-208.1f, 317.5f, -207.55f, 317.0f);
        path.quadTo(-206.1f, 315.55f, -203.8f, 314.55f);
        path.lineTo(-205.75f, 312.6f);
        path.lineTo(-207.75f, 310.6f);
        path.quadTo(-211.15f, 310.45f, -215.2f, 309.05f);
        path.lineTo(-223.6f, 306.65f);
        path.lineTo(-225.6f, 304.7f);
        path.quadTo(-223.7f, 303.35f, -218.5f, 305.0f);
        path.lineTo(-212.1f, 306.9f);
        path.lineTo(-212.05f, 306.95f);
        path.lineTo(-211.9f, 306.95f);
        path.lineTo(-211.25f, 307.1f);
        path.lineTo(-211.65f, 306.7f);
        path.close();
        path.moveTo(-254.8f, 297.85f);
        path.lineTo(-259.2f, 301.35f);
        path.quadTo(-264.65f, 305.05f, -267.05f, 304.4f);
        path.lineTo(-269.7f, 304.45f);
        path.lineTo(-271.65f, 302.8f);
        path.quadTo(-275.55f, 298.9f, -271.85f, 293.0f);
        path.lineTo(-267.5f, 287.85f);
        path.quadTo(-265.15f, 285.5f, -264.75f, 284.75f);
        path.lineTo(-264.35f, 284.2f);
        path.quadTo(-263.8f, 282.95f, -264.7f, 282.05f);
        path.quadTo(-266.45f, 280.3f, -269.0f, 280.35f);
        path.quadTo(-276.65f, 283.1f, -279.2f, 285.65f);
        path.quadTo(-281.1f, 287.55f, -282.5f, 290.35f);
        path.lineTo(-284.65f, 294.45f);
        path.lineTo(-286.6f, 292.45f);
        path.quadTo(-287.65f, 287.9f, -287.2f, 286.05f);
        path.quadTo(-286.75f, 284.0f, -284.0f, 281.25f);
        path.quadTo(-280.3f, 277.55f, -269.6f, 276.2f);
        path.lineTo(-258.15f, 275.6f);
        path.lineTo(-258.05f, 275.6f);
        path.lineTo(-255.25f, 276.3f);
        path.quadTo(-253.55f, 276.9f, -251.65f, 278.7f);
        path.quadTo(-249.95f, 280.3f, -247.6f, 283.15f);
        path.lineTo(-247.95f, 283.5f);
        path.lineTo(-248.1f, 283.5f);
        path.lineTo(-248.0f, 283.55f);
        path.lineTo(-247.95f, 283.5f);
        path.lineTo(-247.55f, 283.6f);
        path.lineTo(-247.55f, 283.9f);
        path.lineTo(-247.05f, 283.8f);
        path.lineTo(-246.05f, 284.2f);
        path.lineTo(-245.7f, 284.55f);
        path.lineTo(-245.2f, 294.0f);
        path.quadTo(-245.2f, 298.65f, -246.3f, 302.05f);
        path.quadTo(-245.9f, 299.55f, -246.55f, 294.6f);
        path.lineTo(-247.35f, 289.5f);
        path.lineTo(-247.85f, 290.65f);
        path.quadTo(-248.4f, 291.85f, -252.65f, 296.1f);
        path.lineTo(-254.8f, 297.85f);
        path.close();
        path.moveTo(-213.15f, 315.5f);
        path.lineTo(-212.85f, 315.05f);
        path.lineTo(-212.25f, 315.5f);
        path.lineTo(-212.05f, 316.1f);
        path.quadTo(-212.1f, 316.25f, -212.3f, 316.25f);
        path.lineTo(-212.95f, 316.1f);
        path.quadTo(-213.3f, 315.9f, -213.15f, 315.5f);
        path.close();
        path.moveTo(-213.95f, 318.9f);
        path.lineTo(-213.35f, 319.0f);
        path.lineTo(-213.4f, 319.45f);
        path.lineTo(-213.95f, 319.7f);
        path.lineTo(-214.5f, 319.45f);
        path.quadTo(-215.05f, 319.0f, -214.65f, 318.7f);
        path.quadTo(-214.25f, 319.1f, -213.95f, 318.9f);
        path.close();
        path.moveTo(-215.45f, 325.3f);
        path.quadTo(-215.2f, 325.75f, -215.25f, 326.3f);
        path.lineTo(-215.45f, 326.5f);
        path.lineTo(-216.35f, 326.9f);
        path.lineTo(-216.65f, 326.65f);
        path.lineTo(-216.9f, 326.35f);
        path.lineTo(-217.25f, 326.2f);
        path.lineTo(-217.35f, 325.9f);
        path.lineTo(-217.5f, 325.55f);
        path.lineTo(-217.5f, 325.15f);
        path.lineTo(-217.3f, 324.65f);
        path.lineTo(-217.25f, 324.2f);
        path.lineTo(-217.25f, 324.1f);
        path.lineTo(-216.95f, 323.8f);
        path.lineTo(-216.75f, 323.6f);
        path.lineTo(-216.2f, 324.05f);
        path.quadTo(-216.0f, 324.25f, -215.9f, 324.7f);
        path.lineTo(-215.45f, 325.3f);
        path.close();
        path.moveTo(-213.95f, 320.9f);
        path.lineTo(-214.35f, 321.55f);
        path.quadTo(-214.8f, 321.85f, -215.2f, 321.35f);
        path.lineTo(-215.8f, 320.25f);
        path.quadTo(-215.85f, 319.9f, -215.5f, 319.65f);
        path.quadTo(-214.85f, 319.6f, -214.35f, 320.0f);
        path.lineTo(-213.95f, 320.9f);
        path.close();
        path.moveTo(-217.35f, 322.6f);
        path.lineTo(-216.55f, 322.45f);
        path.lineTo(-216.3f, 322.6f);
        path.quadTo(-215.8f, 322.85f, -216.2f, 323.25f);
        path.quadTo(-216.55f, 323.6f, -216.9f, 323.45f);
        path.quadTo(-217.45f, 323.5f, -217.45f, 322.95f);
        path.lineTo(-217.35f, 322.6f);
        path.close();
        path.moveTo(-218.95f, 324.2f);
        path.quadTo(-218.45f, 324.35f, -218.5f, 324.8f);
        path.lineTo(-218.6f, 325.65f);
        path.quadTo(-218.5f, 326.15f, -218.55f, 326.6f);
        path.lineTo(-218.9f, 327.05f);
        path.lineTo(-219.3f, 326.9f);
        path.lineTo(-219.5f, 326.7f);
        path.lineTo(-219.75f, 325.9f);
        path.lineTo(-220.15f, 325.4f);
        path.lineTo(-220.4f, 324.85f);
        path.lineTo(-220.3f, 324.45f);
        path.lineTo(-220.35f, 324.4f);
        path.lineTo(-219.75f, 324.1f);
        path.lineTo(-218.95f, 324.2f);
        path.close();
        path.moveTo(-218.9f, 328.5f);
        path.lineTo(-218.9f, 329.15f);
        path.lineTo(-219.5f, 329.6f);
        path.quadTo(-219.85f, 329.65f, -220.0f, 329.35f);
        path.quadTo(-220.3f, 328.95f, -220.1f, 328.65f);
        path.quadTo(-219.8f, 328.35f, -219.5f, 328.3f);
        path.quadTo(-219.05f, 328.25f, -218.9f, 328.5f);
        path.close();
        path.moveTo(-220.3f, 329.1f);
        path.lineTo(-220.1f, 329.4f);
        path.lineTo(-219.9f, 330.3f);
        path.lineTo(-219.75f, 330.9f);
        path.lineTo(-219.65f, 331.4f);
        path.lineTo(-219.85f, 331.95f);
        path.lineTo(-220.15f, 332.4f);
        path.lineTo(-220.6f, 332.35f);
        path.lineTo(-220.8f, 332.15f);
        path.lineTo(-221.15f, 331.55f);
        path.lineTo(-221.2f, 330.55f);
        path.lineTo(-221.25f, 330.05f);
        path.lineTo(-221.1f, 329.55f);
        path.lineTo(-221.05f, 329.5f);
        path.lineTo(-220.7f, 328.95f);
        path.lineTo(-220.3f, 329.1f);
        path.close();
        path.moveTo(-219.95f, 333.4f);
        path.quadTo(-219.65f, 333.15f, -219.35f, 333.2f);
        path.quadTo(-219.1f, 333.15f, -219.05f, 333.5f);
        path.quadTo(-218.85f, 333.7f, -218.95f, 334.0f);
        path.lineTo(-219.2f, 334.25f);
        path.lineTo(-219.7f, 334.05f);
        path.lineTo(-219.9f, 333.45f);
        path.lineTo(-219.95f, 333.4f);
        path.close();
        path.moveTo(-200.5f, 330.3f);
        path.lineTo(-201.25f, 330.4f);
        path.lineTo(-201.9f, 329.75f);
        path.quadTo(-202.2f, 329.25f, -201.6f, 328.85f);
        path.lineTo(-200.9f, 329.15f);
        path.quadTo(-200.35f, 329.35f, -200.3f, 329.95f);
        path.quadTo(-200.25f, 330.2f, -200.5f, 330.3f);
        path.close();
        path.moveTo(-204.15f, 331.6f);
        path.lineTo(-203.6f, 332.05f);
        path.lineTo(-203.2f, 332.6f);
        path.lineTo(-202.75f, 333.15f);
        path.lineTo(-202.3f, 333.6f);
        path.lineTo(-202.2f, 333.95f);
        path.lineTo(-202.65f, 334.4f);
        path.lineTo(-203.35f, 334.1f);
        path.lineTo(-203.95f, 333.75f);
        path.lineTo(-204.25f, 333.1f);
        path.lineTo(-204.4f, 332.25f);
        path.lineTo(-204.3f, 331.85f);
        path.lineTo(-204.15f, 331.6f);
        path.close();
    }

    private static void draw_407(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_402(path);
        paint.setColor(Color.argb(255, 249, 233, 210));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_403(Path path)
    {
        path.reset();
        path.moveTo(-192.7f, 296.1f);
        path.quadTo(-193.35f, 298.2f, -196.0f, 302.05f);
        path.quadTo(-198.9f, 306.35f, -201.3f, 308.75f);
        path.quadTo(-204.45f, 311.9f, -205.75f, 312.6f);
        path.lineTo(-203.8f, 314.55f);
        path.lineTo(-202.15f, 316.2f);
        path.lineTo(-202.05f, 316.3f);
        path.quadTo(-196.7f, 311.45f, -194.2f, 305.95f);
        path.quadTo(-191.85f, 300.75f, -192.45f, 296.1f);
        path.lineTo(-192.7f, 296.1f);
        path.close();
        path.moveTo(-186.3f, 305.65f);
        path.quadTo(-187.0f, 303.05f, -188.45f, 300.8f);
        path.lineTo(-188.95f, 301.05f);
        path.lineTo(-188.6f, 302.3f);
        path.quadTo(-188.35f, 304.95f, -189.75f, 309.65f);
        path.quadTo(-191.5f, 315.45f, -193.9f, 317.85f);
        path.lineTo(-197.5f, 320.85f);
        path.lineTo(-194.95f, 323.4f);
        path.lineTo(-192.55f, 325.8f);
        path.lineTo(-188.1f, 321.35f);
        path.quadTo(-186.9f, 318.65f, -186.15f, 315.3f);
        path.quadTo(-185.0f, 309.95f, -186.3f, 305.65f);
        path.close();
        path.moveTo(-248.1f, 283.5f);
        path.quadTo(-251.8f, 282.55f, -256.65f, 283.9f);
        path.lineTo(-257.4f, 284.05f);
        path.lineTo(-253.55f, 288.2f);
        path.quadTo(-251.9f, 290.75f, -254.95f, 293.8f);
        path.quadTo(-256.6f, 295.45f, -259.55f, 295.1f);
        path.quadTo(-262.6f, 294.7f, -265.0f, 292.25f);
        path.quadTo(-266.25f, 291.0f, -266.75f, 289.9f);
        path.quadTo(-268.85f, 292.5f, -269.15f, 297.4f);
        path.quadTo(-269.3f, 298.9f, -269.1f, 300.05f);
        path.lineTo(-269.1f, 300.45f);
        path.quadTo(-266.05f, 302.1f, -262.05f, 300.7f);
        path.lineTo(-254.8f, 297.85f);
        path.lineTo(-252.65f, 296.1f);
        path.quadTo(-248.4f, 291.85f, -247.85f, 290.65f);
        path.lineTo(-247.35f, 289.5f);
        path.quadTo(-247.1f, 288.45f, -247.0f, 287.15f);
        path.lineTo(-247.55f, 283.9f);
        path.lineTo(-247.55f, 283.6f);
        path.lineTo(-247.95f, 283.5f);
        path.lineTo(-248.0f, 283.55f);
        path.lineTo(-248.1f, 283.5f);
        path.close();
        path.moveTo(-219.95f, 262.1f);
        path.quadTo(-216.95f, 259.1f, -215.35f, 253.5f);
        path.quadTo(-213.4f, 246.85f, -216.3f, 243.95f);
        path.quadTo(-218.75f, 241.5f, -222.95f, 242.65f);
        path.quadTo(-226.5f, 243.55f, -229.2f, 246.25f);
        path.quadTo(-233.7f, 250.75f, -235.15f, 256.7f);
        path.lineTo(-235.6f, 259.55f);
        path.lineTo(-235.7f, 261.35f);
        path.quadTo(-235.3f, 262.55f, -234.35f, 263.55f);
        path.quadTo(-231.8f, 266.05f, -227.55f, 265.7f);
        path.quadTo(-223.2f, 265.35f, -219.95f, 262.1f);
        path.close();
    }

    private static void draw_408(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_403(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_404(Path path)
    {
        path.reset();
        path.moveTo(-247.35f, 289.5f);
        path.lineTo(-246.55f, 294.6f);
        path.quadTo(-245.9f, 299.55f, -246.3f, 302.05f);
        path.quadTo(-245.2f, 298.65f, -245.2f, 294.0f);
        path.lineTo(-245.7f, 284.55f);
        path.lineTo(-246.05f, 284.2f);
        path.lineTo(-247.05f, 283.8f);
        path.lineTo(-247.55f, 283.9f);
        path.lineTo(-247.0f, 287.15f);
        path.quadTo(-247.1f, 288.45f, -247.35f, 289.5f);
        path.close();
    }

    private static void draw_409(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_404(path);
        paint.setColor(Color.argb(255, 255, 153, 153));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_405(Path path)
    {
        path.reset();
        path.moveTo(-215.5f, 282.75f);
        path.lineTo(-223.25f, 283.5f);
        path.quadTo(-211.9f, 290.35f, -207.1f, 285.5f);
        path.quadTo(-205.55f, 284.0f, -205.5f, 283.65f);
        path.quadTo(-205.3f, 283.25f, -206.1f, 281.25f);
        path.quadTo(-207.4f, 281.85f, -215.5f, 282.75f);
        path.close();
    }

    private static void draw_410(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_405(path);
        paint.setColor(Color.argb(255, 0, 47, 15));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_406(Path path)
    {
        path.reset();
        path.moveTo(-207.65f, 340.9f);
        path.lineTo(-205.0f, 338.25f);
        path.quadTo(-212.3f, 338.15f, -216.35f, 338.35f);
        path.lineTo(-221.9f, 338.1f);
        path.quadTo(-226.35f, 337.4f, -229.35f, 335.5f);
        path.lineTo(-238.15f, 327.15f);
        path.quadTo(-242.5f, 322.4f, -246.0f, 319.05f);
        path.quadTo(-252.8f, 312.9f, -255.95f, 312.6f);
        path.lineTo(-270.2f, 312.2f);
        path.quadTo(-272.55f, 311.8f, -279.25f, 305.15f);
        path.lineTo(-289.15f, 293.75f);
        path.lineTo(-298.95f, 281.3f);
        path.quadTo(-300.2f, 283.75f, -300.2f, 286.75f);
        path.quadTo(-300.2f, 292.05f, -296.5f, 295.75f);
        path.lineTo(-270.5f, 321.75f);
        path.quadTo(-244.7f, 336.85f, -234.15f, 340.05f);
        path.quadTo(-228.3f, 341.75f, -220.0f, 341.75f);
        path.lineTo(-207.65f, 340.9f);
        path.close();
    }

    private static void draw_411(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_406(path);
        paint.setColor(Color.argb(255, 44, 32, 14));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_407(Path path)
    {
        path.reset();
        path.moveTo(-213.15f, 315.5f);
        path.quadTo(-213.3f, 315.9f, -212.95f, 316.1f);
        path.lineTo(-212.3f, 316.25f);
        path.quadTo(-212.1f, 316.25f, -212.05f, 316.1f);
        path.lineTo(-212.25f, 315.5f);
        path.lineTo(-212.85f, 315.05f);
        path.lineTo(-213.15f, 315.5f);
        path.close();
        path.moveTo(-213.95f, 318.9f);
        path.quadTo(-214.25f, 319.1f, -214.65f, 318.7f);
        path.quadTo(-215.05f, 319.0f, -214.5f, 319.45f);
        path.lineTo(-213.95f, 319.7f);
        path.lineTo(-213.4f, 319.45f);
        path.lineTo(-213.35f, 319.0f);
        path.lineTo(-213.95f, 318.9f);
        path.close();
        path.moveTo(-215.45f, 325.3f);
        path.lineTo(-215.9f, 324.7f);
        path.quadTo(-216.0f, 324.25f, -216.2f, 324.05f);
        path.lineTo(-216.75f, 323.6f);
        path.lineTo(-216.95f, 323.8f);
        path.lineTo(-217.25f, 324.1f);
        path.lineTo(-217.25f, 324.2f);
        path.lineTo(-217.3f, 324.65f);
        path.lineTo(-217.5f, 325.15f);
        path.lineTo(-217.5f, 325.55f);
        path.lineTo(-217.35f, 325.9f);
        path.lineTo(-217.25f, 326.2f);
        path.lineTo(-216.9f, 326.35f);
        path.lineTo(-216.65f, 326.65f);
        path.lineTo(-216.35f, 326.9f);
        path.lineTo(-215.45f, 326.5f);
        path.lineTo(-215.25f, 326.3f);
        path.quadTo(-215.2f, 325.75f, -215.45f, 325.3f);
        path.close();
        path.moveTo(-213.95f, 320.9f);
        path.lineTo(-214.35f, 320.0f);
        path.quadTo(-214.85f, 319.6f, -215.5f, 319.65f);
        path.quadTo(-215.85f, 319.9f, -215.8f, 320.25f);
        path.lineTo(-215.2f, 321.35f);
        path.quadTo(-214.8f, 321.85f, -214.35f, 321.55f);
        path.lineTo(-213.95f, 320.9f);
        path.close();
        path.moveTo(-217.35f, 322.6f);
        path.lineTo(-217.45f, 322.95f);
        path.quadTo(-217.45f, 323.5f, -216.9f, 323.45f);
        path.quadTo(-216.55f, 323.6f, -216.2f, 323.25f);
        path.quadTo(-215.8f, 322.85f, -216.3f, 322.6f);
        path.lineTo(-216.55f, 322.45f);
        path.lineTo(-217.35f, 322.6f);
        path.close();
        path.moveTo(-218.95f, 324.2f);
        path.lineTo(-219.75f, 324.1f);
        path.lineTo(-220.35f, 324.4f);
        path.lineTo(-220.3f, 324.45f);
        path.lineTo(-220.4f, 324.85f);
        path.lineTo(-220.15f, 325.4f);
        path.lineTo(-219.75f, 325.9f);
        path.lineTo(-219.5f, 326.7f);
        path.lineTo(-219.3f, 326.9f);
        path.lineTo(-218.9f, 327.05f);
        path.lineTo(-218.55f, 326.6f);
        path.quadTo(-218.5f, 326.15f, -218.6f, 325.65f);
        path.lineTo(-218.5f, 324.8f);
        path.quadTo(-218.45f, 324.35f, -218.95f, 324.2f);
        path.close();
        path.moveTo(-218.9f, 328.5f);
        path.quadTo(-219.05f, 328.25f, -219.5f, 328.3f);
        path.quadTo(-219.8f, 328.35f, -220.1f, 328.65f);
        path.quadTo(-220.3f, 328.95f, -220.0f, 329.35f);
        path.quadTo(-219.85f, 329.65f, -219.5f, 329.6f);
        path.lineTo(-218.9f, 329.15f);
        path.lineTo(-218.9f, 328.5f);
        path.close();
        path.moveTo(-220.3f, 329.1f);
        path.lineTo(-220.7f, 328.95f);
        path.lineTo(-221.05f, 329.5f);
        path.lineTo(-221.1f, 329.55f);
        path.lineTo(-221.25f, 330.05f);
        path.lineTo(-221.2f, 330.55f);
        path.lineTo(-221.15f, 331.55f);
        path.lineTo(-220.8f, 332.15f);
        path.lineTo(-220.6f, 332.35f);
        path.lineTo(-220.15f, 332.4f);
        path.lineTo(-219.85f, 331.95f);
        path.lineTo(-219.65f, 331.4f);
        path.lineTo(-219.75f, 330.9f);
        path.lineTo(-219.9f, 330.3f);
        path.lineTo(-220.1f, 329.4f);
        path.lineTo(-220.3f, 329.1f);
        path.close();
        path.moveTo(-219.95f, 333.4f);
        path.lineTo(-219.9f, 333.45f);
        path.lineTo(-219.7f, 334.05f);
        path.lineTo(-219.2f, 334.25f);
        path.lineTo(-218.95f, 334.0f);
        path.quadTo(-218.85f, 333.7f, -219.05f, 333.5f);
        path.quadTo(-219.1f, 333.15f, -219.35f, 333.2f);
        path.quadTo(-219.65f, 333.15f, -219.95f, 333.4f);
        path.close();
        path.moveTo(-197.95f, 326.3f);
        path.lineTo(-198.45f, 326.8f);
        path.lineTo(-199.25f, 327.7f);
        path.lineTo(-199.5f, 328.35f);
        path.lineTo(-199.5f, 328.75f);
        path.lineTo(-198.5f, 328.45f);
        path.quadTo(-197.95f, 328.3f, -197.55f, 328.05f);
        path.quadTo(-197.05f, 327.9f, -196.65f, 327.6f);
        path.lineTo(-196.4f, 326.95f);
        path.quadTo(-196.4f, 326.3f, -197.0f, 326.25f);
        path.lineTo(-197.8f, 326.25f);
        path.lineTo(-197.9f, 326.25f);
        path.lineTo(-197.95f, 326.3f);
        path.close();
        path.moveTo(-200.5f, 330.3f);
        path.quadTo(-200.25f, 330.2f, -200.3f, 329.95f);
        path.quadTo(-200.35f, 329.35f, -200.9f, 329.15f);
        path.lineTo(-201.6f, 328.85f);
        path.quadTo(-202.2f, 329.25f, -201.9f, 329.75f);
        path.lineTo(-201.25f, 330.4f);
        path.lineTo(-200.5f, 330.3f);
        path.close();
        path.moveTo(-204.15f, 331.6f);
        path.lineTo(-204.3f, 331.85f);
        path.lineTo(-204.4f, 332.25f);
        path.lineTo(-204.25f, 333.1f);
        path.lineTo(-203.95f, 333.75f);
        path.lineTo(-203.35f, 334.1f);
        path.lineTo(-202.65f, 334.4f);
        path.lineTo(-202.2f, 333.95f);
        path.lineTo(-202.3f, 333.6f);
        path.lineTo(-202.75f, 333.15f);
        path.lineTo(-203.2f, 332.6f);
        path.lineTo(-203.6f, 332.05f);
        path.lineTo(-204.15f, 331.6f);
        path.close();
    }

    private static void draw_412(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_407(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_408(Path path)
    {
        path.reset();
        path.moveTo(-174.4f, 297.85f);
        path.quadTo(-176.55f, 296.85f, -177.05f, 297.1f);
        path.quadTo(-177.25f, 301.5f, -178.7f, 303.35f);
        path.quadTo(-182.3f, 299.05f, -184.3f, 297.05f);
        path.lineTo(-184.95f, 297.7f);
        path.lineTo(-185.2f, 301.95f);
        path.quadTo(-185.55f, 304.4f, -186.0f, 305.25f);
        path.lineTo(-186.3f, 305.65f);
        path.quadTo(-185.0f, 309.95f, -186.15f, 315.3f);
        path.quadTo(-186.9f, 318.65f, -188.1f, 321.35f);
        path.lineTo(-171.95f, 305.2f);
        path.quadTo(-172.9f, 301.5f, -174.4f, 297.85f);
        path.close();
        path.moveTo(-186.1f, 275.1f);
        path.quadTo(-186.2f, 277.45f, -187.3f, 280.65f);
        path.quadTo(-190.15f, 289.2f, -187.45f, 291.9f);
        path.lineTo(-182.3f, 292.45f);
        path.lineTo(-178.8f, 292.5f);
        path.lineTo(-177.05f, 292.45f);
        path.quadTo(-183.7f, 281.15f, -186.1f, 275.1f);
        path.close();
        path.moveTo(-194.35f, 261.05f);
        path.lineTo(-194.5f, 265.05f);
        path.quadTo(-194.45f, 267.7f, -196.7f, 271.7f);
        path.quadTo(-198.9f, 275.5f, -201.8f, 277.6f);
        path.lineTo(-193.2f, 292.75f);
        path.quadTo(-194.0f, 287.75f, -196.2f, 281.25f);
        path.quadTo(-192.4f, 277.45f, -193.5f, 268.9f);
        path.lineTo(-194.35f, 261.05f);
        path.close();
        path.moveTo(-197.8f, 326.25f);
        path.quadTo(-196.1f, 325.25f, -194.95f, 323.4f);
        path.lineTo(-197.5f, 320.85f);
        path.quadTo(-197.95f, 323.25f, -199.3f, 324.6f);
        path.quadTo(-200.05f, 325.35f, -201.85f, 326.4f);
        path.quadTo(-203.65f, 327.4f, -204.1f, 327.45f);
        path.lineTo(-204.05f, 327.8f);
        path.quadTo(-200.5f, 327.75f, -197.95f, 326.3f);
        path.lineTo(-197.9f, 326.25f);
        path.lineTo(-197.8f, 326.25f);
        path.close();
    }

    private static void draw_413(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_408(path);
        paint.setColor(Color.argb(255, 153, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_409(Path path)
    {
        path.reset();
        path.moveTo(-268.5f, 249.9f);
        path.lineTo(-211.65f, 306.7f);
    }

    private static void draw_414(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_409(path);
        paint.setColor(Color.argb(255, 102, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_410(Path path)
    {
        path.reset();
        path.moveTo(-211.25f, 307.1f);
        path.lineTo(-211.65f, 306.7f);
    }

    private static void draw_415(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_410(path);
        paint.setColor(Color.argb(255, 102, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_411(Path path)
    {
        path.reset();
        path.moveTo(-210.7f, 307.65f);
        path.lineTo(-209.05f, 309.3f);
        path.lineTo(-207.75f, 310.6f);
        path.lineTo(-205.75f, 312.6f);
    }

    private static void draw_416(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_411(path);
        paint.setColor(Color.argb(255, 102, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_412(Path path)
    {
        path.reset();
        path.moveTo(-203.8f, 314.55f);
        path.lineTo(-205.75f, 312.6f);
    }

    private static void draw_417(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_412(path);
        paint.setColor(Color.argb(255, 102, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_413(Path path)
    {
        path.reset();
        path.moveTo(-202.05f, 316.3f);
        path.lineTo(-200.8f, 317.55f);
        path.lineTo(-197.5f, 320.85f);
        path.lineTo(-194.95f, 323.4f);
    }

    private static void draw_418(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_413(path);
        paint.setColor(Color.argb(255, 102, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_414(Path path)
    {
        path.reset();
        path.moveTo(-192.55f, 325.8f);
        path.lineTo(-194.95f, 323.4f);
    }

    private static void draw_419(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_414(path);
        paint.setColor(Color.argb(255, 102, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_415(Path path)
    {
        path.reset();
        path.moveTo(-203.8f, 314.55f);
        path.lineTo(-202.15f, 316.2f);
    }

    private static void draw_420(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_415(path);
        paint.setColor(Color.argb(255, 102, 255, 255));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_416(Path path)
    {
        path.reset();
        path.moveTo(-370.15f, 159.9f);
        path.lineTo(-371.0f, 159.85f);
        path.lineTo(-449.0f, 159.85f);
        path.quadTo(-453.85f, 159.85f, -457.35f, 163.35f);
        path.lineTo(-458.45f, 164.7f);
        path.lineTo(-458.9f, 165.3f);
        path.quadTo(-460.8f, 168.1f, -460.8f, 171.75f);
        path.lineTo(-460.8f, 249.7f);
        path.quadTo(-460.8f, 254.65f, -457.35f, 258.15f);
        path.quadTo(-453.85f, 261.55f, -449.0f, 261.55f);
        path.lineTo(-371.0f, 261.55f);
        path.quadTo(-366.1f, 261.55f, -362.6f, 258.15f);
        path.quadTo(-359.1f, 254.65f, -359.1f, 249.7f);
        path.lineTo(-359.1f, 171.75f);
        path.quadTo(-359.1f, 166.85f, -362.6f, 163.35f);
        path.quadTo(-365.8f, 160.15f, -370.15f, 159.9f);
        path.close();
    }

    private static void draw_421(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_416(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStrokeWidth(12.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_417(Path path)
    {
        path.reset();
        path.moveTo(-374.9f, 261.55f);
        path.lineTo(-371.0f, 261.55f);
        path.quadTo(-366.1f, 261.55f, -362.6f, 258.15f);
        path.quadTo(-359.1f, 254.65f, -359.1f, 249.7f);
        path.lineTo(-359.1f, 171.75f);
        path.quadTo(-359.1f, 166.85f, -362.6f, 163.35f);
        path.quadTo(-365.8f, 160.15f, -370.15f, 159.9f);
        path.lineTo(-368.7f, 163.5f);
        path.lineTo(-365.3f, 166.25f);
        path.quadTo(-362.75f, 168.2f, -362.75f, 170.0f);
        path.lineTo(-363.15f, 170.9f);
        path.quadTo(-363.55f, 171.5f, -363.55f, 172.25f);
        path.lineTo(-367.5f, 172.65f);
        path.quadTo(-366.9f, 173.9f, -364.45f, 176.35f);
        path.quadTo(-362.75f, 178.05f, -362.75f, 180.35f);
        path.quadTo(-362.75f, 181.35f, -364.75f, 184.15f);
        path.lineTo(-363.95f, 185.75f);
        path.quadTo(-363.15f, 187.1f, -363.15f, 188.1f);
        path.lineTo(-364.35f, 188.75f);
        path.lineTo(-365.15f, 189.3f);
        path.quadTo(-364.05f, 189.4f, -362.35f, 191.6f);
        path.quadTo(-360.75f, 193.75f, -360.75f, 194.9f);
        path.lineTo(-361.35f, 195.85f);
        path.quadTo(-361.95f, 197.05f, -361.95f, 198.45f);
        path.quadTo(-363.7f, 198.15f, -363.65f, 200.3f);
        path.lineTo(-363.55f, 204.0f);
        path.quadTo(-364.8f, 203.55f, -365.55f, 204.35f);
        path.lineTo(-366.35f, 205.6f);
        path.lineTo(-363.25f, 209.6f);
        path.quadTo(-361.55f, 211.55f, -361.55f, 213.55f);
        path.quadTo(-361.55f, 214.65f, -363.3f, 218.8f);
        path.lineTo(-365.15f, 223.1f);
        path.quadTo(-365.15f, 224.05f, -363.7f, 225.95f);
        path.quadTo(-362.35f, 227.95f, -362.35f, 230.25f);
        path.quadTo(-362.35f, 231.85f, -363.7f, 235.9f);
        path.lineTo(-365.15f, 240.35f);
        path.quadTo(-365.15f, 241.05f, -362.9f, 245.6f);
        path.quadTo(-360.75f, 250.2f, -360.75f, 251.3f);
        path.lineTo(-364.75f, 251.3f);
        path.lineTo(-364.8f, 255.45f);
        path.quadTo(-365.05f, 256.45f, -366.75f, 256.45f);
        path.quadTo(-367.85f, 256.45f, -370.25f, 254.15f);
        path.quadTo(-372.6f, 251.95f, -374.3f, 252.1f);
        path.quadTo(-371.9f, 256.45f, -371.9f, 257.4f);
        path.quadTo(-371.9f, 258.75f, -373.9f, 260.7f);
        path.lineTo(-374.9f, 261.55f);
        path.close();
        path.moveTo(-458.9f, 165.3f);
        path.quadTo(-460.8f, 168.1f, -460.8f, 171.75f);
        path.lineTo(-460.8f, 249.7f);
        path.quadTo(-460.8f, 254.65f, -457.35f, 258.15f);
        path.quadTo(-453.85f, 261.55f, -449.0f, 261.55f);
        path.lineTo(-428.55f, 261.55f);
        path.lineTo(-428.55f, 261.5f);
        path.quadTo(-431.1f, 260.45f, -432.3f, 260.45f);
        path.quadTo(-434.35f, 260.35f, -439.05f, 258.45f);
        path.lineTo(-439.05f, 256.85f);
        path.lineTo(-444.35f, 256.4f);
        path.quadTo(-448.6f, 255.45f, -448.6f, 254.25f);
        path.lineTo(-448.35f, 253.3f);
        path.lineTo(-447.8f, 252.5f);
        path.lineTo(-447.8f, 250.5f);
        path.lineTo(-453.35f, 250.9f);
        path.lineTo(-453.35f, 247.75f);
        path.quadTo(-450.2f, 241.75f, -450.2f, 240.95f);
        path.quadTo(-451.75f, 241.75f, -452.95f, 241.75f);
        path.quadTo(-454.8f, 241.75f, -455.75f, 240.2f);
        path.quadTo(-456.55f, 238.85f, -456.55f, 236.6f);
        path.quadTo(-456.55f, 235.0f, -455.5f, 233.65f);
        path.quadTo(-454.55f, 232.3f, -454.55f, 229.45f);
        path.lineTo(-456.95f, 229.45f);
        path.quadTo(-457.35f, 227.05f, -457.35f, 223.65f);
        path.quadTo(-457.35f, 221.9f, -455.75f, 216.95f);
        path.lineTo(-454.15f, 212.1f);
        path.lineTo(-456.15f, 210.4f);
        path.quadTo(-458.1f, 208.8f, -458.1f, 207.75f);
        path.quadTo(-458.1f, 207.3f, -456.55f, 204.0f);
        path.quadTo(-454.95f, 200.75f, -454.95f, 200.2f);
        path.quadTo(-454.95f, 199.65f, -455.75f, 198.85f);
        path.quadTo(-456.55f, 198.15f, -456.55f, 197.25f);
        path.quadTo(-456.55f, 196.45f, -455.75f, 194.1f);
        path.quadTo(-454.95f, 191.7f, -454.95f, 190.5f);
        path.lineTo(-458.1f, 190.5f);
        path.quadTo(-457.8f, 189.8f, -456.15f, 187.95f);
        path.quadTo(-454.95f, 186.7f, -454.95f, 185.1f);
        path.quadTo(-454.95f, 184.95f, -455.9f, 184.15f);
        path.quadTo(-456.95f, 183.35f, -456.95f, 182.55f);
        path.quadTo(-456.95f, 180.75f, -453.65f, 176.45f);
        path.quadTo(-450.2f, 172.25f, -449.8f, 171.45f);
        path.quadTo(-450.2f, 171.45f, -450.2f, 171.05f);
        path.quadTo(-455.1f, 170.5f, -456.6f, 169.6f);
        path.quadTo(-458.5f, 168.5f, -458.5f, 165.45f);
        path.lineTo(-458.9f, 165.3f);
        path.close();
    }

    private static void draw_422(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_417(path);
        paint.setColor(Color.argb(255, 150, 11, 14));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_418(Path path)
    {
        path.reset();
        path.moveTo(-374.9f, 261.55f);
        path.lineTo(-373.9f, 260.7f);
        path.quadTo(-371.9f, 258.75f, -371.9f, 257.4f);
        path.quadTo(-371.9f, 256.45f, -374.3f, 252.1f);
        path.quadTo(-372.6f, 251.95f, -370.25f, 254.15f);
        path.quadTo(-367.85f, 256.45f, -366.75f, 256.45f);
        path.quadTo(-365.05f, 256.45f, -364.8f, 255.45f);
        path.lineTo(-364.75f, 251.3f);
        path.lineTo(-360.75f, 251.3f);
        path.quadTo(-360.75f, 250.2f, -362.9f, 245.6f);
        path.quadTo(-365.15f, 241.05f, -365.15f, 240.35f);
        path.lineTo(-363.7f, 235.9f);
        path.quadTo(-362.35f, 231.85f, -362.35f, 230.25f);
        path.quadTo(-362.35f, 227.95f, -363.7f, 225.95f);
        path.quadTo(-365.15f, 224.05f, -365.15f, 223.1f);
        path.lineTo(-363.3f, 218.8f);
        path.quadTo(-361.55f, 214.65f, -361.55f, 213.55f);
        path.quadTo(-361.55f, 211.55f, -363.25f, 209.6f);
        path.lineTo(-366.35f, 205.6f);
        path.lineTo(-365.55f, 204.35f);
        path.quadTo(-364.8f, 203.55f, -363.55f, 204.0f);
        path.lineTo(-363.65f, 200.3f);
        path.quadTo(-363.7f, 198.15f, -361.95f, 198.45f);
        path.quadTo(-361.95f, 197.05f, -361.35f, 195.85f);
        path.lineTo(-360.75f, 194.9f);
        path.quadTo(-360.75f, 193.75f, -362.35f, 191.6f);
        path.quadTo(-364.05f, 189.4f, -365.15f, 189.3f);
        path.lineTo(-364.35f, 188.75f);
        path.lineTo(-363.15f, 188.1f);
        path.quadTo(-363.15f, 187.1f, -363.95f, 185.75f);
        path.lineTo(-364.75f, 184.15f);
        path.quadTo(-362.75f, 181.35f, -362.75f, 180.35f);
        path.quadTo(-362.75f, 178.05f, -364.45f, 176.35f);
        path.quadTo(-366.9f, 173.9f, -367.5f, 172.65f);
        path.lineTo(-363.55f, 172.25f);
        path.quadTo(-363.55f, 171.5f, -363.15f, 170.9f);
        path.lineTo(-362.75f, 170.0f);
        path.quadTo(-362.75f, 168.2f, -365.3f, 166.25f);
        path.lineTo(-368.7f, 163.5f);
        path.lineTo(-370.15f, 159.9f);
        path.lineTo(-371.0f, 159.85f);
        path.lineTo(-449.0f, 159.85f);
        path.quadTo(-453.85f, 159.85f, -457.35f, 163.35f);
        path.lineTo(-458.45f, 164.7f);
        path.lineTo(-458.9f, 165.3f);
        path.lineTo(-458.5f, 165.45f);
        path.quadTo(-458.5f, 168.5f, -456.6f, 169.6f);
        path.quadTo(-455.1f, 170.5f, -450.2f, 171.05f);
        path.quadTo(-450.2f, 171.45f, -449.8f, 171.45f);
        path.quadTo(-450.2f, 172.25f, -453.65f, 176.45f);
        path.quadTo(-456.95f, 180.75f, -456.95f, 182.55f);
        path.quadTo(-456.95f, 183.35f, -455.9f, 184.15f);
        path.quadTo(-454.95f, 184.95f, -454.95f, 185.1f);
        path.quadTo(-454.95f, 186.7f, -456.15f, 187.95f);
        path.quadTo(-457.8f, 189.8f, -458.1f, 190.5f);
        path.lineTo(-454.95f, 190.5f);
        path.quadTo(-454.95f, 191.7f, -455.75f, 194.1f);
        path.quadTo(-456.55f, 196.45f, -456.55f, 197.25f);
        path.quadTo(-456.55f, 198.15f, -455.75f, 198.85f);
        path.quadTo(-454.95f, 199.65f, -454.95f, 200.2f);
        path.quadTo(-454.95f, 200.75f, -456.55f, 204.0f);
        path.quadTo(-458.1f, 207.3f, -458.1f, 207.75f);
        path.quadTo(-458.1f, 208.8f, -456.15f, 210.4f);
        path.lineTo(-454.15f, 212.1f);
        path.lineTo(-455.75f, 216.95f);
        path.quadTo(-457.35f, 221.9f, -457.35f, 223.65f);
        path.quadTo(-457.35f, 227.05f, -456.95f, 229.45f);
        path.lineTo(-454.55f, 229.45f);
        path.quadTo(-454.55f, 232.3f, -455.5f, 233.65f);
        path.quadTo(-456.55f, 235.0f, -456.55f, 236.6f);
        path.quadTo(-456.55f, 238.85f, -455.75f, 240.2f);
        path.quadTo(-454.8f, 241.75f, -452.95f, 241.75f);
        path.quadTo(-451.75f, 241.75f, -450.2f, 240.95f);
        path.quadTo(-450.2f, 241.75f, -453.35f, 247.75f);
        path.lineTo(-453.35f, 250.9f);
        path.lineTo(-447.8f, 250.5f);
        path.lineTo(-447.8f, 252.5f);
        path.lineTo(-448.35f, 253.3f);
        path.lineTo(-448.6f, 254.25f);
        path.quadTo(-448.6f, 255.45f, -444.35f, 256.4f);
        path.lineTo(-439.05f, 256.85f);
        path.lineTo(-439.05f, 258.45f);
        path.quadTo(-434.35f, 260.35f, -432.3f, 260.45f);
        path.quadTo(-431.1f, 260.45f, -428.55f, 261.5f);
        path.lineTo(-428.55f, 261.55f);
        path.lineTo(-374.9f, 261.55f);
        path.close();
    }

    private static void draw_423(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_418(path);
        paint.setColor(Color.argb(255, 0, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_419(Path path)
    {
        path.reset();
        path.moveTo(-441.65f, 159.85f);
        path.lineTo(-448.6f, 159.85f);
        path.lineTo(-447.25f, 163.15f);
        path.quadTo(-445.4f, 167.3f, -444.2f, 167.7f);
        path.lineTo(-444.2f, 168.9f);
        path.lineTo(-448.6f, 168.9f);
        path.lineTo(-452.15f, 168.1f);
        path.quadTo(-451.6f, 169.7f, -447.4f, 174.2f);
        path.quadTo(-443.4f, 178.6f, -441.05f, 180.4f);
        path.lineTo(-448.2f, 181.2f);
        path.lineTo(-448.35f, 181.2f);
        path.lineTo(-448.6f, 182.0f);
        path.quadTo(-448.6f, 184.4f, -441.05f, 187.95f);
        path.quadTo(-435.4f, 190.65f, -431.9f, 191.55f);
        path.quadTo(-431.65f, 192.55f, -433.7f, 194.65f);
        path.lineTo(-437.85f, 198.3f);
        path.quadTo(-428.9f, 203.3f, -414.4f, 202.65f);
        path.lineTo(-417.6f, 208.65f);
        path.lineTo(-414.4f, 208.65f);
        path.quadTo(-409.35f, 207.2f, -404.3f, 204.65f);
        path.quadTo(-399.3f, 202.2f, -396.15f, 199.5f);
        path.quadTo(-395.75f, 201.1f, -395.75f, 206.25f);
        path.quadTo(-391.7f, 204.65f, -387.0f, 198.0f);
        path.quadTo(-382.8f, 192.1f, -381.85f, 188.35f);
        path.quadTo(-381.1f, 188.9f, -380.0f, 191.05f);
        path.lineTo(-378.25f, 194.7f);
        path.lineTo(-377.45f, 194.7f);
        path.quadTo(-375.95f, 187.65f, -375.7f, 185.6f);
        path.quadTo(-375.0f, 180.1f, -375.85f, 176.05f);
        path.lineTo(-373.5f, 178.05f);
        path.lineTo(-371.1f, 180.0f);
        path.lineTo(-371.1f, 174.85f);
        path.quadTo(-372.95f, 168.95f, -375.45f, 162.7f);
        path.lineTo(-373.25f, 163.1f);
        path.quadTo(-371.4f, 163.5f, -370.3f, 164.1f);
        path.lineTo(-369.9f, 164.1f);
        path.lineTo(-369.9f, 164.05f);
        path.quadTo(-370.4f, 161.9f, -371.35f, 159.85f);
        path.lineTo(-376.9f, 159.85f);
        path.lineTo(-376.6f, 162.6f);
        path.quadTo(-376.45f, 164.2f, -376.45f, 165.85f);
        path.quadTo(-376.45f, 176.75f, -382.6f, 185.0f);
        path.quadTo(-384.15f, 187.15f, -386.1f, 189.1f);
        path.lineTo(-387.8f, 190.75f);
        path.quadTo(-396.95f, 198.75f, -409.35f, 198.75f);
        path.quadTo(-420.7f, 198.75f, -429.35f, 192.0f);
        path.lineTo(-432.6f, 189.1f);
        path.quadTo(-435.25f, 186.45f, -437.05f, 183.6f);
        path.quadTo(-442.25f, 175.8f, -442.25f, 165.85f);
        path.quadTo(-442.25f, 162.75f, -441.65f, 159.85f);
        path.close();
    }

    private static void draw_424(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_419(path);
        paint.setColor(Color.argb(255, 153, 153, 153));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_420(Path path)
    {
        path.reset();
        path.moveTo(-387.8f, 190.75f);
        path.lineTo(-386.1f, 189.1f);
        path.quadTo(-384.15f, 187.15f, -382.6f, 185.0f);
        path.lineTo(-393.9f, 177.15f);
        path.quadTo(-403.7f, 170.1f, -403.7f, 167.05f);
        path.quadTo(-403.7f, 163.55f, -400.75f, 159.85f);
        path.lineTo(-419.2f, 159.85f);
        path.quadTo(-412.05f, 164.9f, -412.05f, 168.65f);
        path.quadTo(-412.05f, 171.65f, -421.7f, 177.1f);
        path.quadTo(-430.15f, 181.75f, -437.05f, 183.6f);
        path.quadTo(-435.25f, 186.45f, -432.6f, 189.1f);
        path.lineTo(-429.35f, 192.0f);
        path.lineTo(-416.1f, 180.4f);
        path.quadTo(-409.8f, 175.25f, -406.05f, 175.25f);
        path.quadTo(-403.2f, 175.25f, -396.3f, 181.7f);
        path.quadTo(-391.2f, 186.45f, -387.8f, 190.75f);
        path.close();
    }

    private static void draw_425(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_420(path);
        paint.setColor(Color.argb(255, 255, 255, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_421(Path path)
    {
        path.reset();
        path.moveTo(-382.6f, 185.0f);
        path.quadTo(-376.45f, 176.75f, -376.45f, 165.85f);
        path.quadTo(-376.45f, 164.2f, -376.6f, 162.6f);
        path.lineTo(-376.9f, 159.85f);
        path.lineTo(-400.75f, 159.85f);
        path.quadTo(-403.7f, 163.55f, -403.7f, 167.05f);
        path.quadTo(-403.7f, 170.1f, -393.9f, 177.15f);
        path.lineTo(-382.6f, 185.0f);
        path.close();
        path.moveTo(-429.35f, 192.0f);
        path.quadTo(-420.7f, 198.75f, -409.35f, 198.75f);
        path.quadTo(-396.95f, 198.75f, -387.8f, 190.75f);
        path.quadTo(-391.2f, 186.45f, -396.3f, 181.7f);
        path.quadTo(-403.2f, 175.25f, -406.05f, 175.25f);
        path.quadTo(-409.8f, 175.25f, -416.1f, 180.4f);
        path.lineTo(-429.35f, 192.0f);
        path.close();
        path.moveTo(-441.65f, 159.85f);
        path.quadTo(-442.25f, 162.75f, -442.25f, 165.85f);
        path.quadTo(-442.25f, 175.8f, -437.05f, 183.6f);
        path.quadTo(-430.15f, 181.75f, -421.7f, 177.1f);
        path.quadTo(-412.05f, 171.65f, -412.05f, 168.65f);
        path.quadTo(-412.05f, 164.9f, -419.2f, 159.85f);
        path.lineTo(-441.65f, 159.85f);
        path.close();
    }

    private static void draw_426(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_421(path);
        paint.setColor(Color.argb(255, 204, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_422(Path path)
    {
        path.reset();
        path.moveTo(-383.0f, 261.55f);
        path.quadTo(-383.1f, 259.4f, -383.6f, 257.4f);
        path.quadTo(-386.1f, 253.15f, -389.95f, 248.85f);
        path.quadTo(-396.6f, 241.35f, -398.7f, 238.45f);
        path.quadTo(-403.15f, 232.0f, -404.5f, 224.7f);
        path.quadTo(-405.2f, 220.65f, -405.2f, 214.45f);
        path.lineTo(-406.45f, 215.95f);
        path.lineTo(-407.4f, 214.2f);
        path.quadTo(-408.15f, 212.75f, -408.85f, 212.35f);
        path.lineTo(-409.4f, 213.55f);
        path.quadTo(-409.7f, 214.2f, -410.45f, 214.75f);
        path.lineTo(-410.6f, 214.45f);
        path.lineTo(-410.85f, 214.35f);
        path.quadTo(-410.85f, 211.95f, -411.25f, 211.15f);
        path.quadTo(-412.5f, 210.85f, -413.7f, 211.95f);
        path.lineTo(-413.7f, 226.05f);
        path.lineTo(-413.85f, 228.9f);
        path.quadTo(-411.25f, 229.95f, -408.85f, 236.2f);
        path.lineTo(-409.0f, 236.45f);
        path.lineTo(-411.55f, 234.45f);
        path.quadTo(-414.25f, 232.65f, -415.6f, 232.65f);
        path.quadTo(-417.9f, 232.65f, -420.6f, 237.25f);
        path.lineTo(-422.6f, 240.5f);
        path.lineTo(-419.6f, 246.55f);
        path.quadTo(-417.1f, 251.0f, -414.8f, 253.3f);
        path.quadTo(-417.1f, 251.0f, -419.6f, 246.55f);
        path.lineTo(-422.6f, 240.5f);
        path.lineTo(-423.7f, 241.75f);
        path.quadTo(-424.9f, 241.75f, -426.1f, 241.2f);
        path.quadTo(-427.3f, 240.6f, -428.1f, 240.6f);
        path.quadTo(-431.8f, 240.6f, -434.2f, 243.85f);
        path.lineTo(-435.45f, 245.65f);
        path.lineTo(-435.45f, 246.15f);
        path.lineTo(-435.4f, 246.95f);
        path.lineTo(-435.85f, 246.95f);
        path.quadTo(-437.0f, 250.75f, -440.3f, 252.6f);
        path.quadTo(-442.7f, 253.95f, -442.95f, 256.7f);
        path.lineTo(-443.0f, 257.4f);
        path.quadTo(-443.0f, 259.0f, -441.9f, 260.75f);
        path.lineTo(-441.45f, 261.55f);
        path.lineTo(-425.0f, 261.55f);
        path.lineTo(-424.35f, 262.1f);
        path.lineTo(-424.35f, 261.55f);
        path.lineTo(-421.25f, 261.55f);
        path.lineTo(-417.75f, 261.55f);
        path.lineTo(-407.2f, 261.55f);
        path.lineTo(-383.0f, 261.55f);
        path.close();
        path.moveTo(-409.55f, 175.25f);
        path.quadTo(-412.25f, 177.8f, -413.15f, 187.35f);
        path.lineTo(-413.45f, 193.75f);
        path.lineTo(-412.25f, 197.6f);
        path.quadTo(-411.25f, 200.85f, -409.65f, 200.85f);
        path.quadTo(-408.7f, 200.85f, -408.15f, 199.15f);
        path.lineTo(-406.85f, 195.65f);
        path.quadTo(-406.3f, 196.3f, -405.75f, 197.5f);
        path.quadTo(-405.25f, 198.6f, -405.25f, 199.25f);
        path.quadTo(-404.95f, 190.1f, -405.45f, 184.8f);
        path.quadTo(-406.05f, 176.35f, -409.55f, 175.25f);
        path.close();
        path.moveTo(-414.8f, 253.3f);
        path.lineTo(-413.6f, 254.3f);
        path.quadTo(-410.35f, 252.5f, -407.4f, 252.5f);
        path.lineTo(-407.25f, 252.5f);
        path.quadTo(-406.45f, 250.05f, -406.45f, 246.95f);
        path.quadTo(-406.45f, 243.05f, -408.35f, 237.5f);
        path.quadTo(-406.45f, 243.05f, -406.45f, 246.95f);
        path.quadTo(-406.45f, 250.05f, -407.25f, 252.5f);
        path.lineTo(-407.4f, 252.5f);
        path.quadTo(-410.35f, 252.5f, -413.6f, 254.3f);
        path.lineTo(-414.8f, 255.05f);
        path.lineTo(-416.8f, 256.45f);
        path.quadTo(-420.05f, 259.0f, -421.25f, 261.55f);
        path.quadTo(-420.05f, 259.0f, -416.8f, 256.45f);
        path.lineTo(-414.8f, 255.05f);
        path.lineTo(-414.8f, 254.65f);
        path.lineTo(-414.8f, 253.3f);
        path.close();
    }

    private static void draw_427(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_422(path);
        paint.setColor(Color.argb(255, 254, 204, 158));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_423(Path path)
    {
        path.reset();
        path.moveTo(-413.85f, 228.9f);
        path.lineTo(-414.95f, 228.65f);
        path.quadTo(-416.7f, 228.65f, -420.35f, 231.05f);
        path.quadTo(-422.3f, 232.25f, -423.45f, 233.35f);
        path.quadTo(-423.95f, 234.4f, -423.95f, 235.95f);
        path.lineTo(-423.55f, 238.1f);
        path.quadTo(-425.7f, 237.4f, -427.55f, 237.4f);
        path.quadTo(-431.4f, 237.4f, -433.5f, 239.8f);
        path.quadTo(-435.3f, 241.95f, -435.45f, 245.65f);
        path.lineTo(-434.2f, 243.85f);
        path.quadTo(-431.8f, 240.6f, -428.1f, 240.6f);
        path.quadTo(-427.3f, 240.6f, -426.1f, 241.2f);
        path.quadTo(-424.9f, 241.75f, -423.7f, 241.75f);
        path.lineTo(-422.6f, 240.5f);
        path.lineTo(-420.6f, 237.25f);
        path.quadTo(-417.9f, 232.65f, -415.6f, 232.65f);
        path.quadTo(-414.25f, 232.65f, -411.55f, 234.45f);
        path.lineTo(-409.0f, 236.45f);
        path.lineTo(-408.85f, 236.2f);
        path.quadTo(-411.25f, 229.95f, -413.85f, 228.9f);
        path.close();
        path.moveTo(-402.1f, 198.0f);
        path.lineTo(-402.35f, 192.55f);
        path.quadTo(-403.05f, 174.2f, -407.25f, 174.2f);
        path.quadTo(-408.55f, 174.2f, -409.55f, 175.25f);
        path.quadTo(-406.05f, 176.35f, -405.45f, 184.8f);
        path.quadTo(-404.95f, 190.1f, -405.25f, 199.25f);
        path.quadTo(-403.7f, 196.25f, -402.9f, 195.65f);
        path.lineTo(-402.5f, 195.65f);
        path.lineTo(-402.1f, 198.0f);
        path.close();
        path.moveTo(-383.6f, 257.4f);
        path.quadTo(-384.3f, 254.55f, -385.7f, 252.0f);
        path.quadTo(-387.3f, 249.3f, -391.85f, 244.3f);
        path.quadTo(-401.0f, 234.15f, -401.7f, 223.1f);
        path.lineTo(-401.8f, 215.95f);
        path.lineTo(-402.1f, 215.95f);
        path.lineTo(-403.15f, 214.05f);
        path.quadTo(-403.75f, 213.25f, -404.9f, 213.15f);
        path.lineTo(-405.2f, 213.15f);
        path.lineTo(-405.2f, 214.45f);
        path.quadTo(-405.2f, 220.65f, -404.5f, 224.7f);
        path.quadTo(-403.15f, 232.0f, -398.7f, 238.45f);
        path.quadTo(-396.6f, 241.35f, -389.95f, 248.85f);
        path.quadTo(-386.1f, 253.15f, -383.6f, 257.4f);
        path.close();
    }

    private static void draw_428(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_423(path);
        paint.setColor(Color.argb(255, 255, 238, 223));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_424(Path path)
    {
        path.reset();
        path.moveTo(-413.45f, 193.75f);
        path.quadTo(-413.7f, 198.0f, -413.6f, 202.85f);
        path.lineTo(-413.7f, 211.95f);
        path.quadTo(-412.5f, 210.85f, -411.25f, 211.15f);
        path.quadTo(-410.85f, 211.95f, -410.85f, 214.35f);
        path.lineTo(-410.6f, 214.45f);
        path.lineTo(-410.45f, 214.75f);
        path.quadTo(-409.7f, 214.2f, -409.4f, 213.55f);
        path.lineTo(-408.85f, 212.35f);
        path.quadTo(-408.15f, 212.75f, -407.4f, 214.2f);
        path.lineTo(-406.45f, 215.95f);
        path.lineTo(-405.2f, 214.45f);
        path.lineTo(-405.2f, 213.15f);
        path.lineTo(-404.9f, 213.15f);
        path.quadTo(-403.75f, 213.25f, -403.15f, 214.05f);
        path.lineTo(-402.1f, 215.95f);
        path.lineTo(-401.8f, 215.95f);
        path.lineTo(-402.1f, 198.0f);
        path.lineTo(-402.5f, 195.65f);
        path.lineTo(-402.9f, 195.65f);
        path.quadTo(-403.7f, 196.25f, -405.25f, 199.25f);
        path.quadTo(-405.25f, 198.6f, -405.75f, 197.5f);
        path.quadTo(-406.3f, 196.3f, -406.85f, 195.65f);
        path.lineTo(-408.15f, 199.15f);
        path.quadTo(-408.7f, 200.85f, -409.65f, 200.85f);
        path.quadTo(-411.25f, 200.85f, -412.25f, 197.6f);
        path.lineTo(-413.45f, 193.75f);
        path.close();
    }

    private static void draw_429(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_424(path);
        paint.setColor(Color.argb(255, 153, 0, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_425(Path path)
    {
        path.reset();
        path.moveTo(-424.35f, 261.55f);
        path.lineTo(-424.35f, 262.1f);
        path.lineTo(-425.0f, 261.55f);
    }

    private static void draw_430(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_425(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_426(Path path)
    {
        path.reset();
        path.moveTo(-441.45f, 261.55f);
        path.lineTo(-441.9f, 260.75f);
        path.quadTo(-443.0f, 259.0f, -443.0f, 257.4f);
        path.lineTo(-442.95f, 256.7f);
        path.quadTo(-442.7f, 253.95f, -440.3f, 252.6f);
        path.quadTo(-437.0f, 250.75f, -435.85f, 246.95f);
        path.lineTo(-435.4f, 246.95f);
        path.lineTo(-435.45f, 246.15f);
        path.lineTo(-435.45f, 245.65f);
        path.quadTo(-435.3f, 241.95f, -433.5f, 239.8f);
        path.quadTo(-431.4f, 237.4f, -427.55f, 237.4f);
        path.quadTo(-425.7f, 237.4f, -423.55f, 238.1f);
        path.lineTo(-423.95f, 235.95f);
        path.quadTo(-423.95f, 234.4f, -423.45f, 233.35f);
        path.quadTo(-422.3f, 232.25f, -420.35f, 231.05f);
        path.quadTo(-416.7f, 228.65f, -414.95f, 228.65f);
        path.lineTo(-413.85f, 228.9f);
        path.lineTo(-413.7f, 226.05f);
        path.lineTo(-413.7f, 211.95f);
        path.lineTo(-413.6f, 202.85f);
        path.quadTo(-413.7f, 198.0f, -413.45f, 193.75f);
        path.lineTo(-413.15f, 187.35f);
        path.quadTo(-412.25f, 177.8f, -409.55f, 175.25f);
        path.quadTo(-408.55f, 174.2f, -407.25f, 174.2f);
        path.quadTo(-403.05f, 174.2f, -402.35f, 192.55f);
        path.lineTo(-402.1f, 198.0f);
        path.lineTo(-401.8f, 215.95f);
        path.lineTo(-401.7f, 223.1f);
        path.quadTo(-401.0f, 234.15f, -391.85f, 244.3f);
        path.quadTo(-387.3f, 249.3f, -385.7f, 252.0f);
        path.quadTo(-384.3f, 254.55f, -383.6f, 257.4f);
        path.quadTo(-383.1f, 259.4f, -383.0f, 261.55f);
    }

    private static void draw_431(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_426(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_427(Path path)
    {
        path.reset();
        path.moveTo(-410.45f, 214.75f);
        path.lineTo(-410.6f, 214.45f);
    }

    private static void draw_432(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_427(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_428(Path path)
    {
        path.reset();
        path.moveTo(-402.9f, 195.65f);
        path.lineTo(-402.5f, 195.65f);
        path.lineTo(-402.1f, 198.0f);
    }

    private static void draw_433(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_428(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_429(Path path)
    {
        path.reset();
        path.moveTo(-402.1f, 215.95f);
        path.lineTo(-401.8f, 215.95f);
    }

    private static void draw_434(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_429(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_430(Path path)
    {
        path.reset();
        path.moveTo(-422.6f, 240.5f);
        path.lineTo(-419.6f, 246.55f);
        path.quadTo(-417.1f, 251.0f, -414.8f, 253.3f);
        path.lineTo(-413.6f, 254.3f);
        path.quadTo(-410.35f, 252.5f, -407.4f, 252.5f);
        path.lineTo(-407.25f, 252.5f);
        path.quadTo(-406.45f, 250.05f, -406.45f, 246.95f);
        path.quadTo(-406.45f, 243.05f, -408.35f, 237.5f);
    }

    private static void draw_435(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_430(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_431(Path path)
    {
        path.reset();
        path.moveTo(-409.0f, 236.45f);
        path.lineTo(-408.85f, 236.2f);
        path.quadTo(-411.25f, 229.95f, -413.85f, 228.9f);
    }

    private static void draw_436(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_431(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_432(Path path)
    {
        path.reset();
        path.moveTo(-414.8f, 255.05f);
        path.lineTo(-414.8f, 254.65f);
        path.lineTo(-414.8f, 253.3f);
    }

    private static void draw_437(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_432(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_433(Path path)
    {
        path.reset();
        path.moveTo(-413.6f, 254.3f);
        path.lineTo(-414.8f, 255.05f);
        path.lineTo(-416.8f, 256.45f);
        path.quadTo(-420.05f, 259.0f, -421.25f, 261.55f);
    }

    private static void draw_438(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_433(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_434(Path path)
    {
        path.reset();
        path.moveTo(-407.2f, 261.55f);
        path.quadTo(-406.55f, 258.4f, -405.65f, 258.05f);
        path.lineTo(-407.35f, 257.5f);
        path.lineTo(-409.4f, 256.85f);
        path.quadTo(-413.0f, 256.85f, -415.6f, 258.85f);
        path.quadTo(-417.2f, 260.15f, -417.75f, 261.55f);
    }

    private static void draw_439(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_434(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_435(Path path)
    {
        path.reset();
        path.moveTo(-422.6f, 240.5f);
        path.lineTo(-423.45f, 238.35f);
        path.lineTo(-423.55f, 238.1f);
    }

    private static void draw_440(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_435(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_436(Path path)
    {
        path.reset();
        path.moveTo(-424.35f, 261.55f);
        path.lineTo(-424.35f, 260.85f);
    }

    private static void draw_441(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_436(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_437(Path path)
    {
        path.reset();
        path.moveTo(-435.4f, 246.95f);
        path.quadTo(-434.85f, 250.65f, -428.7f, 257.65f);
        path.lineTo(-425.0f, 261.55f);
    }

    private static void draw_442(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_437(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_438(Path path)
    {
        path.reset();
        path.moveTo(-387.0f, 255.7f);
        path.lineTo(-407.25f, 252.5f);
    }

    private static void draw_443(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_438(path);
        paint.setColor(Color.argb(255, 51, 51, 51));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_439(Path path)
    {
        path.reset();
        path.moveTo(-370.55f, 171.75f);
        path.quadTo(-370.4f, 171.3f, -370.4f, 169.3f);
        path.quadTo(-370.4f, 165.3f, -376.9f, 159.85f);
        path.lineTo(-390.1f, 159.85f);
        path.quadTo(-390.65f, 160.95f, -390.65f, 161.75f);
        path.lineTo(-393.6f, 161.9f);
        path.lineTo(-395.35f, 161.9f);
        path.quadTo(-395.4f, 163.5f, -389.05f, 170.5f);
        path.lineTo(-388.25f, 170.5f);
        path.quadTo(-388.25f, 166.9f, -387.85f, 165.3f);
        path.quadTo(-384.85f, 168.9f, -380.7f, 168.9f);
        path.quadTo(-379.3f, 168.9f, -376.2f, 173.2f);
        path.lineTo(-371.95f, 178.85f);
        path.lineTo(-371.6f, 178.85f);
        path.lineTo(-371.6f, 175.65f);
        path.lineTo(-372.75f, 172.85f);
        path.lineTo(-372.75f, 172.05f);
        path.quadTo(-371.0f, 173.35f, -370.55f, 171.75f);
        path.close();
        path.moveTo(-381.9f, 174.55f);
        path.lineTo(-381.9f, 174.6f);
        path.lineTo(-382.3f, 174.7f);
        path.lineTo(-382.45f, 174.85f);
        path.lineTo(-382.55f, 175.15f);
        path.lineTo(-382.55f, 175.4f);
        path.lineTo(-382.45f, 175.75f);
        path.lineTo(-383.35f, 176.1f);
        path.lineTo(-383.65f, 176.35f);
        path.lineTo(-383.9f, 176.7f);
        path.lineTo(-384.0f, 176.9f);
        path.lineTo(-383.75f, 177.15f);
        path.lineTo(-383.1f, 177.3f);
        path.lineTo(-382.8f, 177.25f);
        path.lineTo(-382.6f, 177.15f);
        path.lineTo(-382.0f, 177.15f);
        path.lineTo(-381.85f, 177.5f);
        path.quadTo(-381.65f, 177.55f, -381.6f, 177.7f);
        path.lineTo(-381.1f, 177.95f);
        path.lineTo(-380.7f, 177.95f);
        path.lineTo(-380.3f, 177.85f);
        path.lineTo(-380.1f, 177.7f);
        path.lineTo(-380.0f, 177.5f);
        path.quadTo(-379.75f, 176.9f, -379.85f, 176.5f);
        path.lineTo(-380.15f, 175.65f);
        path.lineTo(-380.55f, 175.1f);
        path.quadTo(-380.8f, 174.75f, -381.2f, 174.7f);
        path.lineTo(-381.9f, 174.55f);
        path.close();
        path.moveTo(-386.3f, 180.0f);
        path.lineTo(-384.3f, 180.2f);
        path.quadTo(-382.95f, 180.5f, -381.9f, 181.2f);
        path.lineTo(-379.5f, 181.2f);
        path.quadTo(-380.3f, 179.45f, -385.15f, 177.55f);
        path.quadTo(-388.75f, 176.05f, -392.25f, 175.25f);
        path.lineTo(-394.25f, 175.25f);
        path.lineTo(-393.6f, 176.2f);
        path.lineTo(-391.2f, 179.05f);
        path.lineTo(-390.35f, 180.75f);
        path.quadTo(-388.65f, 184.15f, -388.65f, 187.15f);
        path.quadTo(-388.65f, 190.9f, -392.65f, 194.7f);
        path.quadTo(-396.35f, 198.3f, -399.55f, 198.3f);
        path.quadTo(-406.05f, 198.3f, -418.05f, 190.1f);
        path.quadTo(-427.35f, 183.85f, -430.7f, 180.1f);
        path.quadTo(-430.3f, 182.15f, -426.35f, 187.9f);
        path.quadTo(-421.7f, 194.5f, -419.65f, 194.7f);
        path.lineTo(-419.65f, 195.1f);
        path.lineTo(-425.2f, 195.1f);
        path.quadTo(-429.6f, 193.95f, -433.15f, 193.55f);
        path.lineTo(-433.5f, 193.95f);
        path.lineTo(-433.55f, 194.7f);
        path.quadTo(-433.55f, 196.25f, -431.0f, 197.5f);
        path.lineTo(-425.6f, 200.3f);
        path.quadTo(-425.45f, 201.85f, -427.15f, 202.25f);
        path.lineTo(-430.4f, 203.05f);
        path.lineTo(-430.45f, 203.3f);
        path.lineTo(-430.8f, 203.45f);
        path.quadTo(-429.5f, 205.7f, -423.95f, 206.4f);
        path.lineTo(-415.7f, 207.45f);
        path.lineTo(-415.7f, 210.6f);
        path.quadTo(-408.55f, 210.6f, -403.75f, 208.25f);
        path.quadTo(-403.7f, 209.65f, -404.5f, 210.75f);
        path.quadTo(-405.35f, 211.95f, -405.35f, 213.4f);
        path.quadTo(-404.65f, 213.4f, -400.45f, 211.0f);
        path.quadTo(-396.15f, 208.65f, -395.0f, 208.65f);
        path.quadTo(-393.2f, 208.55f, -391.6f, 207.1f);
        path.quadTo(-389.6f, 205.2f, -388.25f, 204.65f);
        path.quadTo(-387.45f, 204.35f, -384.95f, 200.85f);
        path.lineTo(-381.9f, 196.7f);
        path.lineTo(-379.5f, 187.95f);
        path.quadTo(-379.5f, 185.25f, -381.25f, 183.75f);
        path.lineTo(-385.9f, 180.0f);
        path.lineTo(-386.3f, 180.0f);
        path.close();
        path.moveTo(-399.95f, 160.0f);
        path.lineTo(-399.95f, 159.85f);
        path.lineTo(-401.15f, 159.85f);
        path.lineTo(-401.05f, 159.9f);
        path.lineTo(-400.2f, 160.3f);
        path.lineTo(-399.85f, 160.25f);
        path.lineTo(-399.95f, 160.0f);
        path.close();
        path.moveTo(-400.2f, 173.0f);
        path.lineTo(-401.0f, 172.95f);
        path.lineTo(-401.4f, 173.1f);
        path.lineTo(-401.6f, 173.4f);
        path.lineTo(-401.8f, 173.65f);
        path.lineTo(-401.85f, 174.0f);
        path.lineTo(-401.8f, 174.2f);
        path.quadTo(-401.3f, 174.75f, -400.5f, 174.75f);
        path.lineTo(-399.3f, 174.55f);
        path.lineTo(-399.25f, 174.4f);
        path.lineTo(-399.3f, 174.05f);
        path.lineTo(-399.15f, 173.75f);
        path.lineTo(-399.15f, 173.5f);
        path.lineTo(-399.65f, 173.2f);
        path.lineTo(-400.2f, 173.0f);
        path.close();
        path.moveTo(-398.75f, 169.7f);
        path.quadTo(-400.25f, 169.7f, -401.4f, 170.5f);
        path.lineTo(-399.65f, 172.8f);
        path.quadTo(-398.2f, 174.45f, -397.15f, 174.45f);
        path.quadTo(-394.6f, 174.45f, -394.6f, 172.05f);
        path.quadTo(-394.6f, 171.35f, -395.35f, 170.4f);
        path.quadTo(-397.5f, 169.7f, -398.75f, 169.7f);
        path.close();
        path.moveTo(-392.95f, 169.95f);
        path.lineTo(-392.95f, 169.6f);
        path.lineTo(-393.2f, 169.3f);
        path.lineTo(-393.45f, 169.3f);
        path.lineTo(-393.75f, 169.3f);
        path.lineTo(-393.85f, 169.35f);
        path.lineTo(-393.9f, 169.6f);
        path.lineTo(-393.9f, 169.95f);
        path.lineTo(-393.9f, 170.15f);
        path.lineTo(-393.9f, 170.5f);
        path.lineTo(-393.45f, 171.05f);
        path.lineTo(-393.05f, 171.3f);
        path.lineTo(-392.7f, 171.05f);
        path.lineTo(-392.65f, 170.8f);
        path.lineTo(-392.7f, 170.5f);
        path.lineTo(-392.9f, 170.15f);
        path.lineTo(-392.95f, 169.95f);
        path.close();
        path.moveTo(-409.0f, 159.85f);
        path.lineTo(-408.95f, 161.35f);
        path.quadTo(-408.95f, 164.45f, -411.4f, 165.0f);
        path.quadTo(-415.45f, 166.05f, -416.1f, 166.5f);
        path.quadTo(-415.2f, 168.1f, -412.25f, 169.45f);
        path.lineTo(-408.55f, 170.9f);
        path.lineTo(-407.75f, 170.9f);
        path.quadTo(-407.6f, 167.6f, -405.85f, 164.85f);
        path.lineTo(-402.75f, 159.85f);
        path.lineTo(-409.0f, 159.85f);
        path.close();
        path.moveTo(-417.05f, 173.6f);
        path.lineTo(-416.5f, 172.05f);
        path.quadTo(-416.5f, 169.55f, -420.05f, 167.55f);
        path.lineTo(-429.05f, 163.1f);
        path.quadTo(-429.6f, 163.8f, -429.6f, 164.3f);
        path.quadTo(-429.6f, 165.95f, -426.55f, 166.25f);
        path.quadTo(-423.65f, 166.5f, -423.65f, 168.65f);
        path.quadTo(-423.65f, 169.6f, -424.45f, 169.95f);
        path.quadTo(-425.6f, 170.3f, -426.0f, 170.9f);
        path.lineTo(-423.65f, 171.3f);
        path.lineTo(-423.65f, 172.05f);
        path.lineTo(-425.2f, 172.45f);
        path.lineTo(-423.1f, 174.75f);
        path.quadTo(-421.5f, 176.35f, -421.25f, 177.25f);
        path.quadTo(-422.85f, 178.05f, -423.25f, 178.05f);
        path.quadTo(-423.0f, 178.05f, -422.9f, 178.25f);
        path.lineTo(-422.85f, 178.45f);
        path.lineTo(-420.05f, 181.2f);
        path.lineTo(-422.45f, 181.2f);
        path.lineTo(-422.45f, 182.0f);
        path.lineTo(-416.3f, 185.4f);
        path.quadTo(-410.6f, 188.45f, -408.55f, 189.15f);
        path.lineTo(-405.35f, 189.15f);
        path.lineTo(-405.35f, 186.75f);
        path.quadTo(-412.05f, 183.2f, -414.15f, 181.6f);
        path.quadTo(-417.65f, 179.15f, -417.65f, 176.05f);
        path.quadTo(-417.65f, 175.25f, -417.05f, 173.6f);
        path.close();
        path.moveTo(-436.1f, 160.15f);
        path.lineTo(-436.35f, 160.15f);
        path.lineTo(-436.65f, 160.3f);
        path.lineTo(-436.8f, 160.55f);
        path.lineTo(-436.8f, 160.85f);
        path.lineTo(-436.8f, 161.2f);
        path.lineTo(-436.8f, 161.4f);
        path.lineTo(-436.6f, 161.65f);
        path.lineTo(-435.95f, 161.8f);
        path.lineTo(-435.4f, 161.6f);
        path.lineTo(-435.25f, 161.35f);
        path.lineTo(-435.4f, 161.1f);
        path.lineTo(-435.8f, 160.7f);
        path.lineTo(-435.85f, 160.45f);
        path.lineTo(-436.1f, 160.15f);
        path.close();
        path.moveTo(-432.6f, 172.85f);
        path.lineTo(-432.7f, 172.65f);
        path.lineTo(-433.15f, 172.25f);
        path.lineTo(-433.5f, 172.0f);
        path.lineTo(-433.7f, 171.65f);
        path.lineTo(-433.95f, 171.65f);
        path.lineTo(-434.45f, 171.9f);
        path.lineTo(-434.5f, 172.15f);
        path.lineTo(-434.5f, 172.8f);
        path.lineTo(-434.2f, 173.2f);
        path.lineTo(-433.15f, 173.35f);
        path.lineTo(-432.7f, 173.2f);
        path.lineTo(-432.6f, 172.85f);
        path.close();
        path.moveTo(-433.8f, 175.4f);
        path.lineTo(-434.3f, 174.85f);
        path.lineTo(-434.9f, 174.4f);
        path.lineTo(-435.25f, 174.15f);
        path.lineTo(-435.85f, 173.65f);
        path.lineTo(-436.75f, 173.35f);
        path.lineTo(-436.75f, 173.4f);
        path.quadTo(-437.05f, 173.6f, -437.15f, 173.75f);
        path.quadTo(-437.7f, 174.55f, -436.8f, 174.95f);
        path.lineTo(-436.65f, 175.0f);
        path.lineTo(-436.65f, 175.1f);
        path.quadTo(-436.75f, 175.65f, -436.35f, 176.05f);
        path.lineTo(-435.15f, 176.6f);
        path.lineTo(-434.05f, 176.45f);
        path.quadTo(-433.8f, 176.35f, -433.65f, 176.1f);
        path.lineTo(-433.7f, 175.9f);
        path.lineTo(-433.8f, 175.4f);
        path.close();
        path.moveTo(-441.6f, 165.7f);
        path.lineTo(-441.6f, 166.05f);
        path.lineTo(-441.5f, 166.35f);
        path.lineTo(-441.45f, 166.6f);
        path.lineTo(-441.1f, 166.75f);
        path.lineTo(-440.9f, 166.6f);
        path.lineTo(-440.65f, 166.45f);
        path.lineTo(-440.55f, 166.5f);
        path.lineTo(-440.5f, 166.85f);
        path.lineTo(-440.5f, 167.15f);
        path.lineTo(-440.15f, 167.3f);
        path.lineTo(-439.55f, 167.4f);
        path.lineTo(-439.2f, 167.2f);
        path.lineTo(-438.8f, 166.9f);
        path.quadTo(-438.5f, 166.65f, -438.0f, 166.5f);
        path.lineTo(-437.85f, 166.45f);
        path.lineTo(-437.7f, 166.1f);
        path.lineTo(-437.85f, 165.85f);
        path.lineTo(-438.15f, 165.55f);
        path.lineTo(-438.1f, 165.4f);
        path.lineTo(-438.25f, 165.15f);
        path.lineTo(-438.55f, 164.9f);
        path.lineTo(-439.45f, 164.6f);
        path.lineTo(-439.7f, 164.45f);
        path.lineTo(-439.9f, 164.45f);
        path.quadTo(-440.15f, 164.5f, -440.4f, 164.7f);
        path.lineTo(-440.4f, 164.9f);
        path.lineTo(-440.25f, 165.25f);
        path.lineTo(-441.1f, 165.3f);
        path.lineTo(-441.45f, 165.45f);
        path.lineTo(-441.6f, 165.7f);
        path.close();
        path.moveTo(-438.8f, 179.15f);
        path.lineTo(-439.05f, 179.3f);
        path.lineTo(-439.55f, 179.85f);
        path.lineTo(-439.6f, 179.95f);
        path.lineTo(-439.75f, 180.2f);
        path.lineTo(-439.85f, 180.4f);
        path.lineTo(-439.85f, 180.75f);
        path.lineTo(-439.7f, 180.95f);
        path.lineTo(-438.9f, 181.2f);
        path.lineTo(-438.35f, 181.3f);
        path.quadTo(-437.85f, 181.35f, -437.4f, 181.6f);
        path.lineTo(-436.5f, 182.0f);
        path.lineTo(-436.35f, 182.1f);
        path.lineTo(-436.25f, 181.55f);
        path.lineTo(-436.9f, 181.3f);
        path.lineTo(-437.0f, 181.2f);
        path.lineTo(-436.5f, 181.15f);
        path.lineTo(-434.75f, 181.45f);
        path.lineTo(-434.05f, 181.3f);
        path.lineTo(-433.35f, 180.9f);
        path.lineTo(-433.8f, 180.4f);
        path.lineTo(-434.5f, 180.1f);
        path.lineTo(-435.45f, 179.6f);
        path.quadTo(-435.85f, 179.3f, -436.35f, 179.2f);
        path.lineTo(-437.05f, 179.05f);
        path.lineTo(-437.95f, 178.85f);
        path.lineTo(-437.95f, 178.9f);
        path.lineTo(-438.35f, 179.0f);
        path.lineTo(-438.75f, 179.05f);
        path.lineTo(-438.8f, 179.15f);
        path.close();
        path.moveTo(-433.55f, 183.05f);
        path.lineTo(-433.65f, 183.1f);
        path.lineTo(-433.5f, 183.85f);
        path.lineTo(-432.6f, 184.55f);
        path.lineTo(-432.2f, 184.7f);
        path.quadTo(-431.2f, 185.35f, -430.15f, 185.0f);
        path.lineTo(-430.05f, 184.85f);
        path.lineTo(-430.15f, 184.65f);
        path.quadTo(-430.3f, 184.45f, -430.55f, 184.3f);
        path.lineTo(-431.0f, 184.05f);
        path.lineTo(-431.9f, 183.75f);
        path.lineTo(-432.0f, 183.65f);
        path.lineTo(-432.6f, 183.3f);
        path.quadTo(-432.95f, 183.1f, -433.35f, 183.05f);
        path.lineTo(-433.55f, 183.05f);
        path.close();
    }

    private static void draw_444(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_439(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_440(Path path)
    {
        path.reset();
        path.moveTo(446.0f, -920.25f);
        path.lineTo(418.0f, -920.25f);
        path.quadTo(409.25f, -907.1f, 390.4f, -856.9f);
        path.quadTo(371.45f, -806.35f, 358.15f, -757.6f);
        path.quadTo(374.35f, -756.85f, 389.95f, -754.3f);
        path.lineTo(412.0f, -804.0f);
        path.quadTo(416.65f, -798.65f, 439.95f, -790.85f);
        path.quadTo(457.4f, -785.0f, 478.0f, -780.0f);
        path.quadTo(481.0f, -783.0f, 488.65f, -795.55f);
        path.quadTo(496.4f, -808.3f, 498.0f, -810.0f);
        path.quadTo(450.2f, -829.0f, 418.0f, -836.0f);
        path.quadTo(421.35f, -841.85f, 424.55f, -849.5f);
        path.lineTo(428.9f, -859.6f);
        path.quadTo(431.2f, -864.1f, 434.05f, -866.0f);
        path.quadTo(437.4f, -868.25f, 443.0f, -868.25f);
        path.quadTo(449.1f, -868.25f, 473.95f, -863.45f);
        path.quadTo(501.75f, -858.15f, 510.0f, -854.0f);
        path.quadTo(510.95f, -857.9f, 518.85f, -872.5f);
        path.quadTo(526.0f, -885.75f, 526.0f, -890.25f);
        path.quadTo(503.0f, -902.6f, 490.4f, -908.15f);
        path.quadTo(468.7f, -917.7f, 446.0f, -920.25f);
        path.close();
        path.moveTo(-248.9f, -457.0f);
        path.quadTo(-265.3f, -453.85f, -272.1f, -446.05f);
        path.quadTo(-278.2f, -439.05f, -279.5f, -424.35f);
        path.quadTo(-280.0f, -418.75f, -280.0f, -389.0f);
        path.quadTo(-280.0f, -373.45f, -209.3f, -342.55f);
        path.quadTo(-162.05f, -321.9f, -72.2f, -290.2f);
        path.quadTo(-68.95f, -318.75f, -64.75f, -345.3f);
        path.lineTo(-94.1f, -356.25f);
        path.quadTo(-123.5f, -366.95f, -136.0f, -370.4f);
        path.lineTo(-136.0f, -403.6f);
        path.lineTo(-91.8f, -398.55f);
        path.lineTo(-56.1f, -393.9f);
        path.quadTo(-50.3f, -422.7f, -43.3f, -448.7f);
        path.lineTo(-74.4f, -452.75f);
        path.quadTo(-136.55f, -460.0f, -201.0f, -460.0f);
        path.quadTo(-233.1f, -460.0f, -248.9f, -457.0f);
        path.close();
        path.moveTo(-178.0f, -387.3f);
        path.lineTo(-204.3f, -392.75f);
        path.quadTo(-227.15f, -398.35f, -230.0f, -404.0f);
        path.quadTo(-219.9f, -412.85f, -198.1f, -412.6f);
        path.lineTo(-180.1f, -411.45f);
        path.lineTo(-178.0f, -411.25f);
        path.lineTo(-178.0f, -387.3f);
        path.close();
        path.moveTo(-172.0f, -386.0f);
        path.lineTo(-178.0f, -387.3f);
        path.lineTo(-178.0f, -376.0f);
        path.lineTo(-178.0f, -387.3f);
        path.lineTo(-172.0f, -386.0f);
        path.close();
    }

    private static void draw_445(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_440(path);
        paint.setColor(Color.argb(255, 255, 51, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_441(Path path)
    {
        path.reset();
        path.moveTo(-116.1f, -627.95f);
        path.quadTo(-132.85f, -642.0f, -159.0f, -642.0f);
        path.quadTo(-197.75f, -642.0f, -220.05f, -611.95f);
        path.quadTo(-240.0f, -585.0f, -240.0f, -545.0f);
        path.quadTo(-240.0f, -525.25f, -215.0f, -511.6f);
        path.quadTo(-195.2f, -500.75f, -156.35f, -492.45f);
        path.quadTo(-144.8f, -489.95f, -88.55f, -480.3f);
        path.quadTo(-52.4f, -474.1f, -37.65f, -468.65f);
        path.lineTo(-35.9f, -474.5f);
        path.quadTo(-31.0f, -490.45f, -25.5f, -505.4f);
        path.lineTo(-31.55f, -507.5f);
        path.quadTo(-39.45f, -509.95f, -59.3f, -514.8f);
        path.quadTo(-80.5f, -519.95f, -89.85f, -522.7f);
        path.quadTo(-106.1f, -527.45f, -114.0f, -532.0f);
        path.quadTo(-112.0f, -538.1f, -104.5f, -556.85f);
        path.quadTo(-98.0f, -574.9f, -98.0f, -586.0f);
        path.quadTo(-98.0f, -612.75f, -116.1f, -627.95f);
        path.close();
        path.moveTo(-175.0f, -576.0f);
        path.quadTo(-168.2f, -576.0f, -165.55f, -574.9f);
        path.quadTo(-163.05f, -573.9f, -162.45f, -571.1f);
        path.lineTo(-161.85f, -563.75f);
        path.quadTo(-161.5f, -558.65f, -160.45f, -554.0f);
        path.lineTo(-164.0f, -554.0f);
        path.quadTo(-169.0f, -555.85f, -176.8f, -557.75f);
        path.quadTo(-185.9f, -560.0f, -190.0f, -560.0f);
        path.lineTo(-190.0f, -570.0f);
        path.quadTo(-186.55f, -573.45f, -180.6f, -575.05f);
        path.quadTo(-177.15f, -576.0f, -175.0f, -576.0f);
        path.close();
    }

    private static void draw_446(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_441(path);
        paint.setColor(Color.argb(255, 0, 102, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_442(Path path)
    {
        path.reset();
        path.moveTo(-26.75f, -811.9f);
        path.quadTo(-19.9f, -808.25f, -17.3f, -805.8f);
        path.quadTo(-13.3f, -802.15f, -14.0f, -798.0f);
        path.quadTo(-10.05f, -801.95f, 0.650001f, -809.55f);
        path.lineTo(16.0f, -820.0f);
        path.quadTo(7.05f, -828.95f, -4.0f, -854.0f);
        path.quadTo(-25.4f, -847.0f, -44.0f, -826.0f);
        path.quadTo(-42.7f, -821.9f, -37.35f, -818.05f);
        path.quadTo(-34.7f, -816.2f, -26.75f, -811.9f);
        path.close();
        path.moveTo(33.0f, -808.0f);
        path.quadTo(31.7f, -808.0f, 16.05f, -798.05f);
        path.quadTo(1.14441e-06f, -787.8f, 1.14441e-06f, -786.0f);
        path.quadTo(1.14441e-06f, -780.95f, 42.7f, -730.95f);
        path.lineTo(88.4f, -678.4f);
        path.quadTo(111.65f, -697.8f, 138.3f, -712.35f);
        path.quadTo(116.15f, -738.2f, 80.75f, -771.05f);
        path.quadTo(40.95f, -808.0f, 33.0f, -808.0f);
        path.close();
    }

    private static void draw_447(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_442(path);
        paint.setColor(Color.argb(255, 0, 204, 204));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_443(Path path)
    {
        path.reset();
        path.moveTo(28.65f, -612.65f);
        path.lineTo(12.3f, -625.25f);
        path.lineTo(-24.0f, -652.0f);
        path.lineTo(-14.0f, -652.0f);
        path.quadTo(-5.35f, -649.5f, 17.3f, -645.35f);
        path.quadTo(37.7f, -641.65f, 48.95f, -639.15f);
        path.quadTo(61.3f, -653.75f, 74.95f, -666.5f);
        path.lineTo(29.4f, -674.05f);
        path.quadTo(-3.7f, -679.25f, -20.0f, -678.0f);
        path.lineTo(-20.0f, -682.0f);
        path.quadTo(-11.9f, -695.35f, -10.7f, -700.95f);
        path.quadTo(-10.0f, -704.05f, -10.0f, -721.0f);
        path.quadTo(-10.0f, -738.3f, -20.05f, -748.05f);
        path.quadTo(-30.3f, -758.0f, -49.0f, -758.0f);
        path.quadTo(-58.6f, -758.0f, -75.0f, -754.0f);
        path.quadTo(-93.75f, -749.4f, -110.05f, -742.05f);
        path.quadTo(-154.0f, -722.2f, -154.0f, -695.0f);
        path.quadTo(-154.0f, -692.65f, -76.1f, -640.1f);
        path.lineTo(9.85f, -582.75f);
        path.quadTo(18.8f, -598.45f, 28.65f, -612.65f);
        path.close();
        path.moveTo(-66.0f, -712.0f);
        path.quadTo(-60.25f, -712.0f, -58.7f, -710.2f);
        path.quadTo(-57.65f, -709.0f, -57.95f, -705.25f);
        path.quadTo(-58.35f, -700.4f, -57.75f, -697.65f);
        path.quadTo(-56.6f, -692.6f, -52.0f, -688.0f);
        path.quadTo(-52.85f, -688.0f, -67.3f, -695.8f);
        path.lineTo(-82.0f, -704.0f);
        path.quadTo(-78.25f, -710.75f, -76.35f, -711.55f);
        path.lineTo(-66.0f, -712.0f);
        path.close();
    }

    private static void draw_448(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_443(path);
        paint.setColor(Color.argb(255, 255, 204, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_444(Path path)
    {
        path.reset();
        path.moveTo(118.0f, -888.25f);
        path.quadTo(102.65f, -887.45f, 87.8f, -884.5f);
        path.quadTo(71.7f, -881.3f, 60.0f, -876.25f);
        path.quadTo(89.75f, -833.85f, 104.4f, -810.7f);
        path.quadTo(132.7f, -766.05f, 154.75f, -720.75f);
        path.lineTo(161.85f, -724.0f);
        path.quadTo(216.9f, -748.45f, 286.5f, -755.3f);
        path.lineTo(286.2f, -763.9f);
        path.quadTo(285.95f, -779.9f, 285.2f, -785.1f);
        path.quadTo(283.8f, -795.35f, 279.1f, -800.2f);
        path.quadTo(273.55f, -806.0f, 262.0f, -806.0f);
        path.quadTo(247.25f, -806.0f, 211.7f, -792.0f);
        path.quadTo(174.0f, -776.0f, 164.0f, -772.0f);
        path.quadTo(161.0f, -781.0f, 153.7f, -797.5f);
        path.lineTo(139.8f, -828.35f);
        path.quadTo(121.6f, -869.05f, 118.0f, -888.25f);
        path.close();
        path.moveTo(784.3f, -589.85f);
        path.quadTo(761.15f, -580.15f, 737.15f, -568.95f);
        path.quadTo(678.3f, -541.5f, 641.65f, -517.8f);
        path.quadTo(653.65f, -489.0f, 663.9f, -457.0f);
        path.quadTo(681.55f, -402.1f, 692.8f, -342.05f);
        path.lineTo(700.2f, -344.6f);
        path.quadTo(714.25f, -349.6f, 728.0f, -356.05f);
        path.quadTo(766.0f, -373.95f, 766.0f, -386.0f);
        path.quadTo(766.0f, -394.1f, 754.15f, -411.3f);
        path.quadTo(745.6f, -423.7f, 728.0f, -444.5f);
        path.lineTo(701.9f, -475.45f);
        path.quadTo(690.0f, -490.1f, 690.0f, -494.0f);
        path.quadTo(690.0f, -503.1f, 750.75f, -520.85f);
        path.quadTo(781.5f, -529.85f, 834.0f, -538.0f);
        path.lineTo(821.85f, -566.7f);
        path.quadTo(809.7f, -596.15f, 810.0f, -600.0f);
        path.quadTo(803.05f, -597.7f, 784.3f, -589.85f);
        path.close();
    }

    private static void draw_449(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_444(path);
        paint.setColor(Color.argb(255, 156, 69, 195));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_445(Path path)
    {
        path.reset();
        path.moveTo(-178.0f, -418.0f);
        path.lineTo(-178.0f, -411.25f);
        path.lineTo(-164.0f, -410.0f);
    }

    private static void draw_450(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_445(path);
        paint.setColor(Color.argb(255, 255, 0, 0));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_446(Path path)
    {
        path.reset();
        path.moveTo(-178.0f, -387.3f);
        path.lineTo(-204.3f, -392.75f);
        path.quadTo(-227.15f, -398.35f, -230.0f, -404.0f);
        path.quadTo(-219.9f, -412.85f, -198.1f, -412.6f);
        path.lineTo(-180.1f, -411.45f);
        path.lineTo(-178.0f, -411.25f);
        path.lineTo(-178.0f, -387.3f);
    }

    private static void draw_451(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_446(path);
        paint.setColor(Color.argb(255, 255, 0, 0));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_447(Path path)
    {
        path.reset();
        path.moveTo(-178.0f, -376.0f);
        path.lineTo(-178.0f, -387.3f);
        path.lineTo(-172.0f, -386.0f);
    }

    private static void draw_452(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_447(path);
        paint.setColor(Color.argb(255, 255, 0, 0));
        paint.setStrokeWidth(1.0f);
        paint.setStrokeCap(Paint.Cap.ROUND);
        paint.setStrokeJoin(Paint.Join.ROUND);
        paint.setStyle(Paint.Style.STROKE);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_448(Path path)
    {
        path.reset();
        path.moveTo(635.05f, -829.6f);
        path.quadTo(636.1f, -821.35f, 639.8f, -813.4f);
        path.quadTo(642.65f, -807.2f, 646.65f, -802.3f);
        path.lineTo(647.35f, -802.8f);
        path.lineTo(647.0f, -801.8f);
        path.lineTo(642.15f, -788.3f);
        path.lineTo(638.65f, -791.2f);
        path.lineTo(632.1f, -796.7f);
        path.quadTo(622.8f, -805.55f, 617.55f, -819.4f);
        path.lineTo(635.05f, -829.6f);
        path.close();
        path.moveTo(650.1f, -810.3f);
        path.quadTo(647.9f, -815.75f, 646.45f, -821.85f);
        path.quadTo(644.55f, -829.45f, 644.3f, -835.1f);
        path.lineTo(663.35f, -846.9f);
        path.lineTo(650.1f, -810.3f);
        path.close();
        path.moveTo(633.9f, -764.85f);
        path.quadTo(624.1f, -766.55f, 616.05f, -770.05f);
        path.quadTo(603.3f, -775.6f, 591.25f, -787.05f);
        path.quadTo(581.0f, -796.8f, 579.55f, -798.9f);
        path.lineTo(579.4f, -799.1f);
        path.lineTo(593.45f, -806.15f);
        path.lineTo(605.1f, -812.4f);
        path.lineTo(607.9f, -807.05f);
        path.quadTo(612.65f, -799.0f, 620.15f, -791.9f);
        path.quadTo(624.6f, -787.65f, 634.85f, -780.95f);
        path.lineTo(638.7f, -778.45f);
        path.lineTo(633.9f, -764.85f);
        path.close();
        path.moveTo(601.0f, -755.3f);
        path.lineTo(606.2f, -754.8f);
        path.quadTo(615.3f, -754.3f, 631.0f, -756.5f);
        path.lineTo(628.45f, -748.7f);
        path.quadTo(619.7f, -747.15f, 609.2f, -751.35f);
        path.quadTo(605.0f, -752.95f, 601.0f, -755.3f);
        path.close();
    }

    private static void draw_453(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_448(path);
        paint.setColor(Color.argb(255, 224, 51, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_449(Path path)
    {
        path.reset();
        path.moveTo(647.35f, -802.8f);
        path.lineTo(646.65f, -802.3f);
        path.quadTo(642.65f, -807.2f, 639.8f, -813.4f);
        path.quadTo(636.1f, -821.35f, 635.05f, -829.6f);
        path.lineTo(644.3f, -835.1f);
        path.quadTo(644.55f, -829.45f, 646.45f, -821.85f);
        path.quadTo(647.9f, -815.75f, 650.1f, -810.3f);
        path.lineTo(647.35f, -802.8f);
        path.close();
        path.moveTo(617.55f, -819.4f);
        path.quadTo(622.8f, -805.55f, 632.1f, -796.7f);
        path.lineTo(638.65f, -791.2f);
        path.lineTo(642.15f, -788.3f);
        path.lineTo(638.7f, -778.45f);
        path.lineTo(634.85f, -780.95f);
        path.quadTo(624.6f, -787.65f, 620.15f, -791.9f);
        path.quadTo(612.65f, -799.0f, 607.9f, -807.05f);
        path.lineTo(605.1f, -812.4f);
        path.quadTo(611.1f, -815.65f, 617.55f, -819.4f);
        path.close();
        path.moveTo(579.4f, -799.1f);
        path.lineTo(579.55f, -798.9f);
        path.quadTo(581.0f, -796.8f, 591.25f, -787.05f);
        path.quadTo(603.3f, -775.6f, 616.05f, -770.05f);
        path.quadTo(624.1f, -766.55f, 633.9f, -764.85f);
        path.lineTo(631.0f, -756.5f);
        path.quadTo(615.3f, -754.3f, 606.2f, -754.8f);
        path.lineTo(601.0f, -755.3f);
        path.quadTo(594.1f, -759.4f, 587.7f, -765.5f);
        path.quadTo(577.3f, -775.4f, 575.35f, -784.15f);
        path.quadTo(574.15f, -789.4f, 575.45f, -797.1f);
        path.lineTo(577.0f, -797.9f);
        path.lineTo(579.4f, -799.1f);
        path.close();
    }

    private static void draw_454(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_449(path);
        paint.setColor(Color.argb(255, 255, 204, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_450(Path path)
    {
        path.reset();
        path.moveTo(740.8f, -678.8f);
        path.lineTo(740.05f, -678.45f);
        path.lineTo(740.5f, -678.2f);
        path.lineTo(740.8f, -678.8f);
        path.close();
        path.moveTo(672.9f, -682.95f);
        path.lineTo(672.85f, -682.95f);
        path.lineTo(673.0f, -682.65f);
        path.lineTo(672.9f, -682.95f);
        path.close();
    }

    private static void draw_455(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_450(path);
        paint.setColor(Color.argb(255, 224, 51, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_451(Path path)
    {
        path.reset();
        path.moveTo(741.45f, -711.25f);
        path.lineTo(731.65f, -706.85f);
        path.quadTo(731.75f, -698.5f, 734.45f, -690.3f);
        path.quadTo(736.65f, -683.75f, 740.05f, -678.45f);
        path.lineTo(740.8f, -678.8f);
        path.lineTo(744.35f, -686.05f);
        path.quadTo(742.85f, -691.65f, 742.05f, -697.85f);
        path.quadTo(741.0f, -705.6f, 741.45f, -711.25f);
        path.close();
        path.moveTo(729.4f, -655.65f);
        path.lineTo(734.0f, -665.0f);
        path.lineTo(730.85f, -668.3f);
        path.lineTo(724.95f, -674.5f);
        path.quadTo(716.7f, -684.35f, 713.1f, -698.7f);
        path.lineTo(699.95f, -693.2f);
        path.quadTo(700.85f, -690.45f, 702.15f, -687.6f);
        path.quadTo(705.95f, -679.05f, 712.55f, -671.1f);
        path.quadTo(716.55f, -666.35f, 725.9f, -658.55f);
        path.lineTo(729.4f, -655.65f);
        path.close();
        path.moveTo(719.3f, -634.75f);
        path.lineTo(723.1f, -642.7f);
        path.quadTo(713.6f, -645.45f, 705.95f, -649.9f);
        path.quadTo(693.95f, -656.85f, 683.3f, -669.6f);
        path.quadTo(674.25f, -680.45f, 673.0f, -682.65f);
        path.lineTo(672.85f, -682.95f);
        path.lineTo(670.4f, -682.0f);
        path.lineTo(668.75f, -681.4f);
        path.quadTo(666.55f, -673.85f, 667.1f, -668.55f);
        path.quadTo(668.05f, -659.6f, 677.25f, -648.6f);
        path.quadTo(682.95f, -641.8f, 689.35f, -636.95f);
        path.lineTo(694.5f, -635.85f);
        path.quadTo(703.45f, -634.3f, 719.3f, -634.75f);
        path.close();
    }

    private static void draw_456(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_451(path);
        paint.setColor(Color.argb(255, 255, 204, 51));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_452(Path path)
    {
        path.reset();
        path.moveTo(740.05f, -678.45f);
        path.quadTo(736.65f, -683.75f, 734.45f, -690.3f);
        path.quadTo(731.75f, -698.5f, 731.65f, -706.85f);
        path.lineTo(713.1f, -698.7f);
        path.quadTo(716.7f, -684.35f, 724.95f, -674.5f);
        path.lineTo(730.85f, -668.3f);
        path.lineTo(734.0f, -665.0f);
        path.lineTo(740.3f, -677.9f);
        path.lineTo(740.5f, -678.2f);
        path.lineTo(740.05f, -678.45f);
        path.close();
        path.moveTo(741.45f, -711.25f);
        path.quadTo(741.0f, -705.6f, 742.05f, -697.85f);
        path.quadTo(742.85f, -691.65f, 744.35f, -686.05f);
        path.lineTo(761.75f, -720.8f);
        path.quadTo(751.2f, -715.75f, 741.45f, -711.25f);
        path.close();
        path.moveTo(723.1f, -642.7f);
        path.lineTo(729.4f, -655.65f);
        path.lineTo(725.9f, -658.55f);
        path.quadTo(716.55f, -666.35f, 712.55f, -671.1f);
        path.quadTo(705.95f, -679.05f, 702.15f, -687.6f);
        path.quadTo(700.85f, -690.45f, 699.95f, -693.2f);
        path.lineTo(687.65f, -688.35f);
        path.lineTo(672.9f, -682.95f);
        path.lineTo(673.0f, -682.65f);
        path.quadTo(674.25f, -680.45f, 683.3f, -669.6f);
        path.quadTo(693.95f, -656.85f, 705.95f, -649.9f);
        path.quadTo(713.6f, -645.45f, 723.1f, -642.7f);
        path.close();
        path.moveTo(689.35f, -636.95f);
        path.quadTo(693.05f, -634.2f, 697.05f, -632.1f);
        path.quadTo(706.95f, -626.75f, 715.85f, -627.3f);
        path.lineTo(719.3f, -634.75f);
        path.quadTo(703.45f, -634.3f, 694.5f, -635.85f);
        path.lineTo(689.35f, -636.95f);
        path.close();
    }

    private static void draw_457(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_452(path);
        paint.setColor(Color.argb(255, 0, 102, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_453(Path path)
    {
        path.reset();
        path.moveTo(654.7f, -650.05f);
        path.quadTo(660.2f, -654.0f, 668.0f, -654.0f);
        path.quadTo(676.05f, -654.0f, 678.05f, -652.05f);
        path.quadTo(680.0f, -650.05f, 680.0f, -642.0f);
        path.quadTo(680.0f, -638.1f, 676.3f, -631.45f);
        path.quadTo(673.55f, -626.55f, 670.4f, -624.1f);
        path.lineTo(661.4f, -633.8f);
        path.lineTo(650.15f, -645.7f);
        path.lineTo(654.7f, -650.05f);
        path.close();
        path.moveTo(676.15f, -681.8f);
        path.quadTo(665.7f, -686.0f, 657.0f, -686.0f);
        path.quadTo(630.5f, -686.0f, 607.8f, -669.05f);
        path.quadTo(599.9f, -663.2f, 587.05f, -651.2f);
        path.lineTo(573.4f, -638.45f);
        path.quadTo(586.55f, -621.4f, 598.7f, -601.95f);
        path.quadTo(614.95f, -575.9f, 629.1f, -545.95f);
        path.quadTo(633.9f, -546.5f, 639.65f, -548.1f);
        path.quadTo(656.8f, -552.85f, 674.35f, -564.35f);
        path.quadTo(693.4f, -576.9f, 704.9f, -592.45f);
        path.quadTo(718.0f, -610.2f, 718.0f, -628.0f);
        path.quadTo(718.0f, -652.05f, 696.05f, -670.05f);
        path.quadTo(686.9f, -677.5f, 676.15f, -681.8f);
        path.close();
    }

    private static void draw_458(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_453(path);
        paint.setColor(Color.argb(255, 255, 204, 0));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void def_path_454(Path path)
    {
        path.reset();
        path.moveTo(620.05f, -784.0f);
        path.quadTo(604.7f, -802.0f, 580.0f, -802.0f);
        path.quadTo(549.75f, -802.0f, 518.95f, -772.75f);
        path.quadTo(505.55f, -760.0f, 494.7f, -743.8f);
        path.quadTo(487.15f, -732.5f, 481.9f, -721.2f);
        path.quadTo(488.2f, -717.5f, 494.4f, -713.4f);
        path.quadTo(529.15f, -690.45f, 559.05f, -656.0f);
        path.lineTo(567.75f, -661.1f);
        path.quadTo(582.5f, -670.4f, 596.65f, -683.3f);
        path.quadTo(613.05f, -698.35f, 622.65f, -713.1f);
        path.quadTo(634.0f, -730.5f, 634.0f, -745.0f);
        path.quadTo(634.0f, -767.6f, 620.05f, -784.0f);
        path.close();
        path.moveTo(586.55f, -730.4f);
        path.quadTo(584.05f, -731.75f, 581.35f, -733.6f);
        path.lineTo(571.05f, -741.1f);
        path.quadTo(564.35f, -746.05f, 558.5f, -748.75f);
        path.quadTo(561.55f, -752.25f, 565.8f, -755.7f);
        path.quadTo(576.15f, -764.0f, 583.0f, -764.0f);
        path.quadTo(591.4f, -764.0f, 594.1f, -760.1f);
        path.quadTo(596.0f, -757.35f, 596.0f, -750.0f);
        path.quadTo(596.0f, -743.8f, 587.75f, -732.1f);
        path.lineTo(586.55f, -730.4f);
        path.close();
    }

    private static void draw_459(Canvas canvas, Path path, Paint paint)
    {
        canvas.save();
        def_path_454(path);
        paint.setColor(Color.argb(255, 0, 102, 255));
        paint.setStyle(Paint.Style.FILL);
        canvas.drawPath(path, paint);
        canvas.restore();
    }

    private static void draw_main(Canvas canvas, Path path, Paint paint)
    {
        draw_0(canvas, path, paint);
        draw_1(canvas, path, paint);
        draw_2(canvas, path, paint);
        draw_3(canvas, path, paint);
        draw_4(canvas, path, paint);
        draw_5(canvas, path, paint);
        draw_6(canvas, path, paint);
        draw_7(canvas, path, paint);
        draw_8(canvas, path, paint);
        draw_9(canvas, path, paint);
        draw_10(canvas, path, paint);
        draw_11(canvas, path, paint);
        draw_12(canvas, path, paint);
        draw_13(canvas, path, paint);
        draw_14(canvas, path, paint);
        draw_15(canvas, path, paint);
        draw_16(canvas, path, paint);
        draw_17(canvas, path, paint);
        draw_18(canvas, path, paint);
        draw_19(canvas, path, paint);
        draw_20(canvas, path, paint);
        draw_21(canvas, path, paint);
        draw_22(canvas, path, paint);
        draw_23(canvas, path, paint);
        draw_24(canvas, path, paint);
        draw_25(canvas, path, paint);
        draw_26(canvas, path, paint);
        draw_27(canvas, path, paint);
        draw_28(canvas, path, paint);
        draw_29(canvas, path, paint);
        draw_30(canvas, path, paint);
        draw_31(canvas, path, paint);
        draw_32(canvas, path, paint);
        draw_33(canvas, path, paint);
        draw_34(canvas, path, paint);
        draw_35(canvas, path, paint);
        draw_36(canvas, path, paint);
        draw_37(canvas, path, paint);
        draw_38(canvas, path, paint);
        draw_39(canvas, path, paint);
        draw_40(canvas, path, paint);
        draw_41(canvas, path, paint);
        draw_42(canvas, path, paint);
        draw_43(canvas, path, paint);
        draw_44(canvas, path, paint);
        draw_45(canvas, path, paint);
        draw_46(canvas, path, paint);
        draw_47(canvas, path, paint);
        draw_48(canvas, path, paint);
        draw_49(canvas, path, paint);
        draw_50(canvas, path, paint);
        draw_51(canvas, path, paint);
        draw_52(canvas, path, paint);
        draw_53(canvas, path, paint);
        draw_54(canvas, path, paint);
        draw_55(canvas, path, paint);
        draw_56(canvas, path, paint);
        draw_57(canvas, path, paint);
        draw_58(canvas, path, paint);
        draw_59(canvas, path, paint);
        draw_60(canvas, path, paint);
        draw_61(canvas, path, paint);
        draw_62(canvas, path, paint);
        draw_63(canvas, path, paint);
        draw_64(canvas, path, paint);
        draw_65(canvas, path, paint);
        draw_66(canvas, path, paint);
        draw_67(canvas, path, paint);
        draw_68(canvas, path, paint);
        draw_69(canvas, path, paint);
        draw_70(canvas, path, paint);
        draw_71(canvas, path, paint);
        draw_72(canvas, path, paint);
        draw_73(canvas, path, paint);
        draw_74(canvas, path, paint);
        draw_75(canvas, path, paint);
        draw_76(canvas, path, paint);
        draw_77(canvas, path, paint);
        draw_78(canvas, path, paint);
        draw_79(canvas, path, paint);
        draw_80(canvas, path, paint);
        draw_81(canvas, path, paint);
        draw_82(canvas, path, paint);
        draw_83(canvas, path, paint);
        draw_84(canvas, path, paint);
        draw_85(canvas, path, paint);
        draw_86(canvas, path, paint);
        draw_87(canvas, path, paint);
        draw_88(canvas, path, paint);
        draw_89(canvas, path, paint);
        draw_90(canvas, path, paint);
        draw_91(canvas, path, paint);
        draw_92(canvas, path, paint);
        draw_93(canvas, path, paint);
        draw_94(canvas, path, paint);
        draw_95(canvas, path, paint);
        draw_96(canvas, path, paint);
        draw_97(canvas, path, paint);
        draw_98(canvas, path, paint);
        draw_99(canvas, path, paint);
        draw_100(canvas, path, paint);
        draw_101(canvas, path, paint);
        draw_102(canvas, path, paint);
        draw_103(canvas, path, paint);
        draw_104(canvas, path, paint);
        draw_105(canvas, path, paint);
        draw_106(canvas, path, paint);
        draw_107(canvas, path, paint);
        draw_108(canvas, path, paint);
        draw_109(canvas, path, paint);
        draw_110(canvas, path, paint);
        draw_111(canvas, path, paint);
        draw_112(canvas, path, paint);
        draw_113(canvas, path, paint);
        draw_114(canvas, path, paint);
        draw_115(canvas, path, paint);
        draw_116(canvas, path, paint);
        draw_117(canvas, path, paint);
        draw_118(canvas, path, paint);
        draw_119(canvas, path, paint);
        draw_120(canvas, path, paint);
        draw_121(canvas, path, paint);
        draw_122(canvas, path, paint);
        draw_123(canvas, path, paint);
        draw_124(canvas, path, paint);
        draw_125(canvas, path, paint);
        draw_126(canvas, path, paint);
        draw_127(canvas, path, paint);
        draw_128(canvas, path, paint);
        draw_129(canvas, path, paint);
        draw_130(canvas, path, paint);
        draw_131(canvas, path, paint);
        draw_132(canvas, path, paint);
        draw_133(canvas, path, paint);
        draw_134(canvas, path, paint);
        draw_135(canvas, path, paint);
        draw_136(canvas, path, paint);
        draw_137(canvas, path, paint);
        draw_138(canvas, path, paint);
        draw_139(canvas, path, paint);
        draw_140(canvas, path, paint);
        draw_141(canvas, path, paint);
        draw_142(canvas, path, paint);
        draw_143(canvas, path, paint);
        draw_144(canvas, path, paint);
        draw_145(canvas, path, paint);
        draw_146(canvas, path, paint);
        draw_147(canvas, path, paint);
        draw_148(canvas, path, paint);
        draw_149(canvas, path, paint);
        draw_150(canvas, path, paint);
        draw_151(canvas, path, paint);
        draw_152(canvas, path, paint);
        draw_153(canvas, path, paint);
        draw_154(canvas, path, paint);
        draw_155(canvas, path, paint);
        draw_156(canvas, path, paint);
        draw_157(canvas, path, paint);
        draw_158(canvas, path, paint);
        draw_159(canvas, path, paint);
        draw_160(canvas, path, paint);
        draw_161(canvas, path, paint);
        draw_162(canvas, path, paint);
        draw_163(canvas, path, paint);
        {
            canvas.save();
            canvas.concat(createMatrix(1.0f, 0.0f, 0.0f, 1.0f, 425.35f, 315.15f));
            draw_shape_2(canvas, path, paint);
            canvas.restore();
        }
        draw_166(canvas, path, paint);
        draw_167(canvas, path, paint);
        draw_168(canvas, path, paint);
        draw_169(canvas, path, paint);
        {
            canvas.save();
            canvas.concat(createMatrix(0.698995f, 0.0f, 0.0f, 0.698995f, 463.6f, 313.35f));
            draw_shape_2(canvas, path, paint);
            canvas.restore();
        }
        draw_170(canvas, path, paint);
        draw_171(canvas, path, paint);
        draw_172(canvas, path, paint);
        draw_173(canvas, path, paint);
        draw_174(canvas, path, paint);
        draw_175(canvas, path, paint);
        draw_176(canvas, path, paint);
        draw_177(canvas, path, paint);
        draw_178(canvas, path, paint);
        draw_179(canvas, path, paint);
        draw_180(canvas, path, paint);
        draw_181(canvas, path, paint);
        draw_182(canvas, path, paint);
        draw_183(canvas, path, paint);
        draw_184(canvas, path, paint);
        draw_185(canvas, path, paint);
        draw_186(canvas, path, paint);
        draw_187(canvas, path, paint);
        draw_188(canvas, path, paint);
        draw_189(canvas, path, paint);
        draw_190(canvas, path, paint);
        draw_191(canvas, path, paint);
        draw_192(canvas, path, paint);
        draw_193(canvas, path, paint);
        draw_194(canvas, path, paint);
        draw_195(canvas, path, paint);
        draw_196(canvas, path, paint);
        draw_197(canvas, path, paint);
        draw_198(canvas, path, paint);
        draw_199(canvas, path, paint);
        draw_200(canvas, path, paint);
        draw_201(canvas, path, paint);
        draw_202(canvas, path, paint);
        draw_203(canvas, path, paint);
        draw_204(canvas, path, paint);
        draw_205(canvas, path, paint);
        draw_206(canvas, path, paint);
        draw_207(canvas, path, paint);
        draw_208(canvas, path, paint);
        draw_209(canvas, path, paint);
        draw_210(canvas, path, paint);
        draw_211(canvas, path, paint);
        draw_212(canvas, path, paint);
        draw_213(canvas, path, paint);
        draw_214(canvas, path, paint);
        draw_215(canvas, path, paint);
        draw_216(canvas, path, paint);
        draw_217(canvas, path, paint);
        draw_218(canvas, path, paint);
        draw_219(canvas, path, paint);
        draw_220(canvas, path, paint);
        draw_221(canvas, path, paint);
        draw_222(canvas, path, paint);
        draw_223(canvas, path, paint);
        draw_224(canvas, path, paint);
        draw_225(canvas, path, paint);
        draw_226(canvas, path, paint);
        draw_227(canvas, path, paint);
        draw_228(canvas, path, paint);
        draw_229(canvas, path, paint);
        draw_230(canvas, path, paint);
        draw_231(canvas, path, paint);
        draw_232(canvas, path, paint);
        draw_233(canvas, path, paint);
        draw_234(canvas, path, paint);
        draw_235(canvas, path, paint);
        draw_236(canvas, path, paint);
        draw_237(canvas, path, paint);
        draw_238(canvas, path, paint);
        draw_239(canvas, path, paint);
        draw_240(canvas, path, paint);
        draw_241(canvas, path, paint);
        draw_242(canvas, path, paint);
        draw_243(canvas, path, paint);
        draw_244(canvas, path, paint);
        draw_245(canvas, path, paint);
        draw_246(canvas, path, paint);
        draw_247(canvas, path, paint);
        draw_248(canvas, path, paint);
        draw_249(canvas, path, paint);
        draw_250(canvas, path, paint);
        draw_251(canvas, path, paint);
        draw_252(canvas, path, paint);
        draw_253(canvas, path, paint);
        draw_254(canvas, path, paint);
        draw_255(canvas, path, paint);
        draw_256(canvas, path, paint);
        draw_257(canvas, path, paint);
        draw_258(canvas, path, paint);
        draw_259(canvas, path, paint);
        draw_260(canvas, path, paint);
        draw_261(canvas, path, paint);
        draw_262(canvas, path, paint);
        draw_263(canvas, path, paint);
        draw_264(canvas, path, paint);
        draw_265(canvas, path, paint);
        draw_266(canvas, path, paint);
        draw_267(canvas, path, paint);
        draw_268(canvas, path, paint);
        draw_269(canvas, path, paint);
        draw_270(canvas, path, paint);
        draw_271(canvas, path, paint);
        draw_272(canvas, path, paint);
        draw_273(canvas, path, paint);
        draw_274(canvas, path, paint);
        draw_275(canvas, path, paint);
        draw_276(canvas, path, paint);
        draw_277(canvas, path, paint);
        draw_278(canvas, path, paint);
        draw_279(canvas, path, paint);
        draw_280(canvas, path, paint);
        draw_281(canvas, path, paint);
        draw_282(canvas, path, paint);
        draw_283(canvas, path, paint);
        draw_284(canvas, path, paint);
        draw_285(canvas, path, paint);
        draw_286(canvas, path, paint);
        draw_287(canvas, path, paint);
        draw_288(canvas, path, paint);
        draw_289(canvas, path, paint);
        draw_290(canvas, path, paint);
        draw_291(canvas, path, paint);
        draw_292(canvas, path, paint);
        draw_293(canvas, path, paint);
        draw_294(canvas, path, paint);
        draw_295(canvas, path, paint);
        draw_296(canvas, path, paint);
        draw_297(canvas, path, paint);
        draw_298(canvas, path, paint);
        draw_299(canvas, path, paint);
        draw_300(canvas, path, paint);
        draw_301(canvas, path, paint);
        draw_302(canvas, path, paint);
        draw_303(canvas, path, paint);
        draw_304(canvas, path, paint);
        draw_305(canvas, path, paint);
        draw_306(canvas, path, paint);
        draw_307(canvas, path, paint);
        draw_308(canvas, path, paint);
        draw_309(canvas, path, paint);
        draw_310(canvas, path, paint);
        draw_311(canvas, path, paint);
        draw_312(canvas, path, paint);
        draw_313(canvas, path, paint);
        draw_314(canvas, path, paint);
        draw_315(canvas, path, paint);
        draw_316(canvas, path, paint);
        draw_317(canvas, path, paint);
        draw_318(canvas, path, paint);
        draw_319(canvas, path, paint);
        draw_320(canvas, path, paint);
        draw_321(canvas, path, paint);
        draw_322(canvas, path, paint);
        draw_323(canvas, path, paint);
        draw_324(canvas, path, paint);
        draw_325(canvas, path, paint);
        draw_326(canvas, path, paint);
        draw_327(canvas, path, paint);
        draw_328(canvas, path, paint);
        draw_329(canvas, path, paint);
        draw_330(canvas, path, paint);
        draw_331(canvas, path, paint);
        draw_332(canvas, path, paint);
        draw_333(canvas, path, paint);
        draw_334(canvas, path, paint);
        draw_335(canvas, path, paint);
        draw_336(canvas, path, paint);
        draw_337(canvas, path, paint);
        draw_338(canvas, path, paint);
        draw_339(canvas, path, paint);
        draw_340(canvas, path, paint);
        draw_341(canvas, path, paint);
        draw_342(canvas, path, paint);
        draw_343(canvas, path, paint);
        draw_344(canvas, path, paint);
        draw_345(canvas, path, paint);
        draw_346(canvas, path, paint);
        draw_347(canvas, path, paint);
        draw_348(canvas, path, paint);
        draw_349(canvas, path, paint);
        draw_350(canvas, path, paint);
        draw_351(canvas, path, paint);
        draw_352(canvas, path, paint);
        draw_353(canvas, path, paint);
        draw_354(canvas, path, paint);
        draw_355(canvas, path, paint);
        draw_356(canvas, path, paint);
        draw_357(canvas, path, paint);
        draw_358(canvas, path, paint);
        draw_359(canvas, path, paint);
        draw_360(canvas, path, paint);
        draw_361(canvas, path, paint);
        draw_362(canvas, path, paint);
        draw_363(canvas, path, paint);
        draw_364(canvas, path, paint);
        draw_365(canvas, path, paint);
        draw_366(canvas, path, paint);
        draw_367(canvas, path, paint);
        draw_368(canvas, path, paint);
        draw_369(canvas, path, paint);
        draw_370(canvas, path, paint);
        draw_371(canvas, path, paint);
        draw_372(canvas, path, paint);
        draw_373(canvas, path, paint);
        draw_374(canvas, path, paint);
        draw_375(canvas, path, paint);
        draw_376(canvas, path, paint);
        draw_377(canvas, path, paint);
        draw_378(canvas, path, paint);
        draw_379(canvas, path, paint);
        draw_380(canvas, path, paint);
        draw_381(canvas, path, paint);
        draw_382(canvas, path, paint);
        draw_383(canvas, path, paint);
        draw_384(canvas, path, paint);
        draw_385(canvas, path, paint);
        draw_386(canvas, path, paint);
        draw_387(canvas, path, paint);
        draw_388(canvas, path, paint);
        draw_389(canvas, path, paint);
        draw_390(canvas, path, paint);
        draw_391(canvas, path, paint);
        draw_392(canvas, path, paint);
        draw_393(canvas, path, paint);
        draw_394(canvas, path, paint);
        draw_395(canvas, path, paint);
        draw_396(canvas, path, paint);
        draw_397(canvas, path, paint);
        draw_398(canvas, path, paint);
        draw_399(canvas, path, paint);
        draw_400(canvas, path, paint);
        draw_401(canvas, path, paint);
        draw_402(canvas, path, paint);
        draw_403(canvas, path, paint);
        draw_404(canvas, path, paint);
        draw_405(canvas, path, paint);
        draw_406(canvas, path, paint);
        draw_407(canvas, path, paint);
        draw_408(canvas, path, paint);
        draw_409(canvas, path, paint);
        draw_410(canvas, path, paint);
        draw_411(canvas, path, paint);
        draw_412(canvas, path, paint);
        draw_413(canvas, path, paint);
        draw_414(canvas, path, paint);
        draw_415(canvas, path, paint);
        draw_416(canvas, path, paint);
        draw_417(canvas, path, paint);
        draw_418(canvas, path, paint);
        draw_419(canvas, path, paint);
        draw_420(canvas, path, paint);
        draw_421(canvas, path, paint);
        draw_422(canvas, path, paint);
        draw_423(canvas, path, paint);
        draw_424(canvas, path, paint);
        draw_425(canvas, path, paint);
        draw_426(canvas, path, paint);
        draw_427(canvas, path, paint);
        draw_428(canvas, path, paint);
        draw_429(canvas, path, paint);
        draw_430(canvas, path, paint);
        draw_431(canvas, path, paint);
        draw_432(canvas, path, paint);
        draw_433(canvas, path, paint);
        draw_434(canvas, path, paint);
        draw_435(canvas, path, paint);
        draw_436(canvas, path, paint);
        draw_437(canvas, path, paint);
        draw_438(canvas, path, paint);
        draw_439(canvas, path, paint);
        draw_440(canvas, path, paint);
        draw_441(canvas, path, paint);
        draw_442(canvas, path, paint);
        draw_443(canvas, path, paint);
        draw_444(canvas, path, paint);
        draw_445(canvas, path, paint);
        draw_446(canvas, path, paint);
        draw_447(canvas, path, paint);
        draw_448(canvas, path, paint);
        draw_449(canvas, path, paint);
        draw_450(canvas, path, paint);
        draw_451(canvas, path, paint);
        draw_452(canvas, path, paint);
        draw_453(canvas, path, paint);
        draw_454(canvas, path, paint);
        draw_455(canvas, path, paint);
        draw_456(canvas, path, paint);
        draw_457(canvas, path, paint);
        draw_458(canvas, path, paint);
        draw_459(canvas, path, paint);
    }

    @Override
    protected void picture_draw_main(Canvas canvas)
    {
        Paint paint = new Paint();
        paint.setAntiAlias(true);
        
        Path path = new Path();
        path.setFillType(Path.FillType.EVEN_ODD);
        
        draw_main(canvas, path, paint);
    }
}
